

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Thu Aug 29 08:59:38 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
     9                           	dabs	1,0x7E,2
    10     0000                     
    11                           ; Generated 12/10/2023 GMT
    12                           ; 
    13                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    14                           ; All rights reserved.
    15                           ; 
    16                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    17                           ; 
    18                           ; Redistribution and use in source and binary forms, with or without modification, are
    19                           ; permitted provided that the following conditions are met:
    20                           ; 
    21                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    22                           ;        conditions and the following disclaimer.
    23                           ; 
    24                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    25                           ;        of conditions and the following disclaimer in the documentation and/or other
    26                           ;        materials provided with the distribution. Publication is not required when
    27                           ;        this file is used in an embedded application.
    28                           ; 
    29                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    30                           ;        software without specific prior written permission.
    31                           ; 
    32                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    33                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    34                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    35                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    36                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    37                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    38                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    39                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    40                           ; 
    41                           ; 
    42                           ; Code-generator required, PIC16F887 Definitions
    43                           ; 
    44                           ; SFR Addresses
    45     0000                     	;# 
    46     0001                     	;# 
    47     0002                     	;# 
    48     0003                     	;# 
    49     0004                     	;# 
    50     0005                     	;# 
    51     0006                     	;# 
    52     0007                     	;# 
    53     0008                     	;# 
    54     0009                     	;# 
    55     000A                     	;# 
    56     000B                     	;# 
    57     000C                     	;# 
    58     000D                     	;# 
    59     000E                     	;# 
    60     000E                     	;# 
    61     000F                     	;# 
    62     0010                     	;# 
    63     0011                     	;# 
    64     0012                     	;# 
    65     0013                     	;# 
    66     0014                     	;# 
    67     0015                     	;# 
    68     0015                     	;# 
    69     0016                     	;# 
    70     0017                     	;# 
    71     0018                     	;# 
    72     0019                     	;# 
    73     001A                     	;# 
    74     001B                     	;# 
    75     001B                     	;# 
    76     001C                     	;# 
    77     001D                     	;# 
    78     001E                     	;# 
    79     001F                     	;# 
    80     0081                     	;# 
    81     0085                     	;# 
    82     0086                     	;# 
    83     0087                     	;# 
    84     0088                     	;# 
    85     0089                     	;# 
    86     008C                     	;# 
    87     008D                     	;# 
    88     008E                     	;# 
    89     008F                     	;# 
    90     0090                     	;# 
    91     0091                     	;# 
    92     0092                     	;# 
    93     0093                     	;# 
    94     0093                     	;# 
    95     0093                     	;# 
    96     0094                     	;# 
    97     0095                     	;# 
    98     0096                     	;# 
    99     0097                     	;# 
   100     0098                     	;# 
   101     0099                     	;# 
   102     009A                     	;# 
   103     009B                     	;# 
   104     009C                     	;# 
   105     009D                     	;# 
   106     009E                     	;# 
   107     009F                     	;# 
   108     0105                     	;# 
   109     0107                     	;# 
   110     0108                     	;# 
   111     0109                     	;# 
   112     010C                     	;# 
   113     010C                     	;# 
   114     010D                     	;# 
   115     010E                     	;# 
   116     010F                     	;# 
   117     0185                     	;# 
   118     0187                     	;# 
   119     0188                     	;# 
   120     0189                     	;# 
   121     018C                     	;# 
   122     018D                     	;# 
   123     0000                     	;# 
   124     0001                     	;# 
   125     0002                     	;# 
   126     0003                     	;# 
   127     0004                     	;# 
   128     0005                     	;# 
   129     0006                     	;# 
   130     0007                     	;# 
   131     0008                     	;# 
   132     0009                     	;# 
   133     000A                     	;# 
   134     000B                     	;# 
   135     000C                     	;# 
   136     000D                     	;# 
   137     000E                     	;# 
   138     000E                     	;# 
   139     000F                     	;# 
   140     0010                     	;# 
   141     0011                     	;# 
   142     0012                     	;# 
   143     0013                     	;# 
   144     0014                     	;# 
   145     0015                     	;# 
   146     0015                     	;# 
   147     0016                     	;# 
   148     0017                     	;# 
   149     0018                     	;# 
   150     0019                     	;# 
   151     001A                     	;# 
   152     001B                     	;# 
   153     001B                     	;# 
   154     001C                     	;# 
   155     001D                     	;# 
   156     001E                     	;# 
   157     001F                     	;# 
   158     0081                     	;# 
   159     0085                     	;# 
   160     0086                     	;# 
   161     0087                     	;# 
   162     0088                     	;# 
   163     0089                     	;# 
   164     008C                     	;# 
   165     008D                     	;# 
   166     008E                     	;# 
   167     008F                     	;# 
   168     0090                     	;# 
   169     0091                     	;# 
   170     0092                     	;# 
   171     0093                     	;# 
   172     0093                     	;# 
   173     0093                     	;# 
   174     0094                     	;# 
   175     0095                     	;# 
   176     0096                     	;# 
   177     0097                     	;# 
   178     0098                     	;# 
   179     0099                     	;# 
   180     009A                     	;# 
   181     009B                     	;# 
   182     009C                     	;# 
   183     009D                     	;# 
   184     009E                     	;# 
   185     009F                     	;# 
   186     0105                     	;# 
   187     0107                     	;# 
   188     0108                     	;# 
   189     0109                     	;# 
   190     010C                     	;# 
   191     010C                     	;# 
   192     010D                     	;# 
   193     010E                     	;# 
   194     010F                     	;# 
   195     0185                     	;# 
   196     0187                     	;# 
   197     0188                     	;# 
   198     0189                     	;# 
   199     018C                     	;# 
   200     018D                     	;# 
   201     0008                     _PORTD	set	8
   202     0088                     _TRISD	set	136
   203     0189                     _ANSELH	set	393
   204     0188                     _ANSEL	set	392
   205                           
   206                           	psect	cinit
   207     07FC                     start_initialization:	
   208                           ; #config settings
   209                           
   210     07FC                     __initialization:
   211     07FC                     end_of_initialization:	
   212                           ;End of C runtime variable initialization code
   213                           
   214     07FC                     __end_of__initialization:
   215     07FC  0183               	clrf	3
   216     07FD  120A  118A  2FA5   	ljmp	_main	;jump to C main() function
   217                           
   218                           	psect	cstackCOMMON
   219     0070                     __pcstackCOMMON:
   220     0070                     ?_sangDan:
   221     0070                     ??_sangDan:	
   222                           ; 1 bytes @ 0x0
   223                           
   224     0070                     ?_main:	
   225                           ; 1 bytes @ 0x0
   226                           
   227                           
   228                           ; 1 bytes @ 0x0
   229     0070                     	ds	3
   230     0073                     sangDan@i:
   231                           
   232                           ; 1 bytes @ 0x3
   233     0073                     	ds	1
   234     0074                     sangDan@a:
   235                           
   236                           ; 1 bytes @ 0x4
   237     0074                     	ds	1
   238     0075                     ??_main:
   239                           
   240                           	psect	maintext
   241     07A5                     __pmaintext:	
   242                           ; 1 bytes @ 0x5
   243 ;;
   244 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   245 ;;
   246 ;; *************** function _main *****************
   247 ;; Defined at:
   248 ;;		line 40 in file "BT2.c"
   249 ;; Parameters:    Size  Location     Type
   250 ;;		None
   251 ;; Auto vars:     Size  Location     Type
   252 ;;		None
   253 ;; Return value:  Size  Location     Type
   254 ;;                  1    wreg      void 
   255 ;; Registers used:
   256 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   257 ;; Tracked objects:
   258 ;;		On entry : B00/0
   259 ;;		On exit  : 0/0
   260 ;;		Unchanged: 0/0
   261 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   262 ;;      Params:         0       0       0       0       0
   263 ;;      Locals:         0       0       0       0       0
   264 ;;      Temps:          0       0       0       0       0
   265 ;;      Totals:         0       0       0       0       0
   266 ;;Total ram usage:        0 bytes
   267 ;; Hardware stack levels required when called: 1
   268 ;; This function calls:
   269 ;;		_sangDan
   270 ;; This function is called by:
   271 ;;		Startup code after reset
   272 ;; This function uses a non-reentrant model
   273 ;;
   274                           
   275     07A5                     _main:	
   276                           ;psect for function _main
   277                           
   278     07A5                     l589:	
   279                           ;incstack = 0
   280                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   281                           
   282                           
   283                           ;BT2.c: 42:     ANSEL = 0;
   284     07A5  1683               	bsf	3,5	;RP0=1, select bank3
   285     07A6  1703               	bsf	3,6	;RP1=1, select bank3
   286     07A7  0188               	clrf	8	;volatile
   287                           
   288                           ;BT2.c: 43:     ANSELH = 0;
   289     07A8  0189               	clrf	9	;volatile
   290                           
   291                           ;BT2.c: 45:     TRISD = 0x00;
   292     07A9  1683               	bsf	3,5	;RP0=1, select bank1
   293     07AA  1303               	bcf	3,6	;RP1=0, select bank1
   294     07AB  0188               	clrf	8	;volatile
   295                           
   296                           ;BT2.c: 46:     PORTD = 0x00;
   297     07AC  1283               	bcf	3,5	;RP0=0, select bank0
   298     07AD  1303               	bcf	3,6	;RP1=0, select bank0
   299     07AE  0188               	clrf	8	;volatile
   300     07AF                     l591:
   301                           
   302                           ;BT2.c: 49:     {;BT2.c: 50:         sangDan();
   303     07AF  120A  118A  27B8  120A  118A  	fcall	_sangDan
   304     07B4  2FAF               	goto	l591
   305     07B5  120A  118A  2800   	ljmp	start
   306     07B8                     __end_of_main:
   307                           
   308                           	psect	text1
   309     07B8                     __ptext1:	
   310 ;; *************** function _sangDan *****************
   311 ;; Defined at:
   312 ;;		line 23 in file "BT2.c"
   313 ;; Parameters:    Size  Location     Type
   314 ;;		None
   315 ;; Auto vars:     Size  Location     Type
   316 ;;  a               1    4[COMMON] unsigned char 
   317 ;;  i               1    3[COMMON] unsigned char 
   318 ;; Return value:  Size  Location     Type
   319 ;;                  1    wreg      void 
   320 ;; Registers used:
   321 ;;		wreg, status,2, status,0, btemp+1
   322 ;; Tracked objects:
   323 ;;		On entry : 0/0
   324 ;;		On exit  : 0/0
   325 ;;		Unchanged: 0/0
   326 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   327 ;;      Params:         0       0       0       0       0
   328 ;;      Locals:         2       0       0       0       0
   329 ;;      Temps:          3       0       0       0       0
   330 ;;      Totals:         5       0       0       0       0
   331 ;;Total ram usage:        5 bytes
   332 ;; Hardware stack levels used: 1
   333 ;; This function calls:
   334 ;;		Nothing
   335 ;; This function is called by:
   336 ;;		_main
   337 ;; This function uses a non-reentrant model
   338 ;;
   339                           
   340     07B8                     _sangDan:	
   341                           ;psect for function _sangDan
   342                           
   343     07B8                     l567:	
   344                           ;incstack = 0
   345                           ; Regs used in _sangDan: [wreg+status,2+status,0+btemp+1]
   346                           
   347                           
   348                           ;BT2.c: 25:     unsigned char a = 0x80;
   349     07B8  3080               	movlw	128
   350     07B9  00F4               	movwf	sangDan@a
   351     07BA                     l569:
   352                           
   353                           ;BT2.c: 26:     unsigned char i;;BT2.c: 27:     PORTD = 0x00;
   354     07BA  1283               	bcf	3,5	;RP0=0, select bank0
   355     07BB  1303               	bcf	3,6	;RP1=0, select bank0
   356     07BC  0188               	clrf	8	;volatile
   357     07BD                     l571:
   358                           
   359                           ;BT2.c: 28:     _delay((unsigned long)((300)*(4000000/4000.0)));
   360     07BD  3002               	movlw	2
   361     07BE  00F2               	movwf	??_sangDan+2
   362     07BF  3086               	movlw	134
   363     07C0  00F1               	movwf	??_sangDan+1
   364     07C1  3099               	movlw	153
   365     07C2  00F0               	movwf	??_sangDan
   366     07C3                     u27:
   367     07C3  0BF0               	decfsz	??_sangDan,f
   368     07C4  2FC3               	goto	u27
   369     07C5  0BF1               	decfsz	??_sangDan+1,f
   370     07C6  2FC3               	goto	u27
   371     07C7  0BF2               	decfsz	??_sangDan+2,f
   372     07C8  2FC3               	goto	u27
   373     07C9                     l573:
   374                           
   375                           ;BT2.c: 29:     PORTD = a;
   376     07C9  3080               	movlw	128
   377     07CA  1283               	bcf	3,5	;RP0=0, select bank0
   378     07CB  1303               	bcf	3,6	;RP1=0, select bank0
   379     07CC  0088               	movwf	8	;volatile
   380     07CD                     l575:
   381                           
   382                           ;BT2.c: 30:     _delay((unsigned long)((300)*(4000000/4000.0)));
   383     07CD  3002               	movlw	2
   384     07CE  00F2               	movwf	??_sangDan+2
   385     07CF  3086               	movlw	134
   386     07D0  00F1               	movwf	??_sangDan+1
   387     07D1  3099               	movlw	153
   388     07D2  00F0               	movwf	??_sangDan
   389     07D3                     u37:
   390     07D3  0BF0               	decfsz	??_sangDan,f
   391     07D4  2FD3               	goto	u37
   392     07D5  0BF1               	decfsz	??_sangDan+1,f
   393     07D6  2FD3               	goto	u37
   394     07D7  0BF2               	decfsz	??_sangDan+2,f
   395     07D8  2FD3               	goto	u37
   396                           
   397                           ;BT2.c: 31:     for(i = 0; i < 8; i++)
   398     07D9  01F3               	clrf	sangDan@i
   399     07DA                     l581:
   400                           
   401                           ;BT2.c: 32:     {;BT2.c: 33:         a |= a >> 1;
   402     07DA  0874               	movf	sangDan@a,w
   403     07DB  00F0               	movwf	??_sangDan
   404     07DC  1003               	clrc
   405     07DD  0C70               	rrf	??_sangDan,w
   406     07DE  00FF               	movwf	btemp+1
   407     07DF  087F               	movf	btemp+1,w
   408     07E0  04F4               	iorwf	sangDan@a,f
   409     07E1                     l583:
   410                           
   411                           ;BT2.c: 34:         PORTD = a;
   412     07E1  0874               	movf	sangDan@a,w
   413     07E2  1283               	bcf	3,5	;RP0=0, select bank0
   414     07E3  1303               	bcf	3,6	;RP1=0, select bank0
   415     07E4  0088               	movwf	8	;volatile
   416     07E5                     l585:
   417                           
   418                           ;BT2.c: 35:         _delay((unsigned long)((300)*(4000000/4000.0)));
   419     07E5  3002               	movlw	2
   420     07E6  00F2               	movwf	??_sangDan+2
   421     07E7  3086               	movlw	134
   422     07E8  00F1               	movwf	??_sangDan+1
   423     07E9  3099               	movlw	153
   424     07EA  00F0               	movwf	??_sangDan
   425     07EB                     u47:
   426     07EB  0BF0               	decfsz	??_sangDan,f
   427     07EC  2FEB               	goto	u47
   428     07ED  0BF1               	decfsz	??_sangDan+1,f
   429     07EE  2FEB               	goto	u47
   430     07EF  0BF2               	decfsz	??_sangDan+2,f
   431     07F0  2FEB               	goto	u47
   432                           
   433                           ;BT2.c: 36:     }
   434     07F1  3001               	movlw	1
   435     07F2  00FF               	movwf	btemp+1
   436     07F3  087F               	movf	btemp+1,w
   437     07F4  07F3               	addwf	sangDan@i,f
   438     07F5                     l587:
   439     07F5  3008               	movlw	8
   440     07F6  0273               	subwf	sangDan@i,w
   441     07F7  1C03               	skipc
   442     07F8  2FFA               	goto	u11
   443     07F9  2FFB               	goto	u10
   444     07FA                     u11:
   445     07FA  2FDA               	goto	l581
   446     07FB                     u10:
   447     07FB                     l15:
   448     07FB  0008               	return
   449     07FC                     __end_of_sangDan:
   450     007E                     btemp	set	126	;btemp
   451     007E                     wtemp0	set	126
   452                           
   453                           	psect	config
   454                           
   455                           ;Config register CONFIG1 @ 0x2007
   456                           ;	Oscillator Selection bits
   457                           ;	FOSC = HS, HS oscillator: High-speed crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1
      +                          /CLKIN
   458                           ;	Watchdog Timer Enable bit
   459                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   460                           ;	Power-up Timer Enable bit
   461                           ;	PWRTE = OFF, PWRT disabled
   462                           ;	RE3/MCLR pin function select bit
   463                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
   464                           ;	Code Protection bit
   465                           ;	CP = OFF, Program memory code protection is disabled
   466                           ;	Data Code Protection bit
   467                           ;	CPD = OFF, Data memory code protection is disabled
   468                           ;	Brown Out Reset Selection bits
   469                           ;	BOREN = OFF, BOR disabled
   470                           ;	Internal External Switchover bit
   471                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   472                           ;	Fail-Safe Clock Monitor Enabled bit
   473                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   474                           ;	Low Voltage Programming Enable bit
   475                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   476                           ;	In-Circuit Debugger Mode bit
   477                           ;	DEBUG = 0x1, unprogrammed default
   478     2007                     	org	8199
   479     2007  20F2               	dw	8434
   480                           
   481                           ;Config register CONFIG2 @ 0x2008
   482                           ;	Brown-out Reset Selection bit
   483                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   484                           ;	Flash Program Memory Self Write Enable bits
   485                           ;	WRT = OFF, Write protection off
   486     2008                     	org	8200
   487     2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5       5
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_sangDan

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0      75
                            _sangDan
 ---------------------------------------------------------------------------------
 (1) _sangDan                                              5     5      0      75
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _sangDan

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      5       5       1       35.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Thu Aug 29 08:59:38 2024

                     l15 07FB                       u10 07FB                       u11 07FA  
                     u27 07C3                       u37 07D3                       u47 07EB  
                    l571 07BD                      l581 07DA                      l573 07C9  
                    l583 07E1                      l575 07CD                      l567 07B8  
                    l591 07AF                      l585 07E5                      l569 07BA  
                    l587 07F5                      l589 07A5                     _main 07A5  
                   btemp 007E                     start 0000                    ?_main 0070  
                  _ANSEL 0188                    _PORTD 0008                    _TRISD 0088  
        __end_of_sangDan 07FC                    status 0003                    wtemp0 007E  
        __initialization 07FC             __end_of_main 07B8                   ??_main 0075  
                 _ANSELH 0189                ??_sangDan 0070  __end_of__initialization 07FC  
         __pcstackCOMMON 0070               __pmaintext 07A5                  __ptext1 07B8  
                _sangDan 07B8     end_of_initialization 07FC      start_initialization 07FC  
              ___latbits 0002                 ?_sangDan 0070                 sangDan@a 0074  
               sangDan@i 0073  
