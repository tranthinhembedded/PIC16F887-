

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Thu Aug 29 09:15:55 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	psect	text2,local,class=CODE,merge=1,delta=2
     9                           	psect	text3,local,class=CODE,merge=1,delta=2
    10                           	psect	text4,local,class=CODE,merge=1,delta=2
    11                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    12                           	dabs	1,0x7E,2
    13     0000                     
    14                           ; Generated 12/10/2023 GMT
    15                           ; 
    16                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution. Publication is not required when
    30                           ;        this file is used in an embedded application.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F887 Definitions
    46                           ; 
    47                           ; SFR Addresses
    48     0000                     	;# 
    49     0001                     	;# 
    50     0002                     	;# 
    51     0003                     	;# 
    52     0004                     	;# 
    53     0005                     	;# 
    54     0006                     	;# 
    55     0007                     	;# 
    56     0008                     	;# 
    57     0009                     	;# 
    58     000A                     	;# 
    59     000B                     	;# 
    60     000C                     	;# 
    61     000D                     	;# 
    62     000E                     	;# 
    63     000E                     	;# 
    64     000F                     	;# 
    65     0010                     	;# 
    66     0011                     	;# 
    67     0012                     	;# 
    68     0013                     	;# 
    69     0014                     	;# 
    70     0015                     	;# 
    71     0015                     	;# 
    72     0016                     	;# 
    73     0017                     	;# 
    74     0018                     	;# 
    75     0019                     	;# 
    76     001A                     	;# 
    77     001B                     	;# 
    78     001B                     	;# 
    79     001C                     	;# 
    80     001D                     	;# 
    81     001E                     	;# 
    82     001F                     	;# 
    83     0081                     	;# 
    84     0085                     	;# 
    85     0086                     	;# 
    86     0087                     	;# 
    87     0088                     	;# 
    88     0089                     	;# 
    89     008C                     	;# 
    90     008D                     	;# 
    91     008E                     	;# 
    92     008F                     	;# 
    93     0090                     	;# 
    94     0091                     	;# 
    95     0092                     	;# 
    96     0093                     	;# 
    97     0093                     	;# 
    98     0093                     	;# 
    99     0094                     	;# 
   100     0095                     	;# 
   101     0096                     	;# 
   102     0097                     	;# 
   103     0098                     	;# 
   104     0099                     	;# 
   105     009A                     	;# 
   106     009B                     	;# 
   107     009C                     	;# 
   108     009D                     	;# 
   109     009E                     	;# 
   110     009F                     	;# 
   111     0105                     	;# 
   112     0107                     	;# 
   113     0108                     	;# 
   114     0109                     	;# 
   115     010C                     	;# 
   116     010C                     	;# 
   117     010D                     	;# 
   118     010E                     	;# 
   119     010F                     	;# 
   120     0185                     	;# 
   121     0187                     	;# 
   122     0188                     	;# 
   123     0189                     	;# 
   124     018C                     	;# 
   125     018D                     	;# 
   126     0000                     	;# 
   127     0001                     	;# 
   128     0002                     	;# 
   129     0003                     	;# 
   130     0004                     	;# 
   131     0005                     	;# 
   132     0006                     	;# 
   133     0007                     	;# 
   134     0008                     	;# 
   135     0009                     	;# 
   136     000A                     	;# 
   137     000B                     	;# 
   138     000C                     	;# 
   139     000D                     	;# 
   140     000E                     	;# 
   141     000E                     	;# 
   142     000F                     	;# 
   143     0010                     	;# 
   144     0011                     	;# 
   145     0012                     	;# 
   146     0013                     	;# 
   147     0014                     	;# 
   148     0015                     	;# 
   149     0015                     	;# 
   150     0016                     	;# 
   151     0017                     	;# 
   152     0018                     	;# 
   153     0019                     	;# 
   154     001A                     	;# 
   155     001B                     	;# 
   156     001B                     	;# 
   157     001C                     	;# 
   158     001D                     	;# 
   159     001E                     	;# 
   160     001F                     	;# 
   161     0081                     	;# 
   162     0085                     	;# 
   163     0086                     	;# 
   164     0087                     	;# 
   165     0088                     	;# 
   166     0089                     	;# 
   167     008C                     	;# 
   168     008D                     	;# 
   169     008E                     	;# 
   170     008F                     	;# 
   171     0090                     	;# 
   172     0091                     	;# 
   173     0092                     	;# 
   174     0093                     	;# 
   175     0093                     	;# 
   176     0093                     	;# 
   177     0094                     	;# 
   178     0095                     	;# 
   179     0096                     	;# 
   180     0097                     	;# 
   181     0098                     	;# 
   182     0099                     	;# 
   183     009A                     	;# 
   184     009B                     	;# 
   185     009C                     	;# 
   186     009D                     	;# 
   187     009E                     	;# 
   188     009F                     	;# 
   189     0105                     	;# 
   190     0107                     	;# 
   191     0108                     	;# 
   192     0109                     	;# 
   193     010C                     	;# 
   194     010C                     	;# 
   195     010D                     	;# 
   196     010E                     	;# 
   197     010F                     	;# 
   198     0185                     	;# 
   199     0187                     	;# 
   200     0188                     	;# 
   201     0189                     	;# 
   202     018C                     	;# 
   203     018D                     	;# 
   204     0008                     _PORTD	set	8
   205     0088                     _TRISD	set	136
   206     0189                     _ANSELH	set	393
   207     0188                     _ANSEL	set	392
   208                           
   209                           	psect	cinit
   210     07FC                     start_initialization:	
   211                           ; #config settings
   212                           
   213     07FC                     __initialization:
   214     07FC                     end_of_initialization:	
   215                           ;End of C runtime variable initialization code
   216                           
   217     07FC                     __end_of__initialization:
   218     07FC  0183               	clrf	3
   219     07FD  120A  118A  2F7B   	ljmp	_main	;jump to C main() function
   220                           
   221                           	psect	cstackCOMMON
   222     0070                     __pcstackCOMMON:
   223     0070                     ?_sangDuoi:
   224     0070                     ??_sangDuoi:	
   225                           ; 1 bytes @ 0x0
   226                           
   227     0070                     ?_sangDon:	
   228                           ; 1 bytes @ 0x0
   229                           
   230     0070                     ??_sangDon:	
   231                           ; 1 bytes @ 0x0
   232                           
   233     0070                     ?_sangDan:	
   234                           ; 1 bytes @ 0x0
   235                           
   236     0070                     ??_sangDan:	
   237                           ; 1 bytes @ 0x0
   238                           
   239     0070                     ?_ledChopTat:	
   240                           ; 1 bytes @ 0x0
   241                           
   242     0070                     ??_ledChopTat:	
   243                           ; 1 bytes @ 0x0
   244                           
   245     0070                     ?_main:	
   246                           ; 1 bytes @ 0x0
   247                           
   248                           
   249                           ; 1 bytes @ 0x0
   250     0070                     	ds	3
   251     0073                     sangDuoi@j:
   252     0073                     sangDon@a:	
   253                           ; 1 bytes @ 0x3
   254                           
   255     0073                     sangDan@i:	
   256                           ; 1 bytes @ 0x3
   257                           
   258                           
   259                           ; 1 bytes @ 0x3
   260     0073                     	ds	1
   261     0074                     sangDuoi@temp:
   262     0074                     sangDon@j:	
   263                           ; 1 bytes @ 0x4
   264                           
   265     0074                     sangDan@a:	
   266                           ; 1 bytes @ 0x4
   267                           
   268                           
   269                           ; 1 bytes @ 0x4
   270     0074                     	ds	1
   271     0075                     sangDon@i:
   272                           
   273                           ; 1 bytes @ 0x5
   274     0075                     	ds	1
   275     0076                     ??_main:
   276                           
   277                           ; 1 bytes @ 0x6
   278     0076                     	ds	3
   279     0079                     main@i:
   280                           
   281                           ; 1 bytes @ 0x9
   282     0079                     	ds	1
   283     007A                     main@j:
   284                           
   285                           ; 1 bytes @ 0xA
   286     007A                     	ds	1
   287                           
   288                           	psect	maintext
   289     077B                     __pmaintext:	
   290 ;;
   291 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   292 ;;
   293 ;; *************** function _main *****************
   294 ;; Defined at:
   295 ;;		line 78 in file "BT4.c"
   296 ;; Parameters:    Size  Location     Type
   297 ;;		None
   298 ;; Auto vars:     Size  Location     Type
   299 ;;  j               1   10[COMMON] unsigned char 
   300 ;;  i               1    9[COMMON] unsigned char 
   301 ;; Return value:  Size  Location     Type
   302 ;;                  1    wreg      void 
   303 ;; Registers used:
   304 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   305 ;; Tracked objects:
   306 ;;		On entry : B00/0
   307 ;;		On exit  : 0/0
   308 ;;		Unchanged: 0/0
   309 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   310 ;;      Params:         0       0       0       0       0
   311 ;;      Locals:         2       0       0       0       0
   312 ;;      Temps:          3       0       0       0       0
   313 ;;      Totals:         5       0       0       0       0
   314 ;;Total ram usage:        5 bytes
   315 ;; Hardware stack levels required when called: 1
   316 ;; This function calls:
   317 ;;		_ledChopTat
   318 ;;		_sangDan
   319 ;;		_sangDon
   320 ;;		_sangDuoi
   321 ;; This function is called by:
   322 ;;		Startup code after reset
   323 ;; This function uses a non-reentrant model
   324 ;;
   325                           
   326     077B                     _main:	
   327                           ;psect for function _main
   328                           
   329     077B                     l663:	
   330                           ;incstack = 0
   331                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   332                           
   333                           
   334                           ;BT4.c: 80:     unsigned char i, j;;BT4.c: 81:     ANSEL = 0;
   335     077B  1683               	bsf	3,5	;RP0=1, select bank3
   336     077C  1703               	bsf	3,6	;RP1=1, select bank3
   337     077D  0188               	clrf	8	;volatile
   338                           
   339                           ;BT4.c: 82:     ANSELH = 0;
   340     077E  0189               	clrf	9	;volatile
   341                           
   342                           ;BT4.c: 84:     TRISD = 0x00;
   343     077F  1683               	bsf	3,5	;RP0=1, select bank1
   344     0780  1303               	bcf	3,6	;RP1=0, select bank1
   345     0781  0188               	clrf	8	;volatile
   346                           
   347                           ;BT4.c: 85:     PORTD = 0x00;
   348     0782  1283               	bcf	3,5	;RP0=0, select bank0
   349     0783  1303               	bcf	3,6	;RP1=0, select bank0
   350     0784  0188               	clrf	8	;volatile
   351                           
   352                           ;BT4.c: 88:         for(i = 0; i < 2; i++)
   353     0785  01F9               	clrf	main@i
   354     0786                     l669:
   355                           
   356                           ;BT4.c: 89:         {;BT4.c: 90:         for(j = 0; j < 5; j++)
   357     0786  01FA               	clrf	main@j
   358     0787                     l675:
   359                           
   360                           ;BT4.c: 91:         {;BT4.c: 92:             ledChopTat();
   361     0787  120A  118A  2692  120A  118A  	fcall	_ledChopTat
   362     078C                     l677:
   363                           
   364                           ;BT4.c: 93:         }
   365     078C  3001               	movlw	1
   366     078D  00FF               	movwf	btemp+1
   367     078E  087F               	movf	btemp+1,w
   368     078F  07FA               	addwf	main@j,f
   369     0790                     l679:
   370     0790  3005               	movlw	5
   371     0791  027A               	subwf	main@j,w
   372     0792  1C03               	skipc
   373     0793  2F95               	goto	u61
   374     0794  2F96               	goto	u60
   375     0795                     u61:
   376     0795  2F87               	goto	l675
   377     0796                     u60:
   378     0796                     l681:
   379                           
   380                           ;BT4.c: 94:         _delay((unsigned long)((300)*(4000000/4000.0)));
   381     0796  3002               	movlw	2
   382     0797  00F8               	movwf	??_main+2
   383     0798  3086               	movlw	134
   384     0799  00F7               	movwf	??_main+1
   385     079A  3099               	movlw	153
   386     079B  00F6               	movwf	??_main
   387     079C                     u117:
   388     079C  0BF6               	decfsz	??_main,f
   389     079D  2F9C               	goto	u117
   390     079E  0BF7               	decfsz	??_main+1,f
   391     079F  2F9C               	goto	u117
   392     07A0  0BF8               	decfsz	??_main+2,f
   393     07A1  2F9C               	goto	u117
   394     07A2                     l683:
   395                           
   396                           ;BT4.c: 96:         for(j = 0; j < 2; j++)
   397     07A2  01FA               	clrf	main@j
   398     07A3                     l689:
   399                           
   400                           ;BT4.c: 97:         {;BT4.c: 98:             sangDuoi();
   401     07A3  120A  118A  26B4  120A  118A  	fcall	_sangDuoi
   402     07A8                     l691:
   403                           
   404                           ;BT4.c: 99:         }
   405     07A8  3001               	movlw	1
   406     07A9  00FF               	movwf	btemp+1
   407     07AA  087F               	movf	btemp+1,w
   408     07AB  07FA               	addwf	main@j,f
   409     07AC                     l693:
   410     07AC  3002               	movlw	2
   411     07AD  027A               	subwf	main@j,w
   412     07AE  1C03               	skipc
   413     07AF  2FB1               	goto	u71
   414     07B0  2FB2               	goto	u70
   415     07B1                     u71:
   416     07B1  2FA3               	goto	l689
   417     07B2                     u70:
   418     07B2                     l695:
   419                           
   420                           ;BT4.c: 100:         _delay((unsigned long)((300)*(4000000/4000.0)));
   421     07B2  3002               	movlw	2
   422     07B3  00F8               	movwf	??_main+2
   423     07B4  3086               	movlw	134
   424     07B5  00F7               	movwf	??_main+1
   425     07B6  3099               	movlw	153
   426     07B7  00F6               	movwf	??_main
   427     07B8                     u127:
   428     07B8  0BF6               	decfsz	??_main,f
   429     07B9  2FB8               	goto	u127
   430     07BA  0BF7               	decfsz	??_main+1,f
   431     07BB  2FB8               	goto	u127
   432     07BC  0BF8               	decfsz	??_main+2,f
   433     07BD  2FB8               	goto	u127
   434     07BE                     l697:
   435                           
   436                           ;BT4.c: 102:         for(j = 0; j < 3; j++)
   437     07BE  01FA               	clrf	main@j
   438     07BF                     l703:
   439                           
   440                           ;BT4.c: 103:         {;BT4.c: 104:             sangDan();
   441     07BF  120A  118A  26E6  120A  118A  	fcall	_sangDan
   442     07C4                     l705:
   443                           
   444                           ;BT4.c: 105:         }
   445     07C4  3001               	movlw	1
   446     07C5  00FF               	movwf	btemp+1
   447     07C6  087F               	movf	btemp+1,w
   448     07C7  07FA               	addwf	main@j,f
   449     07C8                     l707:
   450     07C8  3003               	movlw	3
   451     07C9  027A               	subwf	main@j,w
   452     07CA  1C03               	skipc
   453     07CB  2FCD               	goto	u81
   454     07CC  2FCE               	goto	u80
   455     07CD                     u81:
   456     07CD  2FBF               	goto	l703
   457     07CE                     u80:
   458     07CE                     l709:
   459                           
   460                           ;BT4.c: 106:         _delay((unsigned long)((300)*(4000000/4000.0)));
   461     07CE  3002               	movlw	2
   462     07CF  00F8               	movwf	??_main+2
   463     07D0  3086               	movlw	134
   464     07D1  00F7               	movwf	??_main+1
   465     07D2  3099               	movlw	153
   466     07D3  00F6               	movwf	??_main
   467     07D4                     u137:
   468     07D4  0BF6               	decfsz	??_main,f
   469     07D5  2FD4               	goto	u137
   470     07D6  0BF7               	decfsz	??_main+1,f
   471     07D7  2FD4               	goto	u137
   472     07D8  0BF8               	decfsz	??_main+2,f
   473     07D9  2FD4               	goto	u137
   474     07DA                     l711:
   475                           
   476                           ;BT4.c: 108:         for(j = 0; j < 2; j++)
   477     07DA  01FA               	clrf	main@j
   478     07DB                     l717:
   479                           
   480                           ;BT4.c: 109:         {;BT4.c: 110:             sangDon();
   481     07DB  120A  118A  2729  120A  118A  	fcall	_sangDon
   482     07E0                     l719:
   483                           
   484                           ;BT4.c: 111:         }
   485     07E0  3001               	movlw	1
   486     07E1  00FF               	movwf	btemp+1
   487     07E2  087F               	movf	btemp+1,w
   488     07E3  07FA               	addwf	main@j,f
   489     07E4                     l721:
   490     07E4  3002               	movlw	2
   491     07E5  027A               	subwf	main@j,w
   492     07E6  1C03               	skipc
   493     07E7  2FE9               	goto	u91
   494     07E8  2FEA               	goto	u90
   495     07E9                     u91:
   496     07E9  2FDB               	goto	l717
   497     07EA                     u90:
   498     07EA                     l723:
   499                           
   500                           ;BT4.c: 112:         }
   501     07EA  3001               	movlw	1
   502     07EB  00FF               	movwf	btemp+1
   503     07EC  087F               	movf	btemp+1,w
   504     07ED  07F9               	addwf	main@i,f
   505     07EE                     l725:
   506     07EE  3002               	movlw	2
   507     07EF  0279               	subwf	main@i,w
   508     07F0  1C03               	skipc
   509     07F1  2FF3               	goto	u101
   510     07F2  2FF4               	goto	u100
   511     07F3                     u101:
   512     07F3  2F86               	goto	l669
   513     07F4                     u100:
   514     07F4                     l727:
   515                           
   516                           ;BT4.c: 115:      PORTD = 0xFF;
   517     07F4  30FF               	movlw	255
   518     07F5  1283               	bcf	3,5	;RP0=0, select bank0
   519     07F6  1303               	bcf	3,6	;RP1=0, select bank0
   520     07F7  0088               	movwf	8	;volatile
   521     07F8                     l46:	
   522                           ;BT4.c: 116:      while(1);
   523                           
   524     07F8                     l47:
   525     07F8  2FF8               	goto	l46
   526     07F9  120A  118A  2800   	ljmp	start
   527     07FC                     __end_of_main:
   528                           
   529                           	psect	text1
   530     06B4                     __ptext1:	
   531 ;; *************** function _sangDuoi *****************
   532 ;; Defined at:
   533 ;;		line 23 in file "BT4.c"
   534 ;; Parameters:    Size  Location     Type
   535 ;;		None
   536 ;; Auto vars:     Size  Location     Type
   537 ;;  temp            1    4[COMMON] unsigned char 
   538 ;;  j               1    3[COMMON] unsigned char 
   539 ;; Return value:  Size  Location     Type
   540 ;;                  1    wreg      void 
   541 ;; Registers used:
   542 ;;		wreg, status,2, status,0, btemp+1
   543 ;; Tracked objects:
   544 ;;		On entry : 0/0
   545 ;;		On exit  : 0/0
   546 ;;		Unchanged: 0/0
   547 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   548 ;;      Params:         0       0       0       0       0
   549 ;;      Locals:         2       0       0       0       0
   550 ;;      Temps:          3       0       0       0       0
   551 ;;      Totals:         5       0       0       0       0
   552 ;;Total ram usage:        5 bytes
   553 ;; Hardware stack levels used: 1
   554 ;; This function calls:
   555 ;;		Nothing
   556 ;; This function is called by:
   557 ;;		_main
   558 ;; This function uses a non-reentrant model
   559 ;;
   560                           
   561     06B4                     _sangDuoi:	
   562                           ;psect for function _sangDuoi
   563                           
   564     06B4                     l593:	
   565                           ;incstack = 0
   566                           ; Regs used in _sangDuoi: [wreg+status,2+status,0+btemp+1]
   567                           
   568                           
   569                           ;BT4.c: 25:         unsigned char j, temp;;BT4.c: 26:         PORTD = 0x00;
   570     06B4  1283               	bcf	3,5	;RP0=0, select bank0
   571     06B5  1303               	bcf	3,6	;RP1=0, select bank0
   572     06B6  0188               	clrf	8	;volatile
   573     06B7                     l595:
   574                           
   575                           ;BT4.c: 27:         _delay((unsigned long)((300)*(4000000/4000.0)));
   576     06B7  3002               	movlw	2
   577     06B8  00F2               	movwf	??_sangDuoi+2
   578     06B9  3086               	movlw	134
   579     06BA  00F1               	movwf	??_sangDuoi+1
   580     06BB  3099               	movlw	153
   581     06BC  00F0               	movwf	??_sangDuoi
   582     06BD                     u147:
   583     06BD  0BF0               	decfsz	??_sangDuoi,f
   584     06BE  2EBD               	goto	u147
   585     06BF  0BF1               	decfsz	??_sangDuoi+1,f
   586     06C0  2EBD               	goto	u147
   587     06C1  0BF2               	decfsz	??_sangDuoi+2,f
   588     06C2  2EBD               	goto	u147
   589     06C3                     l597:
   590                           
   591                           ;BT4.c: 29:         temp = 0x80;
   592     06C3  3080               	movlw	128
   593     06C4  00F4               	movwf	sangDuoi@temp
   594                           
   595                           ;BT4.c: 30:         for(j = 0; j < 8; j++) {
   596     06C5  01F3               	clrf	sangDuoi@j
   597     06C6                     l603:
   598                           
   599                           ;BT4.c: 31:             PORTD = temp;
   600     06C6  0874               	movf	sangDuoi@temp,w
   601     06C7  1283               	bcf	3,5	;RP0=0, select bank0
   602     06C8  1303               	bcf	3,6	;RP1=0, select bank0
   603     06C9  0088               	movwf	8	;volatile
   604                           
   605                           ;BT4.c: 32:             _delay((unsigned long)((300)*(4000000/4000.0)));
   606     06CA  3002               	movlw	2
   607     06CB  00F2               	movwf	??_sangDuoi+2
   608     06CC  3086               	movlw	134
   609     06CD  00F1               	movwf	??_sangDuoi+1
   610     06CE  3099               	movlw	153
   611     06CF  00F0               	movwf	??_sangDuoi
   612     06D0                     u157:
   613     06D0  0BF0               	decfsz	??_sangDuoi,f
   614     06D1  2ED0               	goto	u157
   615     06D2  0BF1               	decfsz	??_sangDuoi+1,f
   616     06D3  2ED0               	goto	u157
   617     06D4  0BF2               	decfsz	??_sangDuoi+2,f
   618     06D5  2ED0               	goto	u157
   619     06D6                     l605:
   620                           
   621                           ;BT4.c: 33:             temp = temp >> 1;
   622     06D6  0874               	movf	sangDuoi@temp,w
   623     06D7  00F0               	movwf	??_sangDuoi
   624     06D8  1003               	clrc
   625     06D9  0C70               	rrf	??_sangDuoi,w
   626     06DA  00F4               	movwf	sangDuoi@temp
   627     06DB                     l607:
   628                           
   629                           ;BT4.c: 34:         }
   630     06DB  3001               	movlw	1
   631     06DC  00FF               	movwf	btemp+1
   632     06DD  087F               	movf	btemp+1,w
   633     06DE  07F3               	addwf	sangDuoi@j,f
   634     06DF                     l609:
   635     06DF  3008               	movlw	8
   636     06E0  0273               	subwf	sangDuoi@j,w
   637     06E1  1C03               	skipc
   638     06E2  2EE4               	goto	u11
   639     06E3  2EE5               	goto	u10
   640     06E4                     u11:
   641     06E4  2EC6               	goto	l603
   642     06E5                     u10:
   643     06E5                     l15:
   644     06E5  0008               	return
   645     06E6                     __end_of_sangDuoi:
   646                           
   647                           	psect	text2
   648     0729                     __ptext2:	
   649 ;; *************** function _sangDon *****************
   650 ;; Defined at:
   651 ;;		line 38 in file "BT4.c"
   652 ;; Parameters:    Size  Location     Type
   653 ;;		None
   654 ;; Auto vars:     Size  Location     Type
   655 ;;  i               1    5[COMMON] unsigned char 
   656 ;;  j               1    4[COMMON] unsigned char 
   657 ;;  a               1    3[COMMON] unsigned char 
   658 ;; Return value:  Size  Location     Type
   659 ;;                  1    wreg      void 
   660 ;; Registers used:
   661 ;;		wreg, status,2, status,0, btemp+1
   662 ;; Tracked objects:
   663 ;;		On entry : 0/0
   664 ;;		On exit  : 0/0
   665 ;;		Unchanged: 0/0
   666 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   667 ;;      Params:         0       0       0       0       0
   668 ;;      Locals:         3       0       0       0       0
   669 ;;      Temps:          3       0       0       0       0
   670 ;;      Totals:         6       0       0       0       0
   671 ;;Total ram usage:        6 bytes
   672 ;; Hardware stack levels used: 1
   673 ;; This function calls:
   674 ;;		Nothing
   675 ;; This function is called by:
   676 ;;		_main
   677 ;; This function uses a non-reentrant model
   678 ;;
   679                           
   680     0729                     _sangDon:	
   681                           ;psect for function _sangDon
   682                           
   683     0729                     l611:	
   684                           ;incstack = 0
   685                           ; Regs used in _sangDon: [wreg+status,2+status,0+btemp+1]
   686                           
   687                           
   688                           ;BT4.c: 40:     unsigned char a = 0x00;
   689     0729  01F3               	clrf	sangDon@a
   690                           
   691                           ;BT4.c: 41:     unsigned char i, j;;BT4.c: 42:     for(i = 0; i < 8; i++)
   692     072A  01F5               	clrf	sangDon@i
   693     072B                     l617:
   694                           
   695                           ;BT4.c: 43:     {;BT4.c: 44:         for(j = 0 ; j < 8-i; j++)
   696     072B  01F4               	clrf	sangDon@j
   697     072C  2F4E               	goto	l625
   698     072D                     l619:
   699                           
   700                           ;BT4.c: 45:         {;BT4.c: 46:             PORTD = (0x80 >> j)| a;
   701     072D  0A74               	incf	sangDon@j,w
   702     072E  00FF               	movwf	btemp+1
   703     072F  3080               	movlw	128
   704     0730  00F0               	movwf	??_sangDon
   705     0731  3000               	movlw	0
   706     0732  00F1               	movwf	??_sangDon+1
   707     0733  2F37               	goto	u24
   708     0734                     u25:
   709     0734  0D71               	rlf	??_sangDon+1,w
   710     0735  0CF1               	rrf	??_sangDon+1,f
   711     0736  0CF0               	rrf	??_sangDon,f
   712     0737                     u24:
   713     0737  0BFF               	decfsz	btemp+1,f
   714     0738  2F34               	goto	u25
   715     0739  0870               	movf	??_sangDon,w
   716     073A  0473               	iorwf	sangDon@a,w
   717     073B  1283               	bcf	3,5	;RP0=0, select bank0
   718     073C  1303               	bcf	3,6	;RP1=0, select bank0
   719     073D  0088               	movwf	8	;volatile
   720     073E                     l621:
   721                           
   722                           ;BT4.c: 47:             _delay((unsigned long)((300)*(4000000/4000.0)));
   723     073E  3002               	movlw	2
   724     073F  00F2               	movwf	??_sangDon+2
   725     0740  3086               	movlw	134
   726     0741  00F1               	movwf	??_sangDon+1
   727     0742  3099               	movlw	153
   728     0743  00F0               	movwf	??_sangDon
   729     0744                     u167:
   730     0744  0BF0               	decfsz	??_sangDon,f
   731     0745  2F44               	goto	u167
   732     0746  0BF1               	decfsz	??_sangDon+1,f
   733     0747  2F44               	goto	u167
   734     0748  0BF2               	decfsz	??_sangDon+2,f
   735     0749  2F44               	goto	u167
   736     074A                     l623:
   737                           
   738                           ;BT4.c: 48:         }
   739     074A  3001               	movlw	1
   740     074B  00FF               	movwf	btemp+1
   741     074C  087F               	movf	btemp+1,w
   742     074D  07F4               	addwf	sangDon@j,f
   743     074E                     l625:
   744     074E  3000               	movlw	0
   745     074F  00F1               	movwf	??_sangDon+1
   746     0750  0875               	movf	sangDon@i,w
   747     0751  3C08               	sublw	8
   748     0752  00F0               	movwf	??_sangDon
   749     0753  1C03               	skipc
   750     0754  03F1               	decf	??_sangDon+1,f
   751     0755  0871               	movf	??_sangDon+1,w
   752     0756  3A80               	xorlw	128
   753     0757  3C80               	sublw	128
   754     0758  1D03               	skipz
   755     0759  2F5C               	goto	u35
   756     075A  0870               	movf	??_sangDon,w
   757     075B  0274               	subwf	sangDon@j,w
   758     075C                     u35:
   759     075C  1C03               	skipc
   760     075D  2F5F               	goto	u31
   761     075E  2F60               	goto	u30
   762     075F                     u31:
   763     075F  2F2D               	goto	l619
   764     0760                     u30:
   765     0760                     l627:
   766                           
   767                           ;BT4.c: 49:         a = PORTD;
   768     0760  1283               	bcf	3,5	;RP0=0, select bank0
   769     0761  1303               	bcf	3,6	;RP1=0, select bank0
   770     0762  0808               	movf	8,w	;volatile
   771     0763  00F3               	movwf	sangDon@a
   772                           
   773                           ;BT4.c: 50:         _delay((unsigned long)((300)*(4000000/4000.0)));
   774     0764  3002               	movlw	2
   775     0765  00F2               	movwf	??_sangDon+2
   776     0766  3086               	movlw	134
   777     0767  00F1               	movwf	??_sangDon+1
   778     0768  3099               	movlw	153
   779     0769  00F0               	movwf	??_sangDon
   780     076A                     u177:
   781     076A  0BF0               	decfsz	??_sangDon,f
   782     076B  2F6A               	goto	u177
   783     076C  0BF1               	decfsz	??_sangDon+1,f
   784     076D  2F6A               	goto	u177
   785     076E  0BF2               	decfsz	??_sangDon+2,f
   786     076F  2F6A               	goto	u177
   787     0770                     l629:
   788                           
   789                           ;BT4.c: 51:     }
   790     0770  3001               	movlw	1
   791     0771  00FF               	movwf	btemp+1
   792     0772  087F               	movf	btemp+1,w
   793     0773  07F5               	addwf	sangDon@i,f
   794     0774                     l631:
   795     0774  3008               	movlw	8
   796     0775  0275               	subwf	sangDon@i,w
   797     0776  1C03               	skipc
   798     0777  2F79               	goto	u41
   799     0778  2F7A               	goto	u40
   800     0779                     u41:
   801     0779  2F2B               	goto	l617
   802     077A                     u40:
   803     077A                     l23:
   804     077A  0008               	return
   805     077B                     __end_of_sangDon:
   806                           
   807                           	psect	text3
   808     06E6                     __ptext3:	
   809 ;; *************** function _sangDan *****************
   810 ;; Defined at:
   811 ;;		line 54 in file "BT4.c"
   812 ;; Parameters:    Size  Location     Type
   813 ;;		None
   814 ;; Auto vars:     Size  Location     Type
   815 ;;  a               1    4[COMMON] unsigned char 
   816 ;;  i               1    3[COMMON] unsigned char 
   817 ;; Return value:  Size  Location     Type
   818 ;;                  1    wreg      void 
   819 ;; Registers used:
   820 ;;		wreg, status,2, status,0, btemp+1
   821 ;; Tracked objects:
   822 ;;		On entry : 0/0
   823 ;;		On exit  : 0/0
   824 ;;		Unchanged: 0/0
   825 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   826 ;;      Params:         0       0       0       0       0
   827 ;;      Locals:         2       0       0       0       0
   828 ;;      Temps:          3       0       0       0       0
   829 ;;      Totals:         5       0       0       0       0
   830 ;;Total ram usage:        5 bytes
   831 ;; Hardware stack levels used: 1
   832 ;; This function calls:
   833 ;;		Nothing
   834 ;; This function is called by:
   835 ;;		_main
   836 ;; This function uses a non-reentrant model
   837 ;;
   838                           
   839     06E6                     _sangDan:	
   840                           ;psect for function _sangDan
   841                           
   842     06E6                     l633:	
   843                           ;incstack = 0
   844                           ; Regs used in _sangDan: [wreg+status,2+status,0+btemp+1]
   845                           
   846                           
   847                           ;BT4.c: 56:     unsigned char a = 0x01;
   848     06E6  01F4               	clrf	sangDan@a
   849     06E7  0AF4               	incf	sangDan@a,f
   850     06E8                     l635:
   851                           
   852                           ;BT4.c: 57:     unsigned char i;;BT4.c: 58:     PORTD = 0x00;
   853     06E8  1283               	bcf	3,5	;RP0=0, select bank0
   854     06E9  1303               	bcf	3,6	;RP1=0, select bank0
   855     06EA  0188               	clrf	8	;volatile
   856     06EB                     l637:
   857                           
   858                           ;BT4.c: 59:     _delay((unsigned long)((300)*(4000000/4000.0)));
   859     06EB  3002               	movlw	2
   860     06EC  00F2               	movwf	??_sangDan+2
   861     06ED  3086               	movlw	134
   862     06EE  00F1               	movwf	??_sangDan+1
   863     06EF  3099               	movlw	153
   864     06F0  00F0               	movwf	??_sangDan
   865     06F1                     u187:
   866     06F1  0BF0               	decfsz	??_sangDan,f
   867     06F2  2EF1               	goto	u187
   868     06F3  0BF1               	decfsz	??_sangDan+1,f
   869     06F4  2EF1               	goto	u187
   870     06F5  0BF2               	decfsz	??_sangDan+2,f
   871     06F6  2EF1               	goto	u187
   872     06F7                     l639:
   873                           
   874                           ;BT4.c: 60:     PORTD = a;
   875     06F7  3001               	movlw	1
   876     06F8  1283               	bcf	3,5	;RP0=0, select bank0
   877     06F9  1303               	bcf	3,6	;RP1=0, select bank0
   878     06FA  0088               	movwf	8	;volatile
   879     06FB                     l641:
   880                           
   881                           ;BT4.c: 61:     _delay((unsigned long)((300)*(4000000/4000.0)));
   882     06FB  3002               	movlw	2
   883     06FC  00F2               	movwf	??_sangDan+2
   884     06FD  3086               	movlw	134
   885     06FE  00F1               	movwf	??_sangDan+1
   886     06FF  3099               	movlw	153
   887     0700  00F0               	movwf	??_sangDan
   888     0701                     u197:
   889     0701  0BF0               	decfsz	??_sangDan,f
   890     0702  2F01               	goto	u197
   891     0703  0BF1               	decfsz	??_sangDan+1,f
   892     0704  2F01               	goto	u197
   893     0705  0BF2               	decfsz	??_sangDan+2,f
   894     0706  2F01               	goto	u197
   895     0707                     l643:
   896                           
   897                           ;BT4.c: 62:     for(i = 0; i < 8; i++)
   898     0707  01F3               	clrf	sangDan@i
   899     0708                     l647:
   900                           
   901                           ;BT4.c: 63:     {;BT4.c: 64:         a |= a << 1;
   902     0708  0874               	movf	sangDan@a,w
   903     0709  00F0               	movwf	??_sangDan
   904     070A  0770               	addwf	??_sangDan,w
   905     070B  00FF               	movwf	btemp+1
   906     070C  087F               	movf	btemp+1,w
   907     070D  04F4               	iorwf	sangDan@a,f
   908     070E                     l649:
   909                           
   910                           ;BT4.c: 65:         PORTD = a;
   911     070E  0874               	movf	sangDan@a,w
   912     070F  1283               	bcf	3,5	;RP0=0, select bank0
   913     0710  1303               	bcf	3,6	;RP1=0, select bank0
   914     0711  0088               	movwf	8	;volatile
   915     0712                     l651:
   916                           
   917                           ;BT4.c: 66:         _delay((unsigned long)((300)*(4000000/4000.0)));
   918     0712  3002               	movlw	2
   919     0713  00F2               	movwf	??_sangDan+2
   920     0714  3086               	movlw	134
   921     0715  00F1               	movwf	??_sangDan+1
   922     0716  3099               	movlw	153
   923     0717  00F0               	movwf	??_sangDan
   924     0718                     u207:
   925     0718  0BF0               	decfsz	??_sangDan,f
   926     0719  2F18               	goto	u207
   927     071A  0BF1               	decfsz	??_sangDan+1,f
   928     071B  2F18               	goto	u207
   929     071C  0BF2               	decfsz	??_sangDan+2,f
   930     071D  2F18               	goto	u207
   931                           
   932                           ;BT4.c: 67:     }
   933     071E  3001               	movlw	1
   934     071F  00FF               	movwf	btemp+1
   935     0720  087F               	movf	btemp+1,w
   936     0721  07F3               	addwf	sangDan@i,f
   937     0722                     l653:
   938     0722  3008               	movlw	8
   939     0723  0273               	subwf	sangDan@i,w
   940     0724  1C03               	skipc
   941     0725  2F27               	goto	u51
   942     0726  2F28               	goto	u50
   943     0727                     u51:
   944     0727  2F08               	goto	l647
   945     0728                     u50:
   946     0728                     l28:
   947     0728  0008               	return
   948     0729                     __end_of_sangDan:
   949                           
   950                           	psect	text4
   951     0692                     __ptext4:	
   952 ;; *************** function _ledChopTat *****************
   953 ;; Defined at:
   954 ;;		line 70 in file "BT4.c"
   955 ;; Parameters:    Size  Location     Type
   956 ;;		None
   957 ;; Auto vars:     Size  Location     Type
   958 ;;		None
   959 ;; Return value:  Size  Location     Type
   960 ;;                  1    wreg      void 
   961 ;; Registers used:
   962 ;;		wreg, status,2
   963 ;; Tracked objects:
   964 ;;		On entry : 0/0
   965 ;;		On exit  : 0/0
   966 ;;		Unchanged: 0/0
   967 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   968 ;;      Params:         0       0       0       0       0
   969 ;;      Locals:         0       0       0       0       0
   970 ;;      Temps:          3       0       0       0       0
   971 ;;      Totals:         3       0       0       0       0
   972 ;;Total ram usage:        3 bytes
   973 ;; Hardware stack levels used: 1
   974 ;; This function calls:
   975 ;;		Nothing
   976 ;; This function is called by:
   977 ;;		_main
   978 ;; This function uses a non-reentrant model
   979 ;;
   980                           
   981     0692                     _ledChopTat:	
   982                           ;psect for function _ledChopTat
   983                           
   984     0692                     l655:	
   985                           ;incstack = 0
   986                           ; Regs used in _ledChopTat: [wreg+status,2]
   987                           
   988                           
   989                           ;BT4.c: 72:     PORTD = 0x00;
   990     0692  1283               	bcf	3,5	;RP0=0, select bank0
   991     0693  1303               	bcf	3,6	;RP1=0, select bank0
   992     0694  0188               	clrf	8	;volatile
   993     0695                     l657:
   994                           
   995                           ;BT4.c: 73:     _delay((unsigned long)((500)*(4000000/4000.0)));
   996     0695  3003               	movlw	3
   997     0696  00F2               	movwf	??_ledChopTat+2
   998     0697  308A               	movlw	138
   999     0698  00F1               	movwf	??_ledChopTat+1
  1000     0699  3055               	movlw	85
  1001     069A  00F0               	movwf	??_ledChopTat
  1002     069B                     u217:
  1003     069B  0BF0               	decfsz	??_ledChopTat,f
  1004     069C  2E9B               	goto	u217
  1005     069D  0BF1               	decfsz	??_ledChopTat+1,f
  1006     069E  2E9B               	goto	u217
  1007     069F  0BF2               	decfsz	??_ledChopTat+2,f
  1008     06A0  2E9B               	goto	u217
  1009     06A1  2EA2               	nop2
  1010     06A2                     l659:
  1011                           
  1012                           ;BT4.c: 74:     PORTD = 0xFF;
  1013     06A2  30FF               	movlw	255
  1014     06A3  1283               	bcf	3,5	;RP0=0, select bank0
  1015     06A4  1303               	bcf	3,6	;RP1=0, select bank0
  1016     06A5  0088               	movwf	8	;volatile
  1017     06A6                     l661:
  1018                           
  1019                           ;BT4.c: 75:     _delay((unsigned long)((500)*(4000000/4000.0)));
  1020     06A6  3003               	movlw	3
  1021     06A7  00F2               	movwf	??_ledChopTat+2
  1022     06A8  308A               	movlw	138
  1023     06A9  00F1               	movwf	??_ledChopTat+1
  1024     06AA  3055               	movlw	85
  1025     06AB  00F0               	movwf	??_ledChopTat
  1026     06AC                     u227:
  1027     06AC  0BF0               	decfsz	??_ledChopTat,f
  1028     06AD  2EAC               	goto	u227
  1029     06AE  0BF1               	decfsz	??_ledChopTat+1,f
  1030     06AF  2EAC               	goto	u227
  1031     06B0  0BF2               	decfsz	??_ledChopTat+2,f
  1032     06B1  2EAC               	goto	u227
  1033     06B2  2EB3               	nop2
  1034     06B3                     l31:
  1035     06B3  0008               	return
  1036     06B4                     __end_of_ledChopTat:
  1037     007E                     btemp	set	126	;btemp
  1038     007E                     wtemp0	set	126
  1039                           
  1040                           	psect	config
  1041                           
  1042                           ;Config register CONFIG1 @ 0x2007
  1043                           ;	Oscillator Selection bits
  1044                           ;	FOSC = HS, HS oscillator: High-speed crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1
      +                          /CLKIN
  1045                           ;	Watchdog Timer Enable bit
  1046                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1047                           ;	Power-up Timer Enable bit
  1048                           ;	PWRTE = OFF, PWRT disabled
  1049                           ;	RE3/MCLR pin function select bit
  1050                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  1051                           ;	Code Protection bit
  1052                           ;	CP = OFF, Program memory code protection is disabled
  1053                           ;	Data Code Protection bit
  1054                           ;	CPD = OFF, Data memory code protection is disabled
  1055                           ;	Brown Out Reset Selection bits
  1056                           ;	BOREN = OFF, BOR disabled
  1057                           ;	Internal External Switchover bit
  1058                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1059                           ;	Fail-Safe Clock Monitor Enabled bit
  1060                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1061                           ;	Low Voltage Programming Enable bit
  1062                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1063                           ;	In-Circuit Debugger Mode bit
  1064                           ;	DEBUG = 0x1, unprogrammed default
  1065     2007                     	org	8199
  1066     2007  20F2               	dw	8434
  1067                           
  1068                           ;Config register CONFIG2 @ 0x2008
  1069                           ;	Brown-out Reset Selection bit
  1070                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1071                           ;	Flash Program Memory Self Write Enable bits
  1072                           ;	WRT = OFF, Write protection off
  1073     2008                     	org	8200
  1074     2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      11
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_sangDon

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0     375
                                              6 COMMON     5     5      0
                         _ledChopTat
                            _sangDan
                            _sangDon
                           _sangDuoi
 ---------------------------------------------------------------------------------
 (1) _sangDuoi                                             5     5      0      60
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 (1) _sangDon                                              6     6      0      90
                                              0 COMMON     6     6      0
 ---------------------------------------------------------------------------------
 (1) _sangDan                                              5     5      0      75
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 (1) _ledChopTat                                           3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ledChopTat
   _sangDan
   _sangDon
   _sangDuoi

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      B       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Thu Aug 29 09:15:55 2024

                     l31 06B3                       l23 077A                       l15 06E5  
                     l28 0728                       l46 07F8                       l47 07F8  
                     u10 06E5                       u11 06E4                       u30 0760  
                     u31 075F                       u40 077A                       u24 0737  
                     u41 0779                       u25 0734                       u50 0728  
                     u51 0727                       u35 075C                       u60 0796  
                     u61 0795                       u70 07B2                       u71 07B1  
                     u80 07CE                       u81 07CD                       u90 07EA  
                     u91 07E9                      l611 0729                      l603 06C6  
                    l621 073E                      l605 06D6                      l631 0774  
                    l623 074A                      l607 06DB                      l711 07DA  
                    l703 07BF                      l641 06FB                      l633 06E6  
                    l625 074E                      l617 072B                      l609 06DF  
                    l721 07E4                      l705 07C4                      l651 0712  
                    l643 0707                      l635 06E8                      l627 0760  
                    l619 072D                      l723 07EA                      l707 07C8  
                    l661 06A6                      l653 0722                      l637 06EB  
                    l629 0770                      l725 07EE                      l717 07DB  
                    l709 07CE                      l655 0692                      l647 0708  
                    l639 06F7                      l727 07F4                      l719 07E0  
                    l663 077B                      l657 0695                      l649 070E  
                    l593 06B4                      l681 0796                      l659 06A2  
                    l595 06B7                      l691 07A8                      l683 07A2  
                    l675 0787                      l597 06C3                      l693 07AC  
                    l677 078C                      l669 0786                      l695 07B2  
                    l679 0790                      l697 07BE                      l689 07A3  
                    u100 07F4                      u101 07F3                      u117 079C  
                    u207 0718                      u127 07B8                      u217 069B  
                    u137 07D4                      u227 06AC                      u147 06BD  
                    u157 06D0                      u167 0744                      u177 076A  
                    u187 06F1                      u197 0701                     _main 077B  
                   btemp 007E                     start 0000                    ?_main 0070  
                  _ANSEL 0188                    _PORTD 0008                    _TRISD 0088  
        __end_of_sangDan 0729          __end_of_sangDon 077B                    main@i 0079  
                  main@j 007A                    status 0003                    wtemp0 007E  
        __initialization 07FC             __end_of_main 07FC                   ??_main 0076  
                 _ANSELH 0189         __end_of_sangDuoi 06E6                ??_sangDan 0070  
              ??_sangDon 0070  __end_of__initialization 07FC           __pcstackCOMMON 0070  
             __pmaintext 077B               _ledChopTat 0692                ?_sangDuoi 0070  
                __ptext1 06B4                  __ptext2 0729                  __ptext3 06E6  
                __ptext4 0692                  _sangDan 06E6                  _sangDon 0729  
   end_of_initialization 07FC               ??_sangDuoi 0070              ?_ledChopTat 0070  
           sangDuoi@temp 0074      start_initialization 07FC                ___latbits 0002  
               ?_sangDan 0070                 ?_sangDon 0070             ??_ledChopTat 0070  
     __end_of_ledChopTat 06B4                sangDuoi@j 0073                 _sangDuoi 06B4  
               sangDan@a 0074                 sangDan@i 0073                 sangDon@a 0073  
               sangDon@i 0075                 sangDon@j 0074  
