

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Thu Aug 29 10:19:15 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	inittext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    14                           	dabs	1,0x7E,2
    15     0000                     
    16                           ; Generated 12/10/2023 GMT
    17                           ; 
    18                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution. Publication is not required when
    32                           ;        this file is used in an embedded application.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC16F887 Definitions
    48                           ; 
    49                           ; SFR Addresses
    50     0000                     	;# 
    51     0001                     	;# 
    52     0002                     	;# 
    53     0003                     	;# 
    54     0004                     	;# 
    55     0005                     	;# 
    56     0006                     	;# 
    57     0007                     	;# 
    58     0008                     	;# 
    59     0009                     	;# 
    60     000A                     	;# 
    61     000B                     	;# 
    62     000C                     	;# 
    63     000D                     	;# 
    64     000E                     	;# 
    65     000E                     	;# 
    66     000F                     	;# 
    67     0010                     	;# 
    68     0011                     	;# 
    69     0012                     	;# 
    70     0013                     	;# 
    71     0014                     	;# 
    72     0015                     	;# 
    73     0015                     	;# 
    74     0016                     	;# 
    75     0017                     	;# 
    76     0018                     	;# 
    77     0019                     	;# 
    78     001A                     	;# 
    79     001B                     	;# 
    80     001B                     	;# 
    81     001C                     	;# 
    82     001D                     	;# 
    83     001E                     	;# 
    84     001F                     	;# 
    85     0081                     	;# 
    86     0085                     	;# 
    87     0086                     	;# 
    88     0087                     	;# 
    89     0088                     	;# 
    90     0089                     	;# 
    91     008C                     	;# 
    92     008D                     	;# 
    93     008E                     	;# 
    94     008F                     	;# 
    95     0090                     	;# 
    96     0091                     	;# 
    97     0092                     	;# 
    98     0093                     	;# 
    99     0093                     	;# 
   100     0093                     	;# 
   101     0094                     	;# 
   102     0095                     	;# 
   103     0096                     	;# 
   104     0097                     	;# 
   105     0098                     	;# 
   106     0099                     	;# 
   107     009A                     	;# 
   108     009B                     	;# 
   109     009C                     	;# 
   110     009D                     	;# 
   111     009E                     	;# 
   112     009F                     	;# 
   113     0105                     	;# 
   114     0107                     	;# 
   115     0108                     	;# 
   116     0109                     	;# 
   117     010C                     	;# 
   118     010C                     	;# 
   119     010D                     	;# 
   120     010E                     	;# 
   121     010F                     	;# 
   122     0185                     	;# 
   123     0187                     	;# 
   124     0188                     	;# 
   125     0189                     	;# 
   126     018C                     	;# 
   127     018D                     	;# 
   128     0000                     	;# 
   129     0001                     	;# 
   130     0002                     	;# 
   131     0003                     	;# 
   132     0004                     	;# 
   133     0005                     	;# 
   134     0006                     	;# 
   135     0007                     	;# 
   136     0008                     	;# 
   137     0009                     	;# 
   138     000A                     	;# 
   139     000B                     	;# 
   140     000C                     	;# 
   141     000D                     	;# 
   142     000E                     	;# 
   143     000E                     	;# 
   144     000F                     	;# 
   145     0010                     	;# 
   146     0011                     	;# 
   147     0012                     	;# 
   148     0013                     	;# 
   149     0014                     	;# 
   150     0015                     	;# 
   151     0015                     	;# 
   152     0016                     	;# 
   153     0017                     	;# 
   154     0018                     	;# 
   155     0019                     	;# 
   156     001A                     	;# 
   157     001B                     	;# 
   158     001B                     	;# 
   159     001C                     	;# 
   160     001D                     	;# 
   161     001E                     	;# 
   162     001F                     	;# 
   163     0081                     	;# 
   164     0085                     	;# 
   165     0086                     	;# 
   166     0087                     	;# 
   167     0088                     	;# 
   168     0089                     	;# 
   169     008C                     	;# 
   170     008D                     	;# 
   171     008E                     	;# 
   172     008F                     	;# 
   173     0090                     	;# 
   174     0091                     	;# 
   175     0092                     	;# 
   176     0093                     	;# 
   177     0093                     	;# 
   178     0093                     	;# 
   179     0094                     	;# 
   180     0095                     	;# 
   181     0096                     	;# 
   182     0097                     	;# 
   183     0098                     	;# 
   184     0099                     	;# 
   185     009A                     	;# 
   186     009B                     	;# 
   187     009C                     	;# 
   188     009D                     	;# 
   189     009E                     	;# 
   190     009F                     	;# 
   191     0105                     	;# 
   192     0107                     	;# 
   193     0108                     	;# 
   194     0109                     	;# 
   195     010C                     	;# 
   196     010C                     	;# 
   197     010D                     	;# 
   198     010E                     	;# 
   199     010F                     	;# 
   200     0185                     	;# 
   201     0187                     	;# 
   202     0188                     	;# 
   203     0189                     	;# 
   204     018C                     	;# 
   205     018D                     	;# 
   206                           
   207                           	psect	idataBANK0
   208     068B                     __pidataBANK0:
   209                           
   210                           ;initializer for _MaLed7Seg_nghich
   211     068B  3490               	retlw	144
   212     068C  3480               	retlw	128
   213     068D  34F8               	retlw	248
   214     068E  3482               	retlw	130
   215     068F  3492               	retlw	146
   216     0690  3499               	retlw	153
   217     0691  34B0               	retlw	176
   218     0692  34A4               	retlw	164
   219     0693  34F9               	retlw	249
   220     0694  34C0               	retlw	192
   221                           
   222                           ;initializer for _MaLed
   223     0695  34C0               	retlw	192
   224     0696  34F9               	retlw	249
   225     0697  34A4               	retlw	164
   226     0698  34B0               	retlw	176
   227     0699  3499               	retlw	153
   228     069A  3492               	retlw	146
   229     069B  3482               	retlw	130
   230     069C  34F8               	retlw	248
   231     069D  3480               	retlw	128
   232     069E  3490               	retlw	144
   233     0008                     _PORTD	set	8
   234     0032                     _RB2	set	50
   235     0031                     _RB1	set	49
   236     0030                     _RB0	set	48
   237     0088                     _TRISD	set	136
   238     04AA                     _WPUB2	set	1194
   239     04A9                     _WPUB1	set	1193
   240     04A8                     _WPUB0	set	1192
   241     040F                     _nRBPU	set	1039
   242     0432                     _TRISB2	set	1074
   243     0431                     _TRISB1	set	1073
   244     0430                     _TRISB0	set	1072
   245     0189                     _ANSELH	set	393
   246     0188                     _ANSEL	set	392
   247                           
   248                           	psect	cinit
   249     07EE                     start_initialization:	
   250                           ; #config settings
   251                           
   252     07EE                     __initialization:
   253                           
   254                           ; Initialize objects allocated to BANK0
   255     07EE  1383               	bcf	3,7	;select IRP bank0
   256     07EF  3034               	movlw	low (__pdataBANK0+20)
   257     07F0  00FD               	movwf	btemp+-1
   258     07F1  3006               	movlw	high __pidataBANK0
   259     07F2  00FE               	movwf	btemp
   260     07F3  308B               	movlw	low __pidataBANK0
   261     07F4  00FF               	movwf	btemp+1
   262     07F5  3020               	movlw	low __pdataBANK0
   263     07F6  0084               	movwf	4
   264     07F7  120A  118A  267C  120A  118A  	fcall	init_ram0
   265     07FC                     end_of_initialization:	
   266                           ;End of C runtime variable initialization code
   267                           
   268     07FC                     __end_of__initialization:
   269     07FC  0183               	clrf	3
   270     07FD  120A  118A  2F50   	ljmp	_main	;jump to C main() function
   271                           
   272                           	psect	dataBANK0
   273     0020                     __pdataBANK0:
   274     0020                     _MaLed7Seg_nghich:
   275     0020                     	ds	10
   276     002A                     _MaLed:
   277     002A                     	ds	10
   278                           
   279                           	psect	inittext
   280     0678                     init_fetch0:	
   281                           ;	Called with low address in FSR and high address in W
   282                           
   283     0678  087E               	movf	btemp,w
   284     0679  008A               	movwf	10
   285     067A  087F               	movf	btemp+1,w
   286     067B  0082               	movwf	2
   287     067C                     init_ram0:	
   288                           ;Called with:
   289                           ;	high address of idata address in btemp 
   290                           ;	low address of idata address in btemp+1 
   291                           ;	low address of data in FSR
   292                           ;	high address + 1 of data in btemp-1
   293                           
   294     067C  120A  118A  2678  120A  118A  	fcall	init_fetch0
   295     0681  0080               	movwf	0
   296     0682  0A84               	incf	4,f
   297     0683  0804               	movf	4,w
   298     0684  067D               	xorwf	btemp+-1,w
   299     0685  1903               	btfsc	3,2
   300     0686  3400               	retlw	0
   301     0687  0AFF               	incf	btemp+1,f
   302     0688  1903               	btfsc	3,2
   303     0689  0AFE               	incf	btemp,f
   304     068A  2E7C               	goto	init_ram0
   305                           
   306                           	psect	cstackCOMMON
   307     0070                     __pcstackCOMMON:
   308     0070                     ?_choptat:
   309     0070                     ??_choptat:	
   310                           ; 1 bytes @ 0x0
   311                           
   312     0070                     ?_sangDuoi:	
   313                           ; 1 bytes @ 0x0
   314                           
   315     0070                     ??_sangDuoi:	
   316                           ; 1 bytes @ 0x0
   317                           
   318     0070                     ?_sangDan:	
   319                           ; 1 bytes @ 0x0
   320                           
   321     0070                     ??_sangDan:	
   322                           ; 1 bytes @ 0x0
   323                           
   324     0070                     ?_main:	
   325                           ; 1 bytes @ 0x0
   326                           
   327                           
   328                           ; 1 bytes @ 0x0
   329     0070                     	ds	3
   330     0073                     choptat@n:
   331     0073                     sangDuoi@n:	
   332                           ; 1 bytes @ 0x3
   333                           
   334     0073                     sangDan@n:	
   335                           ; 1 bytes @ 0x3
   336                           
   337                           
   338                           ; 1 bytes @ 0x3
   339     0073                     	ds	1
   340     0074                     sangDuoi@j:
   341     0074                     sangDan@i:	
   342                           ; 1 bytes @ 0x4
   343                           
   344                           
   345                           ; 1 bytes @ 0x4
   346     0074                     	ds	1
   347     0075                     sangDuoi@temp:
   348     0075                     sangDan@a:	
   349                           ; 1 bytes @ 0x5
   350                           
   351                           
   352                           ; 1 bytes @ 0x5
   353     0075                     	ds	1
   354     0076                     ??_main:
   355                           
   356                           ; 1 bytes @ 0x6
   357     0076                     	ds	2
   358                           
   359                           	psect	maintext
   360     0750                     __pmaintext:	
   361 ;;
   362 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   363 ;;
   364 ;; *************** function _main *****************
   365 ;; Defined at:
   366 ;;		line 69 in file "BT6.c"
   367 ;; Parameters:    Size  Location     Type
   368 ;;		None
   369 ;; Auto vars:     Size  Location     Type
   370 ;;  j               1    0        unsigned char 
   371 ;;  i               1    0        unsigned char 
   372 ;; Return value:  Size  Location     Type
   373 ;;                  1    wreg      void 
   374 ;; Registers used:
   375 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   376 ;; Tracked objects:
   377 ;;		On entry : B00/0
   378 ;;		On exit  : 0/0
   379 ;;		Unchanged: 0/0
   380 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   381 ;;      Params:         0       0       0       0       0
   382 ;;      Locals:         0       0       0       0       0
   383 ;;      Temps:          2       0       0       0       0
   384 ;;      Totals:         2       0       0       0       0
   385 ;;Total ram usage:        2 bytes
   386 ;; Hardware stack levels required when called: 1
   387 ;; This function calls:
   388 ;;		_choptat
   389 ;;		_sangDan
   390 ;;		_sangDuoi
   391 ;; This function is called by:
   392 ;;		Startup code after reset
   393 ;; This function uses a non-reentrant model
   394 ;;
   395                           
   396     0750                     _main:	
   397                           ;psect for function _main
   398                           
   399     0750                     l680:	
   400                           ;incstack = 0
   401                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   402                           
   403                           
   404                           ;BT6.c: 71:     unsigned char i, j;;BT6.c: 73:     ANSEL = 0;
   405     0750  1683               	bsf	3,5	;RP0=1, select bank3
   406     0751  1703               	bsf	3,6	;RP1=1, select bank3
   407     0752  0188               	clrf	8	;volatile
   408                           
   409                           ;BT6.c: 74:     ANSELH = 0;
   410     0753  0189               	clrf	9	;volatile
   411     0754                     l682:
   412                           
   413                           ;BT6.c: 76:     TRISB0 = TRISB1 = TRISB2 = 1;
   414     0754  1683               	bsf	3,5	;RP0=1, select bank1
   415     0755  1303               	bcf	3,6	;RP1=0, select bank1
   416     0756  1506               	bsf	6,2	;volatile
   417     0757  1906               	btfsc	6,2	;volatile
   418     0758  2F5A               	goto	u61
   419     0759  2F5E               	goto	u60
   420     075A                     u61:
   421     075A  1683               	bsf	3,5	;RP0=1, select bank1
   422     075B  1303               	bcf	3,6	;RP1=0, select bank1
   423     075C  1486               	bsf	6,1	;volatile
   424     075D  2F61               	goto	u74
   425     075E                     u60:
   426     075E  1683               	bsf	3,5	;RP0=1, select bank1
   427     075F  1303               	bcf	3,6	;RP1=0, select bank1
   428     0760  1086               	bcf	6,1	;volatile
   429     0761                     u74:
   430     0761  1886               	btfsc	6,1	;volatile
   431     0762  2F64               	goto	u71
   432     0763  2F68               	goto	u70
   433     0764                     u71:
   434     0764  1683               	bsf	3,5	;RP0=1, select bank1
   435     0765  1303               	bcf	3,6	;RP1=0, select bank1
   436     0766  1406               	bsf	6,0	;volatile
   437     0767  2F6B               	goto	u84
   438     0768                     u70:
   439     0768  1683               	bsf	3,5	;RP0=1, select bank1
   440     0769  1303               	bcf	3,6	;RP1=0, select bank1
   441     076A  1006               	bcf	6,0	;volatile
   442     076B                     u84:
   443     076B                     l684:
   444                           
   445                           ;BT6.c: 77:     nRBPU = 0;
   446     076B  1381               	bcf	1,7	;volatile
   447     076C                     l686:
   448                           
   449                           ;BT6.c: 78:     WPUB0 = WPUB1 = WPUB2 = 1;
   450     076C  1515               	bsf	21,2	;volatile
   451     076D  1915               	btfsc	21,2	;volatile
   452     076E  2F70               	goto	u91
   453     076F  2F74               	goto	u90
   454     0770                     u91:
   455     0770  1683               	bsf	3,5	;RP0=1, select bank1
   456     0771  1303               	bcf	3,6	;RP1=0, select bank1
   457     0772  1495               	bsf	21,1	;volatile
   458     0773  2F77               	goto	u104
   459     0774                     u90:
   460     0774  1683               	bsf	3,5	;RP0=1, select bank1
   461     0775  1303               	bcf	3,6	;RP1=0, select bank1
   462     0776  1095               	bcf	21,1	;volatile
   463     0777                     u104:
   464     0777  1895               	btfsc	21,1	;volatile
   465     0778  2F7A               	goto	u101
   466     0779  2F7E               	goto	u100
   467     077A                     u101:
   468     077A  1683               	bsf	3,5	;RP0=1, select bank1
   469     077B  1303               	bcf	3,6	;RP1=0, select bank1
   470     077C  1415               	bsf	21,0	;volatile
   471     077D  2F81               	goto	u114
   472     077E                     u100:
   473     077E  1683               	bsf	3,5	;RP0=1, select bank1
   474     077F  1303               	bcf	3,6	;RP1=0, select bank1
   475     0780  1015               	bcf	21,0	;volatile
   476     0781                     u114:
   477                           
   478                           ;BT6.c: 80:     TRISD = 0x00;
   479     0781  0188               	clrf	8	;volatile
   480                           
   481                           ;BT6.c: 81:     PORTD = 0x00;
   482     0782  1283               	bcf	3,5	;RP0=0, select bank0
   483     0783  1303               	bcf	3,6	;RP1=0, select bank0
   484     0784  0188               	clrf	8	;volatile
   485     0785                     l688:
   486                           
   487                           ;BT6.c: 84:     {;BT6.c: 85:         if(!RB0)
   488     0785  1283               	bcf	3,5	;RP0=0, select bank0
   489     0786  1303               	bcf	3,6	;RP1=0, select bank0
   490     0787  1806               	btfsc	6,0	;volatile
   491     0788  2F8A               	goto	u121
   492     0789  2F8B               	goto	u120
   493     078A                     u121:
   494     078A  2FA8               	goto	l62
   495     078B                     u120:
   496     078B                     l690:
   497                           
   498                           ;BT6.c: 86:         {;BT6.c: 87:             _delay((unsigned long)((5)*(4000000/4000.0)
      +                          ));
   499     078B  3007               	movlw	7
   500     078C  00F7               	movwf	??_main+1
   501     078D  307D               	movlw	125
   502     078E  00F6               	movwf	??_main
   503     078F                     u187:
   504     078F  0BF6               	decfsz	??_main,f
   505     0790  2F8F               	goto	u187
   506     0791  0BF7               	decfsz	??_main+1,f
   507     0792  2F8F               	goto	u187
   508     0793                     l63:	
   509                           ;BT6.c: 88:             while(!RB0);
   510                           
   511     0793  1283               	bcf	3,5	;RP0=0, select bank0
   512     0794  1303               	bcf	3,6	;RP1=0, select bank0
   513     0795  1C06               	btfss	6,0	;volatile
   514     0796  2F98               	goto	u131
   515     0797  2F99               	goto	u130
   516     0798                     u131:
   517     0798  2F93               	goto	l63
   518     0799                     u130:
   519     0799                     l692:
   520                           
   521                           ;BT6.c: 89:             _delay((unsigned long)((5)*(4000000/4000.0)));
   522     0799  3007               	movlw	7
   523     079A  00F7               	movwf	??_main+1
   524     079B  307D               	movlw	125
   525     079C  00F6               	movwf	??_main
   526     079D                     u197:
   527     079D  0BF6               	decfsz	??_main,f
   528     079E  2F9D               	goto	u197
   529     079F  0BF7               	decfsz	??_main+1,f
   530     07A0  2F9D               	goto	u197
   531     07A1                     l694:
   532                           
   533                           ;BT6.c: 90:             choptat(4);
   534     07A1  3004               	movlw	4
   535     07A2  120A  118A  269F  120A  118A  	fcall	_choptat
   536                           
   537                           ;BT6.c: 91:          }
   538     07A7  2F85               	goto	l688
   539     07A8                     l62:	
   540                           ;BT6.c: 92:         else if(!RB1)
   541                           
   542     07A8  1886               	btfsc	6,1	;volatile
   543     07A9  2FAB               	goto	u141
   544     07AA  2FAC               	goto	u140
   545     07AB                     u141:
   546     07AB  2FC9               	goto	l67
   547     07AC                     u140:
   548     07AC                     l696:
   549                           
   550                           ;BT6.c: 93:         {;BT6.c: 94:             _delay((unsigned long)((5)*(4000000/4000.0)
      +                          ));
   551     07AC  3007               	movlw	7
   552     07AD  00F7               	movwf	??_main+1
   553     07AE  307D               	movlw	125
   554     07AF  00F6               	movwf	??_main
   555     07B0                     u207:
   556     07B0  0BF6               	decfsz	??_main,f
   557     07B1  2FB0               	goto	u207
   558     07B2  0BF7               	decfsz	??_main+1,f
   559     07B3  2FB0               	goto	u207
   560     07B4                     l68:	
   561                           ;BT6.c: 95:             while(!RB1);
   562                           
   563     07B4  1283               	bcf	3,5	;RP0=0, select bank0
   564     07B5  1303               	bcf	3,6	;RP1=0, select bank0
   565     07B6  1C86               	btfss	6,1	;volatile
   566     07B7  2FB9               	goto	u151
   567     07B8  2FBA               	goto	u150
   568     07B9                     u151:
   569     07B9  2FB4               	goto	l68
   570     07BA                     u150:
   571     07BA                     l698:
   572                           
   573                           ;BT6.c: 96:             _delay((unsigned long)((5)*(4000000/4000.0)));
   574     07BA  3007               	movlw	7
   575     07BB  00F7               	movwf	??_main+1
   576     07BC  307D               	movlw	125
   577     07BD  00F6               	movwf	??_main
   578     07BE                     u217:
   579     07BE  0BF6               	decfsz	??_main,f
   580     07BF  2FBE               	goto	u217
   581     07C0  0BF7               	decfsz	??_main+1,f
   582     07C1  2FBE               	goto	u217
   583     07C2                     l700:
   584                           
   585                           ;BT6.c: 97:             sangDuoi(2);
   586     07C2  3002               	movlw	2
   587     07C3  120A  118A  26C8  120A  118A  	fcall	_sangDuoi
   588                           
   589                           ;BT6.c: 98:          }
   590     07C8  2F85               	goto	l688
   591     07C9                     l67:	
   592                           ;BT6.c: 99:         else if(!RB2)
   593                           
   594     07C9  1906               	btfsc	6,2	;volatile
   595     07CA  2FCC               	goto	u161
   596     07CB  2FCD               	goto	u160
   597     07CC                     u161:
   598     07CC  2FEA               	goto	l66
   599     07CD                     u160:
   600     07CD                     l702:
   601                           
   602                           ;BT6.c: 100:         {;BT6.c: 101:             _delay((unsigned long)((5)*(4000000/4000.
      +                          0)));
   603     07CD  3007               	movlw	7
   604     07CE  00F7               	movwf	??_main+1
   605     07CF  307D               	movlw	125
   606     07D0  00F6               	movwf	??_main
   607     07D1                     u227:
   608     07D1  0BF6               	decfsz	??_main,f
   609     07D2  2FD1               	goto	u227
   610     07D3  0BF7               	decfsz	??_main+1,f
   611     07D4  2FD1               	goto	u227
   612     07D5                     l73:	
   613                           ;BT6.c: 102:             while(!RB2);
   614                           
   615     07D5  1283               	bcf	3,5	;RP0=0, select bank0
   616     07D6  1303               	bcf	3,6	;RP1=0, select bank0
   617     07D7  1D06               	btfss	6,2	;volatile
   618     07D8  2FDA               	goto	u171
   619     07D9  2FDB               	goto	u170
   620     07DA                     u171:
   621     07DA  2FD5               	goto	l73
   622     07DB                     u170:
   623     07DB                     l704:
   624                           
   625                           ;BT6.c: 103:             _delay((unsigned long)((5)*(4000000/4000.0)));
   626     07DB  3007               	movlw	7
   627     07DC  00F7               	movwf	??_main+1
   628     07DD  307D               	movlw	125
   629     07DE  00F6               	movwf	??_main
   630     07DF                     u237:
   631     07DF  0BF6               	decfsz	??_main,f
   632     07E0  2FDF               	goto	u237
   633     07E1  0BF7               	decfsz	??_main+1,f
   634     07E2  2FDF               	goto	u237
   635     07E3                     l706:
   636                           
   637                           ;BT6.c: 104:             sangDan(2);
   638     07E3  3002               	movlw	2
   639     07E4  120A  118A  2703  120A  118A  	fcall	_sangDan
   640     07E9  2F85               	goto	l688
   641     07EA                     l66:
   642     07EA  2F85               	goto	l688
   643     07EB  120A  118A  2800   	ljmp	start
   644     07EE                     __end_of_main:
   645                           
   646                           	psect	text1
   647     06C8                     __ptext1:	
   648 ;; *************** function _sangDuoi *****************
   649 ;; Defined at:
   650 ;;		line 34 in file "BT6.c"
   651 ;; Parameters:    Size  Location     Type
   652 ;;  n               1    wreg     unsigned char 
   653 ;; Auto vars:     Size  Location     Type
   654 ;;  n               1    3[COMMON] unsigned char 
   655 ;;  temp            1    5[COMMON] unsigned char 
   656 ;;  j               1    4[COMMON] unsigned char 
   657 ;; Return value:  Size  Location     Type
   658 ;;                  1    wreg      void 
   659 ;; Registers used:
   660 ;;		wreg, status,2, status,0, btemp+1
   661 ;; Tracked objects:
   662 ;;		On entry : 0/0
   663 ;;		On exit  : 0/0
   664 ;;		Unchanged: 0/0
   665 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   666 ;;      Params:         0       0       0       0       0
   667 ;;      Locals:         3       0       0       0       0
   668 ;;      Temps:          3       0       0       0       0
   669 ;;      Totals:         6       0       0       0       0
   670 ;;Total ram usage:        6 bytes
   671 ;; Hardware stack levels used: 1
   672 ;; This function calls:
   673 ;;		Nothing
   674 ;; This function is called by:
   675 ;;		_main
   676 ;; This function uses a non-reentrant model
   677 ;;
   678                           
   679     06C8                     _sangDuoi:	
   680                           ;psect for function _sangDuoi
   681                           
   682                           
   683                           ;incstack = 0
   684                           ; Regs used in _sangDuoi: [wreg+status,2+status,0+btemp+1]
   685                           ;sangDuoi@n stored from wreg
   686     06C8  00F3               	movwf	sangDuoi@n
   687     06C9                     l632:
   688                           
   689                           ;BT6.c: 34: void sangDuoi(unsigned char n);BT6.c: 35: {;BT6.c: 36:     while(n--){
   690     06C9  2EFB               	goto	l652
   691     06CA                     l634:
   692                           
   693                           ;BT6.c: 37:         unsigned char j, temp;;BT6.c: 38:         PORTD = 0x00;
   694     06CA  1283               	bcf	3,5	;RP0=0, select bank0
   695     06CB  1303               	bcf	3,6	;RP1=0, select bank0
   696     06CC  0188               	clrf	8	;volatile
   697     06CD                     l636:
   698                           
   699                           ;BT6.c: 39:         _delay((unsigned long)((300)*(4000000/4000.0)));
   700     06CD  3002               	movlw	2
   701     06CE  00F2               	movwf	??_sangDuoi+2
   702     06CF  3086               	movlw	134
   703     06D0  00F1               	movwf	??_sangDuoi+1
   704     06D1  3099               	movlw	153
   705     06D2  00F0               	movwf	??_sangDuoi
   706     06D3                     u247:
   707     06D3  0BF0               	decfsz	??_sangDuoi,f
   708     06D4  2ED3               	goto	u247
   709     06D5  0BF1               	decfsz	??_sangDuoi+1,f
   710     06D6  2ED3               	goto	u247
   711     06D7  0BF2               	decfsz	??_sangDuoi+2,f
   712     06D8  2ED3               	goto	u247
   713     06D9                     l638:
   714                           
   715                           ;BT6.c: 41:         temp = 0x80;
   716     06D9  3080               	movlw	128
   717     06DA  00F5               	movwf	sangDuoi@temp
   718                           
   719                           ;BT6.c: 42:         for(j = 0; j < 8; j++) {
   720     06DB  01F4               	clrf	sangDuoi@j
   721     06DC                     l644:
   722                           
   723                           ;BT6.c: 43:             PORTD = temp;
   724     06DC  0875               	movf	sangDuoi@temp,w
   725     06DD  1283               	bcf	3,5	;RP0=0, select bank0
   726     06DE  1303               	bcf	3,6	;RP1=0, select bank0
   727     06DF  0088               	movwf	8	;volatile
   728                           
   729                           ;BT6.c: 44:             _delay((unsigned long)((300)*(4000000/4000.0)));
   730     06E0  3002               	movlw	2
   731     06E1  00F2               	movwf	??_sangDuoi+2
   732     06E2  3086               	movlw	134
   733     06E3  00F1               	movwf	??_sangDuoi+1
   734     06E4  3099               	movlw	153
   735     06E5  00F0               	movwf	??_sangDuoi
   736     06E6                     u257:
   737     06E6  0BF0               	decfsz	??_sangDuoi,f
   738     06E7  2EE6               	goto	u257
   739     06E8  0BF1               	decfsz	??_sangDuoi+1,f
   740     06E9  2EE6               	goto	u257
   741     06EA  0BF2               	decfsz	??_sangDuoi+2,f
   742     06EB  2EE6               	goto	u257
   743     06EC                     l646:
   744                           
   745                           ;BT6.c: 45:             temp = temp >> 1;
   746     06EC  0875               	movf	sangDuoi@temp,w
   747     06ED  00F0               	movwf	??_sangDuoi
   748     06EE  1003               	clrc
   749     06EF  0C70               	rrf	??_sangDuoi,w
   750     06F0  00F5               	movwf	sangDuoi@temp
   751     06F1                     l648:
   752                           
   753                           ;BT6.c: 46:         }
   754     06F1  3001               	movlw	1
   755     06F2  00FF               	movwf	btemp+1
   756     06F3  087F               	movf	btemp+1,w
   757     06F4  07F4               	addwf	sangDuoi@j,f
   758     06F5                     l650:
   759     06F5  3008               	movlw	8
   760     06F6  0274               	subwf	sangDuoi@j,w
   761     06F7  1C03               	skipc
   762     06F8  2EFA               	goto	u21
   763     06F9  2EFB               	goto	u20
   764     06FA                     u21:
   765     06FA  2EDC               	goto	l644
   766     06FB                     u20:
   767     06FB                     l652:
   768                           
   769                           ;BT6.c: 36:     while(n--){
   770     06FB  3001               	movlw	1
   771     06FC  02F3               	subwf	sangDuoi@n,f
   772     06FD  0A73               	incf	sangDuoi@n,w
   773     06FE  1D03               	btfss	3,2
   774     06FF  2F01               	goto	u31
   775     0700  2F02               	goto	u30
   776     0701                     u31:
   777     0701  2ECA               	goto	l634
   778     0702                     u30:
   779     0702                     l48:
   780     0702  0008               	return
   781     0703                     __end_of_sangDuoi:
   782                           
   783                           	psect	text2
   784     0703                     __ptext2:	
   785 ;; *************** function _sangDan *****************
   786 ;; Defined at:
   787 ;;		line 51 in file "BT6.c"
   788 ;; Parameters:    Size  Location     Type
   789 ;;  n               1    wreg     unsigned char 
   790 ;; Auto vars:     Size  Location     Type
   791 ;;  n               1    3[COMMON] unsigned char 
   792 ;;  a               1    5[COMMON] unsigned char 
   793 ;;  i               1    4[COMMON] unsigned char 
   794 ;; Return value:  Size  Location     Type
   795 ;;                  1    wreg      void 
   796 ;; Registers used:
   797 ;;		wreg, status,2, status,0, btemp+1
   798 ;; Tracked objects:
   799 ;;		On entry : 0/0
   800 ;;		On exit  : 0/0
   801 ;;		Unchanged: 0/0
   802 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   803 ;;      Params:         0       0       0       0       0
   804 ;;      Locals:         3       0       0       0       0
   805 ;;      Temps:          3       0       0       0       0
   806 ;;      Totals:         6       0       0       0       0
   807 ;;Total ram usage:        6 bytes
   808 ;; Hardware stack levels used: 1
   809 ;; This function calls:
   810 ;;		Nothing
   811 ;; This function is called by:
   812 ;;		_main
   813 ;; This function uses a non-reentrant model
   814 ;;
   815                           
   816     0703                     _sangDan:	
   817                           ;psect for function _sangDan
   818                           
   819                           
   820                           ;incstack = 0
   821                           ; Regs used in _sangDan: [wreg+status,2+status,0+btemp+1]
   822                           ;sangDan@n stored from wreg
   823     0703  00F3               	movwf	sangDan@n
   824     0704                     l654:
   825                           
   826                           ;BT6.c: 51: void sangDan(unsigned char n);BT6.c: 52: {;BT6.c: 53:     while(n--){
   827     0704  2F48               	goto	l678
   828     0705                     l656:
   829                           
   830                           ;BT6.c: 54:     unsigned char a = 0x80;
   831     0705  3080               	movlw	128
   832     0706  00F5               	movwf	sangDan@a
   833     0707                     l658:
   834                           
   835                           ;BT6.c: 55:     unsigned char i;;BT6.c: 56:     PORTD = 0x00;
   836     0707  1283               	bcf	3,5	;RP0=0, select bank0
   837     0708  1303               	bcf	3,6	;RP1=0, select bank0
   838     0709  0188               	clrf	8	;volatile
   839     070A                     l660:
   840                           
   841                           ;BT6.c: 57:     _delay((unsigned long)((300)*(4000000/4000.0)));
   842     070A  3002               	movlw	2
   843     070B  00F2               	movwf	??_sangDan+2
   844     070C  3086               	movlw	134
   845     070D  00F1               	movwf	??_sangDan+1
   846     070E  3099               	movlw	153
   847     070F  00F0               	movwf	??_sangDan
   848     0710                     u267:
   849     0710  0BF0               	decfsz	??_sangDan,f
   850     0711  2F10               	goto	u267
   851     0712  0BF1               	decfsz	??_sangDan+1,f
   852     0713  2F10               	goto	u267
   853     0714  0BF2               	decfsz	??_sangDan+2,f
   854     0715  2F10               	goto	u267
   855     0716                     l662:
   856                           
   857                           ;BT6.c: 58:     PORTD = a;
   858     0716  3080               	movlw	128
   859     0717  1283               	bcf	3,5	;RP0=0, select bank0
   860     0718  1303               	bcf	3,6	;RP1=0, select bank0
   861     0719  0088               	movwf	8	;volatile
   862     071A                     l664:
   863                           
   864                           ;BT6.c: 59:     _delay((unsigned long)((300)*(4000000/4000.0)));
   865     071A  3002               	movlw	2
   866     071B  00F2               	movwf	??_sangDan+2
   867     071C  3086               	movlw	134
   868     071D  00F1               	movwf	??_sangDan+1
   869     071E  3099               	movlw	153
   870     071F  00F0               	movwf	??_sangDan
   871     0720                     u277:
   872     0720  0BF0               	decfsz	??_sangDan,f
   873     0721  2F20               	goto	u277
   874     0722  0BF1               	decfsz	??_sangDan+1,f
   875     0723  2F20               	goto	u277
   876     0724  0BF2               	decfsz	??_sangDan+2,f
   877     0725  2F20               	goto	u277
   878                           
   879                           ;BT6.c: 60:     for(i = 0; i < 8; i++)
   880     0726  01F4               	clrf	sangDan@i
   881     0727                     l670:
   882                           
   883                           ;BT6.c: 61:     {;BT6.c: 62:         a |= a >> 1;
   884     0727  0875               	movf	sangDan@a,w
   885     0728  00F0               	movwf	??_sangDan
   886     0729  1003               	clrc
   887     072A  0C70               	rrf	??_sangDan,w
   888     072B  00FF               	movwf	btemp+1
   889     072C  087F               	movf	btemp+1,w
   890     072D  04F5               	iorwf	sangDan@a,f
   891     072E                     l672:
   892                           
   893                           ;BT6.c: 63:         PORTD = a;
   894     072E  0875               	movf	sangDan@a,w
   895     072F  1283               	bcf	3,5	;RP0=0, select bank0
   896     0730  1303               	bcf	3,6	;RP1=0, select bank0
   897     0731  0088               	movwf	8	;volatile
   898     0732                     l674:
   899                           
   900                           ;BT6.c: 64:         _delay((unsigned long)((300)*(4000000/4000.0)));
   901     0732  3002               	movlw	2
   902     0733  00F2               	movwf	??_sangDan+2
   903     0734  3086               	movlw	134
   904     0735  00F1               	movwf	??_sangDan+1
   905     0736  3099               	movlw	153
   906     0737  00F0               	movwf	??_sangDan
   907     0738                     u287:
   908     0738  0BF0               	decfsz	??_sangDan,f
   909     0739  2F38               	goto	u287
   910     073A  0BF1               	decfsz	??_sangDan+1,f
   911     073B  2F38               	goto	u287
   912     073C  0BF2               	decfsz	??_sangDan+2,f
   913     073D  2F38               	goto	u287
   914                           
   915                           ;BT6.c: 65:     }
   916     073E  3001               	movlw	1
   917     073F  00FF               	movwf	btemp+1
   918     0740  087F               	movf	btemp+1,w
   919     0741  07F4               	addwf	sangDan@i,f
   920     0742                     l676:
   921     0742  3008               	movlw	8
   922     0743  0274               	subwf	sangDan@i,w
   923     0744  1C03               	skipc
   924     0745  2F47               	goto	u41
   925     0746  2F48               	goto	u40
   926     0747                     u41:
   927     0747  2F27               	goto	l670
   928     0748                     u40:
   929     0748                     l678:
   930                           
   931                           ;BT6.c: 53:     while(n--){
   932     0748  3001               	movlw	1
   933     0749  02F3               	subwf	sangDan@n,f
   934     074A  0A73               	incf	sangDan@n,w
   935     074B  1D03               	btfss	3,2
   936     074C  2F4E               	goto	u51
   937     074D  2F4F               	goto	u50
   938     074E                     u51:
   939     074E  2F05               	goto	l656
   940     074F                     u50:
   941     074F                     l56:
   942     074F  0008               	return
   943     0750                     __end_of_sangDan:
   944                           
   945                           	psect	text3
   946     069F                     __ptext3:	
   947 ;; *************** function _choptat *****************
   948 ;; Defined at:
   949 ;;		line 24 in file "BT6.c"
   950 ;; Parameters:    Size  Location     Type
   951 ;;  n               1    wreg     unsigned char 
   952 ;; Auto vars:     Size  Location     Type
   953 ;;  n               1    3[COMMON] unsigned char 
   954 ;; Return value:  Size  Location     Type
   955 ;;                  1    wreg      void 
   956 ;; Registers used:
   957 ;;		wreg, status,2, status,0
   958 ;; Tracked objects:
   959 ;;		On entry : 0/0
   960 ;;		On exit  : 0/0
   961 ;;		Unchanged: 0/0
   962 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   963 ;;      Params:         0       0       0       0       0
   964 ;;      Locals:         1       0       0       0       0
   965 ;;      Temps:          3       0       0       0       0
   966 ;;      Totals:         4       0       0       0       0
   967 ;;Total ram usage:        4 bytes
   968 ;; Hardware stack levels used: 1
   969 ;; This function calls:
   970 ;;		Nothing
   971 ;; This function is called by:
   972 ;;		_main
   973 ;; This function uses a non-reentrant model
   974 ;;
   975                           
   976     069F                     _choptat:	
   977                           ;psect for function _choptat
   978                           
   979                           
   980                           ;incstack = 0
   981                           ; Regs used in _choptat: [wreg+status,2+status,0]
   982                           ;choptat@n stored from wreg
   983     069F  00F3               	movwf	choptat@n
   984     06A0                     l622:
   985                           
   986                           ;BT6.c: 24: void choptat (unsigned char n);BT6.c: 25: {;BT6.c: 26:     while(n--){
   987     06A0  2EC0               	goto	l630
   988     06A1                     l624:
   989                           
   990                           ;BT6.c: 27:         PORTD = 0xFF;
   991     06A1  30FF               	movlw	255
   992     06A2  1283               	bcf	3,5	;RP0=0, select bank0
   993     06A3  1303               	bcf	3,6	;RP1=0, select bank0
   994     06A4  0088               	movwf	8	;volatile
   995                           
   996                           ;BT6.c: 28:         _delay((unsigned long)((300)*(4000000/4000.0)));
   997     06A5  3002               	movlw	2
   998     06A6  00F2               	movwf	??_choptat+2
   999     06A7  3086               	movlw	134
  1000     06A8  00F1               	movwf	??_choptat+1
  1001     06A9  3099               	movlw	153
  1002     06AA  00F0               	movwf	??_choptat
  1003     06AB                     u297:
  1004     06AB  0BF0               	decfsz	??_choptat,f
  1005     06AC  2EAB               	goto	u297
  1006     06AD  0BF1               	decfsz	??_choptat+1,f
  1007     06AE  2EAB               	goto	u297
  1008     06AF  0BF2               	decfsz	??_choptat+2,f
  1009     06B0  2EAB               	goto	u297
  1010     06B1                     l626:
  1011                           
  1012                           ;BT6.c: 29:         PORTD = 0x00;
  1013     06B1  1283               	bcf	3,5	;RP0=0, select bank0
  1014     06B2  1303               	bcf	3,6	;RP1=0, select bank0
  1015     06B3  0188               	clrf	8	;volatile
  1016     06B4                     l628:
  1017                           
  1018                           ;BT6.c: 30:         _delay((unsigned long)((300)*(4000000/4000.0)));
  1019     06B4  3002               	movlw	2
  1020     06B5  00F2               	movwf	??_choptat+2
  1021     06B6  3086               	movlw	134
  1022     06B7  00F1               	movwf	??_choptat+1
  1023     06B8  3099               	movlw	153
  1024     06B9  00F0               	movwf	??_choptat
  1025     06BA                     u307:
  1026     06BA  0BF0               	decfsz	??_choptat,f
  1027     06BB  2EBA               	goto	u307
  1028     06BC  0BF1               	decfsz	??_choptat+1,f
  1029     06BD  2EBA               	goto	u307
  1030     06BE  0BF2               	decfsz	??_choptat+2,f
  1031     06BF  2EBA               	goto	u307
  1032     06C0                     l630:
  1033                           
  1034                           ;BT6.c: 26:     while(n--){
  1035     06C0  3001               	movlw	1
  1036     06C1  02F3               	subwf	choptat@n,f
  1037     06C2  0A73               	incf	choptat@n,w
  1038     06C3  1D03               	btfss	3,2
  1039     06C4  2EC6               	goto	u11
  1040     06C5  2EC7               	goto	u10
  1041     06C6                     u11:
  1042     06C6  2EA1               	goto	l624
  1043     06C7                     u10:
  1044     06C7                     l40:
  1045     06C7  0008               	return
  1046     06C8                     __end_of_choptat:
  1047     007E                     btemp	set	126	;btemp
  1048     007E                     wtemp0	set	126
  1049                           
  1050                           	psect	config
  1051                           
  1052                           ;Config register CONFIG1 @ 0x2007
  1053                           ;	Oscillator Selection bits
  1054                           ;	FOSC = HS, HS oscillator: High-speed crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1
      +                          /CLKIN
  1055                           ;	Watchdog Timer Enable bit
  1056                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1057                           ;	Power-up Timer Enable bit
  1058                           ;	PWRTE = OFF, PWRT disabled
  1059                           ;	RE3/MCLR pin function select bit
  1060                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  1061                           ;	Code Protection bit
  1062                           ;	CP = OFF, Program memory code protection is disabled
  1063                           ;	Data Code Protection bit
  1064                           ;	CPD = OFF, Data memory code protection is disabled
  1065                           ;	Brown Out Reset Selection bits
  1066                           ;	BOREN = OFF, BOR disabled
  1067                           ;	Internal External Switchover bit
  1068                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1069                           ;	Fail-Safe Clock Monitor Enabled bit
  1070                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1071                           ;	Low Voltage Programming Enable bit
  1072                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1073                           ;	In-Circuit Debugger Mode bit
  1074                           ;	DEBUG = 0x1, unprogrammed default
  1075     2007                     	org	8199
  1076     2007  20F2               	dw	8434
  1077                           
  1078                           ;Config register CONFIG2 @ 0x2008
  1079                           ;	Brown-out Reset Selection bit
  1080                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1081                           ;	Flash Program Memory Self Write Enable bits
  1082                           ;	WRT = OFF, Write protection off
  1083     2008                     	org	8200
  1084     2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        20
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8       8
    BANK0            80      0      20
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_sangDan
    _main->_sangDuoi

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0     180
                                              6 COMMON     2     2      0
                            _choptat
                            _sangDan
                           _sangDuoi
 ---------------------------------------------------------------------------------
 (1) _sangDuoi                                             6     6      0      75
                                              0 COMMON     6     6      0
 ---------------------------------------------------------------------------------
 (1) _sangDan                                              6     6      0      90
                                              0 COMMON     6     6      0
 ---------------------------------------------------------------------------------
 (1) _choptat                                              4     4      0      15
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _choptat
   _sangDan
   _sangDuoi

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0      14       5       25.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      8       8       1       57.1%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      1C      12        0.0%
ABS                  0      0      1C       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Thu Aug 29 10:19:15 2024

                      pc 0002                       l40 06C7                       l62 07A8  
                     l63 0793                       l56 074F                       l48 0702  
                     l73 07D5                       l66 07EA                       l67 07C9  
                     l68 07B4                       u10 06C7                       u11 06C6  
                     u20 06FB                       u21 06FA                       u30 0702  
                     u31 0701                       u40 0748                       u41 0747  
                     u50 074F                       u51 074E                       u60 075E  
                     u61 075A                       u70 0768                       u71 0764  
                     u90 0774                       u74 0761                       u91 0770  
                     u84 076B                       fsr 0004                      l700 07C2  
                    l630 06C0                      l622 06A0                      l702 07CD  
                    l624 06A1                      l632 06C9                      l704 07DB  
                    l626 06B1                      l650 06F5                      l634 06CA  
                    l706 07E3                      l628 06B4                      l660 070A  
                    l644 06DC                      l636 06CD                      l652 06FB  
                    l670 0727                      l662 0716                      l654 0704  
                    l646 06EC                      l638 06D9                      l672 072E  
                    l664 071A                      l656 0705                      l648 06F1  
                    l680 0750                      l674 0732                      l658 0707  
                    l690 078B                      l682 0754                      l676 0742  
                    l692 0799                      l684 076B                      l678 0748  
                    l694 07A1                      l686 076C                      l696 07AC  
                    l688 0785                      l698 07BA                      _RB0 0030  
                    _RB1 0031                      _RB2 0032                      u100 077E  
                    u101 077A                      u120 078B                      u104 0777  
                    u121 078A                      u130 0799                      u114 0781  
                    u131 0798                      u140 07AC                      u141 07AB  
                    u150 07BA                      u151 07B9                      u207 07B0  
                    u160 07CD                      u161 07CC                      u217 07BE  
                    u170 07DB                      u307 06BA                      u171 07DA  
                    u227 07D1                      u237 07DF                      u247 06D3  
                    u257 06E6                      u267 0710                      u187 078F  
                    u277 0720                      u197 079D                      u287 0738  
                    u297 06AB                      indf 0000                     _main 0750  
                   btemp 007E                     start 0000                    ?_main 0070  
                  _ANSEL 0188                    _PORTD 0008                    _TRISD 0088  
                  _WPUB0 04A8                    _WPUB1 04A9                    _WPUB2 04AA  
                  _MaLed 002A          __end_of_choptat 06C8                    _nRBPU 040F  
        __end_of_sangDan 0750                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 07EE             __end_of_main 07EE  
                 ??_main 0076                   _ANSELH 0189                   _TRISB0 0430  
                 _TRISB1 0431                   _TRISB2 0432         __end_of_sangDuoi 0703  
              ??_choptat 0070                ??_sangDan 0070  __end_of__initialization 07FC  
         __pcstackCOMMON 0070             __pidataBANK0 068B               __pmaintext 0750  
              ?_sangDuoi 0070                  __ptext1 06C8                  __ptext2 0703  
                __ptext3 069F                  _choptat 069F                  _sangDan 0703  
   end_of_initialization 07FC               ??_sangDuoi 0070             sangDuoi@temp 0075  
    start_initialization 07EE               init_fetch0 0678              __pdataBANK0 0020  
              ___latbits 0002                 ?_choptat 0070                 ?_sangDan 0070  
              sangDuoi@j 0074                sangDuoi@n 0073                 _sangDuoi 06C8  
               choptat@n 0073                 init_ram0 067C                 sangDan@a 0075  
               sangDan@i 0074                 sangDan@n 0073         _MaLed7Seg_nghich 0020  
