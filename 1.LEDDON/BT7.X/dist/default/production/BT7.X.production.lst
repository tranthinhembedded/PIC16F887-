

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Thu Sep 05 06:58:41 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	inittext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    17                           	dabs	1,0x7E,2
    18     0000                     
    19                           ; Generated 12/10/2023 GMT
    20                           ; 
    21                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution. Publication is not required when
    35                           ;        this file is used in an embedded application.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC16F887 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53     0000                     	;# 
    54     0001                     	;# 
    55     0002                     	;# 
    56     0003                     	;# 
    57     0004                     	;# 
    58     0005                     	;# 
    59     0006                     	;# 
    60     0007                     	;# 
    61     0008                     	;# 
    62     0009                     	;# 
    63     000A                     	;# 
    64     000B                     	;# 
    65     000C                     	;# 
    66     000D                     	;# 
    67     000E                     	;# 
    68     000E                     	;# 
    69     000F                     	;# 
    70     0010                     	;# 
    71     0011                     	;# 
    72     0012                     	;# 
    73     0013                     	;# 
    74     0014                     	;# 
    75     0015                     	;# 
    76     0015                     	;# 
    77     0016                     	;# 
    78     0017                     	;# 
    79     0018                     	;# 
    80     0019                     	;# 
    81     001A                     	;# 
    82     001B                     	;# 
    83     001B                     	;# 
    84     001C                     	;# 
    85     001D                     	;# 
    86     001E                     	;# 
    87     001F                     	;# 
    88     0081                     	;# 
    89     0085                     	;# 
    90     0086                     	;# 
    91     0087                     	;# 
    92     0088                     	;# 
    93     0089                     	;# 
    94     008C                     	;# 
    95     008D                     	;# 
    96     008E                     	;# 
    97     008F                     	;# 
    98     0090                     	;# 
    99     0091                     	;# 
   100     0092                     	;# 
   101     0093                     	;# 
   102     0093                     	;# 
   103     0093                     	;# 
   104     0094                     	;# 
   105     0095                     	;# 
   106     0096                     	;# 
   107     0097                     	;# 
   108     0098                     	;# 
   109     0099                     	;# 
   110     009A                     	;# 
   111     009B                     	;# 
   112     009C                     	;# 
   113     009D                     	;# 
   114     009E                     	;# 
   115     009F                     	;# 
   116     0105                     	;# 
   117     0107                     	;# 
   118     0108                     	;# 
   119     0109                     	;# 
   120     010C                     	;# 
   121     010C                     	;# 
   122     010D                     	;# 
   123     010E                     	;# 
   124     010F                     	;# 
   125     0185                     	;# 
   126     0187                     	;# 
   127     0188                     	;# 
   128     0189                     	;# 
   129     018C                     	;# 
   130     018D                     	;# 
   131     0000                     	;# 
   132     0001                     	;# 
   133     0002                     	;# 
   134     0003                     	;# 
   135     0004                     	;# 
   136     0005                     	;# 
   137     0006                     	;# 
   138     0007                     	;# 
   139     0008                     	;# 
   140     0009                     	;# 
   141     000A                     	;# 
   142     000B                     	;# 
   143     000C                     	;# 
   144     000D                     	;# 
   145     000E                     	;# 
   146     000E                     	;# 
   147     000F                     	;# 
   148     0010                     	;# 
   149     0011                     	;# 
   150     0012                     	;# 
   151     0013                     	;# 
   152     0014                     	;# 
   153     0015                     	;# 
   154     0015                     	;# 
   155     0016                     	;# 
   156     0017                     	;# 
   157     0018                     	;# 
   158     0019                     	;# 
   159     001A                     	;# 
   160     001B                     	;# 
   161     001B                     	;# 
   162     001C                     	;# 
   163     001D                     	;# 
   164     001E                     	;# 
   165     001F                     	;# 
   166     0081                     	;# 
   167     0085                     	;# 
   168     0086                     	;# 
   169     0087                     	;# 
   170     0088                     	;# 
   171     0089                     	;# 
   172     008C                     	;# 
   173     008D                     	;# 
   174     008E                     	;# 
   175     008F                     	;# 
   176     0090                     	;# 
   177     0091                     	;# 
   178     0092                     	;# 
   179     0093                     	;# 
   180     0093                     	;# 
   181     0093                     	;# 
   182     0094                     	;# 
   183     0095                     	;# 
   184     0096                     	;# 
   185     0097                     	;# 
   186     0098                     	;# 
   187     0099                     	;# 
   188     009A                     	;# 
   189     009B                     	;# 
   190     009C                     	;# 
   191     009D                     	;# 
   192     009E                     	;# 
   193     009F                     	;# 
   194     0105                     	;# 
   195     0107                     	;# 
   196     0108                     	;# 
   197     0109                     	;# 
   198     010C                     	;# 
   199     010C                     	;# 
   200     010D                     	;# 
   201     010E                     	;# 
   202     010F                     	;# 
   203     0185                     	;# 
   204     0187                     	;# 
   205     0188                     	;# 
   206     0189                     	;# 
   207     018C                     	;# 
   208     018D                     	;# 
   209                           
   210                           	psect	idataBANK0
   211     05A6                     __pidataBANK0:
   212                           
   213                           ;initializer for _MaLed7Seg_nghich
   214     05A6  3490               	retlw	144
   215     05A7  3480               	retlw	128
   216     05A8  34F8               	retlw	248
   217     05A9  3482               	retlw	130
   218     05AA  3492               	retlw	146
   219     05AB  3499               	retlw	153
   220     05AC  34B0               	retlw	176
   221     05AD  34A4               	retlw	164
   222     05AE  34F9               	retlw	249
   223     05AF  34C0               	retlw	192
   224                           
   225                           ;initializer for _MaLed
   226     05B0  34C0               	retlw	192
   227     05B1  34F9               	retlw	249
   228     05B2  34A4               	retlw	164
   229     05B3  34B0               	retlw	176
   230     05B4  3499               	retlw	153
   231     05B5  3492               	retlw	146
   232     05B6  3482               	retlw	130
   233     05B7  34F8               	retlw	248
   234     05B8  3480               	retlw	128
   235     05B9  3490               	retlw	144
   236     0008                     _PORTD	set	8
   237     0007                     _PORTC	set	7
   238     0032                     _RB2	set	50
   239     0031                     _RB1	set	49
   240     0030                     _RB0	set	48
   241     0088                     _TRISD	set	136
   242     0087                     _TRISC	set	135
   243     04AA                     _WPUB2	set	1194
   244     04A9                     _WPUB1	set	1193
   245     04A8                     _WPUB0	set	1192
   246     040F                     _nRBPU	set	1039
   247     0432                     _TRISB2	set	1074
   248     0431                     _TRISB1	set	1073
   249     0430                     _TRISB0	set	1072
   250     0189                     _ANSELH	set	393
   251     0188                     _ANSEL	set	392
   252                           
   253                           	psect	cinit
   254     07EE                     start_initialization:	
   255                           ; #config settings
   256                           
   257     07EE                     __initialization:
   258                           
   259                           ; Initialize objects allocated to BANK0
   260     07EE  1383               	bcf	3,7	;select IRP bank0
   261     07EF  3034               	movlw	low (__pdataBANK0+20)
   262     07F0  00FD               	movwf	btemp+-1
   263     07F1  3005               	movlw	high __pidataBANK0
   264     07F2  00FE               	movwf	btemp
   265     07F3  30A6               	movlw	low __pidataBANK0
   266     07F4  00FF               	movwf	btemp+1
   267     07F5  3020               	movlw	low __pdataBANK0
   268     07F6  0084               	movwf	4
   269     07F7  120A  118A  2597  120A  118A  	fcall	init_ram0
   270     07FC                     end_of_initialization:	
   271                           ;End of C runtime variable initialization code
   272                           
   273     07FC                     __end_of__initialization:
   274     07FC  0183               	clrf	3
   275     07FD  120A  118A  2F39   	ljmp	_main	;jump to C main() function
   276                           
   277                           	psect	dataBANK0
   278     0020                     __pdataBANK0:
   279     0020                     _MaLed7Seg_nghich:
   280     0020                     	ds	10
   281     002A                     _MaLed:
   282     002A                     	ds	10
   283                           
   284                           	psect	inittext
   285     0593                     init_fetch0:	
   286                           ;	Called with low address in FSR and high address in W
   287                           
   288     0593  087E               	movf	btemp,w
   289     0594  008A               	movwf	10
   290     0595  087F               	movf	btemp+1,w
   291     0596  0082               	movwf	2
   292     0597                     init_ram0:	
   293                           ;Called with:
   294                           ;	high address of idata address in btemp 
   295                           ;	low address of idata address in btemp+1 
   296                           ;	low address of data in FSR
   297                           ;	high address + 1 of data in btemp-1
   298                           
   299     0597  120A  118A  2593  120A  118A  	fcall	init_fetch0
   300     059C  0080               	movwf	0
   301     059D  0A84               	incf	4,f
   302     059E  0804               	movf	4,w
   303     059F  067D               	xorwf	btemp+-1,w
   304     05A0  1903               	btfsc	3,2
   305     05A1  3400               	retlw	0
   306     05A2  0AFF               	incf	btemp+1,f
   307     05A3  1903               	btfsc	3,2
   308     05A4  0AFE               	incf	btemp,f
   309     05A5  2D97               	goto	init_ram0
   310                           
   311                           	psect	cstackCOMMON
   312     0070                     __pcstackCOMMON:
   313     0070                     ?_choptat_Ab:
   314     0070                     ??_choptat_Ab:	
   315                           ; 1 bytes @ 0x0
   316                           
   317     0070                     ?_dem00_26:	
   318                           ; 1 bytes @ 0x0
   319                           
   320     0070                     ?_dem99_00:	
   321                           ; 1 bytes @ 0x0
   322                           
   323     0070                     ?_main:	
   324                           ; 1 bytes @ 0x0
   325                           
   326     0070                     ?___awdiv:	
   327                           ; 1 bytes @ 0x0
   328                           
   329     0070                     ?___awmod:	
   330                           ; 2 bytes @ 0x0
   331                           
   332     0070                     ___awdiv@divisor:	
   333                           ; 2 bytes @ 0x0
   334                           
   335     0070                     ___awmod@divisor:	
   336                           ; 2 bytes @ 0x0
   337                           
   338                           
   339                           ; 2 bytes @ 0x0
   340     0070                     	ds	2
   341     0072                     ___awdiv@dividend:
   342     0072                     ___awmod@dividend:	
   343                           ; 2 bytes @ 0x2
   344                           
   345                           
   346                           ; 2 bytes @ 0x2
   347     0072                     	ds	2
   348     0074                     ??___awdiv:
   349     0074                     ??___awmod:	
   350                           ; 1 bytes @ 0x4
   351                           
   352     0074                     ___awdiv@counter:	
   353                           ; 1 bytes @ 0x4
   354                           
   355     0074                     ___awmod@counter:	
   356                           ; 1 bytes @ 0x4
   357                           
   358                           
   359                           ; 1 bytes @ 0x4
   360     0074                     	ds	1
   361     0075                     ___awdiv@sign:
   362     0075                     ___awmod@sign:	
   363                           ; 1 bytes @ 0x5
   364                           
   365                           
   366                           ; 1 bytes @ 0x5
   367     0075                     	ds	1
   368     0076                     ___awdiv@quotient:
   369                           
   370                           ; 2 bytes @ 0x6
   371     0076                     	ds	2
   372     0078                     ??_dem00_26:
   373     0078                     ??_dem99_00:	
   374                           ; 1 bytes @ 0x8
   375                           
   376                           
   377                           ; 1 bytes @ 0x8
   378     0078                     	ds	3
   379     007B                     dem00_26@hangDonVi:
   380     007B                     dem99_00@hangDonVi:	
   381                           ; 1 bytes @ 0xB
   382                           
   383                           
   384                           ; 1 bytes @ 0xB
   385     007B                     	ds	1
   386     007C                     dem00_26@hangChuc:
   387     007C                     dem99_00@hangChuc:	
   388                           ; 1 bytes @ 0xC
   389                           
   390                           
   391                           ; 1 bytes @ 0xC
   392     007C                     	ds	1
   393     007D                     dem00_26@i:
   394     007D                     dem99_00@i:	
   395                           ; 1 bytes @ 0xD
   396                           
   397                           
   398                           ; 1 bytes @ 0xD
   399     007D                     	ds	1
   400                           
   401                           	psect	cstackBANK0
   402     0034                     __pcstackBANK0:
   403     0034                     ??_main:
   404                           
   405                           ; 1 bytes @ 0x0
   406     0034                     	ds	2
   407                           
   408                           	psect	maintext
   409     0739                     __pmaintext:	
   410 ;;
   411 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   412 ;;
   413 ;; *************** function _main *****************
   414 ;; Defined at:
   415 ;;		line 66 in file "BT7.c"
   416 ;; Parameters:    Size  Location     Type
   417 ;;		None
   418 ;; Auto vars:     Size  Location     Type
   419 ;;  j               1    0        unsigned char 
   420 ;;  i               1    0        unsigned char 
   421 ;; Return value:  Size  Location     Type
   422 ;;                  1    wreg      void 
   423 ;; Registers used:
   424 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   425 ;; Tracked objects:
   426 ;;		On entry : B00/0
   427 ;;		On exit  : 0/0
   428 ;;		Unchanged: 0/0
   429 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   430 ;;      Params:         0       0       0       0       0
   431 ;;      Locals:         0       0       0       0       0
   432 ;;      Temps:          0       2       0       0       0
   433 ;;      Totals:         0       2       0       0       0
   434 ;;Total ram usage:        2 bytes
   435 ;; Hardware stack levels required when called: 2
   436 ;; This function calls:
   437 ;;		_choptat_Ab
   438 ;;		_dem00_26
   439 ;;		_dem99_00
   440 ;; This function is called by:
   441 ;;		Startup code after reset
   442 ;; This function uses a non-reentrant model
   443 ;;
   444                           
   445     0739                     _main:	
   446                           ;psect for function _main
   447                           
   448     0739                     l891:	
   449                           ;incstack = 0
   450                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   451                           
   452                           
   453                           ;BT7.c: 68:     unsigned char i, j;;BT7.c: 70:     ANSEL = 0;
   454     0739  1683               	bsf	3,5	;RP0=1, select bank3
   455     073A  1703               	bsf	3,6	;RP1=1, select bank3
   456     073B  0188               	clrf	8	;volatile
   457                           
   458                           ;BT7.c: 71:     ANSELH = 0;
   459     073C  0189               	clrf	9	;volatile
   460     073D                     l893:
   461                           
   462                           ;BT7.c: 73:     TRISB0 = TRISB1 = TRISB2 = 1;
   463     073D  1683               	bsf	3,5	;RP0=1, select bank1
   464     073E  1303               	bcf	3,6	;RP1=0, select bank1
   465     073F  1506               	bsf	6,2	;volatile
   466     0740  1906               	btfsc	6,2	;volatile
   467     0741  2F43               	goto	u551
   468     0742  2F47               	goto	u550
   469     0743                     u551:
   470     0743  1683               	bsf	3,5	;RP0=1, select bank1
   471     0744  1303               	bcf	3,6	;RP1=0, select bank1
   472     0745  1486               	bsf	6,1	;volatile
   473     0746  2F4A               	goto	u564
   474     0747                     u550:
   475     0747  1683               	bsf	3,5	;RP0=1, select bank1
   476     0748  1303               	bcf	3,6	;RP1=0, select bank1
   477     0749  1086               	bcf	6,1	;volatile
   478     074A                     u564:
   479     074A  1886               	btfsc	6,1	;volatile
   480     074B  2F4D               	goto	u561
   481     074C  2F51               	goto	u560
   482     074D                     u561:
   483     074D  1683               	bsf	3,5	;RP0=1, select bank1
   484     074E  1303               	bcf	3,6	;RP1=0, select bank1
   485     074F  1406               	bsf	6,0	;volatile
   486     0750  2F54               	goto	u574
   487     0751                     u560:
   488     0751  1683               	bsf	3,5	;RP0=1, select bank1
   489     0752  1303               	bcf	3,6	;RP1=0, select bank1
   490     0753  1006               	bcf	6,0	;volatile
   491     0754                     u574:
   492     0754                     l895:
   493                           
   494                           ;BT7.c: 74:     nRBPU = 0;
   495     0754  1381               	bcf	1,7	;volatile
   496     0755                     l897:
   497                           
   498                           ;BT7.c: 75:     WPUB0 = WPUB1 = WPUB2 = 1;
   499     0755  1515               	bsf	21,2	;volatile
   500     0756  1915               	btfsc	21,2	;volatile
   501     0757  2F59               	goto	u581
   502     0758  2F5D               	goto	u580
   503     0759                     u581:
   504     0759  1683               	bsf	3,5	;RP0=1, select bank1
   505     075A  1303               	bcf	3,6	;RP1=0, select bank1
   506     075B  1495               	bsf	21,1	;volatile
   507     075C  2F60               	goto	u594
   508     075D                     u580:
   509     075D  1683               	bsf	3,5	;RP0=1, select bank1
   510     075E  1303               	bcf	3,6	;RP1=0, select bank1
   511     075F  1095               	bcf	21,1	;volatile
   512     0760                     u594:
   513     0760  1895               	btfsc	21,1	;volatile
   514     0761  2F63               	goto	u591
   515     0762  2F67               	goto	u590
   516     0763                     u591:
   517     0763  1683               	bsf	3,5	;RP0=1, select bank1
   518     0764  1303               	bcf	3,6	;RP1=0, select bank1
   519     0765  1415               	bsf	21,0	;volatile
   520     0766  2F6A               	goto	u604
   521     0767                     u590:
   522     0767  1683               	bsf	3,5	;RP0=1, select bank1
   523     0768  1303               	bcf	3,6	;RP1=0, select bank1
   524     0769  1015               	bcf	21,0	;volatile
   525     076A                     u604:
   526                           
   527                           ;BT7.c: 77:     TRISC = 0x00;
   528     076A  0187               	clrf	7	;volatile
   529     076B                     l899:
   530                           
   531                           ;BT7.c: 78:     PORTC = 0xFF;
   532     076B  30FF               	movlw	255
   533     076C  1283               	bcf	3,5	;RP0=0, select bank0
   534     076D  1303               	bcf	3,6	;RP1=0, select bank0
   535     076E  0087               	movwf	7	;volatile
   536     076F                     l901:
   537                           
   538                           ;BT7.c: 79:     TRISD = 0x00;
   539     076F  1683               	bsf	3,5	;RP0=1, select bank1
   540     0770  1303               	bcf	3,6	;RP1=0, select bank1
   541     0771  0188               	clrf	8	;volatile
   542                           
   543                           ;BT7.c: 80:     PORTD = 0xFF;
   544     0772  30FF               	movlw	255
   545     0773  1283               	bcf	3,5	;RP0=0, select bank0
   546     0774  1303               	bcf	3,6	;RP1=0, select bank0
   547     0775  0088               	movwf	8	;volatile
   548     0776                     l903:
   549                           
   550                           ;BT7.c: 83:     {;BT7.c: 84:         if(!RB0)
   551     0776  1283               	bcf	3,5	;RP0=0, select bank0
   552     0777  1303               	bcf	3,6	;RP1=0, select bank0
   553     0778  1806               	btfsc	6,0	;volatile
   554     0779  2F7B               	goto	u611
   555     077A  2F7C               	goto	u610
   556     077B                     u611:
   557     077B  2F9E               	goto	l57
   558     077C                     u610:
   559     077C                     l905:
   560                           
   561                           ;BT7.c: 85:         {;BT7.c: 86:             _delay((unsigned long)((5)*(4000000/4000.0)
      +                          ));
   562     077C  3007               	movlw	7
   563     077D  1283               	bcf	3,5	;RP0=0, select bank0
   564     077E  1303               	bcf	3,6	;RP1=0, select bank0
   565     077F  00B5               	movwf	??_main+1
   566     0780  307C               	movlw	124
   567     0781  00B4               	movwf	??_main
   568     0782                     u677:
   569     0782  0BB4               	decfsz	??_main,f
   570     0783  2F82               	goto	u677
   571     0784  0BB5               	decfsz	??_main+1,f
   572     0785  2F82               	goto	u677
   573     0786  0000               	nop
   574     0787                     l58:	
   575                           ;BT7.c: 87:             while(!RB0);
   576                           
   577     0787  1283               	bcf	3,5	;RP0=0, select bank0
   578     0788  1303               	bcf	3,6	;RP1=0, select bank0
   579     0789  1C06               	btfss	6,0	;volatile
   580     078A  2F8C               	goto	u621
   581     078B  2F8D               	goto	u620
   582     078C                     u621:
   583     078C  2F87               	goto	l58
   584     078D                     u620:
   585     078D                     l907:
   586                           
   587                           ;BT7.c: 88:             _delay((unsigned long)((5)*(4000000/4000.0)));
   588     078D  3007               	movlw	7
   589     078E  1283               	bcf	3,5	;RP0=0, select bank0
   590     078F  1303               	bcf	3,6	;RP1=0, select bank0
   591     0790  00B5               	movwf	??_main+1
   592     0791  307C               	movlw	124
   593     0792  00B4               	movwf	??_main
   594     0793                     u687:
   595     0793  0BB4               	decfsz	??_main,f
   596     0794  2F93               	goto	u687
   597     0795  0BB5               	decfsz	??_main+1,f
   598     0796  2F93               	goto	u687
   599     0797  0000               	nop
   600     0798                     l909:
   601                           
   602                           ;BT7.c: 89:             choptat_Ab();
   603     0798  120A  118A  25BA  120A  118A  	fcall	_choptat_Ab
   604                           
   605                           ;BT7.c: 90:         }
   606     079D  2F76               	goto	l903
   607     079E                     l57:	
   608                           ;BT7.c: 91:         else if(!RB1)
   609                           
   610     079E  1886               	btfsc	6,1	;volatile
   611     079F  2FA1               	goto	u631
   612     07A0  2FA2               	goto	u630
   613     07A1                     u631:
   614     07A1  2FC4               	goto	l62
   615     07A2                     u630:
   616     07A2                     l911:
   617                           
   618                           ;BT7.c: 92:         {;BT7.c: 93:             _delay((unsigned long)((5)*(4000000/4000.0)
      +                          ));
   619     07A2  3007               	movlw	7
   620     07A3  1283               	bcf	3,5	;RP0=0, select bank0
   621     07A4  1303               	bcf	3,6	;RP1=0, select bank0
   622     07A5  00B5               	movwf	??_main+1
   623     07A6  307C               	movlw	124
   624     07A7  00B4               	movwf	??_main
   625     07A8                     u697:
   626     07A8  0BB4               	decfsz	??_main,f
   627     07A9  2FA8               	goto	u697
   628     07AA  0BB5               	decfsz	??_main+1,f
   629     07AB  2FA8               	goto	u697
   630     07AC  0000               	nop
   631     07AD                     l63:	
   632                           ;BT7.c: 94:             while(!RB1);
   633                           
   634     07AD  1283               	bcf	3,5	;RP0=0, select bank0
   635     07AE  1303               	bcf	3,6	;RP1=0, select bank0
   636     07AF  1C86               	btfss	6,1	;volatile
   637     07B0  2FB2               	goto	u641
   638     07B1  2FB3               	goto	u640
   639     07B2                     u641:
   640     07B2  2FAD               	goto	l63
   641     07B3                     u640:
   642     07B3                     l913:
   643                           
   644                           ;BT7.c: 95:             _delay((unsigned long)((5)*(4000000/4000.0)));
   645     07B3  3007               	movlw	7
   646     07B4  1283               	bcf	3,5	;RP0=0, select bank0
   647     07B5  1303               	bcf	3,6	;RP1=0, select bank0
   648     07B6  00B5               	movwf	??_main+1
   649     07B7  307C               	movlw	124
   650     07B8  00B4               	movwf	??_main
   651     07B9                     u707:
   652     07B9  0BB4               	decfsz	??_main,f
   653     07BA  2FB9               	goto	u707
   654     07BB  0BB5               	decfsz	??_main+1,f
   655     07BC  2FB9               	goto	u707
   656     07BD  0000               	nop
   657     07BE                     l915:
   658                           
   659                           ;BT7.c: 96:             dem00_26();
   660     07BE  120A  118A  25E1  120A  118A  	fcall	_dem00_26
   661                           
   662                           ;BT7.c: 97:          }
   663     07C3  2F76               	goto	l903
   664     07C4                     l62:	
   665                           ;BT7.c: 98:         else if(!RB2)
   666                           
   667     07C4  1906               	btfsc	6,2	;volatile
   668     07C5  2FC7               	goto	u651
   669     07C6  2FC8               	goto	u650
   670     07C7                     u651:
   671     07C7  2FEA               	goto	l61
   672     07C8                     u650:
   673     07C8                     l917:
   674                           
   675                           ;BT7.c: 99:         {;BT7.c: 100:             _delay((unsigned long)((5)*(4000000/4000.0
      +                          )));
   676     07C8  3007               	movlw	7
   677     07C9  1283               	bcf	3,5	;RP0=0, select bank0
   678     07CA  1303               	bcf	3,6	;RP1=0, select bank0
   679     07CB  00B5               	movwf	??_main+1
   680     07CC  307C               	movlw	124
   681     07CD  00B4               	movwf	??_main
   682     07CE                     u717:
   683     07CE  0BB4               	decfsz	??_main,f
   684     07CF  2FCE               	goto	u717
   685     07D0  0BB5               	decfsz	??_main+1,f
   686     07D1  2FCE               	goto	u717
   687     07D2  0000               	nop
   688     07D3                     l68:	
   689                           ;BT7.c: 101:             while(!RB2);
   690                           
   691     07D3  1283               	bcf	3,5	;RP0=0, select bank0
   692     07D4  1303               	bcf	3,6	;RP1=0, select bank0
   693     07D5  1D06               	btfss	6,2	;volatile
   694     07D6  2FD8               	goto	u661
   695     07D7  2FD9               	goto	u660
   696     07D8                     u661:
   697     07D8  2FD3               	goto	l68
   698     07D9                     u660:
   699     07D9                     l919:
   700                           
   701                           ;BT7.c: 102:             _delay((unsigned long)((5)*(4000000/4000.0)));
   702     07D9  3007               	movlw	7
   703     07DA  1283               	bcf	3,5	;RP0=0, select bank0
   704     07DB  1303               	bcf	3,6	;RP1=0, select bank0
   705     07DC  00B5               	movwf	??_main+1
   706     07DD  307C               	movlw	124
   707     07DE  00B4               	movwf	??_main
   708     07DF                     u727:
   709     07DF  0BB4               	decfsz	??_main,f
   710     07E0  2FDF               	goto	u727
   711     07E1  0BB5               	decfsz	??_main+1,f
   712     07E2  2FDF               	goto	u727
   713     07E3  0000               	nop
   714     07E4                     l921:
   715                           
   716                           ;BT7.c: 103:             dem99_00();
   717     07E4  120A  118A  262A  120A  118A  	fcall	_dem99_00
   718     07E9  2F76               	goto	l903
   719     07EA                     l61:
   720     07EA  2F76               	goto	l903
   721     07EB  120A  118A  2800   	ljmp	start
   722     07EE                     __end_of_main:
   723                           
   724                           	psect	text1
   725     062A                     __ptext1:	
   726 ;; *************** function _dem99_00 *****************
   727 ;; Defined at:
   728 ;;		line 49 in file "BT7.c"
   729 ;; Parameters:    Size  Location     Type
   730 ;;		None
   731 ;; Auto vars:     Size  Location     Type
   732 ;;  i               1   13[COMMON] unsigned char 
   733 ;;  hangChuc        1   12[COMMON] unsigned char 
   734 ;;  hangDonVi       1   11[COMMON] unsigned char 
   735 ;;  j               1    0        unsigned char 
   736 ;; Return value:  Size  Location     Type
   737 ;;                  1    wreg      void 
   738 ;; Registers used:
   739 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   740 ;; Tracked objects:
   741 ;;		On entry : 0/0
   742 ;;		On exit  : 0/0
   743 ;;		Unchanged: 0/0
   744 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   745 ;;      Params:         0       0       0       0       0
   746 ;;      Locals:         3       0       0       0       0
   747 ;;      Temps:          3       0       0       0       0
   748 ;;      Totals:         6       0       0       0       0
   749 ;;Total ram usage:        6 bytes
   750 ;; Hardware stack levels used: 1
   751 ;; Hardware stack levels required when called: 1
   752 ;; This function calls:
   753 ;;		___awdiv
   754 ;;		___awmod
   755 ;; This function is called by:
   756 ;;		_main
   757 ;; This function uses a non-reentrant model
   758 ;;
   759                           
   760     062A                     _dem99_00:	
   761                           ;psect for function _dem99_00
   762                           
   763     062A                     l871:	
   764                           ;incstack = 0
   765                           ; Regs used in _dem99_00: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   766                           
   767                           
   768                           ;BT7.c: 51:     unsigned char i, j;;BT7.c: 52:     unsigned char hangDonVi, hangChuc;;BT
      +                          7.c: 53:     PORTD = MaLed7Seg_nghich[0];
   769     062A  1283               	bcf	3,5	;RP0=0, select bank0
   770     062B  1303               	bcf	3,6	;RP1=0, select bank0
   771     062C  0820               	movf	_MaLed7Seg_nghich,w
   772     062D  0088               	movwf	8	;volatile
   773                           
   774                           ;BT7.c: 54:     PORTC = MaLed7Seg_nghich[0];
   775     062E  0820               	movf	_MaLed7Seg_nghich,w
   776     062F  0087               	movwf	7	;volatile
   777     0630                     l873:
   778                           
   779                           ;BT7.c: 55:     for(i = 0; i<=99; i++)
   780     0630  01FD               	clrf	dem99_00@i
   781     0631                     l879:
   782                           
   783                           ;BT7.c: 56:     {;BT7.c: 57:         hangDonVi = i % 10;
   784     0631  300A               	movlw	10
   785     0632  00F0               	movwf	___awmod@divisor
   786     0633  3000               	movlw	0
   787     0634  00F1               	movwf	___awmod@divisor+1
   788     0635  087D               	movf	dem99_00@i,w
   789     0636  00F8               	movwf	??_dem99_00
   790     0637  01F9               	clrf	??_dem99_00+1
   791     0638  0878               	movf	??_dem99_00,w
   792     0639  00F2               	movwf	___awmod@dividend
   793     063A  0879               	movf	??_dem99_00+1,w
   794     063B  00F3               	movwf	___awmod@dividend+1
   795     063C  120A  118A  2679  120A  118A  	fcall	___awmod
   796     0641  0870               	movf	?___awmod,w
   797     0642  00FB               	movwf	dem99_00@hangDonVi
   798                           
   799                           ;BT7.c: 58:         hangChuc = i / 10;
   800     0643  300A               	movlw	10
   801     0644  00F0               	movwf	___awdiv@divisor
   802     0645  3000               	movlw	0
   803     0646  00F1               	movwf	___awdiv@divisor+1
   804     0647  087D               	movf	dem99_00@i,w
   805     0648  00F8               	movwf	??_dem99_00
   806     0649  01F9               	clrf	??_dem99_00+1
   807     064A  0878               	movf	??_dem99_00,w
   808     064B  00F2               	movwf	___awdiv@dividend
   809     064C  0879               	movf	??_dem99_00+1,w
   810     064D  00F3               	movwf	___awdiv@dividend+1
   811     064E  120A  118A  26D2  120A  118A  	fcall	___awdiv
   812     0653  0870               	movf	?___awdiv,w
   813     0654  00FC               	movwf	dem99_00@hangChuc
   814     0655                     l881:
   815                           
   816                           ;BT7.c: 60:         PORTC = MaLed7Seg_nghich[hangChuc];
   817     0655  087C               	movf	dem99_00@hangChuc,w
   818     0656  3E20               	addlw	(low (_MaLed7Seg_nghich| 0))& (0+255)
   819     0657  0084               	movwf	4
   820     0658  1383               	bcf	3,7	;select IRP bank0
   821     0659  0800               	movf	0,w
   822     065A  1283               	bcf	3,5	;RP0=0, select bank0
   823     065B  1303               	bcf	3,6	;RP1=0, select bank0
   824     065C  0087               	movwf	7	;volatile
   825     065D                     l883:
   826                           
   827                           ;BT7.c: 61:         PORTD = MaLed7Seg_nghich[hangDonVi];
   828     065D  087B               	movf	dem99_00@hangDonVi,w
   829     065E  3E20               	addlw	(low (_MaLed7Seg_nghich| 0))& (0+255)
   830     065F  0084               	movwf	4
   831     0660  0800               	movf	0,w
   832     0661  0088               	movwf	8	;volatile
   833     0662                     l885:
   834                           
   835                           ;BT7.c: 62:         _delay((unsigned long)((300)*(4000000/4000.0)));
   836     0662  3002               	movlw	2
   837     0663  00FA               	movwf	??_dem99_00+2
   838     0664  3086               	movlw	134
   839     0665  00F9               	movwf	??_dem99_00+1
   840     0666  3099               	movlw	153
   841     0667  00F8               	movwf	??_dem99_00
   842     0668                     u737:
   843     0668  0BF8               	decfsz	??_dem99_00,f
   844     0669  2E68               	goto	u737
   845     066A  0BF9               	decfsz	??_dem99_00+1,f
   846     066B  2E68               	goto	u737
   847     066C  0BFA               	decfsz	??_dem99_00+2,f
   848     066D  2E68               	goto	u737
   849     066E                     l887:
   850                           
   851                           ;BT7.c: 63:        }
   852     066E  3001               	movlw	1
   853     066F  00FF               	movwf	btemp+1
   854     0670  087F               	movf	btemp+1,w
   855     0671  07FD               	addwf	dem99_00@i,f
   856     0672                     l889:
   857     0672  3064               	movlw	100
   858     0673  027D               	subwf	dem99_00@i,w
   859     0674  1C03               	skipc
   860     0675  2E77               	goto	u541
   861     0676  2E78               	goto	u540
   862     0677                     u541:
   863     0677  2E31               	goto	l879
   864     0678                     u540:
   865     0678                     l51:
   866     0678  0008               	return
   867     0679                     __end_of_dem99_00:
   868                           
   869                           	psect	text2
   870     05E1                     __ptext2:	
   871 ;; *************** function _dem00_26 *****************
   872 ;; Defined at:
   873 ;;		line 34 in file "BT7.c"
   874 ;; Parameters:    Size  Location     Type
   875 ;;		None
   876 ;; Auto vars:     Size  Location     Type
   877 ;;  i               1   13[COMMON] unsigned char 
   878 ;;  hangChuc        1   12[COMMON] unsigned char 
   879 ;;  hangDonVi       1   11[COMMON] unsigned char 
   880 ;;  j               1    0        unsigned char 
   881 ;; Return value:  Size  Location     Type
   882 ;;                  1    wreg      void 
   883 ;; Registers used:
   884 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   885 ;; Tracked objects:
   886 ;;		On entry : 0/0
   887 ;;		On exit  : 0/0
   888 ;;		Unchanged: 0/0
   889 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   890 ;;      Params:         0       0       0       0       0
   891 ;;      Locals:         3       0       0       0       0
   892 ;;      Temps:          3       0       0       0       0
   893 ;;      Totals:         6       0       0       0       0
   894 ;;Total ram usage:        6 bytes
   895 ;; Hardware stack levels used: 1
   896 ;; Hardware stack levels required when called: 1
   897 ;; This function calls:
   898 ;;		___awdiv
   899 ;;		___awmod
   900 ;; This function is called by:
   901 ;;		_main
   902 ;; This function uses a non-reentrant model
   903 ;;
   904                           
   905     05E1                     _dem00_26:	
   906                           ;psect for function _dem00_26
   907                           
   908     05E1                     l853:	
   909                           ;incstack = 0
   910                           ; Regs used in _dem00_26: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   911                           
   912                           
   913                           ;BT7.c: 36:     unsigned char i, j;;BT7.c: 37:     unsigned char hangDonVi, hangChuc;;BT
      +                          7.c: 38:     for(i = 0; i<=26; i++)
   914     05E1  01FD               	clrf	dem00_26@i
   915     05E2                     l859:
   916                           
   917                           ;BT7.c: 39:         {;BT7.c: 40:             hangDonVi = i % 10;
   918     05E2  300A               	movlw	10
   919     05E3  00F0               	movwf	___awmod@divisor
   920     05E4  3000               	movlw	0
   921     05E5  00F1               	movwf	___awmod@divisor+1
   922     05E6  087D               	movf	dem00_26@i,w
   923     05E7  00F8               	movwf	??_dem00_26
   924     05E8  01F9               	clrf	??_dem00_26+1
   925     05E9  0878               	movf	??_dem00_26,w
   926     05EA  00F2               	movwf	___awmod@dividend
   927     05EB  0879               	movf	??_dem00_26+1,w
   928     05EC  00F3               	movwf	___awmod@dividend+1
   929     05ED  120A  118A  2679  120A  118A  	fcall	___awmod
   930     05F2  0870               	movf	?___awmod,w
   931     05F3  00FB               	movwf	dem00_26@hangDonVi
   932                           
   933                           ;BT7.c: 41:             hangChuc = i / 10;
   934     05F4  300A               	movlw	10
   935     05F5  00F0               	movwf	___awdiv@divisor
   936     05F6  3000               	movlw	0
   937     05F7  00F1               	movwf	___awdiv@divisor+1
   938     05F8  087D               	movf	dem00_26@i,w
   939     05F9  00F8               	movwf	??_dem00_26
   940     05FA  01F9               	clrf	??_dem00_26+1
   941     05FB  0878               	movf	??_dem00_26,w
   942     05FC  00F2               	movwf	___awdiv@dividend
   943     05FD  0879               	movf	??_dem00_26+1,w
   944     05FE  00F3               	movwf	___awdiv@dividend+1
   945     05FF  120A  118A  26D2  120A  118A  	fcall	___awdiv
   946     0604  0870               	movf	?___awdiv,w
   947     0605  00FC               	movwf	dem00_26@hangChuc
   948     0606                     l861:
   949                           
   950                           ;BT7.c: 43:             PORTC = MaLed[hangChuc];
   951     0606  087C               	movf	dem00_26@hangChuc,w
   952     0607  3E2A               	addlw	(low (_MaLed| 0))& (0+255)
   953     0608  0084               	movwf	4
   954     0609  1383               	bcf	3,7	;select IRP bank0
   955     060A  0800               	movf	0,w
   956     060B  1283               	bcf	3,5	;RP0=0, select bank0
   957     060C  1303               	bcf	3,6	;RP1=0, select bank0
   958     060D  0087               	movwf	7	;volatile
   959     060E                     l863:
   960                           
   961                           ;BT7.c: 44:             PORTD = MaLed[hangDonVi];
   962     060E  087B               	movf	dem00_26@hangDonVi,w
   963     060F  3E2A               	addlw	(low (_MaLed| 0))& (0+255)
   964     0610  0084               	movwf	4
   965     0611  0800               	movf	0,w
   966     0612  0088               	movwf	8	;volatile
   967     0613                     l865:
   968                           
   969                           ;BT7.c: 45:             _delay((unsigned long)((300)*(4000000/4000.0)));
   970     0613  3002               	movlw	2
   971     0614  00FA               	movwf	??_dem00_26+2
   972     0615  3086               	movlw	134
   973     0616  00F9               	movwf	??_dem00_26+1
   974     0617  3099               	movlw	153
   975     0618  00F8               	movwf	??_dem00_26
   976     0619                     u747:
   977     0619  0BF8               	decfsz	??_dem00_26,f
   978     061A  2E19               	goto	u747
   979     061B  0BF9               	decfsz	??_dem00_26+1,f
   980     061C  2E19               	goto	u747
   981     061D  0BFA               	decfsz	??_dem00_26+2,f
   982     061E  2E19               	goto	u747
   983     061F                     l867:
   984                           
   985                           ;BT7.c: 46:         }
   986     061F  3001               	movlw	1
   987     0620  00FF               	movwf	btemp+1
   988     0621  087F               	movf	btemp+1,w
   989     0622  07FD               	addwf	dem00_26@i,f
   990     0623                     l869:
   991     0623  301B               	movlw	27
   992     0624  027D               	subwf	dem00_26@i,w
   993     0625  1C03               	skipc
   994     0626  2E28               	goto	u531
   995     0627  2E29               	goto	u530
   996     0628                     u531:
   997     0628  2DE2               	goto	l859
   998     0629                     u530:
   999     0629                     l46:
  1000     0629  0008               	return
  1001     062A                     __end_of_dem00_26:
  1002                           
  1003                           	psect	text3
  1004     0679                     __ptext3:	
  1005 ;; *************** function ___awmod *****************
  1006 ;; Defined at:
  1007 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awmod.c"
  1008 ;; Parameters:    Size  Location     Type
  1009 ;;  divisor         2    0[COMMON] int 
  1010 ;;  dividend        2    2[COMMON] int 
  1011 ;; Auto vars:     Size  Location     Type
  1012 ;;  sign            1    5[COMMON] unsigned char 
  1013 ;;  counter         1    4[COMMON] unsigned char 
  1014 ;; Return value:  Size  Location     Type
  1015 ;;                  2    0[COMMON] int 
  1016 ;; Registers used:
  1017 ;;		wreg, status,2, status,0, btemp+1
  1018 ;; Tracked objects:
  1019 ;;		On entry : 0/0
  1020 ;;		On exit  : 0/0
  1021 ;;		Unchanged: 0/0
  1022 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1023 ;;      Params:         4       0       0       0       0
  1024 ;;      Locals:         2       0       0       0       0
  1025 ;;      Temps:          0       0       0       0       0
  1026 ;;      Totals:         6       0       0       0       0
  1027 ;;Total ram usage:        6 bytes
  1028 ;; Hardware stack levels used: 1
  1029 ;; This function calls:
  1030 ;;		Nothing
  1031 ;; This function is called by:
  1032 ;;		_dem00_26
  1033 ;;		_dem99_00
  1034 ;; This function uses a non-reentrant model
  1035 ;;
  1036                           
  1037     0679                     ___awmod:	
  1038                           ;psect for function ___awmod
  1039                           
  1040     0679                     l815:	
  1041                           ;incstack = 0
  1042                           ; Regs used in ___awmod: [wreg+status,2+status,0+btemp+1]
  1043                           
  1044     0679  01F5               	clrf	___awmod@sign
  1045     067A                     l817:
  1046     067A  1FF3               	btfss	___awmod@dividend+1,7
  1047     067B  2E7D               	goto	u441
  1048     067C  2E7E               	goto	u440
  1049     067D                     u441:
  1050     067D  2E85               	goto	l823
  1051     067E                     u440:
  1052     067E                     l819:
  1053     067E  09F2               	comf	___awmod@dividend,f
  1054     067F  09F3               	comf	___awmod@dividend+1,f
  1055     0680  0AF2               	incf	___awmod@dividend,f
  1056     0681  1903               	skipnz
  1057     0682  0AF3               	incf	___awmod@dividend+1,f
  1058     0683                     l821:
  1059     0683  01F5               	clrf	___awmod@sign
  1060     0684  0AF5               	incf	___awmod@sign,f
  1061     0685                     l823:
  1062     0685  1FF1               	btfss	___awmod@divisor+1,7
  1063     0686  2E88               	goto	u451
  1064     0687  2E89               	goto	u450
  1065     0688                     u451:
  1066     0688  2E8E               	goto	l827
  1067     0689                     u450:
  1068     0689                     l825:
  1069     0689  09F0               	comf	___awmod@divisor,f
  1070     068A  09F1               	comf	___awmod@divisor+1,f
  1071     068B  0AF0               	incf	___awmod@divisor,f
  1072     068C  1903               	skipnz
  1073     068D  0AF1               	incf	___awmod@divisor+1,f
  1074     068E                     l827:
  1075     068E  0870               	movf	___awmod@divisor,w
  1076     068F  0471               	iorwf	___awmod@divisor+1,w
  1077     0690  1903               	btfsc	3,2
  1078     0691  2E93               	goto	u461
  1079     0692  2E94               	goto	u460
  1080     0693                     u461:
  1081     0693  2EC3               	goto	l845
  1082     0694                     u460:
  1083     0694                     l829:
  1084     0694  01F4               	clrf	___awmod@counter
  1085     0695  0AF4               	incf	___awmod@counter,f
  1086     0696  2EA2               	goto	l835
  1087     0697                     l831:
  1088     0697  3001               	movlw	1
  1089     0698                     u475:
  1090     0698  1003               	clrc
  1091     0699  0DF0               	rlf	___awmod@divisor,f
  1092     069A  0DF1               	rlf	___awmod@divisor+1,f
  1093     069B  3EFF               	addlw	-1
  1094     069C  1D03               	skipz
  1095     069D  2E98               	goto	u475
  1096     069E                     l833:
  1097     069E  3001               	movlw	1
  1098     069F  00FF               	movwf	btemp+1
  1099     06A0  087F               	movf	btemp+1,w
  1100     06A1  07F4               	addwf	___awmod@counter,f
  1101     06A2                     l835:
  1102     06A2  1FF1               	btfss	___awmod@divisor+1,7
  1103     06A3  2EA5               	goto	u481
  1104     06A4  2EA6               	goto	u480
  1105     06A5                     u481:
  1106     06A5  2E97               	goto	l831
  1107     06A6                     u480:
  1108     06A6                     l837:
  1109     06A6  0871               	movf	___awmod@divisor+1,w
  1110     06A7  0273               	subwf	___awmod@dividend+1,w
  1111     06A8  1D03               	skipz
  1112     06A9  2EAC               	goto	u495
  1113     06AA  0870               	movf	___awmod@divisor,w
  1114     06AB  0272               	subwf	___awmod@dividend,w
  1115     06AC                     u495:
  1116     06AC  1C03               	skipc
  1117     06AD  2EAF               	goto	u491
  1118     06AE  2EB0               	goto	u490
  1119     06AF                     u491:
  1120     06AF  2EB6               	goto	l841
  1121     06B0                     u490:
  1122     06B0                     l839:
  1123     06B0  0870               	movf	___awmod@divisor,w
  1124     06B1  02F2               	subwf	___awmod@dividend,f
  1125     06B2  0871               	movf	___awmod@divisor+1,w
  1126     06B3  1C03               	skipc
  1127     06B4  03F3               	decf	___awmod@dividend+1,f
  1128     06B5  02F3               	subwf	___awmod@dividend+1,f
  1129     06B6                     l841:
  1130     06B6  3001               	movlw	1
  1131     06B7                     u505:
  1132     06B7  1003               	clrc
  1133     06B8  0CF1               	rrf	___awmod@divisor+1,f
  1134     06B9  0CF0               	rrf	___awmod@divisor,f
  1135     06BA  3EFF               	addlw	-1
  1136     06BB  1D03               	skipz
  1137     06BC  2EB7               	goto	u505
  1138     06BD                     l843:
  1139     06BD  3001               	movlw	1
  1140     06BE  02F4               	subwf	___awmod@counter,f
  1141     06BF  1D03               	btfss	3,2
  1142     06C0  2EC2               	goto	u511
  1143     06C1  2EC3               	goto	u510
  1144     06C2                     u511:
  1145     06C2  2EA6               	goto	l837
  1146     06C3                     u510:
  1147     06C3                     l845:
  1148     06C3  0875               	movf	___awmod@sign,w
  1149     06C4  1903               	btfsc	3,2
  1150     06C5  2EC7               	goto	u521
  1151     06C6  2EC8               	goto	u520
  1152     06C7                     u521:
  1153     06C7  2ECD               	goto	l849
  1154     06C8                     u520:
  1155     06C8                     l847:
  1156     06C8  09F2               	comf	___awmod@dividend,f
  1157     06C9  09F3               	comf	___awmod@dividend+1,f
  1158     06CA  0AF2               	incf	___awmod@dividend,f
  1159     06CB  1903               	skipnz
  1160     06CC  0AF3               	incf	___awmod@dividend+1,f
  1161     06CD                     l849:
  1162     06CD  0873               	movf	___awmod@dividend+1,w
  1163     06CE  00F1               	movwf	?___awmod+1
  1164     06CF  0872               	movf	___awmod@dividend,w
  1165     06D0  00F0               	movwf	?___awmod
  1166     06D1                     l325:
  1167     06D1  0008               	return
  1168     06D2                     __end_of___awmod:
  1169                           
  1170                           	psect	text4
  1171     06D2                     __ptext4:	
  1172 ;; *************** function ___awdiv *****************
  1173 ;; Defined at:
  1174 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awdiv.c"
  1175 ;; Parameters:    Size  Location     Type
  1176 ;;  divisor         2    0[COMMON] int 
  1177 ;;  dividend        2    2[COMMON] int 
  1178 ;; Auto vars:     Size  Location     Type
  1179 ;;  quotient        2    6[COMMON] int 
  1180 ;;  sign            1    5[COMMON] unsigned char 
  1181 ;;  counter         1    4[COMMON] unsigned char 
  1182 ;; Return value:  Size  Location     Type
  1183 ;;                  2    0[COMMON] int 
  1184 ;; Registers used:
  1185 ;;		wreg, status,2, status,0, btemp+1
  1186 ;; Tracked objects:
  1187 ;;		On entry : 0/0
  1188 ;;		On exit  : 0/0
  1189 ;;		Unchanged: 0/0
  1190 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1191 ;;      Params:         4       0       0       0       0
  1192 ;;      Locals:         4       0       0       0       0
  1193 ;;      Temps:          0       0       0       0       0
  1194 ;;      Totals:         8       0       0       0       0
  1195 ;;Total ram usage:        8 bytes
  1196 ;; Hardware stack levels used: 1
  1197 ;; This function calls:
  1198 ;;		Nothing
  1199 ;; This function is called by:
  1200 ;;		_dem00_26
  1201 ;;		_dem99_00
  1202 ;; This function uses a non-reentrant model
  1203 ;;
  1204                           
  1205     06D2                     ___awdiv:	
  1206                           ;psect for function ___awdiv
  1207                           
  1208     06D2                     l771:	
  1209                           ;incstack = 0
  1210                           ; Regs used in ___awdiv: [wreg+status,2+status,0+btemp+1]
  1211                           
  1212     06D2  01F5               	clrf	___awdiv@sign
  1213     06D3                     l773:
  1214     06D3  1FF1               	btfss	___awdiv@divisor+1,7
  1215     06D4  2ED6               	goto	u341
  1216     06D5  2ED7               	goto	u340
  1217     06D6                     u341:
  1218     06D6  2EDE               	goto	l779
  1219     06D7                     u340:
  1220     06D7                     l775:
  1221     06D7  09F0               	comf	___awdiv@divisor,f
  1222     06D8  09F1               	comf	___awdiv@divisor+1,f
  1223     06D9  0AF0               	incf	___awdiv@divisor,f
  1224     06DA  1903               	skipnz
  1225     06DB  0AF1               	incf	___awdiv@divisor+1,f
  1226     06DC                     l777:
  1227     06DC  01F5               	clrf	___awdiv@sign
  1228     06DD  0AF5               	incf	___awdiv@sign,f
  1229     06DE                     l779:
  1230     06DE  1FF3               	btfss	___awdiv@dividend+1,7
  1231     06DF  2EE1               	goto	u351
  1232     06E0  2EE2               	goto	u350
  1233     06E1                     u351:
  1234     06E1  2EEB               	goto	l785
  1235     06E2                     u350:
  1236     06E2                     l781:
  1237     06E2  09F2               	comf	___awdiv@dividend,f
  1238     06E3  09F3               	comf	___awdiv@dividend+1,f
  1239     06E4  0AF2               	incf	___awdiv@dividend,f
  1240     06E5  1903               	skipnz
  1241     06E6  0AF3               	incf	___awdiv@dividend+1,f
  1242     06E7                     l783:
  1243     06E7  3001               	movlw	1
  1244     06E8  00FF               	movwf	btemp+1
  1245     06E9  087F               	movf	btemp+1,w
  1246     06EA  06F5               	xorwf	___awdiv@sign,f
  1247     06EB                     l785:
  1248     06EB  01F6               	clrf	___awdiv@quotient
  1249     06EC  01F7               	clrf	___awdiv@quotient+1
  1250     06ED                     l787:
  1251     06ED  0870               	movf	___awdiv@divisor,w
  1252     06EE  0471               	iorwf	___awdiv@divisor+1,w
  1253     06EF  1903               	btfsc	3,2
  1254     06F0  2EF2               	goto	u361
  1255     06F1  2EF3               	goto	u360
  1256     06F2                     u361:
  1257     06F2  2F2A               	goto	l807
  1258     06F3                     u360:
  1259     06F3                     l789:
  1260     06F3  01F4               	clrf	___awdiv@counter
  1261     06F4  0AF4               	incf	___awdiv@counter,f
  1262     06F5  2F01               	goto	l795
  1263     06F6                     l791:
  1264     06F6  3001               	movlw	1
  1265     06F7                     u375:
  1266     06F7  1003               	clrc
  1267     06F8  0DF0               	rlf	___awdiv@divisor,f
  1268     06F9  0DF1               	rlf	___awdiv@divisor+1,f
  1269     06FA  3EFF               	addlw	-1
  1270     06FB  1D03               	skipz
  1271     06FC  2EF7               	goto	u375
  1272     06FD                     l793:
  1273     06FD  3001               	movlw	1
  1274     06FE  00FF               	movwf	btemp+1
  1275     06FF  087F               	movf	btemp+1,w
  1276     0700  07F4               	addwf	___awdiv@counter,f
  1277     0701                     l795:
  1278     0701  1FF1               	btfss	___awdiv@divisor+1,7
  1279     0702  2F04               	goto	u381
  1280     0703  2F05               	goto	u380
  1281     0704                     u381:
  1282     0704  2EF6               	goto	l791
  1283     0705                     u380:
  1284     0705                     l797:
  1285     0705  3001               	movlw	1
  1286     0706                     u395:
  1287     0706  1003               	clrc
  1288     0707  0DF6               	rlf	___awdiv@quotient,f
  1289     0708  0DF7               	rlf	___awdiv@quotient+1,f
  1290     0709  3EFF               	addlw	-1
  1291     070A  1D03               	skipz
  1292     070B  2F06               	goto	u395
  1293     070C  0871               	movf	___awdiv@divisor+1,w
  1294     070D  0273               	subwf	___awdiv@dividend+1,w
  1295     070E  1D03               	skipz
  1296     070F  2F12               	goto	u405
  1297     0710  0870               	movf	___awdiv@divisor,w
  1298     0711  0272               	subwf	___awdiv@dividend,w
  1299     0712                     u405:
  1300     0712  1C03               	skipc
  1301     0713  2F15               	goto	u401
  1302     0714  2F16               	goto	u400
  1303     0715                     u401:
  1304     0715  2F1D               	goto	l803
  1305     0716                     u400:
  1306     0716                     l799:
  1307     0716  0870               	movf	___awdiv@divisor,w
  1308     0717  02F2               	subwf	___awdiv@dividend,f
  1309     0718  0871               	movf	___awdiv@divisor+1,w
  1310     0719  1C03               	skipc
  1311     071A  03F3               	decf	___awdiv@dividend+1,f
  1312     071B  02F3               	subwf	___awdiv@dividend+1,f
  1313     071C                     l801:
  1314     071C  1476               	bsf	___awdiv@quotient,0
  1315     071D                     l803:
  1316     071D  3001               	movlw	1
  1317     071E                     u415:
  1318     071E  1003               	clrc
  1319     071F  0CF1               	rrf	___awdiv@divisor+1,f
  1320     0720  0CF0               	rrf	___awdiv@divisor,f
  1321     0721  3EFF               	addlw	-1
  1322     0722  1D03               	skipz
  1323     0723  2F1E               	goto	u415
  1324     0724                     l805:
  1325     0724  3001               	movlw	1
  1326     0725  02F4               	subwf	___awdiv@counter,f
  1327     0726  1D03               	btfss	3,2
  1328     0727  2F29               	goto	u421
  1329     0728  2F2A               	goto	u420
  1330     0729                     u421:
  1331     0729  2F05               	goto	l797
  1332     072A                     u420:
  1333     072A                     l807:
  1334     072A  0875               	movf	___awdiv@sign,w
  1335     072B  1903               	btfsc	3,2
  1336     072C  2F2E               	goto	u431
  1337     072D  2F2F               	goto	u430
  1338     072E                     u431:
  1339     072E  2F34               	goto	l811
  1340     072F                     u430:
  1341     072F                     l809:
  1342     072F  09F6               	comf	___awdiv@quotient,f
  1343     0730  09F7               	comf	___awdiv@quotient+1,f
  1344     0731  0AF6               	incf	___awdiv@quotient,f
  1345     0732  1903               	skipnz
  1346     0733  0AF7               	incf	___awdiv@quotient+1,f
  1347     0734                     l811:
  1348     0734  0877               	movf	___awdiv@quotient+1,w
  1349     0735  00F1               	movwf	?___awdiv+1
  1350     0736  0876               	movf	___awdiv@quotient,w
  1351     0737  00F0               	movwf	?___awdiv
  1352     0738                     l312:
  1353     0738  0008               	return
  1354     0739                     __end_of___awdiv:
  1355                           
  1356                           	psect	text5
  1357     05BA                     __ptext5:	
  1358 ;; *************** function _choptat_Ab *****************
  1359 ;; Defined at:
  1360 ;;		line 24 in file "BT7.c"
  1361 ;; Parameters:    Size  Location     Type
  1362 ;;		None
  1363 ;; Auto vars:     Size  Location     Type
  1364 ;;		None
  1365 ;; Return value:  Size  Location     Type
  1366 ;;                  1    wreg      void 
  1367 ;; Registers used:
  1368 ;;		wreg
  1369 ;; Tracked objects:
  1370 ;;		On entry : 0/0
  1371 ;;		On exit  : 0/0
  1372 ;;		Unchanged: 0/0
  1373 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1374 ;;      Params:         0       0       0       0       0
  1375 ;;      Locals:         0       0       0       0       0
  1376 ;;      Temps:          3       0       0       0       0
  1377 ;;      Totals:         3       0       0       0       0
  1378 ;;Total ram usage:        3 bytes
  1379 ;; Hardware stack levels used: 1
  1380 ;; This function calls:
  1381 ;;		Nothing
  1382 ;; This function is called by:
  1383 ;;		_main
  1384 ;; This function uses a non-reentrant model
  1385 ;;
  1386                           
  1387     05BA                     _choptat_Ab:	
  1388                           ;psect for function _choptat_Ab
  1389                           
  1390     05BA                     l699:	
  1391                           ;incstack = 0
  1392                           ; Regs used in _choptat_Ab: [wreg]
  1393                           
  1394                           
  1395                           ;BT7.c: 26:         PORTC = 0x88;
  1396     05BA  3088               	movlw	136
  1397     05BB  1283               	bcf	3,5	;RP0=0, select bank0
  1398     05BC  1303               	bcf	3,6	;RP1=0, select bank0
  1399     05BD  0087               	movwf	7	;volatile
  1400                           
  1401                           ;BT7.c: 27:         PORTD = 0x83;
  1402     05BE  3083               	movlw	131
  1403     05BF  0088               	movwf	8	;volatile
  1404                           
  1405                           ;BT7.c: 28:         _delay((unsigned long)((2000)*(4000000/4000.0)));
  1406     05C0  300B               	movlw	11
  1407     05C1  00F2               	movwf	??_choptat_Ab+2
  1408     05C2  3026               	movlw	38
  1409     05C3  00F1               	movwf	??_choptat_Ab+1
  1410     05C4  305D               	movlw	93
  1411     05C5  00F0               	movwf	??_choptat_Ab
  1412     05C6                     u757:
  1413     05C6  0BF0               	decfsz	??_choptat_Ab,f
  1414     05C7  2DC6               	goto	u757
  1415     05C8  0BF1               	decfsz	??_choptat_Ab+1,f
  1416     05C9  2DC6               	goto	u757
  1417     05CA  0BF2               	decfsz	??_choptat_Ab+2,f
  1418     05CB  2DC6               	goto	u757
  1419     05CC  2DCD               	nop2
  1420                           
  1421                           ;BT7.c: 29:         PORTC = 0xFF;
  1422     05CD  30FF               	movlw	255
  1423     05CE  1283               	bcf	3,5	;RP0=0, select bank0
  1424     05CF  1303               	bcf	3,6	;RP1=0, select bank0
  1425     05D0  0087               	movwf	7	;volatile
  1426                           
  1427                           ;BT7.c: 30:         PORTD = 0xFF;
  1428     05D1  30FF               	movlw	255
  1429     05D2  0088               	movwf	8	;volatile
  1430                           
  1431                           ;BT7.c: 31:         _delay((unsigned long)((2000)*(4000000/4000.0)));
  1432     05D3  300B               	movlw	11
  1433     05D4  00F2               	movwf	??_choptat_Ab+2
  1434     05D5  3026               	movlw	38
  1435     05D6  00F1               	movwf	??_choptat_Ab+1
  1436     05D7  305D               	movlw	93
  1437     05D8  00F0               	movwf	??_choptat_Ab
  1438     05D9                     u767:
  1439     05D9  0BF0               	decfsz	??_choptat_Ab,f
  1440     05DA  2DD9               	goto	u767
  1441     05DB  0BF1               	decfsz	??_choptat_Ab+1,f
  1442     05DC  2DD9               	goto	u767
  1443     05DD  0BF2               	decfsz	??_choptat_Ab+2,f
  1444     05DE  2DD9               	goto	u767
  1445     05DF  2DE0               	nop2
  1446     05E0                     l41:
  1447     05E0  0008               	return
  1448     05E1                     __end_of_choptat_Ab:
  1449     007E                     btemp	set	126	;btemp
  1450     007E                     wtemp0	set	126
  1451                           
  1452                           	psect	config
  1453                           
  1454                           ;Config register CONFIG1 @ 0x2007
  1455                           ;	Oscillator Selection bits
  1456                           ;	FOSC = HS, HS oscillator: High-speed crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1
      +                          /CLKIN
  1457                           ;	Watchdog Timer Enable bit
  1458                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1459                           ;	Power-up Timer Enable bit
  1460                           ;	PWRTE = OFF, PWRT disabled
  1461                           ;	RE3/MCLR pin function select bit
  1462                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  1463                           ;	Code Protection bit
  1464                           ;	CP = OFF, Program memory code protection is disabled
  1465                           ;	Data Code Protection bit
  1466                           ;	CPD = OFF, Data memory code protection is disabled
  1467                           ;	Brown Out Reset Selection bits
  1468                           ;	BOREN = OFF, BOR disabled
  1469                           ;	Internal External Switchover bit
  1470                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1471                           ;	Fail-Safe Clock Monitor Enabled bit
  1472                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1473                           ;	Low Voltage Programming Enable bit
  1474                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1475                           ;	In-Circuit Debugger Mode bit
  1476                           ;	DEBUG = 0x1, unprogrammed default
  1477     2007                     	org	8199
  1478     2007  20F2               	dw	8434
  1479                           
  1480                           ;Config register CONFIG2 @ 0x2008
  1481                           ;	Brown-out Reset Selection bit
  1482                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1483                           ;	Flash Program Memory Self Write Enable bits
  1484                           ;	WRT = OFF, Write protection off
  1485     2008                     	org	8200
  1486     2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        20
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      2      22
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_dem00_26
    _main->_dem99_00
    _dem99_00->___awdiv
    _dem00_26->___awdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    2680
                                              0 BANK0      2     2      0
                         _choptat_Ab
                           _dem00_26
                           _dem99_00
 ---------------------------------------------------------------------------------
 (1) _dem99_00                                             7     7      0    1340
                                              8 COMMON     6     6      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (1) _dem00_26                                             7     7      0    1340
                                              8 COMMON     6     6      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     600
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     604
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _choptat_Ab                                           3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _choptat_Ab
   _dem00_26
     ___awdiv
     ___awmod
   _dem99_00
     ___awdiv
     ___awmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      2      16       5       27.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      24      12        0.0%
ABS                  0      0      24       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Thu Sep 05 06:58:41 2024

                      pc 0002                       l41 05E0                       l51 0678  
                     l61 07EA                       l46 0629                       l62 07C4  
                     l63 07AD                       l57 079E                       l58 0787  
                     l68 07D3             ___awdiv@sign 0075                       fsr 0004  
                    l312 0738                      l325 06D1                      l801 071C  
                    l811 0734                      l803 071D                      l805 0724  
                    l821 0683                      l901 076F                      l807 072A  
                    l831 0697                      l823 0685                      l815 0679  
                    l911 07A2                      l903 0776                      l809 072F  
                    l841 06B6                      l833 069E                      l825 0689  
                    l817 067A                      l921 07E4                      l913 07B3  
                    l905 077C                      l771 06D2                      l843 06BD  
                    l835 06A2                      l827 068E                      l819 067E  
                    l915 07BE                      l907 078D                      l781 06E2  
                    l773 06D3                      l837 06A6                      l829 0694  
                    l845 06C3                      l861 0606                      l853 05E1  
                    l917 07C8                      l909 0798                      l791 06F6  
                    l783 06E7                      l775 06D7                      l847 06C8  
                    l839 06B0                      l863 060E                      l871 062A  
                    l919 07D9                      l793 06FD                      l785 06EB  
                    l777 06DC                      l849 06CD                      l865 0613  
                    l881 0655                      l873 0630                      l699 05BA  
                    l795 0701                      l787 06ED                      l779 06DE  
                    l867 061F                      l859 05E2                      l883 065D  
                    l891 0739                      l797 0705                      l789 06F3  
                    l869 0623                      l885 0662                      l893 073D  
                    l799 0716                      l887 066E                      l879 0631  
                    l895 0754                      l889 0672                      l897 0755  
                    l899 076B                      _RB0 0030                      _RB1 0031  
                    _RB2 0032                      u400 0716                      u401 0715  
                    u420 072A                      u340 06D7                      u421 0729  
                    u405 0712                      u341 06D6                      u430 072F  
                    u350 06E2                      u510 06C3                      u431 072E  
                    u415 071E                      u351 06E1                      u511 06C2  
                    u360 06F3                      u520 06C8                      u440 067E  
                    u361 06F2                      u521 06C7                      u505 06B7  
                    u441 067D                      u450 0689                      u530 0629  
                    u610 077C                      u451 0688                      u531 0628  
                    u611 077B                      u380 0705                      u460 0694  
                    u540 0678                      u620 078D                      u604 076A  
                    u381 0704                      u461 0693                      u541 0677  
                    u621 078C                      u630 07A2                      u550 0747  
                    u375 06F7                      u631 07A1                      u551 0743  
                    u480 06A6                      u640 07B3                      u560 0751  
                    u481 06A5                      u641 07B2                      u561 074D  
                    u490 06B0                      u650 07C8                      u395 0706  
                    u491 06AF                      u475 0698                      u651 07C7  
                    u707 07B9                      u660 07D9                      u580 075D  
                    u564 074A                      u661 07D8                      u717 07CE  
                    u581 0759                      u590 0767                      u574 0754  
                    u495 06AC                      u727 07DF                      u591 0763  
                    u737 0668                      u594 0760                      u747 0619  
                    u757 05C6                      u677 0782                      u767 05D9  
                    u687 0793                      u697 07A8                      fsr0 0004  
                    indf 0000             ___awmod@sign 0075                     _main 0739  
                   btemp 007E                     start 0000        dem00_26@hangDonVi 007B  
                  ?_main 0070          __end_of___awdiv 0739          __end_of___awmod 06D2  
                  _ANSEL 0188          ___awdiv@divisor 0070          ___awdiv@counter 0074  
                  _PORTC 0007                    _PORTD 0008                    _TRISC 0087  
                  _TRISD 0088                    _WPUB0 04A8                    _WPUB1 04A9  
                  _WPUB2 04AA                    _MaLed 002A                    _nRBPU 040F  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 07EE             __end_of_main 07EE                   ??_main 0034  
       __end_of_dem00_26 062A         __end_of_dem99_00 0679         ___awdiv@dividend 0072  
                 _ANSELH 0189                   _TRISB0 0430                   _TRISB1 0431  
                 _TRISB2 0432                ??___awdiv 0074                ??___awmod 0074  
       ___awdiv@quotient 0076          ___awmod@divisor 0070          ___awmod@counter 0074  
__end_of__initialization 07FC           __pcstackCOMMON 0070             __pidataBANK0 05A6  
       dem99_00@hangChuc 007C               __pmaintext 0739                ?_dem00_26 0070  
              ?_dem99_00 0070               _choptat_Ab 05BA                  ___awdiv 06D2  
             ??_dem00_26 0078                  ___awmod 0679               ??_dem99_00 0078  
                __ptext1 062A                  __ptext2 05E1                  __ptext3 0679  
                __ptext4 06D2                  __ptext5 05BA         ___awmod@dividend 0072  
   end_of_initialization 07FC              ?_choptat_Ab 0070         dem00_26@hangChuc 007C  
    start_initialization 07EE        dem99_00@hangDonVi 007B               init_fetch0 0593  
            __pdataBANK0 0020                dem00_26@i 007D                ___latbits 0002  
          __pcstackBANK0 0034                dem99_00@i 007D                 ?___awdiv 0070  
               ?___awmod 0070             ??_choptat_Ab 0070       __end_of_choptat_Ab 05E1  
               _dem00_26 05E1                 _dem99_00 062A                 init_ram0 0597  
       _MaLed7Seg_nghich 0020  
