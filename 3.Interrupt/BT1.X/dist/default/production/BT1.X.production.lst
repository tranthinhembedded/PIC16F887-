

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Thu Sep 12 08:28:06 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	intentry,global,class=CODE,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2,group=3
    24                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    30                           	psect	text17,local,class=CODE,merge=1,delta=2,group=3
    31                           	psect	text18,local,class=CODE,merge=1,delta=2,group=3
    32                           	psect	text19,local,class=CODE,merge=1,delta=2
    33                           	psect	text20,local,class=CODE,merge=1,delta=2
    34                           	psect	text21,local,class=CODE,merge=1,delta=2
    35                           	psect	text22,local,class=CODE,merge=1,delta=2
    36                           	psect	text23,local,class=CODE,merge=1,delta=2
    37                           	psect	text24,local,class=CODE,merge=1,delta=2
    38                           	psect	text25,local,class=CODE,merge=1,delta=2,group=3
    39                           	psect	text26,local,class=CODE,merge=1,delta=2,group=2
    40                           	psect	text27,local,class=CODE,merge=1,delta=2,group=2
    41                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    42                           	dabs	1,0x7E,2
    43     0000                     
    44                           ; Generated 12/10/2023 GMT
    45                           ; 
    46                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    47                           ; All rights reserved.
    48                           ; 
    49                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    50                           ; 
    51                           ; Redistribution and use in source and binary forms, with or without modification, are
    52                           ; permitted provided that the following conditions are met:
    53                           ; 
    54                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    55                           ;        conditions and the following disclaimer.
    56                           ; 
    57                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    58                           ;        of conditions and the following disclaimer in the documentation and/or other
    59                           ;        materials provided with the distribution. Publication is not required when
    60                           ;        this file is used in an embedded application.
    61                           ; 
    62                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    63                           ;        software without specific prior written permission.
    64                           ; 
    65                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    66                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    67                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    68                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    69                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    70                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    71                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    72                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    73                           ; 
    74                           ; 
    75                           ; Code-generator required, PIC16F887 Definitions
    76                           ; 
    77                           ; SFR Addresses
    78     0000                     	;# 
    79     0001                     	;# 
    80     0002                     	;# 
    81     0003                     	;# 
    82     0004                     	;# 
    83     0005                     	;# 
    84     0006                     	;# 
    85     0007                     	;# 
    86     0008                     	;# 
    87     0009                     	;# 
    88     000A                     	;# 
    89     000B                     	;# 
    90     000C                     	;# 
    91     000D                     	;# 
    92     000E                     	;# 
    93     000E                     	;# 
    94     000F                     	;# 
    95     0010                     	;# 
    96     0011                     	;# 
    97     0012                     	;# 
    98     0013                     	;# 
    99     0014                     	;# 
   100     0015                     	;# 
   101     0015                     	;# 
   102     0016                     	;# 
   103     0017                     	;# 
   104     0018                     	;# 
   105     0019                     	;# 
   106     001A                     	;# 
   107     001B                     	;# 
   108     001B                     	;# 
   109     001C                     	;# 
   110     001D                     	;# 
   111     001E                     	;# 
   112     001F                     	;# 
   113     0081                     	;# 
   114     0085                     	;# 
   115     0086                     	;# 
   116     0087                     	;# 
   117     0088                     	;# 
   118     0089                     	;# 
   119     008C                     	;# 
   120     008D                     	;# 
   121     008E                     	;# 
   122     008F                     	;# 
   123     0090                     	;# 
   124     0091                     	;# 
   125     0092                     	;# 
   126     0093                     	;# 
   127     0093                     	;# 
   128     0093                     	;# 
   129     0094                     	;# 
   130     0095                     	;# 
   131     0096                     	;# 
   132     0097                     	;# 
   133     0098                     	;# 
   134     0099                     	;# 
   135     009A                     	;# 
   136     009B                     	;# 
   137     009C                     	;# 
   138     009D                     	;# 
   139     009E                     	;# 
   140     009F                     	;# 
   141     0105                     	;# 
   142     0107                     	;# 
   143     0108                     	;# 
   144     0109                     	;# 
   145     010C                     	;# 
   146     010C                     	;# 
   147     010D                     	;# 
   148     010E                     	;# 
   149     010F                     	;# 
   150     0185                     	;# 
   151     0187                     	;# 
   152     0188                     	;# 
   153     0189                     	;# 
   154     018C                     	;# 
   155     018D                     	;# 
   156     0000                     	;# 
   157     0001                     	;# 
   158     0002                     	;# 
   159     0003                     	;# 
   160     0004                     	;# 
   161     0005                     	;# 
   162     0006                     	;# 
   163     0007                     	;# 
   164     0008                     	;# 
   165     0009                     	;# 
   166     000A                     	;# 
   167     000B                     	;# 
   168     000C                     	;# 
   169     000D                     	;# 
   170     000E                     	;# 
   171     000E                     	;# 
   172     000F                     	;# 
   173     0010                     	;# 
   174     0011                     	;# 
   175     0012                     	;# 
   176     0013                     	;# 
   177     0014                     	;# 
   178     0015                     	;# 
   179     0015                     	;# 
   180     0016                     	;# 
   181     0017                     	;# 
   182     0018                     	;# 
   183     0019                     	;# 
   184     001A                     	;# 
   185     001B                     	;# 
   186     001B                     	;# 
   187     001C                     	;# 
   188     001D                     	;# 
   189     001E                     	;# 
   190     001F                     	;# 
   191     0081                     	;# 
   192     0085                     	;# 
   193     0086                     	;# 
   194     0087                     	;# 
   195     0088                     	;# 
   196     0089                     	;# 
   197     008C                     	;# 
   198     008D                     	;# 
   199     008E                     	;# 
   200     008F                     	;# 
   201     0090                     	;# 
   202     0091                     	;# 
   203     0092                     	;# 
   204     0093                     	;# 
   205     0093                     	;# 
   206     0093                     	;# 
   207     0094                     	;# 
   208     0095                     	;# 
   209     0096                     	;# 
   210     0097                     	;# 
   211     0098                     	;# 
   212     0099                     	;# 
   213     009A                     	;# 
   214     009B                     	;# 
   215     009C                     	;# 
   216     009D                     	;# 
   217     009E                     	;# 
   218     009F                     	;# 
   219     0105                     	;# 
   220     0107                     	;# 
   221     0108                     	;# 
   222     0109                     	;# 
   223     010C                     	;# 
   224     010C                     	;# 
   225     010D                     	;# 
   226     010E                     	;# 
   227     010F                     	;# 
   228     0185                     	;# 
   229     0187                     	;# 
   230     0188                     	;# 
   231     0189                     	;# 
   232     018C                     	;# 
   233     018D                     	;# 
   234     0000                     	;# 
   235     0001                     	;# 
   236     0002                     	;# 
   237     0003                     	;# 
   238     0004                     	;# 
   239     0005                     	;# 
   240     0006                     	;# 
   241     0007                     	;# 
   242     0008                     	;# 
   243     0009                     	;# 
   244     000A                     	;# 
   245     000B                     	;# 
   246     000C                     	;# 
   247     000D                     	;# 
   248     000E                     	;# 
   249     000E                     	;# 
   250     000F                     	;# 
   251     0010                     	;# 
   252     0011                     	;# 
   253     0012                     	;# 
   254     0013                     	;# 
   255     0014                     	;# 
   256     0015                     	;# 
   257     0015                     	;# 
   258     0016                     	;# 
   259     0017                     	;# 
   260     0018                     	;# 
   261     0019                     	;# 
   262     001A                     	;# 
   263     001B                     	;# 
   264     001B                     	;# 
   265     001C                     	;# 
   266     001D                     	;# 
   267     001E                     	;# 
   268     001F                     	;# 
   269     0081                     	;# 
   270     0085                     	;# 
   271     0086                     	;# 
   272     0087                     	;# 
   273     0088                     	;# 
   274     0089                     	;# 
   275     008C                     	;# 
   276     008D                     	;# 
   277     008E                     	;# 
   278     008F                     	;# 
   279     0090                     	;# 
   280     0091                     	;# 
   281     0092                     	;# 
   282     0093                     	;# 
   283     0093                     	;# 
   284     0093                     	;# 
   285     0094                     	;# 
   286     0095                     	;# 
   287     0096                     	;# 
   288     0097                     	;# 
   289     0098                     	;# 
   290     0099                     	;# 
   291     009A                     	;# 
   292     009B                     	;# 
   293     009C                     	;# 
   294     009D                     	;# 
   295     009E                     	;# 
   296     009F                     	;# 
   297     0105                     	;# 
   298     0107                     	;# 
   299     0108                     	;# 
   300     0109                     	;# 
   301     010C                     	;# 
   302     010C                     	;# 
   303     010D                     	;# 
   304     010E                     	;# 
   305     010F                     	;# 
   306     0185                     	;# 
   307     0187                     	;# 
   308     0188                     	;# 
   309     0189                     	;# 
   310     018C                     	;# 
   311     018D                     	;# 
   312     0044                     _RD4	set	68
   313     0045                     _RD5	set	69
   314     0046                     _RD6	set	70
   315     0047                     _RD7	set	71
   316     0043                     _RD3	set	67
   317     0041                     _RD1	set	65
   318     0042                     _RD2	set	66
   319     005C                     _INTE	set	92
   320     005F                     _GIE	set	95
   321     0059                     _INTF	set	89
   322     0442                     _TRISD2	set	1090
   323     0441                     _TRISD1	set	1089
   324     0443                     _TRISD3	set	1091
   325     0447                     _TRISD7	set	1095
   326     0446                     _TRISD6	set	1094
   327     0445                     _TRISD5	set	1093
   328     0444                     _TRISD4	set	1092
   329     040E                     _INTEDG	set	1038
   330     04A8                     _WPUB0	set	1192
   331     040F                     _nRBPU	set	1039
   332     0430                     _TRISB0	set	1072
   333     0189                     _ANSELH	set	393
   334     0188                     _ANSEL	set	392
   335                           
   336                           	psect	strings
   337     0700                     __pstrings:
   338     0700                     stringtab:
   339     0700                     __stringtab:
   340                           
   341                           ;	String table - string pointers are 1 byte each
   342     0700  1BFF               	btfsc	btemp+1,7
   343     0701  2F0A               	ljmp	stringcode
   344     0702  1383               	bcf	3,7
   345     0703  187F               	btfsc	btemp+1,0
   346     0704  1783               	bsf	3,7
   347     0705  0800               	movf	0,w
   348     0706  0A84               	incf	4,f
   349     0707  1903               	skipnz
   350     0708  0AFF               	incf	btemp+1,f
   351     0709  0008               	return
   352     070A                     stringcode:
   353     070A                     stringdir:
   354     070A  3007               	movlw	high stringdir
   355     070B  008A               	movwf	10
   356     070C  0804               	movf	4,w
   357     070D  0A84               	incf	4,f
   358     070E  0782               	addwf	2,f
   359     070F                     __stringbase:
   360     070F  3400               	retlw	0
   361     0710                     __end_of__stringtab:
   362     0710                     STR_2:
   363     0710  3454               	retlw	84	;'T'
   364     0711  3452               	retlw	82	;'R'
   365     0712  3441               	retlw	65	;'A'
   366     0713  344E               	retlw	78	;'N'
   367     0714  3420               	retlw	32	;' '
   368     0715  3454               	retlw	84	;'T'
   369     0716  3448               	retlw	72	;'H'
   370     0717  3449               	retlw	73	;'I'
   371     0718  344E               	retlw	78	;'N'
   372     0719  3448               	retlw	72	;'H'
   373     071A  3420               	retlw	32	;' '
   374     071B  3464               	retlw	100	;'d'
   375     071C  3465               	retlw	101	;'e'
   376     071D  346D               	retlw	109	;'m'
   377     071E  3400               	retlw	0
   378     071F                     STR_1:
   379     071F  3425               	retlw	37	;'%'
   380     0720  342E               	retlw	46	;'.'
   381     0721  3432               	retlw	50	;'2'
   382     0722  3464               	retlw	100	;'d'
   383     0723  3400               	retlw	0
   384     0724                     STR_3:
   385     0724  3430               	retlw	48	;'0'
   386     0725  3430               	retlw	48	;'0'
   387     0726  3400               	retlw	0
   388                           
   389                           	psect	cinit
   390     0015                     start_initialization:	
   391                           ; #config settings
   392                           
   393     0015                     __initialization:
   394                           
   395                           ; Clear objects allocated to BANK0
   396     0015  1283               	bcf	3,5	;RP0=0, select bank0
   397     0016  1303               	bcf	3,6	;RP1=0, select bank0
   398     0017  01E8               	clrf	__pbssBANK0& (0+127)
   399     0018  01E9               	clrf	(__pbssBANK0+1)& (0+127)
   400     0019  01EA               	clrf	(__pbssBANK0+2)& (0+127)
   401     001A  01EB               	clrf	(__pbssBANK0+3)& (0+127)
   402     001B  01EC               	clrf	(__pbssBANK0+4)& (0+127)
   403     001C  01ED               	clrf	(__pbssBANK0+5)& (0+127)
   404                           
   405                           ; Clear objects allocated to BANK1
   406     001D  1383               	bcf	3,7	;select IRP bank0
   407     001E  30A0               	movlw	low __pbssBANK1
   408     001F  0084               	movwf	4
   409     0020  30C0               	movlw	low (__pbssBANK1+32)
   410     0021  120A  118A  27F8  120A  118A  	fcall	clear_ram0
   411     0026                     end_of_initialization:	
   412                           ;End of C runtime variable initialization code
   413                           
   414     0026                     __end_of__initialization:
   415     0026  0183               	clrf	3
   416     0027  120A  118A  2CE2   	ljmp	_main	;jump to C main() function
   417                           
   418                           	psect	bssBANK0
   419     0068                     __pbssBANK0:
   420     0068                     _width:
   421     0068                     	ds	2
   422     006A                     _prec:
   423     006A                     	ds	2
   424     006C                     _flags:
   425     006C                     	ds	1
   426     006D                     _push_count:
   427     006D                     	ds	1
   428                           
   429                           	psect	bssBANK1
   430     00A0                     __pbssBANK1:
   431     00A0                     _dbuf:
   432     00A0                     	ds	32
   433                           
   434                           	psect	clrtext
   435     07F8                     clear_ram0:	
   436                           ;	Called with FSR containing the base address, and
   437                           ;	W with the last address+1
   438                           
   439     07F8  0064               	clrwdt	;clear the watchdog before getting into this loop
   440     07F9                     clrloop0:
   441     07F9  0180               	clrf	0	;clear RAM location pointed to by FSR
   442     07FA  0A84               	incf	4,f	;increment pointer
   443     07FB  0604               	xorwf	4,w	;XOR with final address
   444     07FC  1903               	btfsc	3,2	;have we reached the end yet?
   445     07FD  3400               	retlw	0	;all done for this memory range, return
   446     07FE  0604               	xorwf	4,w	;XOR again to restore value
   447     07FF  2FF9               	goto	clrloop0	;do the next byte
   448                           
   449                           	psect	cstackBANK1
   450     00C0                     __pcstackBANK1:
   451     00C0                     ??_lcd_busy:
   452     00C0                     ??_lcd_put_nibble:	
   453                           ; 1 bytes @ 0x0
   454                           
   455                           
   456                           ; 1 bytes @ 0x0
   457     00C0                     	ds	1
   458     00C1                     lcd_busy@busy:
   459     00C1                     lcd_put_nibble@b:	
   460                           ; 1 bytes @ 0x1
   461                           
   462                           
   463                           ; 1 bytes @ 0x1
   464     00C1                     	ds	1
   465     00C2                     lcd_put_nibble@temp:
   466                           
   467                           ; 1 bytes @ 0x2
   468     00C2                     	ds	1
   469     00C3                     ?_lcd_put_byte:
   470     00C3                     lcd_put_byte@b:	
   471                           ; 1 bytes @ 0x3
   472                           
   473                           
   474                           ; 1 bytes @ 0x3
   475     00C3                     	ds	1
   476     00C4                     ??_lcd_put_byte:
   477                           
   478                           ; 1 bytes @ 0x4
   479     00C4                     	ds	1
   480     00C5                     lcd_put_byte@rs:
   481                           
   482                           ; 1 bytes @ 0x5
   483     00C5                     	ds	1
   484     00C6                     ?_lcd_gotoxy:
   485     00C6                     ??_lcd_init:	
   486                           ; 1 bytes @ 0x6
   487                           
   488     00C6                     lcd_gotoxy@row:	
   489                           ; 1 bytes @ 0x6
   490                           
   491                           
   492                           ; 1 bytes @ 0x6
   493     00C6                     	ds	1
   494     00C7                     ??_lcd_gotoxy:
   495     00C7                     lcd_gotoxy@col:	
   496                           ; 1 bytes @ 0x7
   497                           
   498                           
   499                           ; 1 bytes @ 0x7
   500     00C7                     	ds	1
   501     00C8                     lcd_gotoxy@address:
   502                           
   503                           ; 1 bytes @ 0x8
   504     00C8                     	ds	1
   505     00C9                     ??_lcd_putc:
   506     00C9                     lcd_putc@c:	
   507                           ; 1 bytes @ 0x9
   508                           
   509                           
   510                           ; 1 bytes @ 0x9
   511     00C9                     	ds	1
   512     00CA                     ?_lcd_puts:
   513     00CA                     lcd_puts@s:	
   514                           ; 1 bytes @ 0xA
   515                           
   516                           
   517                           ; 2 bytes @ 0xA
   518     00CA                     	ds	2
   519     00CC                     ??_lcd_puts:
   520     00CC                     ??_main:	
   521                           ; 1 bytes @ 0xC
   522                           
   523                           
   524                           	psect	cstackCOMMON
   525     0070                     __pcstackCOMMON:	
   526                           ; 1 bytes @ 0xC
   527                           
   528     0070                     ?_lcd_init:
   529     0070                     ?_ISR:	
   530                           ; 1 bytes @ 0x0
   531                           
   532     0070                     ?_main:	
   533                           ; 1 bytes @ 0x0
   534                           
   535     0070                     ?_lcd_busy:	
   536                           ; 1 bytes @ 0x0
   537                           
   538     0070                     ?_lcd_put_nibble:	
   539                           ; 1 bytes @ 0x0
   540                           
   541     0070                     ?_lcd_putc:	
   542                           ; 1 bytes @ 0x0
   543                           
   544     0070                     ?_putch:	
   545                           ; 1 bytes @ 0x0
   546                           
   547     0070                     ?i1_lcd_busy:	
   548                           ; 1 bytes @ 0x0
   549                           
   550     0070                     ??i1_lcd_busy:	
   551                           ; 1 bytes @ 0x0
   552                           
   553     0070                     ?i1_lcd_put_nibble:	
   554                           ; 1 bytes @ 0x0
   555                           
   556     0070                     ??i1_lcd_put_nibble:	
   557                           ; 1 bytes @ 0x0
   558                           
   559     0070                     ?i1_lcd_putc:	
   560                           ; 1 bytes @ 0x0
   561                           
   562     0070                     ?___wmul:	
   563                           ; 1 bytes @ 0x0
   564                           
   565     0070                     ?___awdiv:	
   566                           ; 2 bytes @ 0x0
   567                           
   568     0070                     ?___awmod:	
   569                           ; 2 bytes @ 0x0
   570                           
   571     0070                     ___wmul@multiplier:	
   572                           ; 2 bytes @ 0x0
   573                           
   574     0070                     ___awdiv@divisor:	
   575                           ; 2 bytes @ 0x0
   576                           
   577     0070                     ___awmod@divisor:	
   578                           ; 2 bytes @ 0x0
   579                           
   580                           
   581                           ; 2 bytes @ 0x0
   582     0070                     	ds	1
   583     0071                     i1lcd_busy@busy:
   584     0071                     i1lcd_put_nibble@b:	
   585                           ; 1 bytes @ 0x1
   586                           
   587                           
   588                           ; 1 bytes @ 0x1
   589     0071                     	ds	1
   590     0072                     i1lcd_put_nibble@temp:
   591     0072                     ___wmul@multiplicand:	
   592                           ; 1 bytes @ 0x2
   593                           
   594     0072                     ___awdiv@dividend:	
   595                           ; 2 bytes @ 0x2
   596                           
   597     0072                     ___awmod@dividend:	
   598                           ; 2 bytes @ 0x2
   599                           
   600                           
   601                           ; 2 bytes @ 0x2
   602     0072                     	ds	1
   603     0073                     ?i1_lcd_put_byte:
   604     0073                     i1lcd_put_byte@b:	
   605                           ; 1 bytes @ 0x3
   606                           
   607                           
   608                           ; 1 bytes @ 0x3
   609     0073                     	ds	1
   610     0074                     ??___wmul:
   611     0074                     ??___awdiv:	
   612                           ; 1 bytes @ 0x4
   613                           
   614     0074                     ??___awmod:	
   615                           ; 1 bytes @ 0x4
   616                           
   617     0074                     ??i1_lcd_put_byte:	
   618                           ; 1 bytes @ 0x4
   619                           
   620     0074                     ___awdiv@counter:	
   621                           ; 1 bytes @ 0x4
   622                           
   623     0074                     ___awmod@counter:	
   624                           ; 1 bytes @ 0x4
   625                           
   626     0074                     ___wmul@product:	
   627                           ; 1 bytes @ 0x4
   628                           
   629                           
   630                           ; 2 bytes @ 0x4
   631     0074                     	ds	1
   632     0075                     ___awdiv@sign:
   633     0075                     ___awmod@sign:	
   634                           ; 1 bytes @ 0x5
   635                           
   636     0075                     i1lcd_put_byte@rs:	
   637                           ; 1 bytes @ 0x5
   638                           
   639                           
   640                           ; 1 bytes @ 0x5
   641     0075                     	ds	1
   642     0076                     ?i1_lcd_gotoxy:
   643     0076                     ?_abs:	
   644                           ; 1 bytes @ 0x6
   645                           
   646     0076                     ?_read_prec_or_width:	
   647                           ; 2 bytes @ 0x6
   648                           
   649     0076                     read_prec_or_width@ap:	
   650                           ; 2 bytes @ 0x6
   651                           
   652     0076                     i1lcd_gotoxy@row:	
   653                           ; 1 bytes @ 0x6
   654                           
   655     0076                     ___awdiv@quotient:	
   656                           ; 1 bytes @ 0x6
   657                           
   658     0076                     abs@a:	
   659                           ; 2 bytes @ 0x6
   660                           
   661                           
   662                           ; 2 bytes @ 0x6
   663     0076                     	ds	1
   664     0077                     ??i1_lcd_gotoxy:
   665     0077                     i1lcd_gotoxy@col:	
   666                           ; 1 bytes @ 0x7
   667                           
   668                           
   669                           ; 1 bytes @ 0x7
   670     0077                     	ds	1
   671     0078                     ??_abs:
   672     0078                     ??_read_prec_or_width:	
   673                           ; 1 bytes @ 0x8
   674                           
   675     0078                     read_prec_or_width@c:	
   676                           ; 1 bytes @ 0x8
   677                           
   678     0078                     i1lcd_gotoxy@address:	
   679                           ; 1 bytes @ 0x8
   680                           
   681                           
   682                           ; 1 bytes @ 0x8
   683     0078                     	ds	1
   684     0079                     ??i1_lcd_putc:
   685     0079                     i1lcd_putc@c:	
   686                           ; 1 bytes @ 0x9
   687                           
   688     0079                     read_prec_or_width@n:	
   689                           ; 1 bytes @ 0x9
   690                           
   691                           
   692                           ; 2 bytes @ 0x9
   693     0079                     	ds	1
   694     007A                     ??_putch:
   695     007A                     ?i1_lcd_puts:	
   696                           ; 1 bytes @ 0xA
   697                           
   698     007A                     putch@c:	
   699                           ; 1 bytes @ 0xA
   700                           
   701     007A                     i1lcd_puts@s:	
   702                           ; 1 bytes @ 0xA
   703                           
   704                           
   705                           ; 2 bytes @ 0xA
   706     007A                     	ds	1
   707     007B                     ?_fputc:
   708     007B                     read_prec_or_width@fmt:	
   709                           ; 2 bytes @ 0xB
   710                           
   711     007B                     fputc@c:	
   712                           ; 1 bytes @ 0xB
   713                           
   714                           
   715                           ; 2 bytes @ 0xB
   716     007B                     	ds	1
   717     007C                     ??i1_lcd_puts:
   718                           
   719                           ; 1 bytes @ 0xC
   720     007C                     	ds	1
   721     007D                     fputc@fp:
   722                           
   723                           ; 1 bytes @ 0xD
   724     007D                     	ds	1
   725     007E                     ??_vfprintf:
   726     007E                     ??_dtoa:	
   727                           ; 1 bytes @ 0xE
   728                           
   729                           
   730                           	psect	cstackBANK0
   731     0020                     __pcstackBANK0:	
   732                           ; 1 bytes @ 0xE
   733                           
   734     0020                     ??_fputc:
   735                           
   736                           ; 1 bytes @ 0x0
   737     0020                     	ds	5
   738     0025                     ?_fputs:
   739     0025                     fputs@fp:	
   740                           ; 2 bytes @ 0x5
   741                           
   742                           
   743                           ; 1 bytes @ 0x5
   744     0025                     	ds	1
   745     0026                     ??_fputs:
   746                           
   747                           ; 1 bytes @ 0x6
   748     0026                     	ds	2
   749     0028                     fputs@c:
   750                           
   751                           ; 1 bytes @ 0x8
   752     0028                     	ds	1
   753     0029                     fputs@i:
   754                           
   755                           ; 2 bytes @ 0x9
   756     0029                     	ds	2
   757     002B                     fputs@s:
   758                           
   759                           ; 1 bytes @ 0xB
   760     002B                     	ds	1
   761     002C                     ?_pad:
   762     002C                     pad@buf:	
   763                           ; 1 bytes @ 0xC
   764                           
   765                           
   766                           ; 1 bytes @ 0xC
   767     002C                     	ds	1
   768     002D                     pad@p:
   769                           
   770                           ; 2 bytes @ 0xD
   771     002D                     	ds	2
   772     002F                     ??_pad:
   773                           
   774                           ; 1 bytes @ 0xF
   775     002F                     	ds	1
   776     0030                     pad@i:
   777                           
   778                           ; 2 bytes @ 0x10
   779     0030                     	ds	2
   780     0032                     pad@fp:
   781                           
   782                           ; 1 bytes @ 0x12
   783     0032                     	ds	1
   784     0033                     ?_dtoa:
   785     0033                     dtoa@d:	
   786                           ; 1 bytes @ 0x13
   787                           
   788                           
   789                           ; 2 bytes @ 0x13
   790     0033                     	ds	2
   791     0035                     _dtoa$697:
   792                           
   793                           ; 2 bytes @ 0x15
   794     0035                     	ds	2
   795     0037                     dtoa@fp:
   796                           
   797                           ; 1 bytes @ 0x17
   798     0037                     	ds	1
   799     0038                     dtoa@w:
   800                           
   801                           ; 2 bytes @ 0x18
   802     0038                     	ds	2
   803     003A                     dtoa@p:
   804                           
   805                           ; 2 bytes @ 0x1A
   806     003A                     	ds	2
   807     003C                     dtoa@s:
   808                           
   809                           ; 1 bytes @ 0x1C
   810     003C                     	ds	1
   811     003D                     dtoa@i:
   812                           
   813                           ; 2 bytes @ 0x1D
   814     003D                     	ds	2
   815     003F                     ?_vfpfcnvrt:
   816     003F                     vfpfcnvrt@fmt:	
   817                           ; 1 bytes @ 0x1F
   818                           
   819                           
   820                           ; 1 bytes @ 0x1F
   821     003F                     	ds	1
   822     0040                     vfpfcnvrt@ap:
   823                           
   824                           ; 1 bytes @ 0x20
   825     0040                     	ds	1
   826     0041                     ??_vfpfcnvrt:
   827                           
   828                           ; 1 bytes @ 0x21
   829     0041                     	ds	2
   830     0043                     vfpfcnvrt@convarg:
   831                           
   832                           ; 4 bytes @ 0x23
   833     0043                     	ds	4
   834     0047                     vfpfcnvrt@fp:
   835                           
   836                           ; 1 bytes @ 0x27
   837     0047                     	ds	1
   838     0048                     vfpfcnvrt@cp:
   839                           
   840                           ; 1 bytes @ 0x28
   841     0048                     	ds	1
   842     0049                     ?_vfprintf:
   843     0049                     vfprintf@fmt:	
   844                           ; 2 bytes @ 0x29
   845                           
   846                           
   847                           ; 1 bytes @ 0x29
   848     0049                     	ds	1
   849     004A                     vfprintf@ap:
   850                           
   851                           ; 1 bytes @ 0x2A
   852     004A                     	ds	1
   853     004B                     vfprintf@fp:
   854                           
   855                           ; 1 bytes @ 0x2B
   856     004B                     	ds	1
   857     004C                     vfprintf@cfmt:
   858                           
   859                           ; 1 bytes @ 0x2C
   860     004C                     	ds	1
   861     004D                     ?_sprintf:
   862     004D                     sprintf@fmt:	
   863                           ; 2 bytes @ 0x2D
   864                           
   865                           
   866                           ; 1 bytes @ 0x2D
   867     004D                     	ds	3
   868     0050                     ??_sprintf:
   869                           
   870                           ; 1 bytes @ 0x30
   871     0050                     	ds	1
   872     0051                     sprintf@ap:
   873                           
   874                           ; 1 bytes @ 0x31
   875     0051                     	ds	1
   876     0052                     sprintf@s:
   877                           
   878                           ; 1 bytes @ 0x32
   879     0052                     	ds	1
   880     0053                     sprintf@f:
   881                           
   882                           ; 11 bytes @ 0x33
   883     0053                     	ds	11
   884     005E                     ??_ISR:
   885                           
   886                           ; 1 bytes @ 0x3E
   887     005E                     	ds	6
   888     0064                     ISR@buffer:
   889                           
   890                           ; 4 bytes @ 0x44
   891     0064                     	ds	4
   892                           
   893                           	psect	maintext
   894     04E2                     __pmaintext:	
   895 ;;
   896 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   897 ;;
   898 ;; *************** function _main *****************
   899 ;; Defined at:
   900 ;;		line 42 in file "BT1.c"
   901 ;; Parameters:    Size  Location     Type
   902 ;;		None
   903 ;; Auto vars:     Size  Location     Type
   904 ;;		None
   905 ;; Return value:  Size  Location     Type
   906 ;;                  1    wreg      void 
   907 ;; Registers used:
   908 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   909 ;; Tracked objects:
   910 ;;		On entry : B00/0
   911 ;;		On exit  : 0/0
   912 ;;		Unchanged: 0/0
   913 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   914 ;;      Params:         0       0       0       0       0
   915 ;;      Locals:         0       0       0       0       0
   916 ;;      Temps:          0       0       0       0       0
   917 ;;      Totals:         0       0       0       0       0
   918 ;;Total ram usage:        0 bytes
   919 ;; Hardware stack levels required when called: 18
   920 ;; This function calls:
   921 ;;		_lcd_gotoxy
   922 ;;		_lcd_init
   923 ;;		_lcd_puts
   924 ;; This function is called by:
   925 ;;		Startup code after reset
   926 ;; This function uses a non-reentrant model
   927 ;;
   928                           
   929     04E2                     _main:	
   930                           ;psect for function _main
   931                           
   932     04E2                     l1904:	
   933                           ;incstack = 0
   934 ;; hardware stack exceeded
   935                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   936                           
   937                           
   938                           ;BT1.c: 44:     ANSEL = ANSELH = 0x00;
   939     04E2  1683               	bsf	3,5	;RP0=1, select bank3
   940     04E3  1703               	bsf	3,6	;RP1=1, select bank3
   941     04E4  0189               	clrf	9	;volatile
   942     04E5  0188               	clrf	8	;volatile
   943     04E6                     l1906:
   944                           
   945                           ;BT1.c: 46:     TRISB0 = 1;
   946     04E6  1683               	bsf	3,5	;RP0=1, select bank1
   947     04E7  1303               	bcf	3,6	;RP1=0, select bank1
   948     04E8  1406               	bsf	6,0	;volatile
   949     04E9                     l1908:
   950                           
   951                           ;BT1.c: 47:     nRBPU = 0;
   952     04E9  1381               	bcf	1,7	;volatile
   953     04EA                     l1910:
   954                           
   955                           ;BT1.c: 48:     WPUB0 = 1;
   956     04EA  1415               	bsf	21,0	;volatile
   957     04EB                     l1912:
   958                           
   959                           ;BT1.c: 50:     INTF = 0;
   960     04EB  108B               	bcf	11,1	;volatile
   961     04EC                     l1914:
   962                           
   963                           ;BT1.c: 51:     GIE = 1;
   964     04EC  178B               	bsf	11,7	;volatile
   965     04ED                     l1916:
   966                           
   967                           ;BT1.c: 52:     INTE = 1;
   968     04ED  160B               	bsf	11,4	;volatile
   969     04EE                     l1918:
   970                           
   971                           ;BT1.c: 53:     INTEDG = 1;
   972     04EE  1701               	bsf	1,6	;volatile
   973                           
   974                           ;BT1.c: 55:     push_count = 0;
   975     04EF  1283               	bcf	3,5	;RP0=0, select bank0
   976     04F0  1303               	bcf	3,6	;RP1=0, select bank0
   977     04F1  01ED               	clrf	_push_count
   978     04F2                     l1920:
   979                           
   980                           ;BT1.c: 56:     lcd_init();
   981     04F2  120A  118A  20F2  120A  118A  	fcall	_lcd_init
   982     04F7                     l1922:
   983                           
   984                           ;BT1.c: 57:     lcd_gotoxy(0, 0);
   985     04F7  1683               	bsf	3,5	;RP0=1, select bank1
   986     04F8  1303               	bcf	3,6	;RP1=0, select bank1
   987     04F9  01C6               	clrf	lcd_gotoxy@row^(0+128)
   988     04FA  3000               	movlw	0
   989     04FB  120A  118A  2772  120A  118A  	fcall	_lcd_gotoxy
   990     0500                     l1924:
   991                           
   992                           ;BT1.c: 58:     lcd_puts("TRAN THINH dem");
   993     0500  3001               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   994     0501  1683               	bsf	3,5	;RP0=1, select bank1
   995     0502  1303               	bcf	3,6	;RP1=0, select bank1
   996     0503  00CA               	movwf	lcd_puts@s^(0+128)
   997     0504  3080               	movlw	128
   998     0505  00CB               	movwf	(lcd_puts@s+1)^(0+128)
   999     0506  120A  118A  2658  120A  118A  	fcall	_lcd_puts
  1000     050B                     l1926:
  1001                           
  1002                           ;BT1.c: 59:     lcd_gotoxy(8, 1);
  1003     050B  1683               	bsf	3,5	;RP0=1, select bank1
  1004     050C  1303               	bcf	3,6	;RP1=0, select bank1
  1005     050D  01C6               	clrf	lcd_gotoxy@row^(0+128)
  1006     050E  0AC6               	incf	lcd_gotoxy@row^(0+128),f
  1007     050F  3008               	movlw	8
  1008     0510  120A  118A  2772  120A  118A  	fcall	_lcd_gotoxy
  1009     0515                     l1928:
  1010                           
  1011                           ;BT1.c: 60:     lcd_puts("00");
  1012     0515  3015               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1013     0516  1683               	bsf	3,5	;RP0=1, select bank1
  1014     0517  1303               	bcf	3,6	;RP1=0, select bank1
  1015     0518  00CA               	movwf	lcd_puts@s^(0+128)
  1016     0519  3080               	movlw	128
  1017     051A  00CB               	movwf	(lcd_puts@s+1)^(0+128)
  1018     051B  120A  118A  2658  120A  118A  	fcall	_lcd_puts
  1019     0520                     l41:	
  1020                           ;BT1.c: 61:     while(1);
  1021                           
  1022     0520                     l42:
  1023     0520  2D20               	goto	l41
  1024     0521  120A  118A  2812   	ljmp	start
  1025     0524                     __end_of_main:
  1026                           
  1027                           	psect	text1
  1028     0658                     __ptext1:	
  1029 ;; *************** function _lcd_puts *****************
  1030 ;; Defined at:
  1031 ;;		line 224 in file "lcd.c"
  1032 ;; Parameters:    Size  Location     Type
  1033 ;;  s               2   10[BANK1 ] PTR const unsigned char 
  1034 ;;		 -> STR_3(3), STR_2(15), ISR@buffer(4), 
  1035 ;; Auto vars:     Size  Location     Type
  1036 ;;		None
  1037 ;; Return value:  Size  Location     Type
  1038 ;;                  1    wreg      void 
  1039 ;; Registers used:
  1040 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1041 ;; Tracked objects:
  1042 ;;		On entry : 0/0
  1043 ;;		On exit  : 0/0
  1044 ;;		Unchanged: 0/0
  1045 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1046 ;;      Params:         0       0       2       0       0
  1047 ;;      Locals:         0       0       0       0       0
  1048 ;;      Temps:          0       0       0       0       0
  1049 ;;      Totals:         0       0       2       0       0
  1050 ;;Total ram usage:        2 bytes
  1051 ;; Hardware stack levels used: 1
  1052 ;; Hardware stack levels required when called: 17
  1053 ;; This function calls:
  1054 ;;		_lcd_putc
  1055 ;; This function is called by:
  1056 ;;		_main
  1057 ;; This function uses a non-reentrant model
  1058 ;;
  1059                           
  1060     0658                     _lcd_puts:	
  1061                           ;psect for function _lcd_puts
  1062                           
  1063     0658                     l1830:	
  1064                           ;incstack = 0
  1065 ;; hardware stack exceeded
  1066                           ; Regs used in _lcd_puts: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1067                           
  1068                           
  1069                           ;lcd.c: 224: void lcd_puts(const char* s);lcd.c: 225: {;lcd.c: 229:  while(*s)
  1070     0658  2E77               	goto	l1836
  1071     0659                     l1832:
  1072                           
  1073                           ;lcd.c: 230:   {;lcd.c: 231:   lcd_putc(*s++);
  1074     0659  1683               	bsf	3,5	;RP0=1, select bank1
  1075     065A  1303               	bcf	3,6	;RP1=0, select bank1
  1076     065B  084B               	movf	(lcd_puts@s+1)^(0+128),w
  1077     065C  1283               	bcf	3,5	;RP0=0, select bank0
  1078     065D  1303               	bcf	3,6	;RP1=0, select bank0
  1079     065E  00FF               	movwf	btemp+1
  1080     065F  1683               	bsf	3,5	;RP0=1, select bank1
  1081     0660  1303               	bcf	3,6	;RP1=0, select bank1
  1082     0661  084A               	movf	lcd_puts@s^(0+128),w
  1083     0662  0084               	movwf	4
  1084     0663  1283               	bcf	3,5	;RP0=0, select bank0
  1085     0664  1303               	bcf	3,6	;RP1=0, select bank0
  1086     0665  120A  118A  2700  120A  118A  	fcall	stringtab
  1087     066A  120A  118A  23AE  120A  118A  	fcall	_lcd_putc
  1088     066F                     l1834:
  1089     066F  3001               	movlw	1
  1090     0670  1683               	bsf	3,5	;RP0=1, select bank1
  1091     0671  1303               	bcf	3,6	;RP1=0, select bank1
  1092     0672  07CA               	addwf	lcd_puts@s^(0+128),f
  1093     0673  1803               	skipnc
  1094     0674  0ACB               	incf	(lcd_puts@s+1)^(0+128),f
  1095     0675  3000               	movlw	0
  1096     0676  07CB               	addwf	(lcd_puts@s+1)^(0+128),f
  1097     0677                     l1836:
  1098                           
  1099                           ;lcd.c: 229:  while(*s)
  1100     0677  1683               	bsf	3,5	;RP0=1, select bank1
  1101     0678  1303               	bcf	3,6	;RP1=0, select bank1
  1102     0679  084B               	movf	(lcd_puts@s+1)^(0+128),w
  1103     067A  1283               	bcf	3,5	;RP0=0, select bank0
  1104     067B  1303               	bcf	3,6	;RP1=0, select bank0
  1105     067C  00FF               	movwf	btemp+1
  1106     067D  1683               	bsf	3,5	;RP0=1, select bank1
  1107     067E  1303               	bcf	3,6	;RP1=0, select bank1
  1108     067F  084A               	movf	lcd_puts@s^(0+128),w
  1109     0680  0084               	movwf	4
  1110     0681  1283               	bcf	3,5	;RP0=0, select bank0
  1111     0682  1303               	bcf	3,6	;RP1=0, select bank0
  1112     0683  120A  118A  2700  120A  118A  	fcall	stringtab
  1113     0688  3A00               	xorlw	0
  1114     0689  1D03               	skipz
  1115     068A  2E8C               	goto	u1751
  1116     068B  2E8D               	goto	u1750
  1117     068C                     u1751:
  1118     068C  2E59               	goto	l1832
  1119     068D                     u1750:
  1120     068D                     l122:
  1121     068D  0008               	return
  1122     068E                     __end_of_lcd_puts:
  1123                           
  1124                           	psect	text2
  1125     03AE                     __ptext2:	
  1126 ;; *************** function _lcd_putc *****************
  1127 ;; Defined at:
  1128 ;;		line 190 in file "lcd.c"
  1129 ;; Parameters:    Size  Location     Type
  1130 ;;  c               1    wreg     unsigned char 
  1131 ;; Auto vars:     Size  Location     Type
  1132 ;;  c               1    9[BANK1 ] unsigned char 
  1133 ;; Return value:  Size  Location     Type
  1134 ;;                  1    wreg      void 
  1135 ;; Registers used:
  1136 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1137 ;; Tracked objects:
  1138 ;;		On entry : 0/0
  1139 ;;		On exit  : 0/0
  1140 ;;		Unchanged: 0/0
  1141 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1142 ;;      Params:         0       0       0       0       0
  1143 ;;      Locals:         0       0       1       0       0
  1144 ;;      Temps:          0       0       0       0       0
  1145 ;;      Totals:         0       0       1       0       0
  1146 ;;Total ram usage:        1 bytes
  1147 ;; Hardware stack levels used: 1
  1148 ;; Hardware stack levels required when called: 16
  1149 ;; This function calls:
  1150 ;;		_lcd_busy
  1151 ;;		_lcd_gotoxy
  1152 ;;		_lcd_put_byte
  1153 ;; This function is called by:
  1154 ;;		_lcd_puts
  1155 ;;		_lcd_String_Delay
  1156 ;; This function uses a non-reentrant model
  1157 ;;
  1158                           
  1159     03AE                     _lcd_putc:	
  1160                           ;psect for function _lcd_putc
  1161                           
  1162                           
  1163                           ;incstack = 0
  1164 ;; hardware stack exceeded
  1165                           ; Regs used in _lcd_putc: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1166                           ;lcd_putc@c stored from wreg
  1167     03AE  1683               	bsf	3,5	;RP0=1, select bank1
  1168     03AF  1303               	bcf	3,6	;RP1=0, select bank1
  1169     03B0  00C9               	movwf	lcd_putc@c^(0+128)
  1170     03B1                     l1790:
  1171                           
  1172                           ;lcd.c: 190: void lcd_putc(char c);lcd.c: 191: {;lcd.c: 195:  switch(c)
  1173     03B1  2BF4               	goto	l1806
  1174     03B2                     l1792:
  1175                           
  1176                           ;lcd.c: 198:    lcd_put_byte(0,1);
  1177     03B2  01C3               	clrf	lcd_put_byte@b^(0+128)
  1178     03B3  0AC3               	incf	lcd_put_byte@b^(0+128),f
  1179     03B4  3000               	movlw	0
  1180     03B5  120A  118A  2566  120A  118A  	fcall	_lcd_put_byte
  1181     03BA                     l1794:	
  1182                           ;lcd.c: 199:    while(lcd_busy());
  1183                           
  1184     03BA  120A  118A  25A7  120A  118A  	fcall	_lcd_busy
  1185     03BF  3A00               	xorlw	0
  1186     03C0  1D03               	skipz
  1187     03C1  2BC3               	goto	u1711
  1188     03C2  2BC4               	goto	u1710
  1189     03C3                     u1711:
  1190     03C3  2BBA               	goto	l1794
  1191     03C4                     u1710:
  1192     03C4  2BFF               	goto	l116
  1193     03C5                     l1796:
  1194                           
  1195                           ;lcd.c: 202:    lcd_gotoxy(0,1);
  1196     03C5  01C6               	clrf	lcd_gotoxy@row^(0+128)
  1197     03C6  0AC6               	incf	lcd_gotoxy@row^(0+128),f
  1198     03C7  3000               	movlw	0
  1199     03C8  120A  118A  2772  120A  118A  	fcall	_lcd_gotoxy
  1200                           
  1201                           ;lcd.c: 203:    break;
  1202     03CD  2BFF               	goto	l116
  1203     03CE                     l1798:
  1204                           
  1205                           ;lcd.c: 205:    lcd_put_byte(0,0x10);
  1206     03CE  3010               	movlw	16
  1207     03CF  00C3               	movwf	lcd_put_byte@b^(0+128)
  1208     03D0  3000               	movlw	0
  1209     03D1  120A  118A  2566  120A  118A  	fcall	_lcd_put_byte
  1210     03D6                     l1800:	
  1211                           ;lcd.c: 206:    while(lcd_busy());
  1212                           
  1213     03D6  120A  118A  25A7  120A  118A  	fcall	_lcd_busy
  1214     03DB  3A00               	xorlw	0
  1215     03DC  1D03               	skipz
  1216     03DD  2BDF               	goto	u1721
  1217     03DE  2BE0               	goto	u1720
  1218     03DF                     u1721:
  1219     03DF  2BD6               	goto	l1800
  1220     03E0                     u1720:
  1221     03E0  2BFF               	goto	l116
  1222     03E1                     l1802:
  1223                           
  1224                           ;lcd.c: 210:     {;lcd.c: 211:     lcd_put_byte(1,c);
  1225     03E1  0849               	movf	lcd_putc@c^(0+128),w
  1226     03E2  00C3               	movwf	lcd_put_byte@b^(0+128)
  1227     03E3  3001               	movlw	1
  1228     03E4  120A  118A  2566  120A  118A  	fcall	_lcd_put_byte
  1229     03E9                     l1804:	
  1230                           ;lcd.c: 212:     while(lcd_busy());
  1231                           
  1232     03E9  120A  118A  25A7  120A  118A  	fcall	_lcd_busy
  1233     03EE  3A00               	xorlw	0
  1234     03EF  1D03               	skipz
  1235     03F0  2BF2               	goto	u1731
  1236     03F1  2BF3               	goto	u1730
  1237     03F2                     u1731:
  1238     03F2  2BE9               	goto	l1804
  1239     03F3                     u1730:
  1240     03F3  2BFF               	goto	l116
  1241     03F4                     l1806:
  1242     03F4  0849               	movf	lcd_putc@c^(0+128),w
  1243                           
  1244                           ; Switch size 1, requested type "simple"
  1245                           ; Number of cases is 3, Range of values is 8 to 12
  1246                           ; switch strategies available:
  1247                           ; Name         Instructions Cycles
  1248                           ; simple_byte           10     6 (average)
  1249                           ; direct_byte           26    11 (fixed)
  1250                           ; jumptable            263     9 (fixed)
  1251                           ;	Chosen strategy is simple_byte
  1252     03F5  3A08               	xorlw	8	; case 8
  1253     03F6  1903               	skipnz
  1254     03F7  2BCE               	goto	l1798
  1255     03F8  3A02               	xorlw	2	; case 10
  1256     03F9  1903               	skipnz
  1257     03FA  2BC5               	goto	l1796
  1258     03FB  3A06               	xorlw	6	; case 12
  1259     03FC  1903               	skipnz
  1260     03FD  2BB2               	goto	l1792
  1261     03FE  2BE1               	goto	l1802
  1262     03FF                     l116:
  1263     03FF  0008               	return
  1264     0400                     __end_of_lcd_putc:
  1265                           
  1266                           	psect	text3
  1267     0772                     __ptext3:	
  1268 ;; *************** function _lcd_gotoxy *****************
  1269 ;; Defined at:
  1270 ;;		line 167 in file "lcd.c"
  1271 ;; Parameters:    Size  Location     Type
  1272 ;;  col             1    wreg     unsigned char 
  1273 ;;  row             1    6[BANK1 ] unsigned char 
  1274 ;; Auto vars:     Size  Location     Type
  1275 ;;  col             1    7[BANK1 ] unsigned char 
  1276 ;;  address         1    8[BANK1 ] unsigned char 
  1277 ;; Return value:  Size  Location     Type
  1278 ;;                  1    wreg      void 
  1279 ;; Registers used:
  1280 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1281 ;; Tracked objects:
  1282 ;;		On entry : 0/0
  1283 ;;		On exit  : 0/0
  1284 ;;		Unchanged: 0/0
  1285 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1286 ;;      Params:         0       0       1       0       0
  1287 ;;      Locals:         0       0       2       0       0
  1288 ;;      Temps:          0       0       0       0       0
  1289 ;;      Totals:         0       0       3       0       0
  1290 ;;Total ram usage:        3 bytes
  1291 ;; Hardware stack levels used: 1
  1292 ;; Hardware stack levels required when called: 15
  1293 ;; This function calls:
  1294 ;;		_lcd_busy
  1295 ;;		_lcd_put_byte
  1296 ;; This function is called by:
  1297 ;;		_main
  1298 ;;		_lcd_putc
  1299 ;; This function uses a non-reentrant model
  1300 ;;
  1301                           
  1302     0772                     _lcd_gotoxy:	
  1303                           ;psect for function _lcd_gotoxy
  1304                           
  1305                           
  1306                           ;incstack = 0
  1307 ;; hardware stack exceeded
  1308                           ; Regs used in _lcd_gotoxy: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1309                           ;lcd_gotoxy@col stored from wreg
  1310     0772  1683               	bsf	3,5	;RP0=1, select bank1
  1311     0773  1303               	bcf	3,6	;RP1=0, select bank1
  1312     0774  00C7               	movwf	lcd_gotoxy@col^(0+128)
  1313     0775                     l1740:
  1314                           
  1315                           ;lcd.c: 167: void lcd_gotoxy(unsigned char col, unsigned char row);lcd.c: 168: {;lcd.c: 
      +                          170:  unsigned char address;;lcd.c: 173:  if(row!=0)
  1316     0775  0846               	movf	lcd_gotoxy@row^(0+128),w
  1317     0776  1903               	btfsc	3,2
  1318     0777  2F79               	goto	u1651
  1319     0778  2F7A               	goto	u1650
  1320     0779                     u1651:
  1321     0779  2F7D               	goto	l1744
  1322     077A                     u1650:
  1323     077A                     l1742:
  1324                           
  1325                           ;lcd.c: 174:   address=0x40;
  1326     077A  3040               	movlw	64
  1327     077B  00C8               	movwf	lcd_gotoxy@address^(0+128)
  1328     077C  2F7E               	goto	l1746
  1329     077D                     l1744:
  1330                           
  1331                           ;lcd.c: 176:   address=0;
  1332     077D  01C8               	clrf	lcd_gotoxy@address^(0+128)
  1333     077E                     l1746:
  1334                           
  1335                           ;lcd.c: 178:  address += col;
  1336     077E  0847               	movf	lcd_gotoxy@col^(0+128),w
  1337     077F  00FF               	movwf	btemp+1
  1338     0780  087F               	movf	btemp+1,w
  1339     0781  07C8               	addwf	lcd_gotoxy@address^(0+128),f
  1340     0782                     l1748:
  1341                           
  1342                           ;lcd.c: 180:  lcd_put_byte(0,0x80|address);
  1343     0782  0848               	movf	lcd_gotoxy@address^(0+128),w
  1344     0783  3880               	iorlw	128
  1345     0784  00C3               	movwf	lcd_put_byte@b^(0+128)
  1346     0785  3000               	movlw	0
  1347     0786  120A  118A  2566  120A  118A  	fcall	_lcd_put_byte
  1348     078B                     l1750:	
  1349                           ;lcd.c: 181:  while(lcd_busy());
  1350                           
  1351     078B  120A  118A  25A7  120A  118A  	fcall	_lcd_busy
  1352     0790  3A00               	xorlw	0
  1353     0791  1D03               	skipz
  1354     0792  2F94               	goto	u1661
  1355     0793  2F95               	goto	u1660
  1356     0794                     u1661:
  1357     0794  2F8B               	goto	l1750
  1358     0795                     u1660:
  1359     0795                     l98:
  1360     0795  0008               	return
  1361     0796                     __end_of_lcd_gotoxy:
  1362                           
  1363                           	psect	text4
  1364     00F2                     __ptext4:	
  1365 ;; *************** function _lcd_init *****************
  1366 ;; Defined at:
  1367 ;;		line 241 in file "lcd.c"
  1368 ;; Parameters:    Size  Location     Type
  1369 ;;		None
  1370 ;; Auto vars:     Size  Location     Type
  1371 ;;  i               1    0        unsigned char 
  1372 ;; Return value:  Size  Location     Type
  1373 ;;                  1    wreg      void 
  1374 ;; Registers used:
  1375 ;;		wreg, status,2, status,0, pclath, cstack
  1376 ;; Tracked objects:
  1377 ;;		On entry : 0/0
  1378 ;;		On exit  : 0/0
  1379 ;;		Unchanged: 0/0
  1380 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1381 ;;      Params:         0       0       0       0       0
  1382 ;;      Locals:         0       0       0       0       0
  1383 ;;      Temps:          0       0       2       0       0
  1384 ;;      Totals:         0       0       2       0       0
  1385 ;;Total ram usage:        2 bytes
  1386 ;; Hardware stack levels used: 1
  1387 ;; Hardware stack levels required when called: 15
  1388 ;; This function calls:
  1389 ;;		_lcd_busy
  1390 ;;		_lcd_put_byte
  1391 ;;		_lcd_put_nibble
  1392 ;; This function is called by:
  1393 ;;		_main
  1394 ;; This function uses a non-reentrant model
  1395 ;;
  1396                           
  1397     00F2                     _lcd_init:	
  1398                           ;psect for function _lcd_init
  1399                           
  1400     00F2                     l1838:	
  1401                           ;incstack = 0
  1402 ;; hardware stack exceeded
  1403                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  1404                           
  1405                           
  1406                           ;lcd.c: 244: unsigned char i;;lcd.c: 247:  TRISD3 = 0;
  1407     00F2  1683               	bsf	3,5	;RP0=1, select bank1
  1408     00F3  1303               	bcf	3,6	;RP1=0, select bank1
  1409     00F4  1188               	bcf	8,3	;volatile
  1410                           
  1411                           ;lcd.c: 248:  TRISD1 = 0;
  1412     00F5  1088               	bcf	8,1	;volatile
  1413                           
  1414                           ;lcd.c: 249:  TRISD2 = 0;
  1415     00F6  1108               	bcf	8,2	;volatile
  1416                           
  1417                           ;lcd.c: 250:  TRISD4 = 0;
  1418     00F7  1208               	bcf	8,4	;volatile
  1419                           
  1420                           ;lcd.c: 251:  TRISD5 = 0;
  1421     00F8  1288               	bcf	8,5	;volatile
  1422                           
  1423                           ;lcd.c: 252:  TRISD6 = 0;
  1424     00F9  1308               	bcf	8,6	;volatile
  1425                           
  1426                           ;lcd.c: 253:  TRISD7 = 0;
  1427     00FA  1388               	bcf	8,7	;volatile
  1428     00FB                     l1840:
  1429                           
  1430                           ;lcd.c: 255:  _delay((unsigned long)((15)*(4000000/4000.0)));
  1431     00FB  3014               	movlw	20
  1432     00FC  1683               	bsf	3,5	;RP0=1, select bank1
  1433     00FD  1303               	bcf	3,6	;RP1=0, select bank1
  1434     00FE  00C7               	movwf	(??_lcd_init^(0+128)+1)
  1435     00FF  3079               	movlw	121
  1436     0100  00C6               	movwf	??_lcd_init^(0+128)
  1437     0101                     u1867:
  1438     0101  0BC6               	decfsz	??_lcd_init^(0+128),f
  1439     0102  2901               	goto	u1867
  1440     0103  0BC7               	decfsz	(??_lcd_init^(0+128)+1),f
  1441     0104  2901               	goto	u1867
  1442     0105                     l1842:
  1443                           
  1444                           ;lcd.c: 257:  RD1 = 0;
  1445     0105  1283               	bcf	3,5	;RP0=0, select bank0
  1446     0106  1303               	bcf	3,6	;RP1=0, select bank0
  1447     0107  1088               	bcf	8,1	;volatile
  1448     0108                     l1844:
  1449                           
  1450                           ;lcd.c: 258:  RD2 = 0;
  1451     0108  1108               	bcf	8,2	;volatile
  1452     0109                     l1846:
  1453                           
  1454                           ;lcd.c: 259:  RD3 = 0;
  1455     0109  1188               	bcf	8,3	;volatile
  1456     010A                     l1848:
  1457                           
  1458                           ;lcd.c: 261:  lcd_put_nibble(3);
  1459     010A  3003               	movlw	3
  1460     010B  120A  118A  2450  120A  118A  	fcall	_lcd_put_nibble
  1461     0110                     l1850:
  1462                           
  1463                           ;lcd.c: 262:  _delay((unsigned long)((10)*(4000000/4000.0)));
  1464     0110  300D               	movlw	13
  1465     0111  1683               	bsf	3,5	;RP0=1, select bank1
  1466     0112  1303               	bcf	3,6	;RP1=0, select bank1
  1467     0113  00C7               	movwf	(??_lcd_init^(0+128)+1)
  1468     0114  30FB               	movlw	251
  1469     0115  00C6               	movwf	??_lcd_init^(0+128)
  1470     0116                     u1877:
  1471     0116  0BC6               	decfsz	??_lcd_init^(0+128),f
  1472     0117  2916               	goto	u1877
  1473     0118  0BC7               	decfsz	(??_lcd_init^(0+128)+1),f
  1474     0119  2916               	goto	u1877
  1475                           
  1476                           ;lcd.c: 263:  lcd_put_nibble(3);
  1477     011A  3003               	movlw	3
  1478     011B  120A  118A  2450  120A  118A  	fcall	_lcd_put_nibble
  1479     0120                     l1852:
  1480                           
  1481                           ;lcd.c: 264:  _delay((unsigned long)((10)*(4000000/4000.0)));
  1482     0120  300D               	movlw	13
  1483     0121  1683               	bsf	3,5	;RP0=1, select bank1
  1484     0122  1303               	bcf	3,6	;RP1=0, select bank1
  1485     0123  00C7               	movwf	(??_lcd_init^(0+128)+1)
  1486     0124  30FB               	movlw	251
  1487     0125  00C6               	movwf	??_lcd_init^(0+128)
  1488     0126                     u1887:
  1489     0126  0BC6               	decfsz	??_lcd_init^(0+128),f
  1490     0127  2926               	goto	u1887
  1491     0128  0BC7               	decfsz	(??_lcd_init^(0+128)+1),f
  1492     0129  2926               	goto	u1887
  1493     012A                     l1854:
  1494                           
  1495                           ;lcd.c: 265:  lcd_put_nibble(3);
  1496     012A  3003               	movlw	3
  1497     012B  120A  118A  2450  120A  118A  	fcall	_lcd_put_nibble
  1498                           
  1499                           ;lcd.c: 266:  _delay((unsigned long)((10)*(4000000/4000.0)));
  1500     0130  300D               	movlw	13
  1501     0131  1683               	bsf	3,5	;RP0=1, select bank1
  1502     0132  1303               	bcf	3,6	;RP1=0, select bank1
  1503     0133  00C7               	movwf	(??_lcd_init^(0+128)+1)
  1504     0134  30FB               	movlw	251
  1505     0135  00C6               	movwf	??_lcd_init^(0+128)
  1506     0136                     u1897:
  1507     0136  0BC6               	decfsz	??_lcd_init^(0+128),f
  1508     0137  2936               	goto	u1897
  1509     0138  0BC7               	decfsz	(??_lcd_init^(0+128)+1),f
  1510     0139  2936               	goto	u1897
  1511     013A                     l1856:
  1512                           
  1513                           ;lcd.c: 268:  lcd_put_nibble(2);
  1514     013A  3002               	movlw	2
  1515     013B  120A  118A  2450  120A  118A  	fcall	_lcd_put_nibble
  1516     0140                     l1858:	
  1517                           ;lcd.c: 269:  while(lcd_busy());
  1518                           
  1519     0140  120A  118A  25A7  120A  118A  	fcall	_lcd_busy
  1520     0145  3A00               	xorlw	0
  1521     0146  1D03               	skipz
  1522     0147  2949               	goto	u1761
  1523     0148  294A               	goto	u1760
  1524     0149                     u1761:
  1525     0149  2940               	goto	l1858
  1526     014A                     u1760:
  1527     014A                     l1860:
  1528                           
  1529                           ;lcd.c: 271:  lcd_put_byte(0,0b00101100 & 0b00111000);
  1530     014A  3028               	movlw	40
  1531     014B  1683               	bsf	3,5	;RP0=1, select bank1
  1532     014C  1303               	bcf	3,6	;RP1=0, select bank1
  1533     014D  00C3               	movwf	lcd_put_byte@b^(0+128)
  1534     014E  3000               	movlw	0
  1535     014F  120A  118A  2566  120A  118A  	fcall	_lcd_put_byte
  1536     0154                     l1862:	
  1537                           ;lcd.c: 272:  while(lcd_busy());
  1538                           
  1539     0154  120A  118A  25A7  120A  118A  	fcall	_lcd_busy
  1540     0159  3A00               	xorlw	0
  1541     015A  1D03               	skipz
  1542     015B  295D               	goto	u1771
  1543     015C  295E               	goto	u1770
  1544     015D                     u1771:
  1545     015D  2954               	goto	l1862
  1546     015E                     u1770:
  1547     015E                     l1864:
  1548                           
  1549                           ;lcd.c: 274:  lcd_put_byte(0,0b00001111 & 0b00001101 & 0b00001110);
  1550     015E  300C               	movlw	12
  1551     015F  1683               	bsf	3,5	;RP0=1, select bank1
  1552     0160  1303               	bcf	3,6	;RP1=0, select bank1
  1553     0161  00C3               	movwf	lcd_put_byte@b^(0+128)
  1554     0162  3000               	movlw	0
  1555     0163  120A  118A  2566  120A  118A  	fcall	_lcd_put_byte
  1556     0168                     l1866:	
  1557                           ;lcd.c: 275:  while(lcd_busy());
  1558                           
  1559     0168  120A  118A  25A7  120A  118A  	fcall	_lcd_busy
  1560     016D  3A00               	xorlw	0
  1561     016E  1D03               	skipz
  1562     016F  2971               	goto	u1781
  1563     0170  2972               	goto	u1780
  1564     0171                     u1781:
  1565     0171  2968               	goto	l1866
  1566     0172                     u1780:
  1567     0172                     l1868:
  1568                           
  1569                           ;lcd.c: 277:  lcd_put_byte(0,0x01);
  1570     0172  1683               	bsf	3,5	;RP0=1, select bank1
  1571     0173  1303               	bcf	3,6	;RP1=0, select bank1
  1572     0174  01C3               	clrf	lcd_put_byte@b^(0+128)
  1573     0175  0AC3               	incf	lcd_put_byte@b^(0+128),f
  1574     0176  3000               	movlw	0
  1575     0177  120A  118A  2566  120A  118A  	fcall	_lcd_put_byte
  1576     017C                     l1870:	
  1577                           ;lcd.c: 278:  while(lcd_busy());
  1578                           
  1579     017C  120A  118A  25A7  120A  118A  	fcall	_lcd_busy
  1580     0181  3A00               	xorlw	0
  1581     0182  1D03               	skipz
  1582     0183  2985               	goto	u1791
  1583     0184  2986               	goto	u1790
  1584     0185                     u1791:
  1585     0185  297C               	goto	l1870
  1586     0186                     u1790:
  1587     0186                     l1872:
  1588                           
  1589                           ;lcd.c: 280:  lcd_put_byte(0,0b00000110);
  1590     0186  3006               	movlw	6
  1591     0187  1683               	bsf	3,5	;RP0=1, select bank1
  1592     0188  1303               	bcf	3,6	;RP1=0, select bank1
  1593     0189  00C3               	movwf	lcd_put_byte@b^(0+128)
  1594     018A  3000               	movlw	0
  1595     018B  120A  118A  2566  120A  118A  	fcall	_lcd_put_byte
  1596     0190                     l1874:	
  1597                           ;lcd.c: 281:  while(lcd_busy());
  1598                           
  1599     0190  120A  118A  25A7  120A  118A  	fcall	_lcd_busy
  1600     0195  3A00               	xorlw	0
  1601     0196  1D03               	skipz
  1602     0197  2999               	goto	u1801
  1603     0198  299A               	goto	u1800
  1604     0199                     u1801:
  1605     0199  2990               	goto	l1874
  1606     019A                     u1800:
  1607     019A                     l140:
  1608     019A  0008               	return
  1609     019B                     __end_of_lcd_init:
  1610                           
  1611                           	psect	text5
  1612     0566                     __ptext5:	
  1613 ;; *************** function _lcd_put_byte *****************
  1614 ;; Defined at:
  1615 ;;		line 134 in file "lcd.c"
  1616 ;; Parameters:    Size  Location     Type
  1617 ;;  rs              1    wreg     unsigned char 
  1618 ;;  b               1    3[BANK1 ] unsigned char 
  1619 ;; Auto vars:     Size  Location     Type
  1620 ;;  rs              1    5[BANK1 ] unsigned char 
  1621 ;; Return value:  Size  Location     Type
  1622 ;;                  1    wreg      void 
  1623 ;; Registers used:
  1624 ;;		wreg, status,2, status,0, pclath, cstack
  1625 ;; Tracked objects:
  1626 ;;		On entry : 0/0
  1627 ;;		On exit  : 0/0
  1628 ;;		Unchanged: 0/0
  1629 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1630 ;;      Params:         0       0       1       0       0
  1631 ;;      Locals:         0       0       1       0       0
  1632 ;;      Temps:          0       0       1       0       0
  1633 ;;      Totals:         0       0       3       0       0
  1634 ;;Total ram usage:        3 bytes
  1635 ;; Hardware stack levels used: 1
  1636 ;; Hardware stack levels required when called: 14
  1637 ;; This function calls:
  1638 ;;		_lcd_put_nibble
  1639 ;; This function is called by:
  1640 ;;		_lcd_gotoxy
  1641 ;;		_lcd_putc
  1642 ;;		_lcd_init
  1643 ;;		_lcd_ShiftLeft
  1644 ;;		_lcd_ShiftRight
  1645 ;; This function uses a non-reentrant model
  1646 ;;
  1647                           
  1648     0566                     _lcd_put_byte:	
  1649                           ;psect for function _lcd_put_byte
  1650                           
  1651                           
  1652                           ;incstack = 0
  1653 ;; hardware stack exceeded
  1654                           ; Regs used in _lcd_put_byte: [wreg+status,2+status,0+pclath+cstack]
  1655                           ;lcd_put_byte@rs stored from wreg
  1656     0566  1683               	bsf	3,5	;RP0=1, select bank1
  1657     0567  1303               	bcf	3,6	;RP1=0, select bank1
  1658     0568  00C5               	movwf	lcd_put_byte@rs^(0+128)
  1659     0569                     l1662:
  1660                           
  1661                           ;lcd.c: 134: void lcd_put_byte(unsigned char rs, unsigned char b);lcd.c: 135: {;lcd.c: 1
      +                          39:  TRISD4 = 0;
  1662     0569  1208               	bcf	8,4	;volatile
  1663                           
  1664                           ;lcd.c: 140:  TRISD5 = 0;
  1665     056A  1288               	bcf	8,5	;volatile
  1666                           
  1667                           ;lcd.c: 141:  TRISD6 = 0;
  1668     056B  1308               	bcf	8,6	;volatile
  1669                           
  1670                           ;lcd.c: 142:  TRISD7 = 0;
  1671     056C  1388               	bcf	8,7	;volatile
  1672     056D                     l1664:
  1673                           
  1674                           ;lcd.c: 144:  if(rs)
  1675     056D  0845               	movf	lcd_put_byte@rs^(0+128),w
  1676     056E  1903               	btfsc	3,2
  1677     056F  2D71               	goto	u1521
  1678     0570  2D72               	goto	u1520
  1679     0571                     u1521:
  1680     0571  2D76               	goto	l88
  1681     0572                     u1520:
  1682     0572                     l1666:
  1683                           
  1684                           ;lcd.c: 145:   RD1 = 1;
  1685     0572  1283               	bcf	3,5	;RP0=0, select bank0
  1686     0573  1303               	bcf	3,6	;RP1=0, select bank0
  1687     0574  1488               	bsf	8,1	;volatile
  1688     0575  2D79               	goto	l1668
  1689     0576                     l88:	
  1690                           ;lcd.c: 146:  else
  1691                           
  1692                           
  1693                           ;lcd.c: 147:   RD1 = 0;
  1694     0576  1283               	bcf	3,5	;RP0=0, select bank0
  1695     0577  1303               	bcf	3,6	;RP1=0, select bank0
  1696     0578  1088               	bcf	8,1	;volatile
  1697     0579                     l1668:
  1698                           
  1699                           ;lcd.c: 148:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  1700     0579  3005               	movlw	5
  1701     057A  1683               	bsf	3,5	;RP0=1, select bank1
  1702     057B  1303               	bcf	3,6	;RP1=0, select bank1
  1703     057C  00C4               	movwf	??_lcd_put_byte^(0+128)
  1704     057D                     u1907:
  1705     057D  0BC4               	decfsz	??_lcd_put_byte^(0+128),f
  1706     057E  2D7D               	goto	u1907
  1707     057F  2D80               	nop2
  1708     0580                     l1670:
  1709                           
  1710                           ;lcd.c: 150:  RD2 = 0;
  1711     0580  1283               	bcf	3,5	;RP0=0, select bank0
  1712     0581  1303               	bcf	3,6	;RP1=0, select bank0
  1713     0582  1108               	bcf	8,2	;volatile
  1714                           
  1715                           ;lcd.c: 151:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  1716     0583  3005               	movlw	5
  1717     0584  1683               	bsf	3,5	;RP0=1, select bank1
  1718     0585  1303               	bcf	3,6	;RP1=0, select bank1
  1719     0586  00C4               	movwf	??_lcd_put_byte^(0+128)
  1720     0587                     u1917:
  1721     0587  0BC4               	decfsz	??_lcd_put_byte^(0+128),f
  1722     0588  2D87               	goto	u1917
  1723     0589  2D8A               	nop2
  1724     058A                     l1672:
  1725                           
  1726                           ;lcd.c: 153:  RD3 = 0;
  1727     058A  1283               	bcf	3,5	;RP0=0, select bank0
  1728     058B  1303               	bcf	3,6	;RP1=0, select bank0
  1729     058C  1188               	bcf	8,3	;volatile
  1730     058D                     l1674:
  1731                           
  1732                           ;lcd.c: 155:  lcd_put_nibble(b >> 4);
  1733     058D  1683               	bsf	3,5	;RP0=1, select bank1
  1734     058E  1303               	bcf	3,6	;RP1=0, select bank1
  1735     058F  0843               	movf	lcd_put_byte@b^(0+128),w
  1736     0590  00C4               	movwf	??_lcd_put_byte^(0+128)
  1737     0591  3004               	movlw	4
  1738     0592                     u1535:
  1739     0592  1003               	clrc
  1740     0593  0CC4               	rrf	??_lcd_put_byte^(0+128),f
  1741     0594  3EFF               	addlw	-1
  1742     0595  1D03               	skipz
  1743     0596  2D92               	goto	u1535
  1744     0597  0844               	movf	??_lcd_put_byte^(0+128),w
  1745     0598  120A  118A  2450  120A  118A  	fcall	_lcd_put_nibble
  1746     059D                     l1676:
  1747                           
  1748                           ;lcd.c: 157:  lcd_put_nibble(b & 0xf);
  1749     059D  1683               	bsf	3,5	;RP0=1, select bank1
  1750     059E  1303               	bcf	3,6	;RP1=0, select bank1
  1751     059F  0843               	movf	lcd_put_byte@b^(0+128),w
  1752     05A0  390F               	andlw	15
  1753     05A1  120A  118A  2450  120A  118A  	fcall	_lcd_put_nibble
  1754     05A6                     l90:
  1755     05A6  0008               	return
  1756     05A7                     __end_of_lcd_put_byte:
  1757                           
  1758                           	psect	text6
  1759     0450                     __ptext6:	
  1760 ;; *************** function _lcd_put_nibble *****************
  1761 ;; Defined at:
  1762 ;;		line 103 in file "lcd.c"
  1763 ;; Parameters:    Size  Location     Type
  1764 ;;  b               1    wreg     unsigned char 
  1765 ;; Auto vars:     Size  Location     Type
  1766 ;;  b               1    1[BANK1 ] unsigned char 
  1767 ;;  temp            1    2[BANK1 ] struct _BYTE_VAL
  1768 ;; Return value:  Size  Location     Type
  1769 ;;                  1    wreg      void 
  1770 ;; Registers used:
  1771 ;;		wreg
  1772 ;; Tracked objects:
  1773 ;;		On entry : 0/0
  1774 ;;		On exit  : 0/0
  1775 ;;		Unchanged: 0/0
  1776 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1777 ;;      Params:         0       0       0       0       0
  1778 ;;      Locals:         0       0       2       0       0
  1779 ;;      Temps:          0       0       1       0       0
  1780 ;;      Totals:         0       0       3       0       0
  1781 ;;Total ram usage:        3 bytes
  1782 ;; Hardware stack levels used: 1
  1783 ;; Hardware stack levels required when called: 13
  1784 ;; This function calls:
  1785 ;;		Nothing
  1786 ;; This function is called by:
  1787 ;;		_lcd_put_byte
  1788 ;;		_lcd_init
  1789 ;; This function uses a non-reentrant model
  1790 ;;
  1791                           
  1792     0450                     _lcd_put_nibble:	
  1793                           ;psect for function _lcd_put_nibble
  1794                           
  1795                           
  1796                           ;incstack = 0
  1797 ;; hardware stack exceeded
  1798                           ; Regs used in _lcd_put_nibble: [wreg]
  1799                           ;lcd_put_nibble@b stored from wreg
  1800     0450  1683               	bsf	3,5	;RP0=1, select bank1
  1801     0451  1303               	bcf	3,6	;RP1=0, select bank1
  1802     0452  00C1               	movwf	lcd_put_nibble@b^(0+128)
  1803     0453                     l1508:
  1804                           
  1805                           ;lcd.c: 103: void lcd_put_nibble(unsigned char b);lcd.c: 104: {;lcd.c: 106:  BYTE_VAL te
      +                          mp;;lcd.c: 109:  TRISD4 = 0;
  1806     0453  1208               	bcf	8,4	;volatile
  1807                           
  1808                           ;lcd.c: 110:  TRISD5 = 0;
  1809     0454  1288               	bcf	8,5	;volatile
  1810                           
  1811                           ;lcd.c: 111:  TRISD6 = 0;
  1812     0455  1308               	bcf	8,6	;volatile
  1813                           
  1814                           ;lcd.c: 112:  TRISD7 = 0;
  1815     0456  1388               	bcf	8,7	;volatile
  1816     0457                     l1510:
  1817                           
  1818                           ;lcd.c: 114:  temp.Val = b;
  1819     0457  0841               	movf	lcd_put_nibble@b^(0+128),w
  1820     0458  00C2               	movwf	lcd_put_nibble@temp^(0+128)
  1821     0459                     l1512:
  1822                           
  1823                           ;lcd.c: 116:  RD4 = temp.bits.b0;
  1824     0459  1842               	btfsc	lcd_put_nibble@temp^(0+128),0
  1825     045A  2C5C               	goto	u1181
  1826     045B  2C60               	goto	u1180
  1827     045C                     u1181:
  1828     045C  1283               	bcf	3,5	;RP0=0, select bank0
  1829     045D  1303               	bcf	3,6	;RP1=0, select bank0
  1830     045E  1608               	bsf	8,4	;volatile
  1831     045F  2C63               	goto	u1194
  1832     0460                     u1180:
  1833     0460  1283               	bcf	3,5	;RP0=0, select bank0
  1834     0461  1303               	bcf	3,6	;RP1=0, select bank0
  1835     0462  1208               	bcf	8,4	;volatile
  1836     0463                     u1194:
  1837     0463                     l1514:
  1838                           
  1839                           ;lcd.c: 117:  RD5 = temp.bits.b1;
  1840     0463  1683               	bsf	3,5	;RP0=1, select bank1
  1841     0464  1303               	bcf	3,6	;RP1=0, select bank1
  1842     0465  18C2               	btfsc	lcd_put_nibble@temp^(0+128),1
  1843     0466  2C68               	goto	u1201
  1844     0467  2C6C               	goto	u1200
  1845     0468                     u1201:
  1846     0468  1283               	bcf	3,5	;RP0=0, select bank0
  1847     0469  1303               	bcf	3,6	;RP1=0, select bank0
  1848     046A  1688               	bsf	8,5	;volatile
  1849     046B  2C6F               	goto	u1214
  1850     046C                     u1200:
  1851     046C  1283               	bcf	3,5	;RP0=0, select bank0
  1852     046D  1303               	bcf	3,6	;RP1=0, select bank0
  1853     046E  1288               	bcf	8,5	;volatile
  1854     046F                     u1214:
  1855     046F                     l1516:
  1856                           
  1857                           ;lcd.c: 118:  RD6 = temp.bits.b2;
  1858     046F  1683               	bsf	3,5	;RP0=1, select bank1
  1859     0470  1303               	bcf	3,6	;RP1=0, select bank1
  1860     0471  1942               	btfsc	lcd_put_nibble@temp^(0+128),2
  1861     0472  2C74               	goto	u1221
  1862     0473  2C78               	goto	u1220
  1863     0474                     u1221:
  1864     0474  1283               	bcf	3,5	;RP0=0, select bank0
  1865     0475  1303               	bcf	3,6	;RP1=0, select bank0
  1866     0476  1708               	bsf	8,6	;volatile
  1867     0477  2C7B               	goto	u1234
  1868     0478                     u1220:
  1869     0478  1283               	bcf	3,5	;RP0=0, select bank0
  1870     0479  1303               	bcf	3,6	;RP1=0, select bank0
  1871     047A  1308               	bcf	8,6	;volatile
  1872     047B                     u1234:
  1873     047B                     l1518:
  1874                           
  1875                           ;lcd.c: 119:  RD7 = temp.bits.b3;
  1876     047B  1683               	bsf	3,5	;RP0=1, select bank1
  1877     047C  1303               	bcf	3,6	;RP1=0, select bank1
  1878     047D  19C2               	btfsc	lcd_put_nibble@temp^(0+128),3
  1879     047E  2C80               	goto	u1241
  1880     047F  2C84               	goto	u1240
  1881     0480                     u1241:
  1882     0480  1283               	bcf	3,5	;RP0=0, select bank0
  1883     0481  1303               	bcf	3,6	;RP1=0, select bank0
  1884     0482  1788               	bsf	8,7	;volatile
  1885     0483  2C87               	goto	u1254
  1886     0484                     u1240:
  1887     0484  1283               	bcf	3,5	;RP0=0, select bank0
  1888     0485  1303               	bcf	3,6	;RP1=0, select bank0
  1889     0486  1388               	bcf	8,7	;volatile
  1890     0487                     u1254:
  1891                           
  1892                           ;lcd.c: 121:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  1893     0487  3005               	movlw	5
  1894     0488  1683               	bsf	3,5	;RP0=1, select bank1
  1895     0489  1303               	bcf	3,6	;RP1=0, select bank1
  1896     048A  00C0               	movwf	??_lcd_put_nibble^(0+128)
  1897     048B                     u1927:
  1898     048B  0BC0               	decfsz	??_lcd_put_nibble^(0+128),f
  1899     048C  2C8B               	goto	u1927
  1900     048D  2C8E               	nop2
  1901     048E                     l1520:
  1902                           
  1903                           ;lcd.c: 122:  RD3 = 1;
  1904     048E  1283               	bcf	3,5	;RP0=0, select bank0
  1905     048F  1303               	bcf	3,6	;RP1=0, select bank0
  1906     0490  1588               	bsf	8,3	;volatile
  1907                           
  1908                           ;lcd.c: 123:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  1909     0491  3005               	movlw	5
  1910     0492  1683               	bsf	3,5	;RP0=1, select bank1
  1911     0493  1303               	bcf	3,6	;RP1=0, select bank1
  1912     0494  00C0               	movwf	??_lcd_put_nibble^(0+128)
  1913     0495                     u1937:
  1914     0495  0BC0               	decfsz	??_lcd_put_nibble^(0+128),f
  1915     0496  2C95               	goto	u1937
  1916     0497  2C98               	nop2
  1917     0498                     l1522:
  1918                           
  1919                           ;lcd.c: 124:  RD3 = 0;
  1920     0498  1283               	bcf	3,5	;RP0=0, select bank0
  1921     0499  1303               	bcf	3,6	;RP1=0, select bank0
  1922     049A  1188               	bcf	8,3	;volatile
  1923     049B                     l85:
  1924     049B  0008               	return
  1925     049C                     __end_of_lcd_put_nibble:
  1926                           
  1927                           	psect	text7
  1928     05A7                     __ptext7:	
  1929 ;; *************** function _lcd_busy *****************
  1930 ;; Defined at:
  1931 ;;		line 18 in file "lcd.c"
  1932 ;; Parameters:    Size  Location     Type
  1933 ;;		None
  1934 ;; Auto vars:     Size  Location     Type
  1935 ;;  busy            1    1[BANK1 ] unsigned char 
  1936 ;; Return value:  Size  Location     Type
  1937 ;;                  1    wreg      unsigned char 
  1938 ;; Registers used:
  1939 ;;		wreg, status,2
  1940 ;; Tracked objects:
  1941 ;;		On entry : 0/0
  1942 ;;		On exit  : 0/0
  1943 ;;		Unchanged: 0/0
  1944 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1945 ;;      Params:         0       0       0       0       0
  1946 ;;      Locals:         0       0       1       0       0
  1947 ;;      Temps:          0       0       1       0       0
  1948 ;;      Totals:         0       0       2       0       0
  1949 ;;Total ram usage:        2 bytes
  1950 ;; Hardware stack levels used: 1
  1951 ;; Hardware stack levels required when called: 13
  1952 ;; This function calls:
  1953 ;;		Nothing
  1954 ;; This function is called by:
  1955 ;;		_lcd_gotoxy
  1956 ;;		_lcd_putc
  1957 ;;		_lcd_init
  1958 ;; This function uses a non-reentrant model
  1959 ;;
  1960                           
  1961     05A7                     _lcd_busy:	
  1962                           ;psect for function _lcd_busy
  1963                           
  1964     05A7                     l1640:	
  1965                           ;incstack = 0
  1966 ;; hardware stack exceeded
  1967                           ; Regs used in _lcd_busy: [wreg+status,2]
  1968                           
  1969                           
  1970                           ;lcd.c: 21: unsigned char busy;;lcd.c: 24:  TRISD4 = 1;
  1971     05A7  1683               	bsf	3,5	;RP0=1, select bank1
  1972     05A8  1303               	bcf	3,6	;RP1=0, select bank1
  1973     05A9  1608               	bsf	8,4	;volatile
  1974                           
  1975                           ;lcd.c: 25:  TRISD5 = 1;
  1976     05AA  1688               	bsf	8,5	;volatile
  1977                           
  1978                           ;lcd.c: 26:  TRISD6 = 1;
  1979     05AB  1708               	bsf	8,6	;volatile
  1980                           
  1981                           ;lcd.c: 27:  TRISD7 = 1;
  1982     05AC  1788               	bsf	8,7	;volatile
  1983                           
  1984                           ;lcd.c: 29:  RD2 = 1;
  1985     05AD  1283               	bcf	3,5	;RP0=0, select bank0
  1986     05AE  1303               	bcf	3,6	;RP1=0, select bank0
  1987     05AF  1508               	bsf	8,2	;volatile
  1988                           
  1989                           ;lcd.c: 30:  RD1 = 0;
  1990     05B0  1088               	bcf	8,1	;volatile
  1991     05B1                     l1642:
  1992                           
  1993                           ;lcd.c: 31:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  1994     05B1  3005               	movlw	5
  1995     05B2  1683               	bsf	3,5	;RP0=1, select bank1
  1996     05B3  1303               	bcf	3,6	;RP1=0, select bank1
  1997     05B4  00C0               	movwf	??_lcd_busy^(0+128)
  1998     05B5                     u1947:
  1999     05B5  0BC0               	decfsz	??_lcd_busy^(0+128),f
  2000     05B6  2DB5               	goto	u1947
  2001     05B7  2DB8               	nop2
  2002     05B8                     l1644:
  2003                           
  2004                           ;lcd.c: 32:  RD3 = 1;
  2005     05B8  1283               	bcf	3,5	;RP0=0, select bank0
  2006     05B9  1303               	bcf	3,6	;RP1=0, select bank0
  2007     05BA  1588               	bsf	8,3	;volatile
  2008                           
  2009                           ;lcd.c: 33:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  2010     05BB  3005               	movlw	5
  2011     05BC  1683               	bsf	3,5	;RP0=1, select bank1
  2012     05BD  1303               	bcf	3,6	;RP1=0, select bank1
  2013     05BE  00C0               	movwf	??_lcd_busy^(0+128)
  2014     05BF                     u1957:
  2015     05BF  0BC0               	decfsz	??_lcd_busy^(0+128),f
  2016     05C0  2DBF               	goto	u1957
  2017     05C1  2DC2               	nop2
  2018     05C2                     l1646:
  2019                           
  2020                           ;lcd.c: 35:  busy = RD7;
  2021     05C2  3000               	movlw	0
  2022     05C3  1283               	bcf	3,5	;RP0=0, select bank0
  2023     05C4  1303               	bcf	3,6	;RP1=0, select bank0
  2024     05C5  1B88               	btfsc	8,7	;volatile
  2025     05C6  3001               	movlw	1
  2026     05C7  1683               	bsf	3,5	;RP0=1, select bank1
  2027     05C8  1303               	bcf	3,6	;RP1=0, select bank1
  2028     05C9  00C1               	movwf	lcd_busy@busy^(0+128)
  2029     05CA                     l1648:
  2030                           
  2031                           ;lcd.c: 37:  RD3 = 0;
  2032     05CA  1283               	bcf	3,5	;RP0=0, select bank0
  2033     05CB  1303               	bcf	3,6	;RP1=0, select bank0
  2034     05CC  1188               	bcf	8,3	;volatile
  2035     05CD                     l1650:
  2036                           
  2037                           ;lcd.c: 38:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  2038     05CD  3005               	movlw	5
  2039     05CE  1683               	bsf	3,5	;RP0=1, select bank1
  2040     05CF  1303               	bcf	3,6	;RP1=0, select bank1
  2041     05D0  00C0               	movwf	??_lcd_busy^(0+128)
  2042     05D1                     u1967:
  2043     05D1  0BC0               	decfsz	??_lcd_busy^(0+128),f
  2044     05D2  2DD1               	goto	u1967
  2045     05D3  2DD4               	nop2
  2046     05D4                     l1652:
  2047                           
  2048                           ;lcd.c: 39:  RD3 = 1;
  2049     05D4  1283               	bcf	3,5	;RP0=0, select bank0
  2050     05D5  1303               	bcf	3,6	;RP1=0, select bank0
  2051     05D6  1588               	bsf	8,3	;volatile
  2052     05D7                     l1654:
  2053                           
  2054                           ;lcd.c: 40:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  2055     05D7  3005               	movlw	5
  2056     05D8  1683               	bsf	3,5	;RP0=1, select bank1
  2057     05D9  1303               	bcf	3,6	;RP1=0, select bank1
  2058     05DA  00C0               	movwf	??_lcd_busy^(0+128)
  2059     05DB                     u1977:
  2060     05DB  0BC0               	decfsz	??_lcd_busy^(0+128),f
  2061     05DC  2DDB               	goto	u1977
  2062     05DD  2DDE               	nop2
  2063     05DE                     l1656:
  2064                           
  2065                           ;lcd.c: 41:  RD3 = 0;
  2066     05DE  1283               	bcf	3,5	;RP0=0, select bank0
  2067     05DF  1303               	bcf	3,6	;RP1=0, select bank0
  2068     05E0  1188               	bcf	8,3	;volatile
  2069     05E1                     l1658:
  2070                           
  2071                           ;lcd.c: 43:  return busy;
  2072     05E1  1683               	bsf	3,5	;RP0=1, select bank1
  2073     05E2  1303               	bcf	3,6	;RP1=0, select bank1
  2074     05E3  0841               	movf	lcd_busy@busy^(0+128),w
  2075     05E4                     l77:
  2076     05E4  0008               	return
  2077     05E5                     __end_of_lcd_busy:
  2078                           
  2079                           	psect	text8
  2080     049C                     __ptext8:	
  2081 ;; *************** function _ISR *****************
  2082 ;; Defined at:
  2083 ;;		line 28 in file "BT1.c"
  2084 ;; Parameters:    Size  Location     Type
  2085 ;;		None
  2086 ;; Auto vars:     Size  Location     Type
  2087 ;;  buffer          4   68[BANK0 ] unsigned char [4]
  2088 ;; Return value:  Size  Location     Type
  2089 ;;                  1    wreg      void 
  2090 ;; Registers used:
  2091 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2092 ;; Tracked objects:
  2093 ;;		On entry : 0/0
  2094 ;;		On exit  : 0/0
  2095 ;;		Unchanged: 0/0
  2096 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2097 ;;      Params:         0       0       0       0       0
  2098 ;;      Locals:         0       4       0       0       0
  2099 ;;      Temps:          0       6       0       0       0
  2100 ;;      Totals:         0      10       0       0       0
  2101 ;;Total ram usage:       10 bytes
  2102 ;; Hardware stack levels used: 1
  2103 ;; Hardware stack levels required when called: 12
  2104 ;; This function calls:
  2105 ;;		_sprintf
  2106 ;;		i1_lcd_gotoxy
  2107 ;;		i1_lcd_puts
  2108 ;; This function is called by:
  2109 ;;		Interrupt level 1
  2110 ;; This function uses a non-reentrant model
  2111 ;;
  2112                           
  2113     049C                     _ISR:	
  2114                           ;psect for function _ISR
  2115                           
  2116     049C                     i1l1888:
  2117                           
  2118                           ;BT1.c: 30:     char buffer[4];;BT1.c: 31:     _delay((unsigned long)((150)*(4000000/400
      +                          0.0)));
  2119     049C  30C3               	movlw	195
  2120     049D  1283               	bcf	3,5	;RP0=0, select bank0
  2121     049E  1303               	bcf	3,6	;RP1=0, select bank0
  2122     049F  00DF               	movwf	??_ISR+1
  2123     04A0  30CC               	movlw	204
  2124     04A1  00DE               	movwf	??_ISR
  2125     04A2                     u198_27:
  2126     04A2  0BDE               	decfsz	??_ISR,f
  2127     04A3  2CA2               	goto	u198_27
  2128     04A4  0BDF               	decfsz	??_ISR+1,f
  2129     04A5  2CA2               	goto	u198_27
  2130     04A6  0000               	nop
  2131     04A7                     i1l1890:
  2132                           
  2133                           ;BT1.c: 32:     push_count++;
  2134     04A7  3001               	movlw	1
  2135     04A8  00FF               	movwf	btemp+1
  2136     04A9  087F               	movf	btemp+1,w
  2137     04AA  1283               	bcf	3,5	;RP0=0, select bank0
  2138     04AB  1303               	bcf	3,6	;RP1=0, select bank0
  2139     04AC  07ED               	addwf	_push_count,f
  2140     04AD                     i1l1892:
  2141                           
  2142                           ;BT1.c: 33:     if (push_count > 20){
  2143     04AD  3015               	movlw	21
  2144     04AE  026D               	subwf	_push_count,w
  2145     04AF  1C03               	skipc
  2146     04B0  2CB2               	goto	u182_21
  2147     04B1  2CB3               	goto	u182_20
  2148     04B2                     u182_21:
  2149     04B2  2CB4               	goto	i1l1896
  2150     04B3                     u182_20:
  2151     04B3                     i1l1894:
  2152                           
  2153                           ;BT1.c: 34:         push_count = 0;
  2154     04B3  01ED               	clrf	_push_count
  2155     04B4                     i1l1896:
  2156                           
  2157                           ;BT1.c: 36:     sprintf(buffer, "%.2d", push_count);
  2158     04B4  3010               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  2159     04B5  00CD               	movwf	sprintf@fmt
  2160     04B6  086D               	movf	_push_count,w
  2161     04B7  00DE               	movwf	??_ISR
  2162     04B8  01DF               	clrf	??_ISR+1
  2163     04B9  085E               	movf	??_ISR,w
  2164     04BA  00CE               	movwf	?_sprintf+1
  2165     04BB  085F               	movf	??_ISR+1,w
  2166     04BC  00CF               	movwf	?_sprintf+2
  2167     04BD  3064               	movlw	(low (ISR@buffer| 0))& (0+255)
  2168     04BE  120A  118A  27D9  120A  118A  	fcall	_sprintf
  2169     04C3                     i1l1898:
  2170                           
  2171                           ;BT1.c: 37:     lcd_gotoxy(8, 1);
  2172     04C3  01F6               	clrf	i1lcd_gotoxy@row
  2173     04C4  0AF6               	incf	i1lcd_gotoxy@row,f
  2174     04C5  3008               	movlw	8
  2175     04C6  120A  118A  2796  120A  118A  	fcall	i1_lcd_gotoxy
  2176     04CB                     i1l1900:
  2177                           
  2178                           ;BT1.c: 38:     lcd_puts(buffer);
  2179     04CB  3064               	movlw	(low (ISR@buffer| 0))& (0+255)
  2180     04CC  00FA               	movwf	i1lcd_puts@s
  2181     04CD  3000               	movlw	0
  2182     04CE  00FB               	movwf	i1lcd_puts@s+1
  2183     04CF  120A  118A  2727  120A  118A  	fcall	i1_lcd_puts
  2184     04D4                     i1l1902:
  2185                           
  2186                           ;BT1.c: 39:     INTF = 0;
  2187     04D4  108B               	bcf	11,1	;volatile
  2188     04D5                     i1l36:
  2189     04D5  1283               	bcf	3,5	;RP0=0, select bank0
  2190     04D6  1303               	bcf	3,6	;RP1=0, select bank0
  2191     04D7  0863               	movf	??_ISR+5,w
  2192     04D8  00FF               	movwf	btemp+1
  2193     04D9  0862               	movf	??_ISR+4,w
  2194     04DA  008A               	movwf	10
  2195     04DB  0861               	movf	??_ISR+3,w
  2196     04DC  0084               	movwf	4
  2197     04DD  0E60               	swapf	??_ISR+2,w
  2198     04DE  0083               	movwf	3
  2199     04DF  0EFE               	swapf	btemp,f
  2200     04E0  0E7E               	swapf	btemp,w
  2201     04E1  0009               	retfie
  2202     04E2                     __end_of_ISR:
  2203                           
  2204                           	psect	intentry
  2205     0004                     __pintentry:	
  2206                           ;incstack = 0
  2207 ;; hardware stack exceeded
  2208                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2209                           
  2210     0004                     interrupt_function:
  2211     007E                     saved_w	set	btemp
  2212     0004  00FE               	movwf	btemp
  2213     0005  0E03               	swapf	3,w
  2214     0006  1283               	bcf	3,5	;RP0=0, select bank0
  2215     0007  1303               	bcf	3,6	;RP1=0, select bank0
  2216     0008  00E0               	movwf	??_ISR+2
  2217     0009  0804               	movf	4,w
  2218     000A  00E1               	movwf	??_ISR+3
  2219     000B  080A               	movf	10,w
  2220     000C  00E2               	movwf	??_ISR+4
  2221     000D  087F               	movf	btemp+1,w
  2222     000E  00E3               	movwf	??_ISR+5
  2223     000F  120A  118A  2C9C   	ljmp	_ISR
  2224                           
  2225                           	psect	text9
  2226     0727                     __ptext9:	
  2227 ;; *************** function i1_lcd_puts *****************
  2228 ;; Defined at:
  2229 ;;		line 224 in file "lcd.c"
  2230 ;; Parameters:    Size  Location     Type
  2231 ;;  s               2   10[COMMON] PTR const unsigned char 
  2232 ;;		 -> STR_3(3), STR_2(15), ISR@buffer(4), 
  2233 ;; Auto vars:     Size  Location     Type
  2234 ;;		None
  2235 ;; Return value:  Size  Location     Type
  2236 ;;                  1    wreg      void 
  2237 ;; Registers used:
  2238 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2239 ;; Tracked objects:
  2240 ;;		On entry : 0/0
  2241 ;;		On exit  : 0/0
  2242 ;;		Unchanged: 0/0
  2243 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2244 ;;      Params:         2       0       0       0       0
  2245 ;;      Locals:         0       0       0       0       0
  2246 ;;      Temps:          0       0       0       0       0
  2247 ;;      Totals:         2       0       0       0       0
  2248 ;;Total ram usage:        2 bytes
  2249 ;; Hardware stack levels used: 1
  2250 ;; Hardware stack levels required when called: 4
  2251 ;; This function calls:
  2252 ;;		i1_lcd_putc
  2253 ;; This function is called by:
  2254 ;;		_ISR
  2255 ;; This function uses a non-reentrant model
  2256 ;;
  2257                           
  2258     0727                     i1_lcd_puts:	
  2259                           ;psect for function i1_lcd_puts
  2260                           
  2261     0727                     i1l1880:	
  2262                           ;incstack = 0
  2263 ;; hardware stack exceeded
  2264                           ; Regs used in i1_lcd_puts: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2265                           
  2266                           
  2267                           ;lcd.c: 224: void lcd_puts(const char* s);lcd.c: 225: {;lcd.c: 229:  while(*s)
  2268     0727  2F3C               	goto	i1l1886
  2269     0728                     i1l1882:
  2270                           
  2271                           ;lcd.c: 230:   {;lcd.c: 231:   lcd_putc(*s++);
  2272     0728  087B               	movf	i1lcd_puts@s+1,w
  2273     0729  00FF               	movwf	btemp+1
  2274     072A  087A               	movf	i1lcd_puts@s,w
  2275     072B  0084               	movwf	4
  2276     072C  120A  118A  2700  120A  118A  	fcall	stringtab
  2277     0731  120A  118A  2400  120A  118A  	fcall	i1_lcd_putc
  2278     0736                     i1l1884:
  2279     0736  3001               	movlw	1
  2280     0737  07FA               	addwf	i1lcd_puts@s,f
  2281     0738  1803               	skipnc
  2282     0739  0AFB               	incf	i1lcd_puts@s+1,f
  2283     073A  3000               	movlw	0
  2284     073B  07FB               	addwf	i1lcd_puts@s+1,f
  2285     073C                     i1l1886:
  2286                           
  2287                           ;lcd.c: 229:  while(*s)
  2288     073C  087B               	movf	i1lcd_puts@s+1,w
  2289     073D  1283               	bcf	3,5	;RP0=0, select bank0
  2290     073E  1303               	bcf	3,6	;RP1=0, select bank0
  2291     073F  00FF               	movwf	btemp+1
  2292     0740  087A               	movf	i1lcd_puts@s,w
  2293     0741  0084               	movwf	4
  2294     0742  120A  118A  2700  120A  118A  	fcall	stringtab
  2295     0747  3A00               	xorlw	0
  2296     0748  1D03               	skipz
  2297     0749  2F4B               	goto	u181_21
  2298     074A  2F4C               	goto	u181_20
  2299     074B                     u181_21:
  2300     074B  2F28               	goto	i1l1882
  2301     074C                     u181_20:
  2302     074C                     i1l122:
  2303     074C  0008               	return
  2304     074D                     __end_ofi1_lcd_puts:
  2305                           
  2306                           	psect	text10
  2307     07D9                     __ptext10:	
  2308 ;; *************** function _sprintf *****************
  2309 ;; Defined at:
  2310 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\nf_sprintf.c"
  2311 ;; Parameters:    Size  Location     Type
  2312 ;;  s               1    wreg     PTR unsigned char 
  2313 ;;		 -> ISR@buffer(4), 
  2314 ;;  fmt             1   45[BANK0 ] PTR const unsigned char 
  2315 ;;		 -> STR_1(5), 
  2316 ;; Auto vars:     Size  Location     Type
  2317 ;;  s               1   50[BANK0 ] PTR unsigned char 
  2318 ;;		 -> ISR@buffer(4), 
  2319 ;;  f              11   51[BANK0 ] struct _IO_FILE
  2320 ;;  ret             2    0        int 
  2321 ;;  ap              1   49[BANK0 ] PTR void [1]
  2322 ;;		 -> ?_sprintf(2), 
  2323 ;; Return value:  Size  Location     Type
  2324 ;;                  2   45[BANK0 ] int 
  2325 ;; Registers used:
  2326 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2327 ;; Tracked objects:
  2328 ;;		On entry : 0/0
  2329 ;;		On exit  : 0/0
  2330 ;;		Unchanged: 0/0
  2331 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2332 ;;      Params:         0       3       0       0       0
  2333 ;;      Locals:         0      13       0       0       0
  2334 ;;      Temps:          0       1       0       0       0
  2335 ;;      Totals:         0      17       0       0       0
  2336 ;;Total ram usage:       17 bytes
  2337 ;; Hardware stack levels used: 1
  2338 ;; Hardware stack levels required when called: 11
  2339 ;; This function calls:
  2340 ;;		_vfprintf
  2341 ;; This function is called by:
  2342 ;;		_ISR
  2343 ;; This function uses a non-reentrant model
  2344 ;;
  2345                           
  2346     07D9                     _sprintf:	
  2347                           ;psect for function _sprintf
  2348                           
  2349                           
  2350                           ;incstack = 0
  2351 ;; hardware stack exceeded
  2352                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2353                           ;sprintf@s stored from wreg
  2354     07D9  1283               	bcf	3,5	;RP0=0, select bank0
  2355     07DA  1303               	bcf	3,6	;RP1=0, select bank0
  2356     07DB  00D2               	movwf	sprintf@s
  2357     07DC                     i1l1818:
  2358     07DC  304E               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  2359     07DD  00D1               	movwf	sprintf@ap
  2360     07DE  0852               	movf	sprintf@s,w
  2361     07DF  00D3               	movwf	sprintf@f
  2362     07E0                     i1l1820:
  2363     07E0  01D5               	clrf	sprintf@f+2
  2364     07E1  01D6               	clrf	sprintf@f+3
  2365     07E2                     i1l1822:
  2366     07E2  01DC               	clrf	sprintf@f+9
  2367     07E3  01DD               	clrf	sprintf@f+10
  2368     07E4                     i1l1824:
  2369     07E4  084D               	movf	sprintf@fmt,w
  2370     07E5  00C9               	movwf	vfprintf@fmt
  2371     07E6  3051               	movlw	(low (sprintf@ap| 0))& (0+255)
  2372     07E7  00CA               	movwf	vfprintf@ap
  2373     07E8  3053               	movlw	(low (sprintf@f| 0))& (0+255)
  2374     07E9  120A  118A  27B8  120A  118A  	fcall	_vfprintf
  2375     07EE                     i1l1826:
  2376     07EE  1283               	bcf	3,5	;RP0=0, select bank0
  2377     07EF  1303               	bcf	3,6	;RP1=0, select bank0
  2378     07F0  0855               	movf	sprintf@f+2,w
  2379     07F1  0752               	addwf	sprintf@s,w
  2380     07F2  00D0               	movwf	??_sprintf
  2381     07F3  0850               	movf	??_sprintf,w
  2382     07F4  0084               	movwf	4
  2383     07F5  1383               	bcf	3,7	;select IRP bank0
  2384     07F6  0180               	clrf	0
  2385     07F7                     i1l716:
  2386     07F7  0008               	return
  2387     07F8                     __end_of_sprintf:
  2388                           
  2389                           	psect	text11
  2390     07B8                     __ptext11:	
  2391 ;; *************** function _vfprintf *****************
  2392 ;; Defined at:
  2393 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  2394 ;; Parameters:    Size  Location     Type
  2395 ;;  fp              1    wreg     PTR struct _IO_FILE
  2396 ;;		 -> sprintf@f(11), 
  2397 ;;  fmt             1   41[BANK0 ] PTR const unsigned char 
  2398 ;;		 -> STR_1(5), 
  2399 ;;  ap              1   42[BANK0 ] PTR PTR void 
  2400 ;;		 -> sprintf@ap(1), 
  2401 ;; Auto vars:     Size  Location     Type
  2402 ;;  fp              1   43[BANK0 ] PTR struct _IO_FILE
  2403 ;;		 -> sprintf@f(11), 
  2404 ;;  cfmt            1   44[BANK0 ] PTR unsigned char 
  2405 ;;		 -> STR_1(5), 
  2406 ;; Return value:  Size  Location     Type
  2407 ;;                  2   41[BANK0 ] int 
  2408 ;; Registers used:
  2409 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2410 ;; Tracked objects:
  2411 ;;		On entry : 0/0
  2412 ;;		On exit  : 0/0
  2413 ;;		Unchanged: 0/0
  2414 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2415 ;;      Params:         0       2       0       0       0
  2416 ;;      Locals:         0       2       0       0       0
  2417 ;;      Temps:          0       0       0       0       0
  2418 ;;      Totals:         0       4       0       0       0
  2419 ;;Total ram usage:        4 bytes
  2420 ;; Hardware stack levels used: 1
  2421 ;; Hardware stack levels required when called: 10
  2422 ;; This function calls:
  2423 ;;		_vfpfcnvrt
  2424 ;; This function is called by:
  2425 ;;		_sprintf
  2426 ;; This function uses a non-reentrant model
  2427 ;;
  2428                           
  2429     07B8                     _vfprintf:	
  2430                           ;psect for function _vfprintf
  2431                           
  2432                           
  2433                           ;incstack = 0
  2434 ;; hardware stack exceeded
  2435                           ; Regs used in _vfprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2436                           ;vfprintf@fp stored from wreg
  2437     07B8  1283               	bcf	3,5	;RP0=0, select bank0
  2438     07B9  1303               	bcf	3,6	;RP1=0, select bank0
  2439     07BA  00CB               	movwf	vfprintf@fp
  2440     07BB                     i1l1808:
  2441                           
  2442                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.46\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  2443     07BB  0849               	movf	vfprintf@fmt,w
  2444     07BC  00CC               	movwf	vfprintf@cfmt
  2445                           
  2446                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  2447     07BD  2FC8               	goto	i1l1812
  2448     07BE                     i1l1810:
  2449                           
  2450                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  2451     07BE  304C               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  2452     07BF  00BF               	movwf	vfpfcnvrt@fmt
  2453     07C0  084A               	movf	vfprintf@ap,w
  2454     07C1  00C0               	movwf	vfpfcnvrt@ap
  2455     07C2  084B               	movf	vfprintf@fp,w
  2456     07C3  120A  118A  219B  120A  118A  	fcall	_vfpfcnvrt
  2457     07C8                     i1l1812:
  2458                           
  2459                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  2460     07C8  1283               	bcf	3,5	;RP0=0, select bank0
  2461     07C9  1303               	bcf	3,6	;RP1=0, select bank0
  2462     07CA  084C               	movf	vfprintf@cfmt,w
  2463     07CB  0084               	movwf	4
  2464     07CC  120A  118A  270A  120A  118A  	fcall	stringdir
  2465     07D1  3A00               	xorlw	0
  2466     07D2  1D03               	skipz
  2467     07D3  2FD5               	goto	u174_21
  2468     07D4  2FD6               	goto	u174_20
  2469     07D5                     u174_21:
  2470     07D5  2FBE               	goto	i1l1810
  2471     07D6                     u174_20:
  2472     07D6                     i1l1814:
  2473                           
  2474                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  2475     07D6  01C9               	clrf	?_vfprintf
  2476     07D7  01CA               	clrf	?_vfprintf+1
  2477     07D8                     i1l779:
  2478     07D8  0008               	return
  2479     07D9                     __end_of_vfprintf:
  2480                           
  2481                           	psect	text12
  2482     019B                     __ptext12:	
  2483 ;; *************** function _vfpfcnvrt *****************
  2484 ;; Defined at:
  2485 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  2486 ;; Parameters:    Size  Location     Type
  2487 ;;  fp              1    wreg     PTR struct _IO_FILE
  2488 ;;		 -> sprintf@f(11), 
  2489 ;;  fmt             1   31[BANK0 ] PTR PTR unsigned char 
  2490 ;;		 -> vfprintf@cfmt(1), 
  2491 ;;  ap              1   32[BANK0 ] PTR PTR void 
  2492 ;;		 -> sprintf@ap(1), 
  2493 ;; Auto vars:     Size  Location     Type
  2494 ;;  fp              1   39[BANK0 ] PTR struct _IO_FILE
  2495 ;;		 -> sprintf@f(11), 
  2496 ;;  convarg         4   35[BANK0 ] struct .
  2497 ;;  cp              1   40[BANK0 ] PTR unsigned char 
  2498 ;;		 -> STR_1(5), 
  2499 ;;  done            1    0        _Bool 
  2500 ;;  c               1    0        unsigned char 
  2501 ;; Return value:  Size  Location     Type
  2502 ;;                  1    wreg      void 
  2503 ;; Registers used:
  2504 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2505 ;; Tracked objects:
  2506 ;;		On entry : 0/0
  2507 ;;		On exit  : 0/0
  2508 ;;		Unchanged: 0/0
  2509 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2510 ;;      Params:         0       2       0       0       0
  2511 ;;      Locals:         0       6       0       0       0
  2512 ;;      Temps:          0       2       0       0       0
  2513 ;;      Totals:         0      10       0       0       0
  2514 ;;Total ram usage:       10 bytes
  2515 ;; Hardware stack levels used: 1
  2516 ;; Hardware stack levels required when called: 9
  2517 ;; This function calls:
  2518 ;;		_dtoa
  2519 ;;		_fputc
  2520 ;;		_read_prec_or_width
  2521 ;; This function is called by:
  2522 ;;		_vfprintf
  2523 ;; This function uses a non-reentrant model
  2524 ;;
  2525                           
  2526     019B                     _vfpfcnvrt:	
  2527                           ;psect for function _vfpfcnvrt
  2528                           
  2529                           
  2530                           ;incstack = 0
  2531 ;; hardware stack exceeded
  2532                           ; Regs used in _vfpfcnvrt: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2533                           ;vfpfcnvrt@fp stored from wreg
  2534     019B  1283               	bcf	3,5	;RP0=0, select bank0
  2535     019C  1303               	bcf	3,6	;RP1=0, select bank0
  2536     019D  00C7               	movwf	vfpfcnvrt@fp
  2537     019E                     i1l1752:
  2538                           
  2539                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  2540     019E  083F               	movf	vfpfcnvrt@fmt,w
  2541     019F  0084               	movwf	4
  2542     01A0  1383               	bcf	3,7	;select IRP bank0
  2543     01A1  0800               	movf	0,w
  2544     01A2  0084               	movwf	4
  2545     01A3  120A  118A  270A  120A  118A  	fcall	stringdir
  2546     01A8  3A25               	xorlw	37
  2547     01A9  1D03               	skipz
  2548     01AA  29AC               	goto	u167_21
  2549     01AB  29AD               	goto	u167_20
  2550     01AC                     u167_21:
  2551     01AC  2A24               	goto	i1l1784
  2552     01AD                     u167_20:
  2553     01AD                     i1l1754:
  2554                           
  2555                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  2556     01AD  3001               	movlw	1
  2557     01AE  00FF               	movwf	btemp+1
  2558     01AF  083F               	movf	vfpfcnvrt@fmt,w
  2559     01B0  0084               	movwf	4
  2560     01B1  087F               	movf	btemp+1,w
  2561     01B2  0780               	addwf	0,f
  2562     01B3                     i1l1756:
  2563                           
  2564                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  2565     01B3  01E8               	clrf	_width
  2566     01B4  01E9               	clrf	_width+1
  2567     01B5  1003               	clrc
  2568     01B6  3000               	movlw	0
  2569     01B7  1803               	btfsc	3,0
  2570     01B8  3001               	movlw	1
  2571     01B9  00EC               	movwf	_flags
  2572     01BA                     i1l1758:
  2573                           
  2574                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  2575     01BA  30FF               	movlw	255
  2576     01BB  00EA               	movwf	_prec
  2577     01BC  30FF               	movlw	255
  2578     01BD  00EB               	movwf	_prec+1
  2579     01BE                     i1l1760:
  2580                           
  2581                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1265:         if 
      +                          ((*fmt)[0] == '.') {
  2582     01BE  083F               	movf	vfpfcnvrt@fmt,w
  2583     01BF  0084               	movwf	4
  2584     01C0  0800               	movf	0,w
  2585     01C1  0084               	movwf	4
  2586     01C2  120A  118A  270A  120A  118A  	fcall	stringdir
  2587     01C7  3A2E               	xorlw	46
  2588     01C8  1D03               	skipz
  2589     01C9  29CB               	goto	u168_21
  2590     01CA  29CC               	goto	u168_20
  2591     01CB                     u168_21:
  2592     01CB  29E0               	goto	i1l1766
  2593     01CC                     u168_20:
  2594     01CC                     i1l1762:
  2595                           
  2596                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1266:            
      +                           ++*fmt;
  2597     01CC  3001               	movlw	1
  2598     01CD  00FF               	movwf	btemp+1
  2599     01CE  083F               	movf	vfpfcnvrt@fmt,w
  2600     01CF  0084               	movwf	4
  2601     01D0  087F               	movf	btemp+1,w
  2602     01D1  0780               	addwf	0,f
  2603     01D2                     i1l1764:
  2604                           
  2605                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1267:    prec = r
      +                          ead_prec_or_width(fmt, ap);
  2606     01D2  0840               	movf	vfpfcnvrt@ap,w
  2607     01D3  00F6               	movwf	read_prec_or_width@ap
  2608     01D4  083F               	movf	vfpfcnvrt@fmt,w
  2609     01D5  120A  118A  2356  120A  118A  	fcall	_read_prec_or_width
  2610     01DA  0877               	movf	?_read_prec_or_width+1,w
  2611     01DB  1283               	bcf	3,5	;RP0=0, select bank0
  2612     01DC  1303               	bcf	3,6	;RP1=0, select bank0
  2613     01DD  00EB               	movwf	_prec+1
  2614     01DE  0876               	movf	?_read_prec_or_width,w
  2615     01DF  00EA               	movwf	_prec
  2616     01E0                     i1l1766:
  2617                           
  2618                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  2619     01E0  083F               	movf	vfpfcnvrt@fmt,w
  2620     01E1  0084               	movwf	4
  2621     01E2  1383               	bcf	3,7	;select IRP bank0
  2622     01E3  0800               	movf	0,w
  2623     01E4  00C8               	movwf	vfpfcnvrt@cp
  2624     01E5                     i1l1768:
  2625                           
  2626                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  2627     01E5  0848               	movf	vfpfcnvrt@cp,w
  2628     01E6  0084               	movwf	4
  2629     01E7  120A  118A  270A  120A  118A  	fcall	stringdir
  2630     01EC  3A64               	xorlw	100
  2631     01ED  1903               	skipnz
  2632     01EE  29F0               	goto	u169_21
  2633     01EF  29F1               	goto	u169_20
  2634     01F0                     u169_21:
  2635     01F0  29FD               	goto	i1l1772
  2636     01F1                     u169_20:
  2637     01F1                     i1l1770:
  2638     01F1  0848               	movf	vfpfcnvrt@cp,w
  2639     01F2  0084               	movwf	4
  2640     01F3  120A  118A  270A  120A  118A  	fcall	stringdir
  2641     01F8  3A69               	xorlw	105
  2642     01F9  1D03               	skipz
  2643     01FA  29FC               	goto	u170_21
  2644     01FB  29FD               	goto	u170_20
  2645     01FC                     u170_21:
  2646     01FC  2A1A               	goto	i1l1780
  2647     01FD                     u170_20:
  2648     01FD                     i1l1772:
  2649                           
  2650                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  2651     01FD  0840               	movf	vfpfcnvrt@ap,w
  2652     01FE  0084               	movwf	4
  2653     01FF  0800               	movf	0,w
  2654     0200  00FF               	movwf	btemp+1
  2655     0201  3002               	movlw	2
  2656     0202  0780               	addwf	0,f
  2657     0203  087F               	movf	btemp+1,w
  2658     0204  0084               	movwf	4
  2659     0205  0800               	movf	0,w
  2660     0206  00C3               	movwf	vfpfcnvrt@convarg
  2661     0207  0A84               	incf	4,f
  2662     0208  0800               	movf	0,w
  2663     0209  00C4               	movwf	vfpfcnvrt@convarg+1
  2664     020A                     i1l1774:
  2665                           
  2666                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  2667     020A  083F               	movf	vfpfcnvrt@fmt,w
  2668     020B  0084               	movwf	4
  2669     020C  0848               	movf	vfpfcnvrt@cp,w
  2670     020D  3E01               	addlw	1
  2671     020E  0080               	movwf	0
  2672     020F                     i1l1776:
  2673                           
  2674                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1432:    return (
      +                          void) dtoa(fp, convarg.sint);;	Return value of _vfpfcnvrt is never used
  2675     020F  0844               	movf	vfpfcnvrt@convarg+1,w
  2676     0210  00B4               	movwf	dtoa@d+1
  2677     0211  0843               	movf	vfpfcnvrt@convarg,w
  2678     0212  00B3               	movwf	dtoa@d
  2679     0213  0847               	movf	vfpfcnvrt@fp,w
  2680     0214  120A  118A  202A  120A  118A  	fcall	_dtoa
  2681     0219  2A3B               	goto	i1l773
  2682     021A                     i1l1780:
  2683                           
  2684                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  2685     021A  3001               	movlw	1
  2686     021B  00FF               	movwf	btemp+1
  2687     021C  1283               	bcf	3,5	;RP0=0, select bank0
  2688     021D  1303               	bcf	3,6	;RP1=0, select bank0
  2689     021E  083F               	movf	vfpfcnvrt@fmt,w
  2690     021F  0084               	movwf	4
  2691     0220  087F               	movf	btemp+1,w
  2692     0221  1383               	bcf	3,7	;select IRP bank0
  2693     0222  0780               	addwf	0,f
  2694     0223  2A3B               	goto	i1l773
  2695     0224                     i1l1784:
  2696                           
  2697                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  2698     0224  083F               	movf	vfpfcnvrt@fmt,w
  2699     0225  0084               	movwf	4
  2700     0226  0800               	movf	0,w
  2701     0227  0084               	movwf	4
  2702     0228  120A  118A  270A  120A  118A  	fcall	stringdir
  2703     022D  00C1               	movwf	??_vfpfcnvrt
  2704     022E  01C2               	clrf	??_vfpfcnvrt+1
  2705     022F  0841               	movf	??_vfpfcnvrt,w
  2706     0230  00FB               	movwf	fputc@c
  2707     0231  0842               	movf	??_vfpfcnvrt+1,w
  2708     0232  00FC               	movwf	fputc@c+1
  2709     0233  0847               	movf	vfpfcnvrt@fp,w
  2710     0234  00FD               	movwf	fputc@fp
  2711     0235  120A  118A  22A3  120A  118A  	fcall	_fputc
  2712     023A  2A1A               	goto	i1l1780
  2713     023B                     i1l773:
  2714     023B  0008               	return
  2715     023C                     __end_of_vfpfcnvrt:
  2716                           
  2717                           	psect	text13
  2718     0356                     __ptext13:	
  2719 ;; *************** function _read_prec_or_width *****************
  2720 ;; Defined at:
  2721 ;;		line 1158 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  2722 ;; Parameters:    Size  Location     Type
  2723 ;;  fmt             1    wreg     PTR PTR const unsigned c
  2724 ;;		 -> vfprintf@cfmt(1), 
  2725 ;;  ap              1    6[COMMON] PTR PTR void [1]
  2726 ;;		 -> sprintf@ap(1), 
  2727 ;; Auto vars:     Size  Location     Type
  2728 ;;  fmt             1   11[COMMON] PTR PTR const unsigned c
  2729 ;;		 -> vfprintf@cfmt(1), 
  2730 ;;  c               1    8[COMMON] unsigned char 
  2731 ;;  n               2    9[COMMON] int 
  2732 ;; Return value:  Size  Location     Type
  2733 ;;                  2    6[COMMON] int 
  2734 ;; Registers used:
  2735 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2736 ;; Tracked objects:
  2737 ;;		On entry : 0/0
  2738 ;;		On exit  : 0/0
  2739 ;;		Unchanged: 0/0
  2740 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2741 ;;      Params:         2       0       0       0       0
  2742 ;;      Locals:         4       0       0       0       0
  2743 ;;      Temps:          0       0       0       0       0
  2744 ;;      Totals:         6       0       0       0       0
  2745 ;;Total ram usage:        6 bytes
  2746 ;; Hardware stack levels used: 1
  2747 ;; Hardware stack levels required when called: 1
  2748 ;; This function calls:
  2749 ;;		___wmul
  2750 ;; This function is called by:
  2751 ;;		_vfpfcnvrt
  2752 ;; This function uses a non-reentrant model
  2753 ;;
  2754                           
  2755     0356                     _read_prec_or_width:	
  2756                           ;psect for function _read_prec_or_width
  2757                           
  2758                           
  2759                           ;incstack = 0
  2760 ;; hardware stack exceeded
  2761                           ; Regs used in _read_prec_or_width: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2762                           ;read_prec_or_width@fmt stored from wreg
  2763     0356  00FB               	movwf	read_prec_or_width@fmt
  2764     0357                     i1l1724:
  2765                           
  2766                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1159:     int n =
      +                           0;
  2767     0357  01F9               	clrf	read_prec_or_width@n
  2768     0358  01FA               	clrf	read_prec_or_width@n+1
  2769     0359                     i1l1726:
  2770                           
  2771                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1160:     if ((*f
      +                          mt)[0] == '*') {
  2772     0359  087B               	movf	read_prec_or_width@fmt,w
  2773     035A  0084               	movwf	4
  2774     035B  1383               	bcf	3,7	;select IRP bank0
  2775     035C  0800               	movf	0,w
  2776     035D  0084               	movwf	4
  2777     035E  120A  118A  270A  120A  118A  	fcall	stringdir
  2778     0363  3A2A               	xorlw	42
  2779     0364  1D03               	skipz
  2780     0365  2B67               	goto	u163_21
  2781     0366  2B68               	goto	u163_20
  2782     0367                     u163_21:
  2783     0367  2B98               	goto	i1l1734
  2784     0368                     u163_20:
  2785     0368                     i1l1728:
  2786                           
  2787                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1161:         ++*
      +                          fmt;
  2788     0368  3001               	movlw	1
  2789     0369  00FF               	movwf	btemp+1
  2790     036A  087B               	movf	read_prec_or_width@fmt,w
  2791     036B  0084               	movwf	4
  2792     036C  087F               	movf	btemp+1,w
  2793     036D  0780               	addwf	0,f
  2794                           
  2795                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1162:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
  2796     036E  0876               	movf	read_prec_or_width@ap,w
  2797     036F  0084               	movwf	4
  2798     0370  0800               	movf	0,w
  2799     0371  00FF               	movwf	btemp+1
  2800     0372  3002               	movlw	2
  2801     0373  0780               	addwf	0,f
  2802     0374  087F               	movf	btemp+1,w
  2803     0375  0084               	movwf	4
  2804     0376  0800               	movf	0,w
  2805     0377  00F9               	movwf	read_prec_or_width@n
  2806     0378  0A84               	incf	4,f
  2807     0379  0800               	movf	0,w
  2808     037A  00FA               	movwf	read_prec_or_width@n+1
  2809                           
  2810                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1163:     } else 
      +                          {
  2811     037B  2BA9               	goto	i1l1736
  2812     037C                     i1l1730:
  2813                           
  2814                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1166:            
      +                           n = n * 10 + c;
  2815     037C  087A               	movf	read_prec_or_width@n+1,w
  2816     037D  00F1               	movwf	___wmul@multiplier+1
  2817     037E  0879               	movf	read_prec_or_width@n,w
  2818     037F  00F0               	movwf	___wmul@multiplier
  2819     0380  300A               	movlw	10
  2820     0381  00F2               	movwf	___wmul@multiplicand
  2821     0382  3000               	movlw	0
  2822     0383  00F3               	movwf	___wmul@multiplicand+1
  2823     0384  120A  118A  274D  120A  118A  	fcall	___wmul
  2824     0389  0878               	movf	read_prec_or_width@c,w
  2825     038A  0770               	addwf	?___wmul,w
  2826     038B  00F9               	movwf	read_prec_or_width@n
  2827     038C  3000               	movlw	0
  2828     038D  1803               	skipnc
  2829     038E  3001               	movlw	1
  2830     038F  0771               	addwf	?___wmul+1,w
  2831     0390  00FA               	movwf	read_prec_or_width@n+1
  2832     0391                     i1l1732:
  2833                           
  2834                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1167:            
      +                           ++*fmt;
  2835     0391  3001               	movlw	1
  2836     0392  00FF               	movwf	btemp+1
  2837     0393  087B               	movf	read_prec_or_width@fmt,w
  2838     0394  0084               	movwf	4
  2839     0395  087F               	movf	btemp+1,w
  2840     0396  1383               	bcf	3,7	;select IRP bank0
  2841     0397  0780               	addwf	0,f
  2842     0398                     i1l1734:
  2843                           
  2844                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1165:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
  2845     0398  087B               	movf	read_prec_or_width@fmt,w
  2846     0399  0084               	movwf	4
  2847     039A  0800               	movf	0,w
  2848     039B  0084               	movwf	4
  2849     039C  120A  118A  270A  120A  118A  	fcall	stringdir
  2850     03A1  3ED0               	addlw	208
  2851     03A2  00F8               	movwf	read_prec_or_width@c
  2852     03A3  300A               	movlw	10
  2853     03A4  0278               	subwf	read_prec_or_width@c,w
  2854     03A5  1C03               	skipc
  2855     03A6  2BA8               	goto	u164_21
  2856     03A7  2BA9               	goto	u164_20
  2857     03A8                     u164_21:
  2858     03A8  2B7C               	goto	i1l1730
  2859     03A9                     u164_20:
  2860     03A9                     i1l1736:
  2861                           
  2862                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1170:     return 
      +                          n;
  2863     03A9  087A               	movf	read_prec_or_width@n+1,w
  2864     03AA  00F7               	movwf	?_read_prec_or_width+1
  2865     03AB  0879               	movf	read_prec_or_width@n,w
  2866     03AC  00F6               	movwf	?_read_prec_or_width
  2867     03AD                     i1l765:
  2868     03AD  0008               	return
  2869     03AE                     __end_of_read_prec_or_width:
  2870                           
  2871                           	psect	text14
  2872     074D                     __ptext14:	
  2873 ;; *************** function ___wmul *****************
  2874 ;; Defined at:
  2875 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\Umul16.c"
  2876 ;; Parameters:    Size  Location     Type
  2877 ;;  multiplier      2    0[COMMON] unsigned int 
  2878 ;;  multiplicand    2    2[COMMON] unsigned int 
  2879 ;; Auto vars:     Size  Location     Type
  2880 ;;  product         2    4[COMMON] unsigned int 
  2881 ;; Return value:  Size  Location     Type
  2882 ;;                  2    0[COMMON] unsigned int 
  2883 ;; Registers used:
  2884 ;;		wreg, status,2, status,0
  2885 ;; Tracked objects:
  2886 ;;		On entry : 0/0
  2887 ;;		On exit  : 0/0
  2888 ;;		Unchanged: 0/0
  2889 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2890 ;;      Params:         4       0       0       0       0
  2891 ;;      Locals:         2       0       0       0       0
  2892 ;;      Temps:          0       0       0       0       0
  2893 ;;      Totals:         6       0       0       0       0
  2894 ;;Total ram usage:        6 bytes
  2895 ;; Hardware stack levels used: 1
  2896 ;; This function calls:
  2897 ;;		Nothing
  2898 ;; This function is called by:
  2899 ;;		_read_prec_or_width
  2900 ;; This function uses a non-reentrant model
  2901 ;;
  2902                           
  2903     074D                     ___wmul:	
  2904                           ;psect for function ___wmul
  2905                           
  2906     074D                     i1l1524:	
  2907                           ;incstack = 0
  2908 ;; hardware stack exceeded
  2909                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2910                           
  2911     074D  01F4               	clrf	___wmul@product
  2912     074E  01F5               	clrf	___wmul@product+1
  2913     074F                     i1l1526:
  2914     074F  1C70               	btfss	___wmul@multiplier,0
  2915     0750  2F52               	goto	u126_21
  2916     0751  2F53               	goto	u126_20
  2917     0752                     u126_21:
  2918     0752  2F59               	goto	i1l253
  2919     0753                     u126_20:
  2920     0753                     i1l1528:
  2921     0753  0872               	movf	___wmul@multiplicand,w
  2922     0754  07F4               	addwf	___wmul@product,f
  2923     0755  1803               	skipnc
  2924     0756  0AF5               	incf	___wmul@product+1,f
  2925     0757  0873               	movf	___wmul@multiplicand+1,w
  2926     0758  07F5               	addwf	___wmul@product+1,f
  2927     0759                     i1l253:
  2928     0759  3001               	movlw	1
  2929     075A                     u127_25:
  2930     075A  1003               	clrc
  2931     075B  0DF2               	rlf	___wmul@multiplicand,f
  2932     075C  0DF3               	rlf	___wmul@multiplicand+1,f
  2933     075D  3EFF               	addlw	-1
  2934     075E  1D03               	skipz
  2935     075F  2F5A               	goto	u127_25
  2936     0760                     i1l1530:
  2937     0760  3001               	movlw	1
  2938     0761                     u128_25:
  2939     0761  1003               	clrc
  2940     0762  0CF1               	rrf	___wmul@multiplier+1,f
  2941     0763  0CF0               	rrf	___wmul@multiplier,f
  2942     0764  3EFF               	addlw	-1
  2943     0765  1D03               	skipz
  2944     0766  2F61               	goto	u128_25
  2945     0767                     i1l1532:
  2946     0767  0870               	movf	___wmul@multiplier,w
  2947     0768  0471               	iorwf	___wmul@multiplier+1,w
  2948     0769  1D03               	btfss	3,2
  2949     076A  2F6C               	goto	u129_21
  2950     076B  2F6D               	goto	u129_20
  2951     076C                     u129_21:
  2952     076C  2F4F               	goto	i1l1526
  2953     076D                     u129_20:
  2954     076D                     i1l1534:
  2955     076D  0875               	movf	___wmul@product+1,w
  2956     076E  00F1               	movwf	?___wmul+1
  2957     076F  0874               	movf	___wmul@product,w
  2958     0770  00F0               	movwf	?___wmul
  2959     0771                     i1l255:
  2960     0771  0008               	return
  2961     0772                     __end_of___wmul:
  2962                           
  2963                           	psect	text15
  2964     002A                     __ptext15:	
  2965 ;; *************** function _dtoa *****************
  2966 ;; Defined at:
  2967 ;;		line 513 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  2968 ;; Parameters:    Size  Location     Type
  2969 ;;  fp              1    wreg     PTR struct _IO_FILE
  2970 ;;		 -> sprintf@f(11), 
  2971 ;;  d               2   19[BANK0 ] int 
  2972 ;; Auto vars:     Size  Location     Type
  2973 ;;  fp              1   23[BANK0 ] PTR struct _IO_FILE
  2974 ;;		 -> sprintf@f(11), 
  2975 ;;  i               2   29[BANK0 ] int 
  2976 ;;  p               2   26[BANK0 ] int 
  2977 ;;  w               2   24[BANK0 ] int 
  2978 ;;  s               1   28[BANK0 ] unsigned char 
  2979 ;; Return value:  Size  Location     Type
  2980 ;;                  1    wreg      void 
  2981 ;; Registers used:
  2982 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2983 ;; Tracked objects:
  2984 ;;		On entry : 0/0
  2985 ;;		On exit  : 0/0
  2986 ;;		Unchanged: 0/0
  2987 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2988 ;;      Params:         0       2       0       0       0
  2989 ;;      Locals:         0      10       0       0       0
  2990 ;;      Temps:          0       0       0       0       0
  2991 ;;      Totals:         0      12       0       0       0
  2992 ;;Total ram usage:       12 bytes
  2993 ;; Hardware stack levels used: 1
  2994 ;; Hardware stack levels required when called: 8
  2995 ;; This function calls:
  2996 ;;		___awdiv
  2997 ;;		___awmod
  2998 ;;		_abs
  2999 ;;		_pad
  3000 ;; This function is called by:
  3001 ;;		_vfpfcnvrt
  3002 ;; This function uses a non-reentrant model
  3003 ;;
  3004                           
  3005     002A                     _dtoa:	
  3006                           ;psect for function _dtoa
  3007                           
  3008                           
  3009                           ;incstack = 0
  3010 ;; hardware stack exceeded
  3011                           ; Regs used in _dtoa: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3012                           ;dtoa@fp stored from wreg
  3013     002A  1283               	bcf	3,5	;RP0=0, select bank0
  3014     002B  1303               	bcf	3,6	;RP1=0, select bank0
  3015     002C  00B7               	movwf	dtoa@fp
  3016     002D                     i1l1678:
  3017                           
  3018                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 513: static void 
      +                          dtoa(FILE *fp, vfpf_sint_t d);C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\commo
      +                          n\doprnt.c: 514: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c:
      +                           515:  char s;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 516
      +                          :     int i, w;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 51
      +                          8:  int p;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 524:   
      +                            s = d < 0 ? 1 : 0;
  3019     002D  1BB4               	btfsc	dtoa@d+1,7
  3020     002E  2830               	goto	u154_21
  3021     002F  2832               	goto	u154_20
  3022     0030                     u154_21:
  3023     0030  3001               	movlw	1
  3024     0031  2833               	goto	u155_20
  3025     0032                     u154_20:
  3026     0032  3000               	movlw	0
  3027     0033                     u155_20:
  3028     0033  00BC               	movwf	dtoa@s
  3029     0034                     i1l1680:
  3030                           
  3031                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 533:     p = (0 <
      +                          = prec) ? prec : 1;
  3032     0034  1FEB               	btfss	_prec+1,7
  3033     0035  2837               	goto	u156_21
  3034     0036  2838               	goto	u156_20
  3035     0037                     u156_21:
  3036     0037  283D               	goto	i1l1684
  3037     0038                     u156_20:
  3038     0038                     i1l1682:
  3039     0038  3001               	movlw	1
  3040     0039  00BA               	movwf	dtoa@p
  3041     003A  3000               	movlw	0
  3042     003B  00BB               	movwf	dtoa@p+1
  3043     003C  2841               	goto	i1l745
  3044     003D                     i1l1684:
  3045     003D  086B               	movf	_prec+1,w
  3046     003E  00BB               	movwf	dtoa@p+1
  3047     003F  086A               	movf	_prec,w
  3048     0040  00BA               	movwf	dtoa@p
  3049     0041                     i1l745:
  3050                           
  3051                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 535:     w = widt
      +                          h;
  3052     0041  0869               	movf	_width+1,w
  3053     0042  00B9               	movwf	dtoa@w+1
  3054     0043  0868               	movf	_width,w
  3055     0044  00B8               	movwf	dtoa@w
  3056     0045                     i1l1686:
  3057                           
  3058                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 536:     if (s
  3059     0045  083C               	movf	dtoa@s,w
  3060     0046  1903               	btfsc	3,2
  3061     0047  2849               	goto	u157_21
  3062     0048  284A               	goto	u157_20
  3063     0049                     u157_21:
  3064     0049  2860               	goto	i1l746
  3065     004A                     u157_20:
  3066     004A                     i1l1688:
  3067                           
  3068                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 540:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 541:         --w;
  3069     004A  30FF               	movlw	255
  3070     004B  07B8               	addwf	dtoa@w,f
  3071     004C  1803               	skipnc
  3072     004D  0AB9               	incf	dtoa@w+1,f
  3073     004E  30FF               	movlw	255
  3074     004F  07B9               	addwf	dtoa@w+1,f
  3075     0050                     i1l1690:
  3076                           
  3077                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 542:   s = s ? '-
      +                          ' : '+';
  3078     0050  083C               	movf	dtoa@s,w
  3079     0051  1D03               	btfss	3,2
  3080     0052  2854               	goto	u158_21
  3081     0053  2855               	goto	u158_20
  3082     0054                     u158_21:
  3083     0054  285A               	goto	i1l1694
  3084     0055                     u158_20:
  3085     0055                     i1l1692:
  3086     0055  302B               	movlw	43
  3087     0056  00B5               	movwf	_dtoa$697
  3088     0057  3000               	movlw	0
  3089     0058  00B6               	movwf	_dtoa$697+1
  3090     0059  285E               	goto	i1l750
  3091     005A                     i1l1694:
  3092     005A  302D               	movlw	45
  3093     005B  00B5               	movwf	_dtoa$697
  3094     005C  3000               	movlw	0
  3095     005D  00B6               	movwf	_dtoa$697+1
  3096     005E                     i1l750:
  3097     005E  0835               	movf	_dtoa$697,w
  3098     005F  00BC               	movwf	dtoa@s
  3099     0060                     i1l746:	
  3100                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 543:     }
  3101                           
  3102                           
  3103                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 552:     i = size
      +                          of(dbuf) - 1;
  3104     0060  301F               	movlw	31
  3105     0061  00BD               	movwf	dtoa@i
  3106     0062  3000               	movlw	0
  3107     0063  00BE               	movwf	dtoa@i+1
  3108     0064                     i1l1696:
  3109                           
  3110                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 553:     dbuf[i] 
      +                          = '\0';
  3111     0064  1683               	bsf	3,5	;RP0=1, select bank1
  3112     0065  1303               	bcf	3,6	;RP1=0, select bank1
  3113     0066  01BF               	clrf	(_dbuf^(0+128)+31)
  3114                           
  3115                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
  3116     0067  28AE               	goto	i1l1708
  3117     0068                     i1l1698:
  3118                           
  3119                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 563:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 564:         --i;
  3120     0068  30FF               	movlw	255
  3121     0069  1283               	bcf	3,5	;RP0=0, select bank0
  3122     006A  1303               	bcf	3,6	;RP1=0, select bank0
  3123     006B  07BD               	addwf	dtoa@i,f
  3124     006C  1803               	skipnc
  3125     006D  0ABE               	incf	dtoa@i+1,f
  3126     006E  30FF               	movlw	255
  3127     006F  07BE               	addwf	dtoa@i+1,f
  3128     0070                     i1l1700:
  3129                           
  3130                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 565:         dbuf
      +                          [i] = (char)((int)'0' + abs(d % 10));
  3131     0070  083D               	movf	dtoa@i,w
  3132     0071  3EA0               	addlw	(low (_dbuf| 0))& (0+255)
  3133     0072  0084               	movwf	4
  3134     0073  300A               	movlw	10
  3135     0074  00F0               	movwf	___awmod@divisor
  3136     0075  3000               	movlw	0
  3137     0076  00F1               	movwf	___awmod@divisor+1
  3138     0077  0834               	movf	dtoa@d+1,w
  3139     0078  00F3               	movwf	___awmod@dividend+1
  3140     0079  0833               	movf	dtoa@d,w
  3141     007A  00F2               	movwf	___awmod@dividend
  3142     007B  120A  118A  22FD  120A  118A  	fcall	___awmod
  3143     0080  0871               	movf	?___awmod+1,w
  3144     0081  00F7               	movwf	abs@a+1
  3145     0082  0870               	movf	?___awmod,w
  3146     0083  00F6               	movwf	abs@a
  3147     0084  120A  118A  26E8  120A  118A  	fcall	_abs
  3148     0089  0876               	movf	?_abs,w
  3149     008A  3E30               	addlw	48
  3150     008B  1383               	bcf	3,7	;select IRP bank1
  3151     008C  0080               	movwf	0
  3152     008D                     i1l1702:
  3153                           
  3154                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 567:         --p;
  3155     008D  30FF               	movlw	255
  3156     008E  1283               	bcf	3,5	;RP0=0, select bank0
  3157     008F  1303               	bcf	3,6	;RP1=0, select bank0
  3158     0090  07BA               	addwf	dtoa@p,f
  3159     0091  1803               	skipnc
  3160     0092  0ABB               	incf	dtoa@p+1,f
  3161     0093  30FF               	movlw	255
  3162     0094  07BB               	addwf	dtoa@p+1,f
  3163     0095                     i1l1704:
  3164                           
  3165                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 571:         --w;
  3166     0095  30FF               	movlw	255
  3167     0096  07B8               	addwf	dtoa@w,f
  3168     0097  1803               	skipnc
  3169     0098  0AB9               	incf	dtoa@w+1,f
  3170     0099  30FF               	movlw	255
  3171     009A  07B9               	addwf	dtoa@w+1,f
  3172     009B                     i1l1706:
  3173                           
  3174                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 572:         d = 
      +                          d / 10;
  3175     009B  300A               	movlw	10
  3176     009C  00F0               	movwf	___awdiv@divisor
  3177     009D  3000               	movlw	0
  3178     009E  00F1               	movwf	___awdiv@divisor+1
  3179     009F  0834               	movf	dtoa@d+1,w
  3180     00A0  00F3               	movwf	___awdiv@dividend+1
  3181     00A1  0833               	movf	dtoa@d,w
  3182     00A2  00F2               	movwf	___awdiv@dividend
  3183     00A3  120A  118A  223C  120A  118A  	fcall	___awdiv
  3184     00A8  0871               	movf	?___awdiv+1,w
  3185     00A9  1283               	bcf	3,5	;RP0=0, select bank0
  3186     00AA  1303               	bcf	3,6	;RP1=0, select bank0
  3187     00AB  00B4               	movwf	dtoa@d+1
  3188     00AC  0870               	movf	?___awdiv,w
  3189     00AD  00B3               	movwf	dtoa@d
  3190     00AE                     i1l1708:
  3191                           
  3192                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
  3193     00AE  1283               	bcf	3,5	;RP0=0, select bank0
  3194     00AF  083E               	movf	dtoa@i+1,w
  3195     00B0  3A80               	xorlw	128
  3196     00B1  00FF               	movwf	btemp+1
  3197     00B2  3080               	movlw	128
  3198     00B3  027F               	subwf	btemp+1,w
  3199     00B4  1D03               	skipz
  3200     00B5  28B8               	goto	u159_25
  3201     00B6  3001               	movlw	1
  3202     00B7  023D               	subwf	dtoa@i,w
  3203     00B8                     u159_25:
  3204     00B8  1C03               	skipc
  3205     00B9  28BB               	goto	u159_21
  3206     00BA  28BC               	goto	u159_20
  3207     00BB                     u159_21:
  3208     00BB  28D1               	goto	i1l1714
  3209     00BC                     u159_20:
  3210     00BC                     i1l1710:
  3211     00BC  1283               	bcf	3,5	;RP0=0, select bank0
  3212     00BD  1303               	bcf	3,6	;RP1=0, select bank0
  3213     00BE  0833               	movf	dtoa@d,w
  3214     00BF  0434               	iorwf	dtoa@d+1,w
  3215     00C0  1D03               	btfss	3,2
  3216     00C1  28C3               	goto	u160_21
  3217     00C2  28C4               	goto	u160_20
  3218     00C3                     u160_21:
  3219     00C3  2868               	goto	i1l1698
  3220     00C4                     u160_20:
  3221     00C4                     i1l1712:
  3222     00C4  083B               	movf	dtoa@p+1,w
  3223     00C5  3A80               	xorlw	128
  3224     00C6  00FF               	movwf	btemp+1
  3225     00C7  3080               	movlw	128
  3226     00C8  027F               	subwf	btemp+1,w
  3227     00C9  1D03               	skipz
  3228     00CA  28CD               	goto	u161_25
  3229     00CB  3001               	movlw	1
  3230     00CC  023A               	subwf	dtoa@p,w
  3231     00CD                     u161_25:
  3232     00CD  1803               	skipnc
  3233     00CE  28D0               	goto	u161_21
  3234     00CF  28D1               	goto	u161_20
  3235     00D0                     u161_21:
  3236     00D0  2868               	goto	i1l1698
  3237     00D1                     u161_20:
  3238     00D1                     i1l1714:
  3239                           
  3240                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 576:     if (s !=
      +                           0) {
  3241     00D1  1283               	bcf	3,5	;RP0=0, select bank0
  3242     00D2  1303               	bcf	3,6	;RP1=0, select bank0
  3243     00D3  083C               	movf	dtoa@s,w
  3244     00D4  1903               	btfsc	3,2
  3245     00D5  28D7               	goto	u162_21
  3246     00D6  28D8               	goto	u162_20
  3247     00D7                     u162_21:
  3248     00D7  28E4               	goto	i1l1720
  3249     00D8                     u162_20:
  3250     00D8                     i1l1716:
  3251                           
  3252                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 577:         --i;
  3253     00D8  30FF               	movlw	255
  3254     00D9  07BD               	addwf	dtoa@i,f
  3255     00DA  1803               	skipnc
  3256     00DB  0ABE               	incf	dtoa@i+1,f
  3257     00DC  30FF               	movlw	255
  3258     00DD  07BE               	addwf	dtoa@i+1,f
  3259     00DE                     i1l1718:
  3260                           
  3261                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 578:         dbuf
      +                          [i] = s;
  3262     00DE  083D               	movf	dtoa@i,w
  3263     00DF  3EA0               	addlw	(low (_dbuf| 0))& (0+255)
  3264     00E0  0084               	movwf	4
  3265     00E1  083C               	movf	dtoa@s,w
  3266     00E2  1383               	bcf	3,7	;select IRP bank1
  3267     00E3  0080               	movwf	0
  3268     00E4                     i1l1720:
  3269                           
  3270                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 582:     return (
      +                          void) pad(fp, &dbuf[i], w);
  3271     00E4  083D               	movf	dtoa@i,w
  3272     00E5  3EA0               	addlw	(low (_dbuf| 0))& (0+255)
  3273     00E6  00AC               	movwf	pad@buf
  3274     00E7  0839               	movf	dtoa@w+1,w
  3275     00E8  00AE               	movwf	pad@p+1
  3276     00E9  0838               	movf	dtoa@w,w
  3277     00EA  00AD               	movwf	pad@p
  3278     00EB  0837               	movf	dtoa@fp,w
  3279     00EC  120A  118A  25E5  120A  118A  	fcall	_pad
  3280     00F1                     i1l757:
  3281     00F1  0008               	return
  3282     00F2                     __end_of_dtoa:
  3283                           
  3284                           	psect	text16
  3285     05E5                     __ptext16:	
  3286 ;; *************** function _pad *****************
  3287 ;; Defined at:
  3288 ;;		line 193 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  3289 ;; Parameters:    Size  Location     Type
  3290 ;;  fp              1    wreg     PTR struct _IO_FILE
  3291 ;;		 -> sprintf@f(11), 
  3292 ;;  buf             1   12[BANK0 ] PTR unsigned char 
  3293 ;;		 -> dbuf(32), 
  3294 ;;  p               2   13[BANK0 ] int 
  3295 ;; Auto vars:     Size  Location     Type
  3296 ;;  fp              1   18[BANK0 ] PTR struct _IO_FILE
  3297 ;;		 -> sprintf@f(11), 
  3298 ;;  i               2   16[BANK0 ] int 
  3299 ;; Return value:  Size  Location     Type
  3300 ;;                  1    wreg      void 
  3301 ;; Registers used:
  3302 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3303 ;; Tracked objects:
  3304 ;;		On entry : 0/0
  3305 ;;		On exit  : 0/0
  3306 ;;		Unchanged: 0/0
  3307 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3308 ;;      Params:         0       3       0       0       0
  3309 ;;      Locals:         0       3       0       0       0
  3310 ;;      Temps:          0       1       0       0       0
  3311 ;;      Totals:         0       7       0       0       0
  3312 ;;Total ram usage:        7 bytes
  3313 ;; Hardware stack levels used: 1
  3314 ;; Hardware stack levels required when called: 7
  3315 ;; This function calls:
  3316 ;;		_fputc
  3317 ;;		_fputs
  3318 ;; This function is called by:
  3319 ;;		_dtoa
  3320 ;; This function uses a non-reentrant model
  3321 ;;
  3322                           
  3323     05E5                     _pad:	
  3324                           ;psect for function _pad
  3325                           
  3326                           
  3327                           ;incstack = 0
  3328 ;; hardware stack exceeded
  3329                           ; Regs used in _pad: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3330                           ;pad@fp stored from wreg
  3331     05E5  1283               	bcf	3,5	;RP0=0, select bank0
  3332     05E6  1303               	bcf	3,6	;RP1=0, select bank0
  3333     05E7  00B2               	movwf	pad@fp
  3334     05E8                     i1l1620:
  3335                           
  3336                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 193: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\com
      +                          mon\doprnt.c: 194: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.
      +                          c: 195:     int i;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c:
      +                           205:  if (p < 0) {
  3337     05E8  1FAE               	btfss	pad@p+1,7
  3338     05E9  2DEB               	goto	u149_21
  3339     05EA  2DEC               	goto	u149_20
  3340     05EB                     u149_21:
  3341     05EB  2DEE               	goto	i1l735
  3342     05EC                     u149_20:
  3343     05EC                     i1l1622:
  3344                           
  3345                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 206:   p = 0;
  3346     05EC  01AD               	clrf	pad@p
  3347     05ED  01AE               	clrf	pad@p+1
  3348     05EE                     i1l735:	
  3349                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 207:  }
  3350                           
  3351                           
  3352                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 208:     i = 0;
  3353     05EE  01B0               	clrf	pad@i
  3354     05EF  01B1               	clrf	pad@i+1
  3355                           
  3356                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  3357     05F0  2E06               	goto	i1l1628
  3358     05F1                     i1l1624:
  3359                           
  3360                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 210:         fput
      +                          c(' ', fp);
  3361     05F1  3020               	movlw	32
  3362     05F2  00FB               	movwf	fputc@c
  3363     05F3  3000               	movlw	0
  3364     05F4  00FC               	movwf	fputc@c+1
  3365     05F5  1283               	bcf	3,5	;RP0=0, select bank0
  3366     05F6  1303               	bcf	3,6	;RP1=0, select bank0
  3367     05F7  0832               	movf	pad@fp,w
  3368     05F8  00FD               	movwf	fputc@fp
  3369     05F9  120A  118A  22A3  120A  118A  	fcall	_fputc
  3370     05FE                     i1l1626:
  3371                           
  3372                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 211:         ++i;
  3373     05FE  3001               	movlw	1
  3374     05FF  1283               	bcf	3,5	;RP0=0, select bank0
  3375     0600  1303               	bcf	3,6	;RP1=0, select bank0
  3376     0601  07B0               	addwf	pad@i,f
  3377     0602  1803               	skipnc
  3378     0603  0AB1               	incf	pad@i+1,f
  3379     0604  3000               	movlw	0
  3380     0605  07B1               	addwf	pad@i+1,f
  3381     0606                     i1l1628:
  3382                           
  3383                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  3384     0606  0831               	movf	pad@i+1,w
  3385     0607  3A80               	xorlw	128
  3386     0608  00AF               	movwf	??_pad
  3387     0609  082E               	movf	pad@p+1,w
  3388     060A  3A80               	xorlw	128
  3389     060B  022F               	subwf	??_pad,w
  3390     060C  1D03               	skipz
  3391     060D  2E10               	goto	u150_25
  3392     060E  082D               	movf	pad@p,w
  3393     060F  0230               	subwf	pad@i,w
  3394     0610                     u150_25:
  3395     0610  1C03               	skipc
  3396     0611  2E13               	goto	u150_21
  3397     0612  2E14               	goto	u150_20
  3398     0613                     u150_21:
  3399     0613  2DF1               	goto	i1l1624
  3400     0614                     u150_20:
  3401     0614                     i1l1630:
  3402                           
  3403                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 218:         fput
      +                          s((const char *)buf, fp);
  3404     0614  1283               	bcf	3,5	;RP0=0, select bank0
  3405     0615  1303               	bcf	3,6	;RP1=0, select bank0
  3406     0616  0832               	movf	pad@fp,w
  3407     0617  00A5               	movwf	fputs@fp
  3408     0618  082C               	movf	pad@buf,w
  3409     0619  120A  118A  26BE  120A  118A  	fcall	_fputs
  3410     061E                     i1l739:
  3411     061E  0008               	return
  3412     061F                     __end_of_pad:
  3413                           
  3414                           	psect	text17
  3415     06BE                     __ptext17:	
  3416 ;; *************** function _fputs *****************
  3417 ;; Defined at:
  3418 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\nf_fputs.c"
  3419 ;; Parameters:    Size  Location     Type
  3420 ;;  s               1    wreg     PTR const unsigned char 
  3421 ;;		 -> dbuf(32), 
  3422 ;;  fp              1    5[BANK0 ] PTR struct _IO_FILE
  3423 ;;		 -> sprintf@f(11), 
  3424 ;; Auto vars:     Size  Location     Type
  3425 ;;  s               1   11[BANK0 ] PTR const unsigned char 
  3426 ;;		 -> dbuf(32), 
  3427 ;;  i               2    9[BANK0 ] int 
  3428 ;;  c               1    8[BANK0 ] unsigned char 
  3429 ;; Return value:  Size  Location     Type
  3430 ;;                  2    5[BANK0 ] int 
  3431 ;; Registers used:
  3432 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3433 ;; Tracked objects:
  3434 ;;		On entry : 0/0
  3435 ;;		On exit  : 0/0
  3436 ;;		Unchanged: 0/0
  3437 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3438 ;;      Params:         0       1       0       0       0
  3439 ;;      Locals:         0       4       0       0       0
  3440 ;;      Temps:          0       2       0       0       0
  3441 ;;      Totals:         0       7       0       0       0
  3442 ;;Total ram usage:        7 bytes
  3443 ;; Hardware stack levels used: 1
  3444 ;; Hardware stack levels required when called: 6
  3445 ;; This function calls:
  3446 ;;		_fputc
  3447 ;; This function is called by:
  3448 ;;		_pad
  3449 ;; This function uses a non-reentrant model
  3450 ;;
  3451                           
  3452     06BE                     _fputs:	
  3453                           ;psect for function _fputs
  3454                           
  3455                           
  3456                           ;incstack = 0
  3457 ;; hardware stack exceeded
  3458                           ; Regs used in _fputs: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3459                           ;fputs@s stored from wreg
  3460     06BE  1283               	bcf	3,5	;RP0=0, select bank0
  3461     06BF  1303               	bcf	3,6	;RP1=0, select bank0
  3462     06C0  00AB               	movwf	fputs@s
  3463     06C1                     i1l1500:
  3464     06C1  01A9               	clrf	fputs@i
  3465     06C2  01AA               	clrf	fputs@i+1
  3466     06C3  2EDA               	goto	i1l1506
  3467     06C4                     i1l1502:
  3468     06C4  0828               	movf	fputs@c,w
  3469     06C5  00A6               	movwf	??_fputs
  3470     06C6  01A7               	clrf	??_fputs+1
  3471     06C7  0826               	movf	??_fputs,w
  3472     06C8  00FB               	movwf	fputc@c
  3473     06C9  0827               	movf	??_fputs+1,w
  3474     06CA  00FC               	movwf	fputc@c+1
  3475     06CB  0825               	movf	fputs@fp,w
  3476     06CC  00FD               	movwf	fputc@fp
  3477     06CD  120A  118A  22A3  120A  118A  	fcall	_fputc
  3478     06D2                     i1l1504:
  3479     06D2  3001               	movlw	1
  3480     06D3  1283               	bcf	3,5	;RP0=0, select bank0
  3481     06D4  1303               	bcf	3,6	;RP1=0, select bank0
  3482     06D5  07A9               	addwf	fputs@i,f
  3483     06D6  1803               	skipnc
  3484     06D7  0AAA               	incf	fputs@i+1,f
  3485     06D8  3000               	movlw	0
  3486     06D9  07AA               	addwf	fputs@i+1,f
  3487     06DA                     i1l1506:
  3488     06DA  0829               	movf	fputs@i,w
  3489     06DB  072B               	addwf	fputs@s,w
  3490     06DC  00A6               	movwf	??_fputs
  3491     06DD  0826               	movf	??_fputs,w
  3492     06DE  0084               	movwf	4
  3493     06DF  1383               	bcf	3,7	;select IRP bank0
  3494     06E0  0800               	movf	0,w
  3495     06E1  00A8               	movwf	fputs@c
  3496     06E2  0828               	movf	fputs@c,w
  3497     06E3  1D03               	btfss	3,2
  3498     06E4  2EE6               	goto	u117_21
  3499     06E5  2EE7               	goto	u117_20
  3500     06E6                     u117_21:
  3501     06E6  2EC4               	goto	i1l1502
  3502     06E7                     u117_20:
  3503     06E7                     i1l806:
  3504     06E7  0008               	return
  3505     06E8                     __end_of_fputs:
  3506                           
  3507                           	psect	text18
  3508     02A3                     __ptext18:	
  3509 ;; *************** function _fputc *****************
  3510 ;; Defined at:
  3511 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\nf_fputc.c"
  3512 ;; Parameters:    Size  Location     Type
  3513 ;;  c               2   11[COMMON] int 
  3514 ;;  fp              1   13[COMMON] PTR struct _IO_FILE
  3515 ;;		 -> sprintf@f(11), 
  3516 ;; Auto vars:     Size  Location     Type
  3517 ;;		None
  3518 ;; Return value:  Size  Location     Type
  3519 ;;                  2   11[COMMON] int 
  3520 ;; Registers used:
  3521 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3522 ;; Tracked objects:
  3523 ;;		On entry : 0/0
  3524 ;;		On exit  : 0/0
  3525 ;;		Unchanged: 0/0
  3526 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3527 ;;      Params:         3       0       0       0       0
  3528 ;;      Locals:         0       0       0       0       0
  3529 ;;      Temps:          0       5       0       0       0
  3530 ;;      Totals:         3       5       0       0       0
  3531 ;;Total ram usage:        8 bytes
  3532 ;; Hardware stack levels used: 1
  3533 ;; Hardware stack levels required when called: 5
  3534 ;; This function calls:
  3535 ;;		_putch
  3536 ;; This function is called by:
  3537 ;;		_pad
  3538 ;;		_vfpfcnvrt
  3539 ;;		_fputs
  3540 ;; This function uses a non-reentrant model
  3541 ;;
  3542                           
  3543     02A3                     _fputc:	
  3544                           ;psect for function _fputc
  3545                           
  3546     02A3                     i1l1486:	
  3547                           ;incstack = 0
  3548 ;; hardware stack exceeded
  3549                           ; Regs used in _fputc: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3550                           
  3551     02A3  087D               	movf	fputc@fp,w
  3552     02A4  1903               	btfsc	3,2
  3553     02A5  2AA7               	goto	u113_21
  3554     02A6  2AA8               	goto	u113_20
  3555     02A7                     u113_21:
  3556     02A7  2AAD               	goto	i1l1490
  3557     02A8                     u113_20:
  3558     02A8                     i1l1488:
  3559     02A8  087D               	movf	fputc@fp,w
  3560     02A9  1D03               	btfss	3,2
  3561     02AA  2AAC               	goto	u114_21
  3562     02AB  2AAD               	goto	u114_20
  3563     02AC                     u114_21:
  3564     02AC  2AB4               	goto	i1l1492
  3565     02AD                     u114_20:
  3566     02AD                     i1l1490:
  3567     02AD  087B               	movf	fputc@c,w
  3568     02AE  120A  158A  27F8  120A  118A  	fcall	_putch
  3569     02B3  2AFC               	goto	i1l798
  3570     02B4                     i1l1492:
  3571     02B4  087D               	movf	fputc@fp,w
  3572     02B5  3E09               	addlw	9
  3573     02B6  0084               	movwf	4
  3574     02B7  1383               	bcf	3,7	;select IRP bank0
  3575     02B8  0800               	movf	0,w
  3576     02B9  1283               	bcf	3,5	;RP0=0, select bank0
  3577     02BA  1303               	bcf	3,6	;RP1=0, select bank0
  3578     02BB  00A0               	movwf	??_fputc
  3579     02BC  0A84               	incf	4,f
  3580     02BD  0800               	movf	0,w
  3581     02BE  00A1               	movwf	??_fputc+1
  3582     02BF  0820               	movf	??_fputc,w
  3583     02C0  0421               	iorwf	??_fputc+1,w
  3584     02C1  1903               	btfsc	3,2
  3585     02C2  2AC4               	goto	u115_21
  3586     02C3  2AC5               	goto	u115_20
  3587     02C4                     u115_21:
  3588     02C4  2AE3               	goto	i1l1496
  3589     02C5                     u115_20:
  3590     02C5                     i1l1494:
  3591     02C5  087D               	movf	fputc@fp,w
  3592     02C6  3E09               	addlw	9
  3593     02C7  0084               	movwf	4
  3594     02C8  0800               	movf	0,w
  3595     02C9  00A0               	movwf	??_fputc
  3596     02CA  0A84               	incf	4,f
  3597     02CB  0800               	movf	0,w
  3598     02CC  00A1               	movwf	??_fputc+1
  3599     02CD  087D               	movf	fputc@fp,w
  3600     02CE  3E02               	addlw	2
  3601     02CF  0084               	movwf	4
  3602     02D0  0800               	movf	0,w
  3603     02D1  00A2               	movwf	??_fputc+2
  3604     02D2  0A84               	incf	4,f
  3605     02D3  0800               	movf	0,w
  3606     02D4  00A3               	movwf	??_fputc+3
  3607     02D5  0823               	movf	??_fputc+3,w
  3608     02D6  3A80               	xorlw	128
  3609     02D7  00A4               	movwf	??_fputc+4
  3610     02D8  0821               	movf	??_fputc+1,w
  3611     02D9  3A80               	xorlw	128
  3612     02DA  0224               	subwf	??_fputc+4,w
  3613     02DB  1D03               	skipz
  3614     02DC  2ADF               	goto	u116_25
  3615     02DD  0820               	movf	??_fputc,w
  3616     02DE  0222               	subwf	??_fputc+2,w
  3617     02DF                     u116_25:
  3618     02DF  1803               	skipnc
  3619     02E0  2AE2               	goto	u116_21
  3620     02E1  2AE3               	goto	u116_20
  3621     02E2                     u116_21:
  3622     02E2  2AFC               	goto	i1l798
  3623     02E3                     u116_20:
  3624     02E3                     i1l1496:
  3625     02E3  087D               	movf	fputc@fp,w
  3626     02E4  3E02               	addlw	2
  3627     02E5  0084               	movwf	4
  3628     02E6  1383               	bcf	3,7	;select IRP bank0
  3629     02E7  0800               	movf	0,w
  3630     02E8  1283               	bcf	3,5	;RP0=0, select bank0
  3631     02E9  1303               	bcf	3,6	;RP1=0, select bank0
  3632     02EA  00A0               	movwf	??_fputc
  3633     02EB  087D               	movf	fputc@fp,w
  3634     02EC  0084               	movwf	4
  3635     02ED  0800               	movf	0,w
  3636     02EE  0720               	addwf	??_fputc,w
  3637     02EF  00A1               	movwf	??_fputc+1
  3638     02F0  0821               	movf	??_fputc+1,w
  3639     02F1  0084               	movwf	4
  3640     02F2  087B               	movf	fputc@c,w
  3641     02F3  0080               	movwf	0
  3642     02F4  087D               	movf	fputc@fp,w
  3643     02F5  3E02               	addlw	2
  3644     02F6  0084               	movwf	4
  3645     02F7  3001               	movlw	1
  3646     02F8  0780               	addwf	0,f
  3647     02F9  0A84               	incf	4,f
  3648     02FA  1803               	skipnc
  3649     02FB  0A80               	incf	0,f
  3650     02FC                     i1l798:
  3651     02FC  0008               	return
  3652     02FD                     __end_of_fputc:
  3653                           
  3654                           	psect	text19
  3655     0FF8                     __ptext19:	
  3656 ;; *************** function _putch *****************
  3657 ;; Defined at:
  3658 ;;		line 368 in file "lcd.c"
  3659 ;; Parameters:    Size  Location     Type
  3660 ;;  c               1    wreg     unsigned char 
  3661 ;; Auto vars:     Size  Location     Type
  3662 ;;  c               1   10[COMMON] unsigned char 
  3663 ;; Return value:  Size  Location     Type
  3664 ;;                  1    wreg      void 
  3665 ;; Registers used:
  3666 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3667 ;; Tracked objects:
  3668 ;;		On entry : 0/0
  3669 ;;		On exit  : 0/0
  3670 ;;		Unchanged: 0/0
  3671 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3672 ;;      Params:         0       0       0       0       0
  3673 ;;      Locals:         1       0       0       0       0
  3674 ;;      Temps:          0       0       0       0       0
  3675 ;;      Totals:         1       0       0       0       0
  3676 ;;Total ram usage:        1 bytes
  3677 ;; Hardware stack levels used: 1
  3678 ;; Hardware stack levels required when called: 4
  3679 ;; This function calls:
  3680 ;;		i1_lcd_putc
  3681 ;; This function is called by:
  3682 ;;		_fputc
  3683 ;; This function uses a non-reentrant model
  3684 ;;
  3685                           
  3686     0FF8                     _putch:	
  3687                           ;psect for function _putch
  3688                           
  3689                           
  3690                           ;incstack = 0
  3691 ;; hardware stack exceeded
  3692                           ; Regs used in _putch: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3693                           ;putch@c stored from wreg
  3694     0FF8  00FA               	movwf	putch@c
  3695     0FF9                     i1l1484:
  3696                           
  3697                           ;lcd.c: 368: void putch(char c);lcd.c: 369: {;lcd.c: 370:     lcd_putc(c);
  3698     0FF9  087A               	movf	putch@c,w
  3699     0FFA  120A  118A  2400  120A  158A  	fcall	i1_lcd_putc
  3700     0FFF                     i1l167:
  3701     0FFF  0008               	return
  3702     1000                     __end_of_putch:
  3703                           
  3704                           	psect	text20
  3705     0400                     __ptext20:	
  3706 ;; *************** function i1_lcd_putc *****************
  3707 ;; Defined at:
  3708 ;;		line 190 in file "lcd.c"
  3709 ;; Parameters:    Size  Location     Type
  3710 ;;  c               1    wreg     unsigned char 
  3711 ;; Auto vars:     Size  Location     Type
  3712 ;;  c               1    9[COMMON] unsigned char 
  3713 ;; Return value:  Size  Location     Type
  3714 ;;                  1    wreg      void 
  3715 ;; Registers used:
  3716 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3717 ;; Tracked objects:
  3718 ;;		On entry : 0/0
  3719 ;;		On exit  : 0/0
  3720 ;;		Unchanged: 0/0
  3721 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3722 ;;      Params:         0       0       0       0       0
  3723 ;;      Locals:         1       0       0       0       0
  3724 ;;      Temps:          0       0       0       0       0
  3725 ;;      Totals:         1       0       0       0       0
  3726 ;;Total ram usage:        1 bytes
  3727 ;; Hardware stack levels used: 1
  3728 ;; Hardware stack levels required when called: 3
  3729 ;; This function calls:
  3730 ;;		i1_lcd_busy
  3731 ;;		i1_lcd_gotoxy
  3732 ;;		i1_lcd_put_byte
  3733 ;; This function is called by:
  3734 ;;		_putch
  3735 ;;		i1_lcd_puts
  3736 ;; This function uses a non-reentrant model
  3737 ;;
  3738                           
  3739     0400                     i1_lcd_putc:	
  3740                           ;psect for function i1_lcd_putc
  3741                           
  3742                           
  3743                           ;incstack = 0
  3744 ;; hardware stack exceeded
  3745                           ; Regs used in i1_lcd_putc: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3746                           ;i1lcd_putc@c stored from wreg
  3747     0400  00F9               	movwf	i1lcd_putc@c
  3748     0401                     i1l1466:
  3749                           
  3750                           ;lcd.c: 190: void lcd_putc(char c);lcd.c: 191: {;lcd.c: 195:  switch(c)
  3751     0401  2C44               	goto	i1l1482
  3752     0402                     i1l1468:
  3753                           
  3754                           ;lcd.c: 198:    lcd_put_byte(0,1);
  3755     0402  01F3               	clrf	i1lcd_put_byte@b
  3756     0403  0AF3               	incf	i1lcd_put_byte@b,f
  3757     0404  3000               	movlw	0
  3758     0405  120A  118A  261F  120A  118A  	fcall	i1_lcd_put_byte
  3759     040A                     i1l1470:	
  3760                           ;lcd.c: 199:    while(lcd_busy());
  3761                           
  3762     040A  120A  118A  268E  120A  118A  	fcall	i1_lcd_busy
  3763     040F  3A00               	xorlw	0
  3764     0410  1D03               	skipz
  3765     0411  2C13               	goto	u110_21
  3766     0412  2C14               	goto	u110_20
  3767     0413                     u110_21:
  3768     0413  2C0A               	goto	i1l1470
  3769     0414                     u110_20:
  3770     0414  2C4F               	goto	i1l116
  3771     0415                     i1l1472:
  3772                           
  3773                           ;lcd.c: 202:    lcd_gotoxy(0,1);
  3774     0415  01F6               	clrf	i1lcd_gotoxy@row
  3775     0416  0AF6               	incf	i1lcd_gotoxy@row,f
  3776     0417  3000               	movlw	0
  3777     0418  120A  118A  2796  120A  118A  	fcall	i1_lcd_gotoxy
  3778                           
  3779                           ;lcd.c: 203:    break;
  3780     041D  2C4F               	goto	i1l116
  3781     041E                     i1l1474:
  3782                           
  3783                           ;lcd.c: 205:    lcd_put_byte(0,0x10);
  3784     041E  3010               	movlw	16
  3785     041F  00F3               	movwf	i1lcd_put_byte@b
  3786     0420  3000               	movlw	0
  3787     0421  120A  118A  261F  120A  118A  	fcall	i1_lcd_put_byte
  3788     0426                     i1l1476:	
  3789                           ;lcd.c: 206:    while(lcd_busy());
  3790                           
  3791     0426  120A  118A  268E  120A  118A  	fcall	i1_lcd_busy
  3792     042B  3A00               	xorlw	0
  3793     042C  1D03               	skipz
  3794     042D  2C2F               	goto	u111_21
  3795     042E  2C30               	goto	u111_20
  3796     042F                     u111_21:
  3797     042F  2C26               	goto	i1l1476
  3798     0430                     u111_20:
  3799     0430  2C4F               	goto	i1l116
  3800     0431                     i1l1478:
  3801                           
  3802                           ;lcd.c: 210:     {;lcd.c: 211:     lcd_put_byte(1,c);
  3803     0431  0879               	movf	i1lcd_putc@c,w
  3804     0432  00F3               	movwf	i1lcd_put_byte@b
  3805     0433  3001               	movlw	1
  3806     0434  120A  118A  261F  120A  118A  	fcall	i1_lcd_put_byte
  3807     0439                     i1l1480:	
  3808                           ;lcd.c: 212:     while(lcd_busy());
  3809                           
  3810     0439  120A  118A  268E  120A  118A  	fcall	i1_lcd_busy
  3811     043E  3A00               	xorlw	0
  3812     043F  1D03               	skipz
  3813     0440  2C42               	goto	u112_21
  3814     0441  2C43               	goto	u112_20
  3815     0442                     u112_21:
  3816     0442  2C39               	goto	i1l1480
  3817     0443                     u112_20:
  3818     0443  2C4F               	goto	i1l116
  3819     0444                     i1l1482:
  3820     0444  0879               	movf	i1lcd_putc@c,w
  3821                           
  3822                           ; Switch size 1, requested type "simple"
  3823                           ; Number of cases is 3, Range of values is 8 to 12
  3824                           ; switch strategies available:
  3825                           ; Name         Instructions Cycles
  3826                           ; simple_byte           10     6 (average)
  3827                           ; direct_byte           26    11 (fixed)
  3828                           ; jumptable            263     9 (fixed)
  3829                           ;	Chosen strategy is simple_byte
  3830     0445  3A08               	xorlw	8	; case 8
  3831     0446  1903               	skipnz
  3832     0447  2C1E               	goto	i1l1474
  3833     0448  3A02               	xorlw	2	; case 10
  3834     0449  1903               	skipnz
  3835     044A  2C15               	goto	i1l1472
  3836     044B  3A06               	xorlw	6	; case 12
  3837     044C  1903               	skipnz
  3838     044D  2C02               	goto	i1l1468
  3839     044E  2C31               	goto	i1l1478
  3840     044F                     i1l116:
  3841     044F  0008               	return
  3842     0450                     __end_ofi1_lcd_putc:
  3843                           
  3844                           	psect	text21
  3845     0796                     __ptext21:	
  3846 ;; *************** function i1_lcd_gotoxy *****************
  3847 ;; Defined at:
  3848 ;;		line 167 in file "lcd.c"
  3849 ;; Parameters:    Size  Location     Type
  3850 ;;  col             1    wreg     unsigned char 
  3851 ;;  row             1    6[COMMON] unsigned char 
  3852 ;; Auto vars:     Size  Location     Type
  3853 ;;  col             1    7[COMMON] unsigned char 
  3854 ;;  address         1    8[COMMON] unsigned char 
  3855 ;; Return value:  Size  Location     Type
  3856 ;;                  1    wreg      void 
  3857 ;; Registers used:
  3858 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3859 ;; Tracked objects:
  3860 ;;		On entry : 0/0
  3861 ;;		On exit  : 0/0
  3862 ;;		Unchanged: 0/0
  3863 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3864 ;;      Params:         1       0       0       0       0
  3865 ;;      Locals:         2       0       0       0       0
  3866 ;;      Temps:          0       0       0       0       0
  3867 ;;      Totals:         3       0       0       0       0
  3868 ;;Total ram usage:        3 bytes
  3869 ;; Hardware stack levels used: 1
  3870 ;; Hardware stack levels required when called: 2
  3871 ;; This function calls:
  3872 ;;		i1_lcd_busy
  3873 ;;		i1_lcd_put_byte
  3874 ;; This function is called by:
  3875 ;;		_ISR
  3876 ;;		i1_lcd_putc
  3877 ;; This function uses a non-reentrant model
  3878 ;;
  3879                           
  3880     0796                     i1_lcd_gotoxy:	
  3881                           ;psect for function i1_lcd_gotoxy
  3882                           
  3883                           
  3884                           ;incstack = 0
  3885 ;; hardware stack exceeded
  3886                           ; Regs used in i1_lcd_gotoxy: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3887                           ;i1lcd_gotoxy@col stored from wreg
  3888     0796  00F7               	movwf	i1lcd_gotoxy@col
  3889     0797                     i1l1454:
  3890                           
  3891                           ;lcd.c: 167: void lcd_gotoxy(unsigned char col, unsigned char row);lcd.c: 168: {;lcd.c: 
      +                          170:  unsigned char address;;lcd.c: 173:  if(row!=0)
  3892     0797  0876               	movf	i1lcd_gotoxy@row,w
  3893     0798  1903               	btfsc	3,2
  3894     0799  2F9B               	goto	u108_21
  3895     079A  2F9C               	goto	u108_20
  3896     079B                     u108_21:
  3897     079B  2F9F               	goto	i1l1458
  3898     079C                     u108_20:
  3899     079C                     i1l1456:
  3900                           
  3901                           ;lcd.c: 174:   address=0x40;
  3902     079C  3040               	movlw	64
  3903     079D  00F8               	movwf	i1lcd_gotoxy@address
  3904     079E  2FA0               	goto	i1l1460
  3905     079F                     i1l1458:
  3906                           
  3907                           ;lcd.c: 176:   address=0;
  3908     079F  01F8               	clrf	i1lcd_gotoxy@address
  3909     07A0                     i1l1460:
  3910                           
  3911                           ;lcd.c: 178:  address += col;
  3912     07A0  0877               	movf	i1lcd_gotoxy@col,w
  3913     07A1  00FF               	movwf	btemp+1
  3914     07A2  087F               	movf	btemp+1,w
  3915     07A3  07F8               	addwf	i1lcd_gotoxy@address,f
  3916     07A4                     i1l1462:
  3917                           
  3918                           ;lcd.c: 180:  lcd_put_byte(0,0x80|address);
  3919     07A4  0878               	movf	i1lcd_gotoxy@address,w
  3920     07A5  3880               	iorlw	128
  3921     07A6  00F3               	movwf	i1lcd_put_byte@b
  3922     07A7  3000               	movlw	0
  3923     07A8  120A  118A  261F  120A  118A  	fcall	i1_lcd_put_byte
  3924     07AD                     i1l1464:	
  3925                           ;lcd.c: 181:  while(lcd_busy());
  3926                           
  3927     07AD  120A  118A  268E  120A  118A  	fcall	i1_lcd_busy
  3928     07B2  3A00               	xorlw	0
  3929     07B3  1D03               	skipz
  3930     07B4  2FB6               	goto	u109_21
  3931     07B5  2FB7               	goto	u109_20
  3932     07B6                     u109_21:
  3933     07B6  2FAD               	goto	i1l1464
  3934     07B7                     u109_20:
  3935     07B7                     i1l98:
  3936     07B7  0008               	return
  3937     07B8                     __end_ofi1_lcd_gotoxy:
  3938                           
  3939                           	psect	text22
  3940     061F                     __ptext22:	
  3941 ;; *************** function i1_lcd_put_byte *****************
  3942 ;; Defined at:
  3943 ;;		line 134 in file "lcd.c"
  3944 ;; Parameters:    Size  Location     Type
  3945 ;;  rs              1    wreg     unsigned char 
  3946 ;;  b               1    3[COMMON] unsigned char 
  3947 ;; Auto vars:     Size  Location     Type
  3948 ;;  rs              1    5[COMMON] unsigned char 
  3949 ;; Return value:  Size  Location     Type
  3950 ;;                  1    wreg      void 
  3951 ;; Registers used:
  3952 ;;		wreg, status,2, status,0, pclath, cstack
  3953 ;; Tracked objects:
  3954 ;;		On entry : 0/0
  3955 ;;		On exit  : 0/0
  3956 ;;		Unchanged: 0/0
  3957 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3958 ;;      Params:         1       0       0       0       0
  3959 ;;      Locals:         1       0       0       0       0
  3960 ;;      Temps:          1       0       0       0       0
  3961 ;;      Totals:         3       0       0       0       0
  3962 ;;Total ram usage:        3 bytes
  3963 ;; Hardware stack levels used: 1
  3964 ;; Hardware stack levels required when called: 1
  3965 ;; This function calls:
  3966 ;;		i1_lcd_put_nibble
  3967 ;; This function is called by:
  3968 ;;		i1_lcd_gotoxy
  3969 ;;		i1_lcd_putc
  3970 ;; This function uses a non-reentrant model
  3971 ;;
  3972                           
  3973     061F                     i1_lcd_put_byte:	
  3974                           ;psect for function i1_lcd_put_byte
  3975                           
  3976                           
  3977                           ;incstack = 0
  3978 ;; hardware stack exceeded
  3979                           ; Regs used in i1_lcd_put_byte: [wreg+status,2+status,0+pclath+cstack]
  3980                           ;i1lcd_put_byte@rs stored from wreg
  3981     061F  00F5               	movwf	i1lcd_put_byte@rs
  3982     0620                     i1l1438:
  3983                           
  3984                           ;lcd.c: 134: void lcd_put_byte(unsigned char rs, unsigned char b);lcd.c: 135: {;lcd.c: 1
      +                          39:  TRISD4 = 0;
  3985     0620  1683               	bsf	3,5	;RP0=1, select bank1
  3986     0621  1303               	bcf	3,6	;RP1=0, select bank1
  3987     0622  1208               	bcf	8,4	;volatile
  3988                           
  3989                           ;lcd.c: 140:  TRISD5 = 0;
  3990     0623  1288               	bcf	8,5	;volatile
  3991                           
  3992                           ;lcd.c: 141:  TRISD6 = 0;
  3993     0624  1308               	bcf	8,6	;volatile
  3994                           
  3995                           ;lcd.c: 142:  TRISD7 = 0;
  3996     0625  1388               	bcf	8,7	;volatile
  3997     0626                     i1l1440:
  3998                           
  3999                           ;lcd.c: 144:  if(rs)
  4000     0626  0875               	movf	i1lcd_put_byte@rs,w
  4001     0627  1903               	btfsc	3,2
  4002     0628  2E2A               	goto	u106_21
  4003     0629  2E2B               	goto	u106_20
  4004     062A                     u106_21:
  4005     062A  2E2F               	goto	i1l88
  4006     062B                     u106_20:
  4007     062B                     i1l1442:
  4008                           
  4009                           ;lcd.c: 145:   RD1 = 1;
  4010     062B  1283               	bcf	3,5	;RP0=0, select bank0
  4011     062C  1303               	bcf	3,6	;RP1=0, select bank0
  4012     062D  1488               	bsf	8,1	;volatile
  4013     062E  2E32               	goto	i1l1444
  4014     062F                     i1l88:	
  4015                           ;lcd.c: 146:  else
  4016                           
  4017                           
  4018                           ;lcd.c: 147:   RD1 = 0;
  4019     062F  1283               	bcf	3,5	;RP0=0, select bank0
  4020     0630  1303               	bcf	3,6	;RP1=0, select bank0
  4021     0631  1088               	bcf	8,1	;volatile
  4022     0632                     i1l1444:
  4023                           
  4024                           ;lcd.c: 148:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  4025     0632  3006               	movlw	6
  4026     0633  00F4               	movwf	??i1_lcd_put_byte
  4027     0634                     u199_27:
  4028     0634  0BF4               	decfsz	??i1_lcd_put_byte,f
  4029     0635  2E34               	goto	u199_27
  4030     0636  0000               	nop
  4031     0637                     i1l1446:
  4032                           
  4033                           ;lcd.c: 150:  RD2 = 0;
  4034     0637  1283               	bcf	3,5	;RP0=0, select bank0
  4035     0638  1303               	bcf	3,6	;RP1=0, select bank0
  4036     0639  1108               	bcf	8,2	;volatile
  4037                           
  4038                           ;lcd.c: 151:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  4039     063A  3006               	movlw	6
  4040     063B  00F4               	movwf	??i1_lcd_put_byte
  4041     063C                     u200_27:
  4042     063C  0BF4               	decfsz	??i1_lcd_put_byte,f
  4043     063D  2E3C               	goto	u200_27
  4044     063E  0000               	nop
  4045     063F                     i1l1448:
  4046                           
  4047                           ;lcd.c: 153:  RD3 = 0;
  4048     063F  1283               	bcf	3,5	;RP0=0, select bank0
  4049     0640  1303               	bcf	3,6	;RP1=0, select bank0
  4050     0641  1188               	bcf	8,3	;volatile
  4051     0642                     i1l1450:
  4052                           
  4053                           ;lcd.c: 155:  lcd_put_nibble(b >> 4);
  4054     0642  0873               	movf	i1lcd_put_byte@b,w
  4055     0643  00F4               	movwf	??i1_lcd_put_byte
  4056     0644  3004               	movlw	4
  4057     0645                     u107_25:
  4058     0645  1003               	clrc
  4059     0646  0CF4               	rrf	??i1_lcd_put_byte,f
  4060     0647  3EFF               	addlw	-1
  4061     0648  1D03               	skipz
  4062     0649  2E45               	goto	u107_25
  4063     064A  0874               	movf	??i1_lcd_put_byte,w
  4064     064B  120A  118A  2524  120A  118A  	fcall	i1_lcd_put_nibble
  4065     0650                     i1l1452:
  4066                           
  4067                           ;lcd.c: 157:  lcd_put_nibble(b & 0xf);
  4068     0650  0873               	movf	i1lcd_put_byte@b,w
  4069     0651  390F               	andlw	15
  4070     0652  120A  118A  2524  120A  118A  	fcall	i1_lcd_put_nibble
  4071     0657                     i1l90:
  4072     0657  0008               	return
  4073     0658                     __end_ofi1_lcd_put_byte:
  4074                           
  4075                           	psect	text23
  4076     0524                     __ptext23:	
  4077 ;; *************** function i1_lcd_put_nibble *****************
  4078 ;; Defined at:
  4079 ;;		line 103 in file "lcd.c"
  4080 ;; Parameters:    Size  Location     Type
  4081 ;;  b               1    wreg     unsigned char 
  4082 ;; Auto vars:     Size  Location     Type
  4083 ;;  b               1    1[COMMON] unsigned char 
  4084 ;;  temp            1    2[COMMON] struct _BYTE_VAL
  4085 ;; Return value:  Size  Location     Type
  4086 ;;                  1    wreg      void 
  4087 ;; Registers used:
  4088 ;;		wreg
  4089 ;; Tracked objects:
  4090 ;;		On entry : 0/0
  4091 ;;		On exit  : 0/0
  4092 ;;		Unchanged: 0/0
  4093 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4094 ;;      Params:         0       0       0       0       0
  4095 ;;      Locals:         2       0       0       0       0
  4096 ;;      Temps:          1       0       0       0       0
  4097 ;;      Totals:         3       0       0       0       0
  4098 ;;Total ram usage:        3 bytes
  4099 ;; Hardware stack levels used: 1
  4100 ;; This function calls:
  4101 ;;		Nothing
  4102 ;; This function is called by:
  4103 ;;		i1_lcd_put_byte
  4104 ;; This function uses a non-reentrant model
  4105 ;;
  4106                           
  4107     0524                     i1_lcd_put_nibble:	
  4108                           ;psect for function i1_lcd_put_nibble
  4109                           
  4110                           
  4111                           ;incstack = 0
  4112 ;; hardware stack exceeded
  4113                           ; Regs used in i1_lcd_put_nibble: [wreg]
  4114                           ;i1lcd_put_nibble@b stored from wreg
  4115     0524  00F1               	movwf	i1lcd_put_nibble@b
  4116     0525                     i1l1400:
  4117                           
  4118                           ;lcd.c: 103: void lcd_put_nibble(unsigned char b);lcd.c: 104: {;lcd.c: 106:  BYTE_VAL te
      +                          mp;;lcd.c: 109:  TRISD4 = 0;
  4119     0525  1683               	bsf	3,5	;RP0=1, select bank1
  4120     0526  1303               	bcf	3,6	;RP1=0, select bank1
  4121     0527  1208               	bcf	8,4	;volatile
  4122                           
  4123                           ;lcd.c: 110:  TRISD5 = 0;
  4124     0528  1288               	bcf	8,5	;volatile
  4125                           
  4126                           ;lcd.c: 111:  TRISD6 = 0;
  4127     0529  1308               	bcf	8,6	;volatile
  4128                           
  4129                           ;lcd.c: 112:  TRISD7 = 0;
  4130     052A  1388               	bcf	8,7	;volatile
  4131     052B                     i1l1402:
  4132                           
  4133                           ;lcd.c: 114:  temp.Val = b;
  4134     052B  0871               	movf	i1lcd_put_nibble@b,w
  4135     052C  00F2               	movwf	i1lcd_put_nibble@temp
  4136     052D                     i1l1404:
  4137                           
  4138                           ;lcd.c: 116:  RD4 = temp.bits.b0;
  4139     052D  1872               	btfsc	i1lcd_put_nibble@temp,0
  4140     052E  2D30               	goto	u98_21
  4141     052F  2D34               	goto	u98_20
  4142     0530                     u98_21:
  4143     0530  1283               	bcf	3,5	;RP0=0, select bank0
  4144     0531  1303               	bcf	3,6	;RP1=0, select bank0
  4145     0532  1608               	bsf	8,4	;volatile
  4146     0533  2D37               	goto	u99_24
  4147     0534                     u98_20:
  4148     0534  1283               	bcf	3,5	;RP0=0, select bank0
  4149     0535  1303               	bcf	3,6	;RP1=0, select bank0
  4150     0536  1208               	bcf	8,4	;volatile
  4151     0537                     u99_24:
  4152     0537                     i1l1406:
  4153                           
  4154                           ;lcd.c: 117:  RD5 = temp.bits.b1;
  4155     0537  18F2               	btfsc	i1lcd_put_nibble@temp,1
  4156     0538  2D3A               	goto	u100_21
  4157     0539  2D3E               	goto	u100_20
  4158     053A                     u100_21:
  4159     053A  1283               	bcf	3,5	;RP0=0, select bank0
  4160     053B  1303               	bcf	3,6	;RP1=0, select bank0
  4161     053C  1688               	bsf	8,5	;volatile
  4162     053D  2D41               	goto	u101_24
  4163     053E                     u100_20:
  4164     053E  1283               	bcf	3,5	;RP0=0, select bank0
  4165     053F  1303               	bcf	3,6	;RP1=0, select bank0
  4166     0540  1288               	bcf	8,5	;volatile
  4167     0541                     u101_24:
  4168     0541                     i1l1408:
  4169                           
  4170                           ;lcd.c: 118:  RD6 = temp.bits.b2;
  4171     0541  1972               	btfsc	i1lcd_put_nibble@temp,2
  4172     0542  2D44               	goto	u102_21
  4173     0543  2D48               	goto	u102_20
  4174     0544                     u102_21:
  4175     0544  1283               	bcf	3,5	;RP0=0, select bank0
  4176     0545  1303               	bcf	3,6	;RP1=0, select bank0
  4177     0546  1708               	bsf	8,6	;volatile
  4178     0547  2D4B               	goto	u103_24
  4179     0548                     u102_20:
  4180     0548  1283               	bcf	3,5	;RP0=0, select bank0
  4181     0549  1303               	bcf	3,6	;RP1=0, select bank0
  4182     054A  1308               	bcf	8,6	;volatile
  4183     054B                     u103_24:
  4184     054B                     i1l1410:
  4185                           
  4186                           ;lcd.c: 119:  RD7 = temp.bits.b3;
  4187     054B  19F2               	btfsc	i1lcd_put_nibble@temp,3
  4188     054C  2D4E               	goto	u104_21
  4189     054D  2D52               	goto	u104_20
  4190     054E                     u104_21:
  4191     054E  1283               	bcf	3,5	;RP0=0, select bank0
  4192     054F  1303               	bcf	3,6	;RP1=0, select bank0
  4193     0550  1788               	bsf	8,7	;volatile
  4194     0551  2D55               	goto	u105_24
  4195     0552                     u104_20:
  4196     0552  1283               	bcf	3,5	;RP0=0, select bank0
  4197     0553  1303               	bcf	3,6	;RP1=0, select bank0
  4198     0554  1388               	bcf	8,7	;volatile
  4199     0555                     u105_24:
  4200                           
  4201                           ;lcd.c: 121:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  4202     0555  3006               	movlw	6
  4203     0556  00F0               	movwf	??i1_lcd_put_nibble
  4204     0557                     u201_27:
  4205     0557  0BF0               	decfsz	??i1_lcd_put_nibble,f
  4206     0558  2D57               	goto	u201_27
  4207     0559  0000               	nop
  4208     055A                     i1l1412:
  4209                           
  4210                           ;lcd.c: 122:  RD3 = 1;
  4211     055A  1283               	bcf	3,5	;RP0=0, select bank0
  4212     055B  1303               	bcf	3,6	;RP1=0, select bank0
  4213     055C  1588               	bsf	8,3	;volatile
  4214                           
  4215                           ;lcd.c: 123:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  4216     055D  3006               	movlw	6
  4217     055E  00F0               	movwf	??i1_lcd_put_nibble
  4218     055F                     u202_27:
  4219     055F  0BF0               	decfsz	??i1_lcd_put_nibble,f
  4220     0560  2D5F               	goto	u202_27
  4221     0561  0000               	nop
  4222     0562                     i1l1414:
  4223                           
  4224                           ;lcd.c: 124:  RD3 = 0;
  4225     0562  1283               	bcf	3,5	;RP0=0, select bank0
  4226     0563  1303               	bcf	3,6	;RP1=0, select bank0
  4227     0564  1188               	bcf	8,3	;volatile
  4228     0565                     i1l85:
  4229     0565  0008               	return
  4230     0566                     __end_ofi1_lcd_put_nibble:
  4231                           
  4232                           	psect	text24
  4233     068E                     __ptext24:	
  4234 ;; *************** function i1_lcd_busy *****************
  4235 ;; Defined at:
  4236 ;;		line 18 in file "lcd.c"
  4237 ;; Parameters:    Size  Location     Type
  4238 ;;		None
  4239 ;; Auto vars:     Size  Location     Type
  4240 ;;  busy            1    1[COMMON] unsigned char 
  4241 ;; Return value:  Size  Location     Type
  4242 ;;                  1    wreg      unsigned char 
  4243 ;; Registers used:
  4244 ;;		wreg, status,2
  4245 ;; Tracked objects:
  4246 ;;		On entry : 0/0
  4247 ;;		On exit  : 0/0
  4248 ;;		Unchanged: 0/0
  4249 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4250 ;;      Params:         0       0       0       0       0
  4251 ;;      Locals:         1       0       0       0       0
  4252 ;;      Temps:          1       0       0       0       0
  4253 ;;      Totals:         2       0       0       0       0
  4254 ;;Total ram usage:        2 bytes
  4255 ;; Hardware stack levels used: 1
  4256 ;; This function calls:
  4257 ;;		Nothing
  4258 ;; This function is called by:
  4259 ;;		i1_lcd_gotoxy
  4260 ;;		i1_lcd_putc
  4261 ;; This function uses a non-reentrant model
  4262 ;;
  4263                           
  4264     068E                     i1_lcd_busy:	
  4265                           ;psect for function i1_lcd_busy
  4266                           
  4267     068E                     i1l1416:	
  4268                           ;incstack = 0
  4269 ;; hardware stack exceeded
  4270                           ; Regs used in i1_lcd_busy: [wreg+status,2]
  4271                           
  4272                           
  4273                           ;lcd.c: 21: unsigned char busy;;lcd.c: 24:  TRISD4 = 1;
  4274     068E  1683               	bsf	3,5	;RP0=1, select bank1
  4275     068F  1303               	bcf	3,6	;RP1=0, select bank1
  4276     0690  1608               	bsf	8,4	;volatile
  4277                           
  4278                           ;lcd.c: 25:  TRISD5 = 1;
  4279     0691  1688               	bsf	8,5	;volatile
  4280                           
  4281                           ;lcd.c: 26:  TRISD6 = 1;
  4282     0692  1708               	bsf	8,6	;volatile
  4283                           
  4284                           ;lcd.c: 27:  TRISD7 = 1;
  4285     0693  1788               	bsf	8,7	;volatile
  4286                           
  4287                           ;lcd.c: 29:  RD2 = 1;
  4288     0694  1283               	bcf	3,5	;RP0=0, select bank0
  4289     0695  1303               	bcf	3,6	;RP1=0, select bank0
  4290     0696  1508               	bsf	8,2	;volatile
  4291                           
  4292                           ;lcd.c: 30:  RD1 = 0;
  4293     0697  1088               	bcf	8,1	;volatile
  4294     0698                     i1l1418:
  4295                           
  4296                           ;lcd.c: 31:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  4297     0698  3006               	movlw	6
  4298     0699  00F0               	movwf	??i1_lcd_busy
  4299     069A                     u203_27:
  4300     069A  0BF0               	decfsz	??i1_lcd_busy,f
  4301     069B  2E9A               	goto	u203_27
  4302     069C  0000               	nop
  4303     069D                     i1l1420:
  4304                           
  4305                           ;lcd.c: 32:  RD3 = 1;
  4306     069D  1283               	bcf	3,5	;RP0=0, select bank0
  4307     069E  1303               	bcf	3,6	;RP1=0, select bank0
  4308     069F  1588               	bsf	8,3	;volatile
  4309                           
  4310                           ;lcd.c: 33:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  4311     06A0  3006               	movlw	6
  4312     06A1  00F0               	movwf	??i1_lcd_busy
  4313     06A2                     u204_27:
  4314     06A2  0BF0               	decfsz	??i1_lcd_busy,f
  4315     06A3  2EA2               	goto	u204_27
  4316     06A4  0000               	nop
  4317     06A5                     i1l1422:
  4318                           
  4319                           ;lcd.c: 35:  busy = RD7;
  4320     06A5  3000               	movlw	0
  4321     06A6  1283               	bcf	3,5	;RP0=0, select bank0
  4322     06A7  1303               	bcf	3,6	;RP1=0, select bank0
  4323     06A8  1B88               	btfsc	8,7	;volatile
  4324     06A9  3001               	movlw	1
  4325     06AA  00F1               	movwf	i1lcd_busy@busy
  4326     06AB                     i1l1424:
  4327                           
  4328                           ;lcd.c: 37:  RD3 = 0;
  4329     06AB  1188               	bcf	8,3	;volatile
  4330     06AC                     i1l1426:
  4331                           
  4332                           ;lcd.c: 38:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  4333     06AC  3006               	movlw	6
  4334     06AD  00F0               	movwf	??i1_lcd_busy
  4335     06AE                     u205_27:
  4336     06AE  0BF0               	decfsz	??i1_lcd_busy,f
  4337     06AF  2EAE               	goto	u205_27
  4338     06B0  0000               	nop
  4339     06B1                     i1l1428:
  4340                           
  4341                           ;lcd.c: 39:  RD3 = 1;
  4342     06B1  1283               	bcf	3,5	;RP0=0, select bank0
  4343     06B2  1303               	bcf	3,6	;RP1=0, select bank0
  4344     06B3  1588               	bsf	8,3	;volatile
  4345     06B4                     i1l1430:
  4346                           
  4347                           ;lcd.c: 40:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  4348     06B4  3006               	movlw	6
  4349     06B5  00F0               	movwf	??i1_lcd_busy
  4350     06B6                     u206_27:
  4351     06B6  0BF0               	decfsz	??i1_lcd_busy,f
  4352     06B7  2EB6               	goto	u206_27
  4353     06B8  0000               	nop
  4354     06B9                     i1l1432:
  4355                           
  4356                           ;lcd.c: 41:  RD3 = 0;
  4357     06B9  1283               	bcf	3,5	;RP0=0, select bank0
  4358     06BA  1303               	bcf	3,6	;RP1=0, select bank0
  4359     06BB  1188               	bcf	8,3	;volatile
  4360     06BC                     i1l1434:
  4361                           
  4362                           ;lcd.c: 43:  return busy;
  4363     06BC  0871               	movf	i1lcd_busy@busy,w
  4364     06BD                     i1l77:
  4365     06BD  0008               	return
  4366     06BE                     __end_ofi1_lcd_busy:
  4367                           
  4368                           	psect	text25
  4369     06E8                     __ptext25:	
  4370 ;; *************** function _abs *****************
  4371 ;; Defined at:
  4372 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\abs.c"
  4373 ;; Parameters:    Size  Location     Type
  4374 ;;  a               2    6[COMMON] int 
  4375 ;; Auto vars:     Size  Location     Type
  4376 ;;		None
  4377 ;; Return value:  Size  Location     Type
  4378 ;;                  2    6[COMMON] int 
  4379 ;; Registers used:
  4380 ;;		wreg, status,2, status,0
  4381 ;; Tracked objects:
  4382 ;;		On entry : 0/0
  4383 ;;		On exit  : 0/0
  4384 ;;		Unchanged: 0/0
  4385 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4386 ;;      Params:         2       0       0       0       0
  4387 ;;      Locals:         0       0       0       0       0
  4388 ;;      Temps:          2       0       0       0       0
  4389 ;;      Totals:         4       0       0       0       0
  4390 ;;Total ram usage:        4 bytes
  4391 ;; Hardware stack levels used: 1
  4392 ;; This function calls:
  4393 ;;		Nothing
  4394 ;; This function is called by:
  4395 ;;		_dtoa
  4396 ;; This function uses a non-reentrant model
  4397 ;;
  4398                           
  4399     06E8                     _abs:	
  4400                           ;psect for function _abs
  4401                           
  4402     06E8                     i1l1632:	
  4403                           ;incstack = 0
  4404 ;; hardware stack exceeded
  4405                           ; Regs used in _abs: [wreg+status,2+status,0]
  4406                           
  4407     06E8  1BF7               	btfsc	abs@a+1,7
  4408     06E9  2EEB               	goto	u151_21
  4409     06EA  2EEC               	goto	u151_20
  4410     06EB                     u151_21:
  4411     06EB  2EED               	goto	i1l1636
  4412     06EC                     u151_20:
  4413     06EC                     i1l1634:
  4414     06EC  2EF8               	goto	i1l786
  4415     06ED                     i1l1636:
  4416     06ED  0976               	comf	abs@a,w
  4417     06EE  00F8               	movwf	??_abs
  4418     06EF  0977               	comf	abs@a+1,w
  4419     06F0  00F9               	movwf	??_abs+1
  4420     06F1  0AF8               	incf	??_abs,f
  4421     06F2  1903               	skipnz
  4422     06F3  0AF9               	incf	??_abs+1,f
  4423     06F4  0878               	movf	??_abs,w
  4424     06F5  00F6               	movwf	?_abs
  4425     06F6  0879               	movf	??_abs+1,w
  4426     06F7  00F7               	movwf	?_abs+1
  4427     06F8                     i1l786:
  4428     06F8  0008               	return
  4429     06F9                     __end_of_abs:
  4430                           
  4431                           	psect	text26
  4432     02FD                     __ptext26:	
  4433 ;; *************** function ___awmod *****************
  4434 ;; Defined at:
  4435 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awmod.c"
  4436 ;; Parameters:    Size  Location     Type
  4437 ;;  divisor         2    0[COMMON] int 
  4438 ;;  dividend        2    2[COMMON] int 
  4439 ;; Auto vars:     Size  Location     Type
  4440 ;;  sign            1    5[COMMON] unsigned char 
  4441 ;;  counter         1    4[COMMON] unsigned char 
  4442 ;; Return value:  Size  Location     Type
  4443 ;;                  2    0[COMMON] int 
  4444 ;; Registers used:
  4445 ;;		wreg, status,2, status,0, btemp+1
  4446 ;; Tracked objects:
  4447 ;;		On entry : 0/0
  4448 ;;		On exit  : 0/0
  4449 ;;		Unchanged: 0/0
  4450 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4451 ;;      Params:         4       0       0       0       0
  4452 ;;      Locals:         2       0       0       0       0
  4453 ;;      Temps:          0       0       0       0       0
  4454 ;;      Totals:         6       0       0       0       0
  4455 ;;Total ram usage:        6 bytes
  4456 ;; Hardware stack levels used: 1
  4457 ;; This function calls:
  4458 ;;		Nothing
  4459 ;; This function is called by:
  4460 ;;		_dtoa
  4461 ;; This function uses a non-reentrant model
  4462 ;;
  4463                           
  4464     02FD                     ___awmod:	
  4465                           ;psect for function ___awmod
  4466                           
  4467     02FD                     i1l1582:	
  4468                           ;incstack = 0
  4469 ;; hardware stack exceeded
  4470                           ; Regs used in ___awmod: [wreg+status,2+status,0+btemp+1]
  4471                           
  4472     02FD  01F5               	clrf	___awmod@sign
  4473     02FE                     i1l1584:
  4474     02FE  1FF3               	btfss	___awmod@dividend+1,7
  4475     02FF  2B01               	goto	u140_21
  4476     0300  2B02               	goto	u140_20
  4477     0301                     u140_21:
  4478     0301  2B09               	goto	i1l1590
  4479     0302                     u140_20:
  4480     0302                     i1l1586:
  4481     0302  09F2               	comf	___awmod@dividend,f
  4482     0303  09F3               	comf	___awmod@dividend+1,f
  4483     0304  0AF2               	incf	___awmod@dividend,f
  4484     0305  1903               	skipnz
  4485     0306  0AF3               	incf	___awmod@dividend+1,f
  4486     0307                     i1l1588:
  4487     0307  01F5               	clrf	___awmod@sign
  4488     0308  0AF5               	incf	___awmod@sign,f
  4489     0309                     i1l1590:
  4490     0309  1FF1               	btfss	___awmod@divisor+1,7
  4491     030A  2B0C               	goto	u141_21
  4492     030B  2B0D               	goto	u141_20
  4493     030C                     u141_21:
  4494     030C  2B12               	goto	i1l1594
  4495     030D                     u141_20:
  4496     030D                     i1l1592:
  4497     030D  09F0               	comf	___awmod@divisor,f
  4498     030E  09F1               	comf	___awmod@divisor+1,f
  4499     030F  0AF0               	incf	___awmod@divisor,f
  4500     0310  1903               	skipnz
  4501     0311  0AF1               	incf	___awmod@divisor+1,f
  4502     0312                     i1l1594:
  4503     0312  0870               	movf	___awmod@divisor,w
  4504     0313  0471               	iorwf	___awmod@divisor+1,w
  4505     0314  1903               	btfsc	3,2
  4506     0315  2B17               	goto	u142_21
  4507     0316  2B18               	goto	u142_20
  4508     0317                     u142_21:
  4509     0317  2B47               	goto	i1l1612
  4510     0318                     u142_20:
  4511     0318                     i1l1596:
  4512     0318  01F4               	clrf	___awmod@counter
  4513     0319  0AF4               	incf	___awmod@counter,f
  4514     031A  2B26               	goto	i1l1602
  4515     031B                     i1l1598:
  4516     031B  3001               	movlw	1
  4517     031C                     u143_25:
  4518     031C  1003               	clrc
  4519     031D  0DF0               	rlf	___awmod@divisor,f
  4520     031E  0DF1               	rlf	___awmod@divisor+1,f
  4521     031F  3EFF               	addlw	-1
  4522     0320  1D03               	skipz
  4523     0321  2B1C               	goto	u143_25
  4524     0322                     i1l1600:
  4525     0322  3001               	movlw	1
  4526     0323  00FF               	movwf	btemp+1
  4527     0324  087F               	movf	btemp+1,w
  4528     0325  07F4               	addwf	___awmod@counter,f
  4529     0326                     i1l1602:
  4530     0326  1FF1               	btfss	___awmod@divisor+1,7
  4531     0327  2B29               	goto	u144_21
  4532     0328  2B2A               	goto	u144_20
  4533     0329                     u144_21:
  4534     0329  2B1B               	goto	i1l1598
  4535     032A                     u144_20:
  4536     032A                     i1l1604:
  4537     032A  0871               	movf	___awmod@divisor+1,w
  4538     032B  0273               	subwf	___awmod@dividend+1,w
  4539     032C  1D03               	skipz
  4540     032D  2B30               	goto	u145_25
  4541     032E  0870               	movf	___awmod@divisor,w
  4542     032F  0272               	subwf	___awmod@dividend,w
  4543     0330                     u145_25:
  4544     0330  1C03               	skipc
  4545     0331  2B33               	goto	u145_21
  4546     0332  2B34               	goto	u145_20
  4547     0333                     u145_21:
  4548     0333  2B3A               	goto	i1l1608
  4549     0334                     u145_20:
  4550     0334                     i1l1606:
  4551     0334  0870               	movf	___awmod@divisor,w
  4552     0335  02F2               	subwf	___awmod@dividend,f
  4553     0336  0871               	movf	___awmod@divisor+1,w
  4554     0337  1C03               	skipc
  4555     0338  03F3               	decf	___awmod@dividend+1,f
  4556     0339  02F3               	subwf	___awmod@dividend+1,f
  4557     033A                     i1l1608:
  4558     033A  3001               	movlw	1
  4559     033B                     u146_25:
  4560     033B  1003               	clrc
  4561     033C  0CF1               	rrf	___awmod@divisor+1,f
  4562     033D  0CF0               	rrf	___awmod@divisor,f
  4563     033E  3EFF               	addlw	-1
  4564     033F  1D03               	skipz
  4565     0340  2B3B               	goto	u146_25
  4566     0341                     i1l1610:
  4567     0341  3001               	movlw	1
  4568     0342  02F4               	subwf	___awmod@counter,f
  4569     0343  1D03               	btfss	3,2
  4570     0344  2B46               	goto	u147_21
  4571     0345  2B47               	goto	u147_20
  4572     0346                     u147_21:
  4573     0346  2B2A               	goto	i1l1604
  4574     0347                     u147_20:
  4575     0347                     i1l1612:
  4576     0347  0875               	movf	___awmod@sign,w
  4577     0348  1903               	btfsc	3,2
  4578     0349  2B4B               	goto	u148_21
  4579     034A  2B4C               	goto	u148_20
  4580     034B                     u148_21:
  4581     034B  2B51               	goto	i1l1616
  4582     034C                     u148_20:
  4583     034C                     i1l1614:
  4584     034C  09F2               	comf	___awmod@dividend,f
  4585     034D  09F3               	comf	___awmod@dividend+1,f
  4586     034E  0AF2               	incf	___awmod@dividend,f
  4587     034F  1903               	skipnz
  4588     0350  0AF3               	incf	___awmod@dividend+1,f
  4589     0351                     i1l1616:
  4590     0351  0873               	movf	___awmod@dividend+1,w
  4591     0352  00F1               	movwf	?___awmod+1
  4592     0353  0872               	movf	___awmod@dividend,w
  4593     0354  00F0               	movwf	?___awmod
  4594     0355                     i1l419:
  4595     0355  0008               	return
  4596     0356                     __end_of___awmod:
  4597                           
  4598                           	psect	text27
  4599     023C                     __ptext27:	
  4600 ;; *************** function ___awdiv *****************
  4601 ;; Defined at:
  4602 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awdiv.c"
  4603 ;; Parameters:    Size  Location     Type
  4604 ;;  divisor         2    0[COMMON] int 
  4605 ;;  dividend        2    2[COMMON] int 
  4606 ;; Auto vars:     Size  Location     Type
  4607 ;;  quotient        2    6[COMMON] int 
  4608 ;;  sign            1    5[COMMON] unsigned char 
  4609 ;;  counter         1    4[COMMON] unsigned char 
  4610 ;; Return value:  Size  Location     Type
  4611 ;;                  2    0[COMMON] int 
  4612 ;; Registers used:
  4613 ;;		wreg, status,2, status,0, btemp+1
  4614 ;; Tracked objects:
  4615 ;;		On entry : 0/0
  4616 ;;		On exit  : 0/0
  4617 ;;		Unchanged: 0/0
  4618 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4619 ;;      Params:         4       0       0       0       0
  4620 ;;      Locals:         4       0       0       0       0
  4621 ;;      Temps:          0       0       0       0       0
  4622 ;;      Totals:         8       0       0       0       0
  4623 ;;Total ram usage:        8 bytes
  4624 ;; Hardware stack levels used: 1
  4625 ;; This function calls:
  4626 ;;		Nothing
  4627 ;; This function is called by:
  4628 ;;		_dtoa
  4629 ;; This function uses a non-reentrant model
  4630 ;;
  4631                           
  4632     023C                     ___awdiv:	
  4633                           ;psect for function ___awdiv
  4634                           
  4635     023C                     i1l1538:	
  4636                           ;incstack = 0
  4637 ;; hardware stack exceeded
  4638                           ; Regs used in ___awdiv: [wreg+status,2+status,0+btemp+1]
  4639                           
  4640     023C  01F5               	clrf	___awdiv@sign
  4641     023D                     i1l1540:
  4642     023D  1FF1               	btfss	___awdiv@divisor+1,7
  4643     023E  2A40               	goto	u130_21
  4644     023F  2A41               	goto	u130_20
  4645     0240                     u130_21:
  4646     0240  2A48               	goto	i1l1546
  4647     0241                     u130_20:
  4648     0241                     i1l1542:
  4649     0241  09F0               	comf	___awdiv@divisor,f
  4650     0242  09F1               	comf	___awdiv@divisor+1,f
  4651     0243  0AF0               	incf	___awdiv@divisor,f
  4652     0244  1903               	skipnz
  4653     0245  0AF1               	incf	___awdiv@divisor+1,f
  4654     0246                     i1l1544:
  4655     0246  01F5               	clrf	___awdiv@sign
  4656     0247  0AF5               	incf	___awdiv@sign,f
  4657     0248                     i1l1546:
  4658     0248  1FF3               	btfss	___awdiv@dividend+1,7
  4659     0249  2A4B               	goto	u131_21
  4660     024A  2A4C               	goto	u131_20
  4661     024B                     u131_21:
  4662     024B  2A55               	goto	i1l1552
  4663     024C                     u131_20:
  4664     024C                     i1l1548:
  4665     024C  09F2               	comf	___awdiv@dividend,f
  4666     024D  09F3               	comf	___awdiv@dividend+1,f
  4667     024E  0AF2               	incf	___awdiv@dividend,f
  4668     024F  1903               	skipnz
  4669     0250  0AF3               	incf	___awdiv@dividend+1,f
  4670     0251                     i1l1550:
  4671     0251  3001               	movlw	1
  4672     0252  00FF               	movwf	btemp+1
  4673     0253  087F               	movf	btemp+1,w
  4674     0254  06F5               	xorwf	___awdiv@sign,f
  4675     0255                     i1l1552:
  4676     0255  01F6               	clrf	___awdiv@quotient
  4677     0256  01F7               	clrf	___awdiv@quotient+1
  4678     0257                     i1l1554:
  4679     0257  0870               	movf	___awdiv@divisor,w
  4680     0258  0471               	iorwf	___awdiv@divisor+1,w
  4681     0259  1903               	btfsc	3,2
  4682     025A  2A5C               	goto	u132_21
  4683     025B  2A5D               	goto	u132_20
  4684     025C                     u132_21:
  4685     025C  2A94               	goto	i1l1574
  4686     025D                     u132_20:
  4687     025D                     i1l1556:
  4688     025D  01F4               	clrf	___awdiv@counter
  4689     025E  0AF4               	incf	___awdiv@counter,f
  4690     025F  2A6B               	goto	i1l1562
  4691     0260                     i1l1558:
  4692     0260  3001               	movlw	1
  4693     0261                     u133_25:
  4694     0261  1003               	clrc
  4695     0262  0DF0               	rlf	___awdiv@divisor,f
  4696     0263  0DF1               	rlf	___awdiv@divisor+1,f
  4697     0264  3EFF               	addlw	-1
  4698     0265  1D03               	skipz
  4699     0266  2A61               	goto	u133_25
  4700     0267                     i1l1560:
  4701     0267  3001               	movlw	1
  4702     0268  00FF               	movwf	btemp+1
  4703     0269  087F               	movf	btemp+1,w
  4704     026A  07F4               	addwf	___awdiv@counter,f
  4705     026B                     i1l1562:
  4706     026B  1FF1               	btfss	___awdiv@divisor+1,7
  4707     026C  2A6E               	goto	u134_21
  4708     026D  2A6F               	goto	u134_20
  4709     026E                     u134_21:
  4710     026E  2A60               	goto	i1l1558
  4711     026F                     u134_20:
  4712     026F                     i1l1564:
  4713     026F  3001               	movlw	1
  4714     0270                     u135_25:
  4715     0270  1003               	clrc
  4716     0271  0DF6               	rlf	___awdiv@quotient,f
  4717     0272  0DF7               	rlf	___awdiv@quotient+1,f
  4718     0273  3EFF               	addlw	-1
  4719     0274  1D03               	skipz
  4720     0275  2A70               	goto	u135_25
  4721     0276  0871               	movf	___awdiv@divisor+1,w
  4722     0277  0273               	subwf	___awdiv@dividend+1,w
  4723     0278  1D03               	skipz
  4724     0279  2A7C               	goto	u136_25
  4725     027A  0870               	movf	___awdiv@divisor,w
  4726     027B  0272               	subwf	___awdiv@dividend,w
  4727     027C                     u136_25:
  4728     027C  1C03               	skipc
  4729     027D  2A7F               	goto	u136_21
  4730     027E  2A80               	goto	u136_20
  4731     027F                     u136_21:
  4732     027F  2A87               	goto	i1l1570
  4733     0280                     u136_20:
  4734     0280                     i1l1566:
  4735     0280  0870               	movf	___awdiv@divisor,w
  4736     0281  02F2               	subwf	___awdiv@dividend,f
  4737     0282  0871               	movf	___awdiv@divisor+1,w
  4738     0283  1C03               	skipc
  4739     0284  03F3               	decf	___awdiv@dividend+1,f
  4740     0285  02F3               	subwf	___awdiv@dividend+1,f
  4741     0286                     i1l1568:
  4742     0286  1476               	bsf	___awdiv@quotient,0
  4743     0287                     i1l1570:
  4744     0287  3001               	movlw	1
  4745     0288                     u137_25:
  4746     0288  1003               	clrc
  4747     0289  0CF1               	rrf	___awdiv@divisor+1,f
  4748     028A  0CF0               	rrf	___awdiv@divisor,f
  4749     028B  3EFF               	addlw	-1
  4750     028C  1D03               	skipz
  4751     028D  2A88               	goto	u137_25
  4752     028E                     i1l1572:
  4753     028E  3001               	movlw	1
  4754     028F  02F4               	subwf	___awdiv@counter,f
  4755     0290  1D03               	btfss	3,2
  4756     0291  2A93               	goto	u138_21
  4757     0292  2A94               	goto	u138_20
  4758     0293                     u138_21:
  4759     0293  2A6F               	goto	i1l1564
  4760     0294                     u138_20:
  4761     0294                     i1l1574:
  4762     0294  0875               	movf	___awdiv@sign,w
  4763     0295  1903               	btfsc	3,2
  4764     0296  2A98               	goto	u139_21
  4765     0297  2A99               	goto	u139_20
  4766     0298                     u139_21:
  4767     0298  2A9E               	goto	i1l1578
  4768     0299                     u139_20:
  4769     0299                     i1l1576:
  4770     0299  09F6               	comf	___awdiv@quotient,f
  4771     029A  09F7               	comf	___awdiv@quotient+1,f
  4772     029B  0AF6               	incf	___awdiv@quotient,f
  4773     029C  1903               	skipnz
  4774     029D  0AF7               	incf	___awdiv@quotient+1,f
  4775     029E                     i1l1578:
  4776     029E  0877               	movf	___awdiv@quotient+1,w
  4777     029F  00F1               	movwf	?___awdiv+1
  4778     02A0  0876               	movf	___awdiv@quotient,w
  4779     02A1  00F0               	movwf	?___awdiv
  4780     02A2                     i1l406:
  4781     02A2  0008               	return
  4782     02A3                     __end_of___awdiv:
  4783     007E                     btemp	set	126	;btemp
  4784     007E                     wtemp0	set	126
  4785                           
  4786                           	psect	config
  4787                           
  4788                           ;Config register CONFIG1 @ 0x2007
  4789                           ;	Oscillator Selection bits
  4790                           ;	FOSC = HS, HS oscillator: High-speed crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1
      +                          /CLKIN
  4791                           ;	Watchdog Timer Enable bit
  4792                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  4793                           ;	Power-up Timer Enable bit
  4794                           ;	PWRTE = OFF, PWRT disabled
  4795                           ;	RE3/MCLR pin function select bit
  4796                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  4797                           ;	Code Protection bit
  4798                           ;	CP = OFF, Program memory code protection is disabled
  4799                           ;	Data Code Protection bit
  4800                           ;	CPD = OFF, Data memory code protection is disabled
  4801                           ;	Brown Out Reset Selection bits
  4802                           ;	BOREN = OFF, BOR disabled
  4803                           ;	Internal External Switchover bit
  4804                           ;	IESO = ON, Internal/External Switchover mode is enabled
  4805                           ;	Fail-Safe Clock Monitor Enabled bit
  4806                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  4807                           ;	Low Voltage Programming Enable bit
  4808                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  4809                           ;	In-Circuit Debugger Mode bit
  4810                           ;	DEBUG = 0x1, unprogrammed default
  4811     2007                     	org	8199
  4812     2007  24D2               	dw	9426
  4813                           
  4814                           ;Config register CONFIG2 @ 0x2008
  4815                           ;	Brown-out Reset Selection bit
  4816                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  4817                           ;	Flash Program Memory Self Write Enable bits
  4818                           ;	WRT = OFF, Write protection off
  4819     2008                     	org	8200
  4820     2008  3FFF               	dw	16383

Data Sizes:
    Strings     23
    Constant    0
    Data        0
    BSS         38
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     72      78
    BANK1            80     12      44
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    f$.$buffer	PTR unsigned char  size(1) Largest target is 0

    f$.$source	PTR const unsigned char  size(1) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp$.$buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(1) Largest target is 0

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK1[32]), 

    lcd_puts@s	PTR const unsigned char  size(2) Largest target is 15
		 -> ISR@buffer(BANK0[4]), STR_2(CODE[15]), STR_3(CODE[3]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK1[32]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    read_prec_or_width@ap	PTR PTR void [1] size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(BANK0[1]), 

    S618$buffer	PTR unsigned char  size(1) Largest target is 0

    S618$source	PTR const unsigned char  size(1) Largest target is 0

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_1(CODE[5]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 4
		 -> ISR@buffer(BANK0[4]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 5
		 -> STR_1(CODE[5]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(BANK0[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 5
		 -> STR_1(CODE[5]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_1(CODE[5]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    i1_lcd_puts->i1_lcd_putc
    _vfpfcnvrt->_fputc
    _read_prec_or_width->___wmul
    _pad->_fputc
    _fputs->_fputc
    _fputc->_putch
    _putch->i1_lcd_putc
    i1_lcd_putc->i1_lcd_gotoxy
    i1_lcd_gotoxy->i1_lcd_put_byte
    i1_lcd_put_byte->i1_lcd_put_nibble
    _abs->___awmod

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    _ISR->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc

Critical Paths under _main in BANK1

    _main->_lcd_puts
    _lcd_puts->_lcd_putc
    _lcd_putc->_lcd_gotoxy
    _lcd_gotoxy->_lcd_put_byte
    _lcd_init->_lcd_put_byte
    _lcd_put_byte->_lcd_put_nibble

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    4936
                         _lcd_gotoxy
                           _lcd_init
                           _lcd_puts
 ---------------------------------------------------------------------------------
 (1) _lcd_puts                                             2     0      2    2558
                                             10 BANK1      2     0      2
                           _lcd_putc
 ---------------------------------------------------------------------------------
 (2) _lcd_putc                                             1     1      0    2311
                                              9 BANK1      1     1      0
                           _lcd_busy
                         _lcd_gotoxy
                       _lcd_put_byte
 ---------------------------------------------------------------------------------
 (3) _lcd_gotoxy                                           3     2      1    1307
                                              6 BANK1      3     2      1
                           _lcd_busy
                       _lcd_put_byte
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             3     3      0    1071
                                              6 BANK1      2     2      0
                           _lcd_busy
                       _lcd_put_byte
                     _lcd_put_nibble
 ---------------------------------------------------------------------------------
 (3) _lcd_put_byte                                         3     2      1     937
                                              3 BANK1      3     2      1
                     _lcd_put_nibble
 ---------------------------------------------------------------------------------
 (4) _lcd_put_nibble                                       3     3      0     111
                                              0 BANK1      3     3      0
 ---------------------------------------------------------------------------------
 (4) _lcd_busy                                             2     2      0      23
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _ISR                                                 10    10      0    9559
                                             62 BANK0     10    10      0
                            _sprintf
                       i1_lcd_gotoxy
                         i1_lcd_puts
 ---------------------------------------------------------------------------------
 (7) i1_lcd_puts                                           2     0      2     844
                                             10 COMMON     2     0      2
                         i1_lcd_putc
 ---------------------------------------------------------------------------------
 (7) _sprintf                                             19    16      3    8238
                                             45 BANK0     17    14      3
                           _vfprintf
 ---------------------------------------------------------------------------------
 (8) _vfprintf                                             4     2      2    7928
                                             41 BANK0      4     2      2
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (9) _vfpfcnvrt                                           12    10      2    7612
                                             31 BANK0     10     8      2
                               _dtoa
                              _fputc
                 _read_prec_or_width
 ---------------------------------------------------------------------------------
 (10) _read_prec_or_width                                  6     4      2     533
                                              6 COMMON     6     4      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (11) ___wmul                                              6     2      4     244
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (10) _dtoa                                               12    10      2    5019
                                             19 BANK0     12    10      2
                            ___awdiv
                            ___awmod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (11) _pad                                                 7     4      3    3480
                                             12 BANK0      7     4      3
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (12) _fputs                                               7     6      1    1683
                                              5 BANK0      7     6      1
                              _fputc
 ---------------------------------------------------------------------------------
 (10) _fputc                                               8     5      3    1477
                                             11 COMMON     3     0      3
                                              0 BANK0      5     5      0
                              _putch
 ---------------------------------------------------------------------------------
 (11) _putch                                               1     1      0     795
                                             10 COMMON     1     1      0
                         i1_lcd_putc
 ---------------------------------------------------------------------------------
 (8) i1_lcd_putc                                           1     1      0     773
                                              9 COMMON     1     1      0
                         i1_lcd_busy
                       i1_lcd_gotoxy
                     i1_lcd_put_byte
 ---------------------------------------------------------------------------------
 (9) i1_lcd_gotoxy                                         3     2      1     425
                                              6 COMMON     3     2      1
                         i1_lcd_busy
                     i1_lcd_put_byte
 ---------------------------------------------------------------------------------
 (9) i1_lcd_put_byte                                       3     2      1     281
                                              3 COMMON     3     2      1
                   i1_lcd_put_nibble
 ---------------------------------------------------------------------------------
 (10) i1_lcd_put_nibble                                    3     3      0     111
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (10) i1_lcd_busy                                          2     2      0      23
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (11) _abs                                                 4     2      2     142
                                              6 COMMON     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (11) ___awmod                                             6     2      4     448
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (11) ___awdiv                                             8     4      4     452
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _lcd_gotoxy
     _lcd_busy
     _lcd_put_byte
       _lcd_put_nibble
   _lcd_init
     _lcd_busy
     _lcd_put_byte
     _lcd_put_nibble
   _lcd_puts
     _lcd_putc
       _lcd_busy
       _lcd_gotoxy
       _lcd_put_byte

 _ISR (ROOT)
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___awdiv
           ___awmod
           _abs
             ___awmod (ARG)
           _pad
             _fputc
               _putch
                 i1_lcd_putc
                   i1_lcd_busy
                   i1_lcd_gotoxy
                     i1_lcd_busy
                     i1_lcd_put_byte
                       i1_lcd_put_nibble
                   i1_lcd_put_byte
             _fputs
               _fputc
         _fputc
         _read_prec_or_width
           ___wmul
   i1_lcd_gotoxy
   i1_lcd_puts
     i1_lcd_putc

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      88       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     48      4E       5       97.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      C      2C       7       55.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      88      12        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Thu Sep 12 08:28:06 2024

                         pc 0002                          l41 0520                          l42 0520  
                        l90 05A6                          l77 05E4                          l85 049B  
                        l88 0576                          l98 0795      __end_of_lcd_put_nibble 049C  
              ___awdiv@sign 0075                          fsr 0004         ___wmul@multiplicand 0072  
             ?_lcd_put_byte 00C3                         l122 068D                         l140 019A  
                       l116 03FF                         _GIE 005F                         _RD1 0041  
                       _RD2 0042                         _RD3 0043                         _RD4 0044  
                       _RD5 0045                         _RD6 0046                         _RD7 0047  
                       _ISR 049C                         _abs 06E8                         _pad 05E5  
                       fsr0 0004                         indf 0000                ___awmod@sign 0075  
                i1_lcd_busy 068E                  i1_lcd_putc 0400                  i1_lcd_puts 0727  
                      ?_ISR 0070                        ?_abs 0076                        l1510 0457  
                      l1520 048E                        l1512 0459                        l1522 0498  
                      l1514 0463                        l1516 046F                        l1508 0453  
                      l1518 047B                        l1640 05A7                        l1800 03D6  
                      l1650 05CD                        l1642 05B1                        l1802 03E1  
                      l1652 05D4                        l1644 05B8                        l1740 0775  
                      l1804 03E9                        l1654 05D7                        l1646 05C2  
                      l1670 0580                        l1662 0569                        l1750 078B  
                      l1742 077A                        l1806 03F4                        l1830 0658  
                      l1910 04EA                        l1656 05DE                        l1648 05CA  
                      l1672 058A                        l1664 056D                        l1840 00FB  
                      l1744 077D                        l1832 0659                        l1920 04F2  
                      l1912 04EB                        l1904 04E2                        l1658 05E1  
                      l1674 058D                        l1666 0572                        l1850 0110  
                      l1842 0105                        l1746 077E                        l1834 066F  
                      l1922 04F7                        l1914 04EC                        l1906 04E6  
                      l1676 059D                        l1668 0579                        l1860 014A  
                      l1852 0120                        l1844 0108                        l1748 0782  
                      l1836 0677                        l1924 0500                        l1916 04ED  
                      l1908 04E9                        l1870 017C                        l1862 0154  
                      l1854 012A                        l1846 0109                        l1838 00F2  
                      l1790 03B1                        l1926 050B                        l1918 04EE  
                      l1872 0186                        l1864 015E                        l1856 013A  
                      l1848 010A                        l1792 03B2                        l1928 0515  
                      l1874 0190                        l1866 0168                        l1858 0140  
                      l1794 03BA                        l1868 0172                        l1796 03C5  
                      l1798 03CE                        ?_pad 002C                        STR_1 071F  
                      STR_2 0710                        STR_3 0724                        u1200 046C  
                      u1201 0468                        u1220 0478                        u1221 0474  
                      u1214 046F                        u1240 0484                        u1241 0480  
                      u1234 047B                        u1180 0460                        u1181 045C  
                      u1254 0487                        u1520 0572                        u1521 0571  
                      u1194 0463                        u1710 03C4                        u1535 0592  
                      u1711 03C3                        u1800 019A                        u1720 03E0  
                      u1801 0199                        u1721 03DF                        u1650 077A  
                      u1730 03F3                        u1651 0779                        u1731 03F2  
                      u1660 0795                        u1661 0794                        u1750 068D  
                      u1751 068C                        u1760 014A                        u1761 0149  
                      u1770 015E                        u1907 057D                        u1771 015D  
                      u1780 0172                        u1917 0587                        u1781 0171  
                      u1790 0186                        u1927 048B                        u1791 0185  
                      u1937 0495                        u1947 05B5                        u1867 0101  
                      u1957 05BF                        u1877 0116                        _INTE 005C  
                      _INTF 0059                        u1967 05D1                        u1887 0126  
                      u1977 05DB                        u1897 0136                        i1l36 04D5  
                      i1l90 0657                        i1l77 06BD                        i1l85 0565  
                      i1l88 062F                        i1l98 07B7                        abs@a 0076  
                      _dbuf 00A0                        _main 04E2                        _dtoa 002A  
                      _prec 006A                lcd_busy@busy 00C1                        pad@i 0030  
                      pad@p 002D                        btemp 007E                        start 0012  
                     ??_ISR 005E                       ??_abs 0078                       ??_pad 002F  
           ?_lcd_put_nibble 0070              ??_lcd_put_byte 00C4                       ?_main 0070  
                     ?_dtoa 0033             __end_of___awdiv 02A3             __end_of___awmod 0356  
                     _ANSEL 0188             ___awdiv@divisor 0070                       i1l122 074C  
                     i1l116 044F                       i1l253 0759                       i1l406 02A2  
                     i1l167 0FFF                       i1l255 0771                       i1l419 0355  
                     i1l716 07F7                       i1l806 06E7                       i1l750 005E  
                     i1l735 05EE                       i1l745 0041                       i1l746 0060  
                     i1l739 061E                       i1l757 00F1                       i1l765 03AD  
                     i1l773 023B                       i1l786 06F8                       i1l779 07D8  
                     i1l798 02FC             ___awdiv@counter 0074                vfpfcnvrt@fmt 003F  
                     _WPUB0 04A8                       u98_20 0534                       u98_21 0530  
                     u99_24 0537                       _nRBPU 040F                       _flags 006C  
       read_prec_or_width@c 0078         read_prec_or_width@n 0079                       _fputc 02A3  
                     _fputs 06BE                       pad@fp 0032                       _width 0068  
                     _putch 0FF8                       dtoa@d 0033                       dtoa@i 003D  
                     dtoa@p 003A                       dtoa@s 003C                       dtoa@w 0038  
                     pclath 000A                       status 0003                       wtemp0 007E  
           __end_of_sprintf 07F8              i1lcd_busy@busy 0071             __initialization 0015  
              i1_lcd_gotoxy 0796                __end_of_main 0524                __end_of_dtoa 00F2  
             lcd_gotoxy@col 00C7               lcd_gotoxy@row 00C6                 i1lcd_putc@c 0079  
               i1lcd_puts@s 007A          lcd_put_nibble@temp 00C2                      ??_main 00CC  
                    ??_dtoa 007E  __end_of_read_prec_or_width 03AE                 ?i1_lcd_busy 0070  
               ?i1_lcd_putc 0070                 ?i1_lcd_puts 007A                      ?_fputc 007B  
                    ?_fputs 0025            ___awdiv@dividend 0072                      ?_putch 0070  
                    _ANSELH 0189                      u100_20 053E                      u100_21 053A  
                    u101_24 0541                      u102_20 0548                      u110_20 0414  
                    u102_21 0544                      u110_21 0413                      i1l1400 0525  
                    u111_20 0430                      u111_21 042F                      i1l1410 054B  
                    i1l1402 052B                      i1l1420 069D                      i1l1412 055A  
                    u103_24 054B                      i1l1404 052D                      i1l1500 06C1  
                    i1l1430 06B4                      i1l1422 06A5                      i1l1414 0562  
                    i1l1406 0537                      i1l1502 06C4                      i1l1600 0322  
                    i1l1432 06B9                      i1l1424 06AB                      i1l1416 068E  
                    u104_20 0552                      i1l1408 0541                      i1l1440 0626  
                    u112_20 0443                      i1l1504 06D2                      u104_21 054E  
                    u112_21 0442                      i1l1610 0341                      i1l1602 0326  
                    i1l1434 06BC                      i1l1426 06AC                      i1l1418 0698  
                    i1l1450 0642                      i1l1442 062B                      i1l1506 06DA  
                    i1l1530 0760                      i1l1540 023D                      i1l1604 032A  
                    i1l1612 0347                      i1l1428 06B1                      i1l1452 0650  
                    i1l1444 0632                      i1l1460 07A0                      i1l1620 05E8  
                    i1l1700 0070                      i1l1532 0767                      i1l1524 074D  
                    i1l1550 0251                      i1l1542 0241                      i1l1614 034C  
                    i1l1606 0334                      i1l1446 0637                      i1l1438 0620  
                    i1l1462 07A4                      i1l1454 0797                      i1l1470 040A  
                    i1l1630 0614                      i1l1622 05EC                      i1l1710 00BC  
                    i1l1702 008D                      i1l1534 076D                      i1l1526 074F  
                    u200_27 063C                      i1l1560 0267                      i1l1552 0255  
                    i1l1544 0246                      i1l1616 0351                      i1l1608 033A  
                    i1l1632 06E8                      i1l1448 063F                      i1l1464 07AD  
                    i1l1456 079C                      i1l1480 0439                      i1l1472 0415  
                    u113_20 02A8                      i1l1624 05F1                      i1l1720 00E4  
                    i1l1712 00C4                      i1l1704 0095                      i1l1528 0753  
                    u113_21 02A7                      i1l1570 0287                      i1l1562 026B  
                    i1l1554 0257                      i1l1546 0248                      i1l1538 023C  
                    i1l1634 06EC                      i1l1458 079F                      i1l1474 041E  
                    i1l1482 0444                      i1l1466 0401                      i1l1490 02AD  
                    i1l1626 05FE                      i1l1714 00D1                      i1l1706 009B  
                    i1l1730 037C                      i1l1810 07BE                      i1l1572 028E  
                    i1l1564 026F                      i1l1556 025D                      i1l1548 024C  
                    i1l1636 06ED                      u105_24 0555                      i1l1476 0426  
                    i1l1468 0402                      i1l1484 0FF9                      i1l1492 02B4  
                    i1l1628 0606                      i1l1716 00D8                      i1l1708 00AE  
                    i1l1732 0391                      i1l1724 0357                      i1l1812 07C8  
                    i1l1820 07E0                      i1l1900 04CB                      i1l1566 0280  
                    i1l1558 0260                      i1l1574 0294                      i1l1590 0309  
                    i1l1582 02FD                      i1l1478 0431                      i1l1494 02C5  
                    i1l1486 02A3                      i1l1718 00DE                      i1l1734 0398  
                    i1l1726 0359                      i1l1814 07D6                      i1l1822 07E2  
                    i1l1902 04D4                      u201_27 0557                      i1l1576 0299  
                    i1l1568 0286                      u130_20 0241                      i1l1592 030D  
                    i1l1584 02FE                      u106_20 062B                      i1l1496 02E3  
                    u114_20 02AD                      i1l1488 02A8                      i1l1680 0034  
                    i1l1736 03A9                      i1l1728 0368                      i1l1760 01BE  
                    i1l1752 019E                      i1l1808 07BB                      i1l1824 07E4  
                    u130_21 0240                      u106_21 062A                      u114_21 02AC  
                    i1l1578 029E                      i1l1594 0312                      i1l1586 0302  
                    i1l1690 0050                      i1l1682 0038                      i1l1770 01F1  
                    i1l1762 01CC                      i1l1754 01AD                      i1l1826 07EE  
                    i1l1818 07DC                      i1l1596 0318                      i1l1588 0307  
                    i1l1692 0055                      i1l1684 003D                      i1l1780 021A  
                    i1l1772 01FD                      i1l1764 01D2                      i1l1756 01B3  
                    i1l1598 031B                      i1l1694 005A                      i1l1686 0045  
                    i1l1678 002D                      i1l1774 020A                      i1l1766 01E0  
                    i1l1758 01BA                      u202_27 055F                      u131_20 024C  
                    u115_20 02C5                      i1l1696 0064                      i1l1688 004A  
                    i1l1776 020F                      i1l1768 01E5                      i1l1784 0224  
                    i1l1880 0727                      u131_21 024B                      u115_21 02C4  
                    i1l1698 0068                      i1l1882 0728                      i1l1890 04A7  
                    i1l1884 0736                      i1l1892 04AD                      u107_25 0645  
                    i1l1886 073C                      i1l1894 04B3                      u203_27 069A  
                    u132_20 025D                      u140_20 0302                      u108_20 079C  
                    u116_20 02E3                      i1l1896 04B4                      i1l1888 049C  
                    u132_21 025C                      u140_21 0301                      u108_21 079B  
                    u116_21 02E2                      i1l1898 04C3                      u116_25 02DF  
                    u204_27 06A2                      u141_20 030D                      u109_20 07B7  
                    u117_20 06E7                      u141_21 030C                      u109_21 07B6  
                    u117_21 06E6                      u133_25 0261                      u205_27 06AE  
                    u134_20 026F                      u142_20 0318                      u150_20 0614  
                    u126_20 0753                      u134_21 026E                      u142_21 0317  
                    u150_21 0613                      u126_21 0752                      _INTEDG 040E  
                    u150_25 0610                      u206_27 06B6                      u151_20 06EC  
                    u151_21 06EB                      u135_25 0270                      u143_25 031C  
                    u127_25 075A                      u136_20 0280                      u144_20 032A  
                    u160_20 00C4                      u136_21 027F                      u144_21 0329  
                    u160_21 00C3                      u136_25 027C                      u128_25 0761  
                    u145_20 0334                      u161_20 00D1                      u129_20 076D  
                    u145_21 0333                      u161_21 00D0                      u129_21 076C  
                    u137_25 0288                      u145_25 0330                      u161_25 00CD  
                    u138_20 0294                      u162_20 00D8                      u154_20 0032  
                    u170_20 01FD                      u138_21 0293                      u162_21 00D7  
                    u154_21 0030                      u170_21 01FC                      u146_25 033B  
                    u139_20 0299                      u147_20 0347                      u155_20 0033  
                    u163_20 0368                      u139_21 0298                      u147_21 0346  
                    u163_21 0367                      u148_20 034C                      u156_20 0038  
                    u164_20 03A9                      u148_21 034B                      u156_21 0037  
                    u164_21 03A8                      u149_20 05EC                      u157_20 004A  
                    u181_20 074C                      u149_21 05EB                      u157_21 0049  
                    u181_21 074B                      u158_20 0055                      u174_20 07D6  
                    u182_20 04B3                      u158_21 0054                      u174_21 07D5  
                    u182_21 04B2                      u159_20 00BC                      u167_20 01AD  
                    u159_21 00BB                      u167_21 01AC                      u159_25 00B8  
                    u168_20 01CC                      u168_21 01CB                      u169_20 01F1  
                    u169_21 01F0                      u198_27 04A2                      u199_27 0634  
                    _TRISB0 0430                      _TRISD1 0441                      _TRISD2 0442  
                    _TRISD3 0443                      _TRISD4 0444                      _TRISD5 0445  
                    _TRISD6 0446                      _TRISD7 0447                vfprintf@cfmt 004C  
          __end_of_lcd_busy 05E5            __end_of_lcd_init 019B            __end_of_lcd_putc 0400  
          __end_of_lcd_puts 068E                      ___wmul 074D                   ??___awdiv 0074  
                 ??___awmod 0074        read_prec_or_width@ap 0076            ___awdiv@quotient 0076  
           ___awmod@divisor 0070             ___awmod@counter 0074                      pad@buf 002C  
                    dtoa@fp 0037               lcd_put_byte@b 00C3                      fputc@c 007B  
                    fputs@c 0028                      fputs@i 0029                      fputs@s 002B  
                    saved_w 007E                      putch@c 007A            __end_of_vfprintf 07D9  
                 ??_sprintf 0050            i1_lcd_put_nibble 0524     __end_of__initialization 0026  
      __end_of_lcd_put_byte 05A7              __pcstackCOMMON 0070               __end_of_fputc 02FD  
             __end_of_fputs 06E8               __end_of_putch 1000             i1lcd_gotoxy@col 0077  
           i1lcd_gotoxy@row 0076           lcd_gotoxy@address 00C8                     ??_fputc 0020  
                   ??_fputs 0026                     ??_putch 007A                  __pbssBANK0 0068  
                __pbssBANK1 00A0                   ISR@buffer 0064            ??_lcd_put_nibble 00C0  
                __pmaintext 04E2                     ?___wmul 0070                  __pintentry 0004  
                _lcd_gotoxy 0772             i1lcd_put_byte@b 0073                   ?_lcd_busy 0070  
                 ?_lcd_init 0070                   ?_lcd_putc 0070                   ?_lcd_puts 00CA  
                __stringtab 0700                     ___awdiv 023C                     ___awmod 02FD  
                 ?_vfprintf 0049                     __ptext1 0658                     __ptext2 03AE  
                   __ptext3 0772                     __ptext4 00F2                     __ptext5 0566  
                   __ptext6 0450                     __ptext7 05A7                     __ptext8 049C  
                   __ptext9 0727       read_prec_or_width@fmt 007B            ___awmod@dividend 0072  
              ??i1_lcd_busy 0070                ??i1_lcd_putc 0079                ??i1_lcd_puts 007C  
                   _sprintf 07D9                     clrloop0 07F9                  ??_lcd_busy 00C0  
                ??_lcd_init 00C6                  ??_lcd_putc 00C9                  ??_lcd_puts 00CC  
      end_of_initialization 0026              lcd_put_byte@rs 00C5                     fputc@fp 007D  
                   fputs@fp 0025          _read_prec_or_width 0356           __end_of_vfpfcnvrt 023C  
       ?_read_prec_or_width 0076            vfpfcnvrt@convarg 0043          __end_ofi1_lcd_busy 06BE  
        __end_ofi1_lcd_putc 0450          __end_ofi1_lcd_puts 074D                  ??_vfprintf 007E  
  __end_ofi1_lcd_put_nibble 0566           i1lcd_put_nibble@b 0071                _lcd_put_byte 0566  
               ?_lcd_gotoxy 00C6        ??_read_prec_or_width 0078                  _push_count 006D  
               vfpfcnvrt@ap 0040                 vfpfcnvrt@cp 0048                 vfpfcnvrt@fp 0047  
            __end_of___wmul 0772              i1_lcd_put_byte 061F         start_initialization 0015  
               __end_of_ISR 04E2                 __end_of_abs 06F9                 __end_of_pad 061F  
               vfprintf@fmt 0049                    ??___wmul 0074      __end_ofi1_lcd_put_byte 0658  
                 ___latbits 0002               __pcstackBANK0 0020               __pcstackBANK1 00C0  
             ?i1_lcd_gotoxy 0076         i1lcd_gotoxy@address 0078                    ?___awdiv 0070  
                  ?___awmod 0070                   __pstrings 0700             ?i1_lcd_put_byte 0073  
                  ?_sprintf 004D           interrupt_function 0004              ___wmul@product 0074  
                 clear_ram0 07F8              ??i1_lcd_gotoxy 0077            i1lcd_put_byte@rs 0075  
                 _vfpfcnvrt 019B                 __stringbase 070F           ?i1_lcd_put_nibble 0070  
         ___wmul@multiplier 0070          ??i1_lcd_put_nibble 0070                   lcd_putc@c 00C9  
                 lcd_puts@s 00CA                ??_lcd_gotoxy 00C7                  vfprintf@ap 004A  
                vfprintf@fp 004B          __end_of_lcd_gotoxy 0796                  ?_vfpfcnvrt 003F  
        __end_of__stringtab 0710                  sprintf@fmt 004D                    _dtoa$697 0035  
                  __ptext10 07D9                    __ptext11 07B8                    __ptext20 0400  
                  __ptext12 019B                    __ptext21 0796                    __ptext13 0356  
                  __ptext22 061F                    __ptext14 074D                    __ptext23 0524  
                  __ptext15 002A                    __ptext24 068E                    __ptext16 05E5  
                  __ptext25 06E8                    __ptext17 06BE                    __ptext26 02FD  
                  __ptext18 02A3                    __ptext27 023C                    __ptext19 0FF8  
                  _lcd_busy 05A7                    _lcd_init 00F2                    _lcd_putc 03AE  
                  _lcd_puts 0658                    _vfprintf 07B8        i1lcd_put_nibble@temp 0072  
           lcd_put_nibble@b 00C1        __end_ofi1_lcd_gotoxy 07B8                    intlevel1 0000  
                 sprintf@ap 0051                   stringcode 070A            ??i1_lcd_put_byte 0074  
               ??_vfpfcnvrt 0041              _lcd_put_nibble 0450                    sprintf@f 0053  
                  sprintf@s 0052                    stringdir 070A                    stringtab 0700  
