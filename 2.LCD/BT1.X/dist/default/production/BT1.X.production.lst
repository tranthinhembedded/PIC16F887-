

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Thu Sep 05 09:48:12 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	text6,local,class=CODE,merge=1,delta=2
    14                           	psect	text7,local,class=CODE,merge=1,delta=2
    15                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    16                           	dabs	1,0x7E,2
    17     0000                     
    18                           ; Generated 12/10/2023 GMT
    19                           ; 
    20                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution. Publication is not required when
    34                           ;        this file is used in an embedded application.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC16F887 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52     0000                     	;# 
    53     0001                     	;# 
    54     0002                     	;# 
    55     0003                     	;# 
    56     0004                     	;# 
    57     0005                     	;# 
    58     0006                     	;# 
    59     0007                     	;# 
    60     0008                     	;# 
    61     0009                     	;# 
    62     000A                     	;# 
    63     000B                     	;# 
    64     000C                     	;# 
    65     000D                     	;# 
    66     000E                     	;# 
    67     000E                     	;# 
    68     000F                     	;# 
    69     0010                     	;# 
    70     0011                     	;# 
    71     0012                     	;# 
    72     0013                     	;# 
    73     0014                     	;# 
    74     0015                     	;# 
    75     0015                     	;# 
    76     0016                     	;# 
    77     0017                     	;# 
    78     0018                     	;# 
    79     0019                     	;# 
    80     001A                     	;# 
    81     001B                     	;# 
    82     001B                     	;# 
    83     001C                     	;# 
    84     001D                     	;# 
    85     001E                     	;# 
    86     001F                     	;# 
    87     0081                     	;# 
    88     0085                     	;# 
    89     0086                     	;# 
    90     0087                     	;# 
    91     0088                     	;# 
    92     0089                     	;# 
    93     008C                     	;# 
    94     008D                     	;# 
    95     008E                     	;# 
    96     008F                     	;# 
    97     0090                     	;# 
    98     0091                     	;# 
    99     0092                     	;# 
   100     0093                     	;# 
   101     0093                     	;# 
   102     0093                     	;# 
   103     0094                     	;# 
   104     0095                     	;# 
   105     0096                     	;# 
   106     0097                     	;# 
   107     0098                     	;# 
   108     0099                     	;# 
   109     009A                     	;# 
   110     009B                     	;# 
   111     009C                     	;# 
   112     009D                     	;# 
   113     009E                     	;# 
   114     009F                     	;# 
   115     0105                     	;# 
   116     0107                     	;# 
   117     0108                     	;# 
   118     0109                     	;# 
   119     010C                     	;# 
   120     010C                     	;# 
   121     010D                     	;# 
   122     010E                     	;# 
   123     010F                     	;# 
   124     0185                     	;# 
   125     0187                     	;# 
   126     0188                     	;# 
   127     0189                     	;# 
   128     018C                     	;# 
   129     018D                     	;# 
   130     0000                     	;# 
   131     0001                     	;# 
   132     0002                     	;# 
   133     0003                     	;# 
   134     0004                     	;# 
   135     0005                     	;# 
   136     0006                     	;# 
   137     0007                     	;# 
   138     0008                     	;# 
   139     0009                     	;# 
   140     000A                     	;# 
   141     000B                     	;# 
   142     000C                     	;# 
   143     000D                     	;# 
   144     000E                     	;# 
   145     000E                     	;# 
   146     000F                     	;# 
   147     0010                     	;# 
   148     0011                     	;# 
   149     0012                     	;# 
   150     0013                     	;# 
   151     0014                     	;# 
   152     0015                     	;# 
   153     0015                     	;# 
   154     0016                     	;# 
   155     0017                     	;# 
   156     0018                     	;# 
   157     0019                     	;# 
   158     001A                     	;# 
   159     001B                     	;# 
   160     001B                     	;# 
   161     001C                     	;# 
   162     001D                     	;# 
   163     001E                     	;# 
   164     001F                     	;# 
   165     0081                     	;# 
   166     0085                     	;# 
   167     0086                     	;# 
   168     0087                     	;# 
   169     0088                     	;# 
   170     0089                     	;# 
   171     008C                     	;# 
   172     008D                     	;# 
   173     008E                     	;# 
   174     008F                     	;# 
   175     0090                     	;# 
   176     0091                     	;# 
   177     0092                     	;# 
   178     0093                     	;# 
   179     0093                     	;# 
   180     0093                     	;# 
   181     0094                     	;# 
   182     0095                     	;# 
   183     0096                     	;# 
   184     0097                     	;# 
   185     0098                     	;# 
   186     0099                     	;# 
   187     009A                     	;# 
   188     009B                     	;# 
   189     009C                     	;# 
   190     009D                     	;# 
   191     009E                     	;# 
   192     009F                     	;# 
   193     0105                     	;# 
   194     0107                     	;# 
   195     0108                     	;# 
   196     0109                     	;# 
   197     010C                     	;# 
   198     010C                     	;# 
   199     010D                     	;# 
   200     010E                     	;# 
   201     010F                     	;# 
   202     0185                     	;# 
   203     0187                     	;# 
   204     0188                     	;# 
   205     0189                     	;# 
   206     018C                     	;# 
   207     018D                     	;# 
   208     0000                     	;# 
   209     0001                     	;# 
   210     0002                     	;# 
   211     0003                     	;# 
   212     0004                     	;# 
   213     0005                     	;# 
   214     0006                     	;# 
   215     0007                     	;# 
   216     0008                     	;# 
   217     0009                     	;# 
   218     000A                     	;# 
   219     000B                     	;# 
   220     000C                     	;# 
   221     000D                     	;# 
   222     000E                     	;# 
   223     000E                     	;# 
   224     000F                     	;# 
   225     0010                     	;# 
   226     0011                     	;# 
   227     0012                     	;# 
   228     0013                     	;# 
   229     0014                     	;# 
   230     0015                     	;# 
   231     0015                     	;# 
   232     0016                     	;# 
   233     0017                     	;# 
   234     0018                     	;# 
   235     0019                     	;# 
   236     001A                     	;# 
   237     001B                     	;# 
   238     001B                     	;# 
   239     001C                     	;# 
   240     001D                     	;# 
   241     001E                     	;# 
   242     001F                     	;# 
   243     0081                     	;# 
   244     0085                     	;# 
   245     0086                     	;# 
   246     0087                     	;# 
   247     0088                     	;# 
   248     0089                     	;# 
   249     008C                     	;# 
   250     008D                     	;# 
   251     008E                     	;# 
   252     008F                     	;# 
   253     0090                     	;# 
   254     0091                     	;# 
   255     0092                     	;# 
   256     0093                     	;# 
   257     0093                     	;# 
   258     0093                     	;# 
   259     0094                     	;# 
   260     0095                     	;# 
   261     0096                     	;# 
   262     0097                     	;# 
   263     0098                     	;# 
   264     0099                     	;# 
   265     009A                     	;# 
   266     009B                     	;# 
   267     009C                     	;# 
   268     009D                     	;# 
   269     009E                     	;# 
   270     009F                     	;# 
   271     0105                     	;# 
   272     0107                     	;# 
   273     0108                     	;# 
   274     0109                     	;# 
   275     010C                     	;# 
   276     010C                     	;# 
   277     010D                     	;# 
   278     010E                     	;# 
   279     010F                     	;# 
   280     0185                     	;# 
   281     0187                     	;# 
   282     0188                     	;# 
   283     0189                     	;# 
   284     018C                     	;# 
   285     018D                     	;# 
   286     0044                     _RD4	set	68
   287     0045                     _RD5	set	69
   288     0046                     _RD6	set	70
   289     0047                     _RD7	set	71
   290     0043                     _RD3	set	67
   291     0041                     _RD1	set	65
   292     0042                     _RD2	set	66
   293     0442                     _TRISD2	set	1090
   294     0441                     _TRISD1	set	1089
   295     0443                     _TRISD3	set	1091
   296     0447                     _TRISD7	set	1095
   297     0446                     _TRISD6	set	1094
   298     0445                     _TRISD5	set	1093
   299     0444                     _TRISD4	set	1092
   300                           
   301                           	psect	strings
   302     0003                     __pstrings:
   303     0003                     stringtab:
   304     0003                     __stringtab:
   305     0003                     stringcode:	
   306                           ;	String table - string pointers are 1 byte each
   307                           
   308     0003                     stringdir:
   309     0003  3000               	movlw	high stringdir
   310     0004  008A               	movwf	10
   311     0005  0804               	movf	4,w
   312     0006  0A84               	incf	4,f
   313     0007  0782               	addwf	2,f
   314     0008                     __stringbase:
   315     0008  3400               	retlw	0
   316     0009                     __end_of__stringtab:
   317     0009                     STR_4:
   318     0009  344E               	retlw	78	;'N'
   319     000A  3467               	retlw	103	;'g'
   320     000B  3461               	retlw	97	;'a'
   321     000C  3479               	retlw	121	;'y'
   322     000D  3420               	retlw	32	;' '
   323     000E  3473               	retlw	115	;'s'
   324     000F  3469               	retlw	105	;'i'
   325     0010  346E               	retlw	110	;'n'
   326     0011  3468               	retlw	104	;'h'
   327     0012  343A               	retlw	58	;':'
   328     0013  3420               	retlw	32	;' '
   329     0014  3431               	retlw	49	;'1'
   330     0015  3430               	retlw	48	;'0'
   331     0016  342F               	retlw	47	;'/'
   332     0017  3430               	retlw	48	;'0'
   333     0018  3433               	retlw	51	;'3'
   334     0019  3400               	retlw	0
   335     001A                     STR_8:
   336     001A  344C               	retlw	76	;'L'
   337     001B  346F               	retlw	111	;'o'
   338     001C  3470               	retlw	112	;'p'
   339     001D  343A               	retlw	58	;':'
   340     001E  3420               	retlw	32	;' '
   341     001F  3444               	retlw	68	;'D'
   342     0020  3448               	retlw	72	;'H'
   343     0021  3444               	retlw	68	;'D'
   344     0022  3454               	retlw	84	;'T'
   345     0023  344D               	retlw	77	;'M'
   346     0024  3454               	retlw	84	;'T'
   347     0025  3431               	retlw	49	;'1'
   348     0026  3437               	retlw	55	;'7'
   349     0027  3443               	retlw	67	;'C'
   350     0028  3454               	retlw	84	;'T'
   351     0029  3454               	retlw	84	;'T'
   352     002A  3400               	retlw	0
   353     002B                     STR_2:
   354     002B  344D               	retlw	77	;'M'
   355     002C  3453               	retlw	83	;'S'
   356     002D  3453               	retlw	83	;'S'
   357     002E  3456               	retlw	86	;'V'
   358     002F  343A               	retlw	58	;':'
   359     0030  3420               	retlw	32	;' '
   360     0031  3432               	retlw	50	;'2'
   361     0032  3431               	retlw	49	;'1'
   362     0033  3431               	retlw	49	;'1'
   363     0034  3432               	retlw	50	;'2'
   364     0035  3432               	retlw	50	;'2'
   365     0036  3430               	retlw	48	;'0'
   366     0037  3439               	retlw	57	;'9'
   367     0038  3431               	retlw	49	;'1'
   368     0039  3400               	retlw	0
   369     003A                     STR_1:
   370     003A  3454               	retlw	84	;'T'
   371     003B  3452               	retlw	82	;'R'
   372     003C  3441               	retlw	65	;'A'
   373     003D  344E               	retlw	78	;'N'
   374     003E  3420               	retlw	32	;' '
   375     003F  3444               	retlw	68	;'D'
   376     0040  3455               	retlw	85	;'U'
   377     0041  3443               	retlw	67	;'C'
   378     0042  3420               	retlw	32	;' '
   379     0043  3454               	retlw	84	;'T'
   380     0044  3448               	retlw	72	;'H'
   381     0045  3449               	retlw	73	;'I'
   382     0046  344E               	retlw	78	;'N'
   383     0047  3448               	retlw	72	;'H'
   384     0048  3400               	retlw	0
   385     0049                     STR_5:
   386     0049  344E               	retlw	78	;'N'
   387     004A  346F               	retlw	111	;'o'
   388     004B  3469               	retlw	105	;'i'
   389     004C  3420               	retlw	32	;' '
   390     004D  3473               	retlw	115	;'s'
   391     004E  3469               	retlw	105	;'i'
   392     004F  346E               	retlw	110	;'n'
   393     0050  3468               	retlw	104	;'h'
   394     0051  343A               	retlw	58	;':'
   395     0052  3420               	retlw	32	;' '
   396     0053  344B               	retlw	75	;'K'
   397     0054  3447               	retlw	71	;'G'
   398     0055  3400               	retlw	0
   399     0056                     STR_7:
   400     0056  3448               	retlw	72	;'H'
   401     0057  344B               	retlw	75	;'K'
   402     0058  3454               	retlw	84	;'T'
   403     0059  3454               	retlw	84	;'T'
   404     005A  343A               	retlw	58	;':'
   405     005B  3420               	retlw	32	;' '
   406     005C  3448               	retlw	72	;'H'
   407     005D  3443               	retlw	67	;'C'
   408     005E  344D               	retlw	77	;'M'
   409     005F  3400               	retlw	0
   410     0060                     STR_3:
   411     0060  340C               	retlw	12
   412     0061  3400               	retlw	0
   413     0060                     
   414                           	psect	cinit
   415     07FC                     start_initialization:	
   416                           ; #config settings
   417                           
   418     07FC                     __initialization:
   419     07FC                     end_of_initialization:	
   420                           ;End of C runtime variable initialization code
   421                           
   422     07FC                     __end_of__initialization:
   423     07FC  0183               	clrf	3
   424     07FD  120A  118A  2ECC   	ljmp	_main	;jump to C main() function
   425                           
   426                           	psect	cstackCOMMON
   427     0070                     __pcstackCOMMON:
   428     0070                     ?_lcd_init:
   429     0070                     ?_lcd_puts:	
   430                           ; 1 bytes @ 0x0
   431                           
   432     0070                     ?_main:	
   433                           ; 1 bytes @ 0x0
   434                           
   435     0070                     ?_lcd_busy:	
   436                           ; 1 bytes @ 0x0
   437                           
   438     0070                     ??_lcd_busy:	
   439                           ; 1 bytes @ 0x0
   440                           
   441     0070                     ?_lcd_put_nibble:	
   442                           ; 1 bytes @ 0x0
   443                           
   444     0070                     ??_lcd_put_nibble:	
   445                           ; 1 bytes @ 0x0
   446                           
   447     0070                     ?_lcd_putc:	
   448                           ; 1 bytes @ 0x0
   449                           
   450                           
   451                           ; 1 bytes @ 0x0
   452     0070                     	ds	1
   453     0071                     lcd_busy@busy:
   454     0071                     lcd_put_nibble@b:	
   455                           ; 1 bytes @ 0x1
   456                           
   457                           
   458                           ; 1 bytes @ 0x1
   459     0071                     	ds	1
   460     0072                     lcd_put_nibble@temp:
   461                           
   462                           ; 1 bytes @ 0x2
   463     0072                     	ds	1
   464     0073                     ?_lcd_put_byte:
   465     0073                     lcd_put_byte@b:	
   466                           ; 1 bytes @ 0x3
   467                           
   468                           
   469                           ; 1 bytes @ 0x3
   470     0073                     	ds	1
   471     0074                     ??_lcd_put_byte:
   472                           
   473                           ; 1 bytes @ 0x4
   474     0074                     	ds	1
   475     0075                     lcd_put_byte@rs:
   476                           
   477                           ; 1 bytes @ 0x5
   478     0075                     	ds	1
   479     0076                     ??_lcd_init:
   480     0076                     ?_lcd_gotoxy:	
   481                           ; 1 bytes @ 0x6
   482                           
   483     0076                     lcd_gotoxy@row:	
   484                           ; 1 bytes @ 0x6
   485                           
   486                           
   487                           ; 1 bytes @ 0x6
   488     0076                     	ds	1
   489     0077                     ??_lcd_gotoxy:
   490     0077                     lcd_gotoxy@col:	
   491                           ; 1 bytes @ 0x7
   492                           
   493                           
   494                           ; 1 bytes @ 0x7
   495     0077                     	ds	1
   496     0078                     lcd_gotoxy@address:
   497                           
   498                           ; 1 bytes @ 0x8
   499     0078                     	ds	1
   500     0079                     ??_lcd_putc:
   501     0079                     lcd_putc@c:	
   502                           ; 1 bytes @ 0x9
   503                           
   504                           
   505                           ; 1 bytes @ 0x9
   506     0079                     	ds	1
   507     007A                     ??_lcd_puts:
   508     007A                     lcd_puts@s:	
   509                           ; 1 bytes @ 0xA
   510                           
   511                           
   512                           ; 1 bytes @ 0xA
   513     007A                     	ds	1
   514     007B                     ??_main:
   515                           
   516                           ; 1 bytes @ 0xB
   517     007B                     	ds	3
   518                           
   519                           	psect	maintext
   520     06CC                     __pmaintext:	
   521 ;;
   522 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   523 ;;
   524 ;; *************** function _main *****************
   525 ;; Defined at:
   526 ;;		line 27 in file "BT1.c"
   527 ;; Parameters:    Size  Location     Type
   528 ;;		None
   529 ;; Auto vars:     Size  Location     Type
   530 ;;		None
   531 ;; Return value:  Size  Location     Type
   532 ;;                  1    wreg      void 
   533 ;; Registers used:
   534 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   535 ;; Tracked objects:
   536 ;;		On entry : B00/0
   537 ;;		On exit  : 0/0
   538 ;;		Unchanged: 0/0
   539 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   540 ;;      Params:         0       0       0       0       0
   541 ;;      Locals:         0       0       0       0       0
   542 ;;      Temps:          3       0       0       0       0
   543 ;;      Totals:         3       0       0       0       0
   544 ;;Total ram usage:        3 bytes
   545 ;; Hardware stack levels required when called: 5
   546 ;; This function calls:
   547 ;;		_lcd_gotoxy
   548 ;;		_lcd_init
   549 ;;		_lcd_puts
   550 ;; This function is called by:
   551 ;;		Startup code after reset
   552 ;; This function uses a non-reentrant model
   553 ;;
   554                           
   555     06CC                     _main:	
   556                           ;psect for function _main
   557                           
   558     06CC                     l1015:	
   559                           ;incstack = 0
   560                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   561                           
   562                           
   563                           ;BT1.c: 30:     lcd_init();
   564     06CC  120A  118A  275F  120A  118A  	fcall	_lcd_init
   565     06D1                     l1017:
   566                           
   567                           ;BT1.c: 32:     {;BT1.c: 33:         lcd_gotoxy(0,0);
   568     06D1  01F6               	clrf	lcd_gotoxy@row
   569     06D2  3000               	movlw	0
   570     06D3  120A  118A  25AF  120A  118A  	fcall	_lcd_gotoxy
   571     06D8                     l1019:
   572                           
   573                           ;BT1.c: 34:         lcd_puts("TRAN DUC THINH");
   574     06D8  3032               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   575     06D9  120A  118A  2590  120A  118A  	fcall	_lcd_puts
   576     06DE                     l1021:
   577                           
   578                           ;BT1.c: 35:         lcd_gotoxy(0,1);
   579     06DE  01F6               	clrf	lcd_gotoxy@row
   580     06DF  0AF6               	incf	lcd_gotoxy@row,f
   581     06E0  3000               	movlw	0
   582     06E1  120A  118A  25AF  120A  118A  	fcall	_lcd_gotoxy
   583     06E6                     l1023:
   584                           
   585                           ;BT1.c: 36:         lcd_puts("MSSV: 21122091");
   586     06E6  3023               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   587     06E7  120A  118A  2590  120A  118A  	fcall	_lcd_puts
   588     06EC                     l1025:
   589                           
   590                           ;BT1.c: 37:         _delay((unsigned long)((2000)*(4000000/4000.0)));
   591     06EC  300B               	movlw	11
   592     06ED  00FD               	movwf	??_main+2
   593     06EE  3026               	movlw	38
   594     06EF  00FC               	movwf	??_main+1
   595     06F0  305D               	movlw	93
   596     06F1  00FB               	movwf	??_main
   597     06F2                     u507:
   598     06F2  0BFB               	decfsz	??_main,f
   599     06F3  2EF2               	goto	u507
   600     06F4  0BFC               	decfsz	??_main+1,f
   601     06F5  2EF2               	goto	u507
   602     06F6  0BFD               	decfsz	??_main+2,f
   603     06F7  2EF2               	goto	u507
   604     06F8  2EF9               	nop2
   605     06F9                     l1027:
   606                           
   607                           ;BT1.c: 38:         lcd_puts("\f");
   608     06F9  3058               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   609     06FA  120A  118A  2590  120A  118A  	fcall	_lcd_puts
   610     06FF                     l1029:
   611                           
   612                           ;BT1.c: 40:         lcd_gotoxy(0,0);
   613     06FF  01F6               	clrf	lcd_gotoxy@row
   614     0700  3000               	movlw	0
   615     0701  120A  118A  25AF  120A  118A  	fcall	_lcd_gotoxy
   616     0706                     l1031:
   617                           
   618                           ;BT1.c: 41:         lcd_puts("Ngay sinh: 10/03");
   619     0706  3001               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
   620     0707  120A  118A  2590  120A  118A  	fcall	_lcd_puts
   621     070C                     l1033:
   622                           
   623                           ;BT1.c: 42:         lcd_gotoxy(0,1);
   624     070C  01F6               	clrf	lcd_gotoxy@row
   625     070D  0AF6               	incf	lcd_gotoxy@row,f
   626     070E  3000               	movlw	0
   627     070F  120A  118A  25AF  120A  118A  	fcall	_lcd_gotoxy
   628     0714                     l1035:
   629                           
   630                           ;BT1.c: 43:         lcd_puts("Noi sinh: KG");
   631     0714  3041               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
   632     0715  120A  118A  2590  120A  118A  	fcall	_lcd_puts
   633     071A                     l1037:
   634                           
   635                           ;BT1.c: 44:         _delay((unsigned long)((2000)*(4000000/4000.0)));
   636     071A  300B               	movlw	11
   637     071B  00FD               	movwf	??_main+2
   638     071C  3026               	movlw	38
   639     071D  00FC               	movwf	??_main+1
   640     071E  305D               	movlw	93
   641     071F  00FB               	movwf	??_main
   642     0720                     u517:
   643     0720  0BFB               	decfsz	??_main,f
   644     0721  2F20               	goto	u517
   645     0722  0BFC               	decfsz	??_main+1,f
   646     0723  2F20               	goto	u517
   647     0724  0BFD               	decfsz	??_main+2,f
   648     0725  2F20               	goto	u517
   649     0726  2F27               	nop2
   650     0727                     l1039:
   651                           
   652                           ;BT1.c: 45:         lcd_puts("\f");
   653     0727  3058               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   654     0728  120A  118A  2590  120A  118A  	fcall	_lcd_puts
   655     072D                     l1041:
   656                           
   657                           ;BT1.c: 47:         lcd_gotoxy(0,0);
   658     072D  01F6               	clrf	lcd_gotoxy@row
   659     072E  3000               	movlw	0
   660     072F  120A  118A  25AF  120A  118A  	fcall	_lcd_gotoxy
   661     0734                     l1043:
   662                           
   663                           ;BT1.c: 48:         lcd_puts("HKTT: HCM");
   664     0734  304E               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
   665     0735  120A  118A  2590  120A  118A  	fcall	_lcd_puts
   666     073A                     l1045:
   667                           
   668                           ;BT1.c: 49:         lcd_gotoxy(0,1);
   669     073A  01F6               	clrf	lcd_gotoxy@row
   670     073B  0AF6               	incf	lcd_gotoxy@row,f
   671     073C  3000               	movlw	0
   672     073D  120A  118A  25AF  120A  118A  	fcall	_lcd_gotoxy
   673     0742                     l1047:
   674                           
   675                           ;BT1.c: 50:         lcd_puts("Lop: DHDTMT17CTT");
   676     0742  3012               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
   677     0743  120A  118A  2590  120A  118A  	fcall	_lcd_puts
   678     0748                     l1049:
   679                           
   680                           ;BT1.c: 51:         _delay((unsigned long)((2000)*(4000000/4000.0)));
   681     0748  300B               	movlw	11
   682     0749  00FD               	movwf	??_main+2
   683     074A  3026               	movlw	38
   684     074B  00FC               	movwf	??_main+1
   685     074C  305D               	movlw	93
   686     074D  00FB               	movwf	??_main
   687     074E                     u527:
   688     074E  0BFB               	decfsz	??_main,f
   689     074F  2F4E               	goto	u527
   690     0750  0BFC               	decfsz	??_main+1,f
   691     0751  2F4E               	goto	u527
   692     0752  0BFD               	decfsz	??_main+2,f
   693     0753  2F4E               	goto	u527
   694     0754  2F55               	nop2
   695     0755                     l1051:
   696                           
   697                           ;BT1.c: 52:         lcd_puts("\f");
   698     0755  3058               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   699     0756  120A  118A  2590  120A  118A  	fcall	_lcd_puts
   700     075B  2ED1               	goto	l1017
   701     075C  120A  118A  2800   	ljmp	start
   702     075F                     __end_of_main:
   703                           
   704                           	psect	text1
   705     0590                     __ptext1:	
   706 ;; *************** function _lcd_puts *****************
   707 ;; Defined at:
   708 ;;		line 224 in file "lcd.c"
   709 ;; Parameters:    Size  Location     Type
   710 ;;  s               1    wreg     PTR const unsigned char 
   711 ;;		 -> STR_9(2), STR_8(17), STR_7(10), STR_6(2), 
   712 ;;		 -> STR_5(13), STR_4(17), STR_3(2), STR_2(15), 
   713 ;;		 -> STR_1(15), 
   714 ;; Auto vars:     Size  Location     Type
   715 ;;  s               1   10[COMMON] PTR const unsigned char 
   716 ;;		 -> STR_9(2), STR_8(17), STR_7(10), STR_6(2), 
   717 ;;		 -> STR_5(13), STR_4(17), STR_3(2), STR_2(15), 
   718 ;;		 -> STR_1(15), 
   719 ;; Return value:  Size  Location     Type
   720 ;;                  1    wreg      void 
   721 ;; Registers used:
   722 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   723 ;; Tracked objects:
   724 ;;		On entry : 0/0
   725 ;;		On exit  : 0/0
   726 ;;		Unchanged: 0/0
   727 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   728 ;;      Params:         0       0       0       0       0
   729 ;;      Locals:         1       0       0       0       0
   730 ;;      Temps:          0       0       0       0       0
   731 ;;      Totals:         1       0       0       0       0
   732 ;;Total ram usage:        1 bytes
   733 ;; Hardware stack levels used: 1
   734 ;; Hardware stack levels required when called: 4
   735 ;; This function calls:
   736 ;;		_lcd_putc
   737 ;; This function is called by:
   738 ;;		_main
   739 ;; This function uses a non-reentrant model
   740 ;;
   741                           
   742     0590                     _lcd_puts:	
   743                           ;psect for function _lcd_puts
   744                           
   745                           
   746                           ;incstack = 0
   747                           ; Regs used in _lcd_puts: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   748                           ;lcd_puts@s stored from wreg
   749     0590  00FA               	movwf	lcd_puts@s
   750     0591                     l1003:
   751                           
   752                           ;lcd.c: 224: void lcd_puts(const char* s);lcd.c: 225: {;lcd.c: 229:  while(*s)
   753     0591  2DA2               	goto	l1009
   754     0592                     l1005:
   755                           
   756                           ;lcd.c: 230:   {;lcd.c: 231:   lcd_putc(*s++);
   757     0592  087A               	movf	lcd_puts@s,w
   758     0593  0084               	movwf	4
   759     0594  120A  118A  2003  120A  118A  	fcall	stringdir
   760     0599  120A  118A  267C  120A  118A  	fcall	_lcd_putc
   761     059E                     l1007:
   762     059E  3001               	movlw	1
   763     059F  00FF               	movwf	btemp+1
   764     05A0  087F               	movf	btemp+1,w
   765     05A1  07FA               	addwf	lcd_puts@s,f
   766     05A2                     l1009:
   767                           
   768                           ;lcd.c: 229:  while(*s)
   769     05A2  087A               	movf	lcd_puts@s,w
   770     05A3  0084               	movwf	4
   771     05A4  120A  118A  2003  120A  118A  	fcall	stringdir
   772     05A9  3A00               	xorlw	0
   773     05AA  1D03               	skipz
   774     05AB  2DAD               	goto	u461
   775     05AC  2DAE               	goto	u460
   776     05AD                     u461:
   777     05AD  2D92               	goto	l1005
   778     05AE                     u460:
   779     05AE                     l94:
   780     05AE  0008               	return
   781     05AF                     __end_of_lcd_puts:
   782                           
   783                           	psect	text2
   784     067C                     __ptext2:	
   785 ;; *************** function _lcd_putc *****************
   786 ;; Defined at:
   787 ;;		line 190 in file "lcd.c"
   788 ;; Parameters:    Size  Location     Type
   789 ;;  c               1    wreg     unsigned char 
   790 ;; Auto vars:     Size  Location     Type
   791 ;;  c               1    9[COMMON] unsigned char 
   792 ;; Return value:  Size  Location     Type
   793 ;;                  1    wreg      void 
   794 ;; Registers used:
   795 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   796 ;; Tracked objects:
   797 ;;		On entry : 0/0
   798 ;;		On exit  : 0/0
   799 ;;		Unchanged: 0/0
   800 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   801 ;;      Params:         0       0       0       0       0
   802 ;;      Locals:         1       0       0       0       0
   803 ;;      Temps:          0       0       0       0       0
   804 ;;      Totals:         1       0       0       0       0
   805 ;;Total ram usage:        1 bytes
   806 ;; Hardware stack levels used: 1
   807 ;; Hardware stack levels required when called: 3
   808 ;; This function calls:
   809 ;;		_lcd_busy
   810 ;;		_lcd_gotoxy
   811 ;;		_lcd_put_byte
   812 ;; This function is called by:
   813 ;;		_lcd_puts
   814 ;;		_lcd_String_Delay
   815 ;;		_putch
   816 ;; This function uses a non-reentrant model
   817 ;;
   818                           
   819     067C                     _lcd_putc:	
   820                           ;psect for function _lcd_putc
   821                           
   822                           
   823                           ;incstack = 0
   824                           ; Regs used in _lcd_putc: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   825                           ;lcd_putc@c stored from wreg
   826     067C  00F9               	movwf	lcd_putc@c
   827     067D                     l947:
   828                           
   829                           ;lcd.c: 190: void lcd_putc(char c);lcd.c: 191: {;lcd.c: 195:  switch(c)
   830     067D  2EC0               	goto	l963
   831     067E                     l949:
   832                           
   833                           ;lcd.c: 198:    lcd_put_byte(0,1);
   834     067E  01F3               	clrf	lcd_put_byte@b
   835     067F  0AF3               	incf	lcd_put_byte@b,f
   836     0680  3000               	movlw	0
   837     0681  120A  118A  2601  120A  118A  	fcall	_lcd_put_byte
   838     0686                     l951:	
   839                           ;lcd.c: 199:    while(lcd_busy());
   840                           
   841     0686  120A  118A  25D1  120A  118A  	fcall	_lcd_busy
   842     068B  3A00               	xorlw	0
   843     068C  1D03               	skipz
   844     068D  2E8F               	goto	u381
   845     068E  2E90               	goto	u380
   846     068F                     u381:
   847     068F  2E86               	goto	l951
   848     0690                     u380:
   849     0690  2ECB               	goto	l88
   850     0691                     l953:
   851                           
   852                           ;lcd.c: 202:    lcd_gotoxy(0,1);
   853     0691  01F6               	clrf	lcd_gotoxy@row
   854     0692  0AF6               	incf	lcd_gotoxy@row,f
   855     0693  3000               	movlw	0
   856     0694  120A  118A  25AF  120A  118A  	fcall	_lcd_gotoxy
   857                           
   858                           ;lcd.c: 203:    break;
   859     0699  2ECB               	goto	l88
   860     069A                     l955:
   861                           
   862                           ;lcd.c: 205:    lcd_put_byte(0,0x10);
   863     069A  3010               	movlw	16
   864     069B  00F3               	movwf	lcd_put_byte@b
   865     069C  3000               	movlw	0
   866     069D  120A  118A  2601  120A  118A  	fcall	_lcd_put_byte
   867     06A2                     l957:	
   868                           ;lcd.c: 206:    while(lcd_busy());
   869                           
   870     06A2  120A  118A  25D1  120A  118A  	fcall	_lcd_busy
   871     06A7  3A00               	xorlw	0
   872     06A8  1D03               	skipz
   873     06A9  2EAB               	goto	u391
   874     06AA  2EAC               	goto	u390
   875     06AB                     u391:
   876     06AB  2EA2               	goto	l957
   877     06AC                     u390:
   878     06AC  2ECB               	goto	l88
   879     06AD                     l959:
   880                           
   881                           ;lcd.c: 210:     {;lcd.c: 211:     lcd_put_byte(1,c);
   882     06AD  0879               	movf	lcd_putc@c,w
   883     06AE  00F3               	movwf	lcd_put_byte@b
   884     06AF  3001               	movlw	1
   885     06B0  120A  118A  2601  120A  118A  	fcall	_lcd_put_byte
   886     06B5                     l961:	
   887                           ;lcd.c: 212:     while(lcd_busy());
   888                           
   889     06B5  120A  118A  25D1  120A  118A  	fcall	_lcd_busy
   890     06BA  3A00               	xorlw	0
   891     06BB  1D03               	skipz
   892     06BC  2EBE               	goto	u401
   893     06BD  2EBF               	goto	u400
   894     06BE                     u401:
   895     06BE  2EB5               	goto	l961
   896     06BF                     u400:
   897     06BF  2ECB               	goto	l88
   898     06C0                     l963:
   899     06C0  0879               	movf	lcd_putc@c,w
   900                           
   901                           ; Switch size 1, requested type "simple"
   902                           ; Number of cases is 3, Range of values is 8 to 12
   903                           ; switch strategies available:
   904                           ; Name         Instructions Cycles
   905                           ; simple_byte           10     6 (average)
   906                           ; direct_byte           26    11 (fixed)
   907                           ; jumptable            263     9 (fixed)
   908                           ;	Chosen strategy is simple_byte
   909     06C1  3A08               	xorlw	8	; case 8
   910     06C2  1903               	skipnz
   911     06C3  2E9A               	goto	l955
   912     06C4  3A02               	xorlw	2	; case 10
   913     06C5  1903               	skipnz
   914     06C6  2E91               	goto	l953
   915     06C7  3A06               	xorlw	6	; case 12
   916     06C8  1903               	skipnz
   917     06C9  2E7E               	goto	l949
   918     06CA  2EAD               	goto	l959
   919     06CB                     l88:
   920     06CB  0008               	return
   921     06CC                     __end_of_lcd_putc:
   922                           
   923                           	psect	text3
   924     05AF                     __ptext3:	
   925 ;; *************** function _lcd_gotoxy *****************
   926 ;; Defined at:
   927 ;;		line 167 in file "lcd.c"
   928 ;; Parameters:    Size  Location     Type
   929 ;;  col             1    wreg     unsigned char 
   930 ;;  row             1    6[COMMON] unsigned char 
   931 ;; Auto vars:     Size  Location     Type
   932 ;;  col             1    7[COMMON] unsigned char 
   933 ;;  address         1    8[COMMON] unsigned char 
   934 ;; Return value:  Size  Location     Type
   935 ;;                  1    wreg      void 
   936 ;; Registers used:
   937 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   938 ;; Tracked objects:
   939 ;;		On entry : 0/0
   940 ;;		On exit  : 0/0
   941 ;;		Unchanged: 0/0
   942 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   943 ;;      Params:         1       0       0       0       0
   944 ;;      Locals:         2       0       0       0       0
   945 ;;      Temps:          0       0       0       0       0
   946 ;;      Totals:         3       0       0       0       0
   947 ;;Total ram usage:        3 bytes
   948 ;; Hardware stack levels used: 1
   949 ;; Hardware stack levels required when called: 2
   950 ;; This function calls:
   951 ;;		_lcd_busy
   952 ;;		_lcd_put_byte
   953 ;; This function is called by:
   954 ;;		_main
   955 ;;		_lcd_putc
   956 ;; This function uses a non-reentrant model
   957 ;;
   958                           
   959     05AF                     _lcd_gotoxy:	
   960                           ;psect for function _lcd_gotoxy
   961                           
   962                           
   963                           ;incstack = 0
   964                           ; Regs used in _lcd_gotoxy: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   965                           ;lcd_gotoxy@col stored from wreg
   966     05AF  00F7               	movwf	lcd_gotoxy@col
   967     05B0                     l935:
   968                           
   969                           ;lcd.c: 167: void lcd_gotoxy(unsigned char col, unsigned char row);lcd.c: 168: {;lcd.c: 
      +                          170:  unsigned char address;;lcd.c: 173:  if(row!=0)
   970     05B0  0876               	movf	lcd_gotoxy@row,w
   971     05B1  1903               	btfsc	3,2
   972     05B2  2DB4               	goto	u361
   973     05B3  2DB5               	goto	u360
   974     05B4                     u361:
   975     05B4  2DB8               	goto	l939
   976     05B5                     u360:
   977     05B5                     l937:
   978                           
   979                           ;lcd.c: 174:   address=0x40;
   980     05B5  3040               	movlw	64
   981     05B6  00F8               	movwf	lcd_gotoxy@address
   982     05B7  2DB9               	goto	l941
   983     05B8                     l939:
   984                           
   985                           ;lcd.c: 176:   address=0;
   986     05B8  01F8               	clrf	lcd_gotoxy@address
   987     05B9                     l941:
   988                           
   989                           ;lcd.c: 178:  address += col;
   990     05B9  0877               	movf	lcd_gotoxy@col,w
   991     05BA  00FF               	movwf	btemp+1
   992     05BB  087F               	movf	btemp+1,w
   993     05BC  07F8               	addwf	lcd_gotoxy@address,f
   994     05BD                     l943:
   995                           
   996                           ;lcd.c: 180:  lcd_put_byte(0,0x80|address);
   997     05BD  0878               	movf	lcd_gotoxy@address,w
   998     05BE  3880               	iorlw	128
   999     05BF  00F3               	movwf	lcd_put_byte@b
  1000     05C0  3000               	movlw	0
  1001     05C1  120A  118A  2601  120A  118A  	fcall	_lcd_put_byte
  1002     05C6                     l945:	
  1003                           ;lcd.c: 181:  while(lcd_busy());
  1004                           
  1005     05C6  120A  118A  25D1  120A  118A  	fcall	_lcd_busy
  1006     05CB  3A00               	xorlw	0
  1007     05CC  1D03               	skipz
  1008     05CD  2DCF               	goto	u371
  1009     05CE  2DD0               	goto	u370
  1010     05CF                     u371:
  1011     05CF  2DC6               	goto	l945
  1012     05D0                     u370:
  1013     05D0                     l70:
  1014     05D0  0008               	return
  1015     05D1                     __end_of_lcd_gotoxy:
  1016                           
  1017                           	psect	text4
  1018     075F                     __ptext4:	
  1019 ;; *************** function _lcd_init *****************
  1020 ;; Defined at:
  1021 ;;		line 241 in file "lcd.c"
  1022 ;; Parameters:    Size  Location     Type
  1023 ;;		None
  1024 ;; Auto vars:     Size  Location     Type
  1025 ;;  i               1    0        unsigned char 
  1026 ;; Return value:  Size  Location     Type
  1027 ;;                  1    wreg      void 
  1028 ;; Registers used:
  1029 ;;		wreg, status,2, status,0, pclath, cstack
  1030 ;; Tracked objects:
  1031 ;;		On entry : 0/0
  1032 ;;		On exit  : 0/0
  1033 ;;		Unchanged: 0/0
  1034 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1035 ;;      Params:         0       0       0       0       0
  1036 ;;      Locals:         0       0       0       0       0
  1037 ;;      Temps:          2       0       0       0       0
  1038 ;;      Totals:         2       0       0       0       0
  1039 ;;Total ram usage:        2 bytes
  1040 ;; Hardware stack levels used: 1
  1041 ;; Hardware stack levels required when called: 2
  1042 ;; This function calls:
  1043 ;;		_lcd_busy
  1044 ;;		_lcd_put_byte
  1045 ;;		_lcd_put_nibble
  1046 ;; This function is called by:
  1047 ;;		_main
  1048 ;; This function uses a non-reentrant model
  1049 ;;
  1050                           
  1051     075F                     _lcd_init:	
  1052                           ;psect for function _lcd_init
  1053                           
  1054     075F                     l965:	
  1055                           ;incstack = 0
  1056                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  1057                           
  1058                           
  1059                           ;lcd.c: 244: unsigned char i;;lcd.c: 247:  TRISD3 = 0;
  1060     075F  1683               	bsf	3,5	;RP0=1, select bank1
  1061     0760  1303               	bcf	3,6	;RP1=0, select bank1
  1062     0761  1188               	bcf	8,3	;volatile
  1063                           
  1064                           ;lcd.c: 248:  TRISD1 = 0;
  1065     0762  1088               	bcf	8,1	;volatile
  1066                           
  1067                           ;lcd.c: 249:  TRISD2 = 0;
  1068     0763  1108               	bcf	8,2	;volatile
  1069                           
  1070                           ;lcd.c: 250:  TRISD4 = 0;
  1071     0764  1208               	bcf	8,4	;volatile
  1072                           
  1073                           ;lcd.c: 251:  TRISD5 = 0;
  1074     0765  1288               	bcf	8,5	;volatile
  1075                           
  1076                           ;lcd.c: 252:  TRISD6 = 0;
  1077     0766  1308               	bcf	8,6	;volatile
  1078                           
  1079                           ;lcd.c: 253:  TRISD7 = 0;
  1080     0767  1388               	bcf	8,7	;volatile
  1081     0768                     l967:
  1082                           
  1083                           ;lcd.c: 255:  _delay((unsigned long)((15)*(4000000/4000.0)));
  1084     0768  3014               	movlw	20
  1085     0769  00F7               	movwf	??_lcd_init+1
  1086     076A  3079               	movlw	121
  1087     076B  00F6               	movwf	??_lcd_init
  1088     076C                     u537:
  1089     076C  0BF6               	decfsz	??_lcd_init,f
  1090     076D  2F6C               	goto	u537
  1091     076E  0BF7               	decfsz	??_lcd_init+1,f
  1092     076F  2F6C               	goto	u537
  1093     0770  2F71               	nop2
  1094     0771                     l969:
  1095                           
  1096                           ;lcd.c: 257:  RD1 = 0;
  1097     0771  1283               	bcf	3,5	;RP0=0, select bank0
  1098     0772  1303               	bcf	3,6	;RP1=0, select bank0
  1099     0773  1088               	bcf	8,1	;volatile
  1100     0774                     l971:
  1101                           
  1102                           ;lcd.c: 258:  RD2 = 0;
  1103     0774  1108               	bcf	8,2	;volatile
  1104     0775                     l973:
  1105                           
  1106                           ;lcd.c: 259:  RD3 = 0;
  1107     0775  1188               	bcf	8,3	;volatile
  1108     0776                     l975:
  1109                           
  1110                           ;lcd.c: 261:  lcd_put_nibble(3);
  1111     0776  3003               	movlw	3
  1112     0777  120A  118A  263A  120A  118A  	fcall	_lcd_put_nibble
  1113     077C                     l977:
  1114                           
  1115                           ;lcd.c: 262:  _delay((unsigned long)((10)*(4000000/4000.0)));
  1116     077C  300D               	movlw	13
  1117     077D  00F7               	movwf	??_lcd_init+1
  1118     077E  30FB               	movlw	251
  1119     077F  00F6               	movwf	??_lcd_init
  1120     0780                     u547:
  1121     0780  0BF6               	decfsz	??_lcd_init,f
  1122     0781  2F80               	goto	u547
  1123     0782  0BF7               	decfsz	??_lcd_init+1,f
  1124     0783  2F80               	goto	u547
  1125     0784  2F85               	nop2
  1126                           
  1127                           ;lcd.c: 263:  lcd_put_nibble(3);
  1128     0785  3003               	movlw	3
  1129     0786  120A  118A  263A  120A  118A  	fcall	_lcd_put_nibble
  1130     078B                     l979:
  1131                           
  1132                           ;lcd.c: 264:  _delay((unsigned long)((10)*(4000000/4000.0)));
  1133     078B  300D               	movlw	13
  1134     078C  00F7               	movwf	??_lcd_init+1
  1135     078D  30FB               	movlw	251
  1136     078E  00F6               	movwf	??_lcd_init
  1137     078F                     u557:
  1138     078F  0BF6               	decfsz	??_lcd_init,f
  1139     0790  2F8F               	goto	u557
  1140     0791  0BF7               	decfsz	??_lcd_init+1,f
  1141     0792  2F8F               	goto	u557
  1142     0793  2F94               	nop2
  1143     0794                     l981:
  1144                           
  1145                           ;lcd.c: 265:  lcd_put_nibble(3);
  1146     0794  3003               	movlw	3
  1147     0795  120A  118A  263A  120A  118A  	fcall	_lcd_put_nibble
  1148                           
  1149                           ;lcd.c: 266:  _delay((unsigned long)((10)*(4000000/4000.0)));
  1150     079A  300D               	movlw	13
  1151     079B  00F7               	movwf	??_lcd_init+1
  1152     079C  30FB               	movlw	251
  1153     079D  00F6               	movwf	??_lcd_init
  1154     079E                     u567:
  1155     079E  0BF6               	decfsz	??_lcd_init,f
  1156     079F  2F9E               	goto	u567
  1157     07A0  0BF7               	decfsz	??_lcd_init+1,f
  1158     07A1  2F9E               	goto	u567
  1159     07A2  2FA3               	nop2
  1160     07A3                     l983:
  1161                           
  1162                           ;lcd.c: 268:  lcd_put_nibble(2);
  1163     07A3  3002               	movlw	2
  1164     07A4  120A  118A  263A  120A  118A  	fcall	_lcd_put_nibble
  1165     07A9                     l985:	
  1166                           ;lcd.c: 269:  while(lcd_busy());
  1167                           
  1168     07A9  120A  118A  25D1  120A  118A  	fcall	_lcd_busy
  1169     07AE  3A00               	xorlw	0
  1170     07AF  1D03               	skipz
  1171     07B0  2FB2               	goto	u411
  1172     07B1  2FB3               	goto	u410
  1173     07B2                     u411:
  1174     07B2  2FA9               	goto	l985
  1175     07B3                     u410:
  1176     07B3                     l987:
  1177                           
  1178                           ;lcd.c: 271:  lcd_put_byte(0,0b00101100 & 0b00111000);
  1179     07B3  3028               	movlw	40
  1180     07B4  00F3               	movwf	lcd_put_byte@b
  1181     07B5  3000               	movlw	0
  1182     07B6  120A  118A  2601  120A  118A  	fcall	_lcd_put_byte
  1183     07BB                     l989:	
  1184                           ;lcd.c: 272:  while(lcd_busy());
  1185                           
  1186     07BB  120A  118A  25D1  120A  118A  	fcall	_lcd_busy
  1187     07C0  3A00               	xorlw	0
  1188     07C1  1D03               	skipz
  1189     07C2  2FC4               	goto	u421
  1190     07C3  2FC5               	goto	u420
  1191     07C4                     u421:
  1192     07C4  2FBB               	goto	l989
  1193     07C5                     u420:
  1194     07C5                     l991:
  1195                           
  1196                           ;lcd.c: 274:  lcd_put_byte(0,0b00001111 & 0b00001101 & 0b00001110);
  1197     07C5  300C               	movlw	12
  1198     07C6  00F3               	movwf	lcd_put_byte@b
  1199     07C7  3000               	movlw	0
  1200     07C8  120A  118A  2601  120A  118A  	fcall	_lcd_put_byte
  1201     07CD                     l993:	
  1202                           ;lcd.c: 275:  while(lcd_busy());
  1203                           
  1204     07CD  120A  118A  25D1  120A  118A  	fcall	_lcd_busy
  1205     07D2  3A00               	xorlw	0
  1206     07D3  1D03               	skipz
  1207     07D4  2FD6               	goto	u431
  1208     07D5  2FD7               	goto	u430
  1209     07D6                     u431:
  1210     07D6  2FCD               	goto	l993
  1211     07D7                     u430:
  1212     07D7                     l995:
  1213                           
  1214                           ;lcd.c: 277:  lcd_put_byte(0,0x01);
  1215     07D7  01F3               	clrf	lcd_put_byte@b
  1216     07D8  0AF3               	incf	lcd_put_byte@b,f
  1217     07D9  3000               	movlw	0
  1218     07DA  120A  118A  2601  120A  118A  	fcall	_lcd_put_byte
  1219     07DF                     l997:	
  1220                           ;lcd.c: 278:  while(lcd_busy());
  1221                           
  1222     07DF  120A  118A  25D1  120A  118A  	fcall	_lcd_busy
  1223     07E4  3A00               	xorlw	0
  1224     07E5  1D03               	skipz
  1225     07E6  2FE8               	goto	u441
  1226     07E7  2FE9               	goto	u440
  1227     07E8                     u441:
  1228     07E8  2FDF               	goto	l997
  1229     07E9                     u440:
  1230     07E9                     l999:
  1231                           
  1232                           ;lcd.c: 280:  lcd_put_byte(0,0b00000110);
  1233     07E9  3006               	movlw	6
  1234     07EA  00F3               	movwf	lcd_put_byte@b
  1235     07EB  3000               	movlw	0
  1236     07EC  120A  118A  2601  120A  118A  	fcall	_lcd_put_byte
  1237     07F1                     l1001:	
  1238                           ;lcd.c: 281:  while(lcd_busy());
  1239                           
  1240     07F1  120A  118A  25D1  120A  118A  	fcall	_lcd_busy
  1241     07F6  3A00               	xorlw	0
  1242     07F7  1D03               	skipz
  1243     07F8  2FFA               	goto	u451
  1244     07F9  2FFB               	goto	u450
  1245     07FA                     u451:
  1246     07FA  2FF1               	goto	l1001
  1247     07FB                     u450:
  1248     07FB                     l112:
  1249     07FB  0008               	return
  1250     07FC                     __end_of_lcd_init:
  1251                           
  1252                           	psect	text5
  1253     0601                     __ptext5:	
  1254 ;; *************** function _lcd_put_byte *****************
  1255 ;; Defined at:
  1256 ;;		line 134 in file "lcd.c"
  1257 ;; Parameters:    Size  Location     Type
  1258 ;;  rs              1    wreg     unsigned char 
  1259 ;;  b               1    3[COMMON] unsigned char 
  1260 ;; Auto vars:     Size  Location     Type
  1261 ;;  rs              1    5[COMMON] unsigned char 
  1262 ;; Return value:  Size  Location     Type
  1263 ;;                  1    wreg      void 
  1264 ;; Registers used:
  1265 ;;		wreg, status,2, status,0, pclath, cstack
  1266 ;; Tracked objects:
  1267 ;;		On entry : 0/0
  1268 ;;		On exit  : 0/0
  1269 ;;		Unchanged: 0/0
  1270 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1271 ;;      Params:         1       0       0       0       0
  1272 ;;      Locals:         1       0       0       0       0
  1273 ;;      Temps:          1       0       0       0       0
  1274 ;;      Totals:         3       0       0       0       0
  1275 ;;Total ram usage:        3 bytes
  1276 ;; Hardware stack levels used: 1
  1277 ;; Hardware stack levels required when called: 1
  1278 ;; This function calls:
  1279 ;;		_lcd_put_nibble
  1280 ;; This function is called by:
  1281 ;;		_lcd_gotoxy
  1282 ;;		_lcd_putc
  1283 ;;		_lcd_init
  1284 ;;		_lcd_ShiftLeft
  1285 ;;		_lcd_ShiftRight
  1286 ;; This function uses a non-reentrant model
  1287 ;;
  1288                           
  1289     0601                     _lcd_put_byte:	
  1290                           ;psect for function _lcd_put_byte
  1291                           
  1292                           
  1293                           ;incstack = 0
  1294                           ; Regs used in _lcd_put_byte: [wreg+status,2+status,0+pclath+cstack]
  1295                           ;lcd_put_byte@rs stored from wreg
  1296     0601  00F5               	movwf	lcd_put_byte@rs
  1297     0602                     l919:
  1298                           
  1299                           ;lcd.c: 134: void lcd_put_byte(unsigned char rs, unsigned char b);lcd.c: 135: {;lcd.c: 1
      +                          39:  TRISD4 = 0;
  1300     0602  1683               	bsf	3,5	;RP0=1, select bank1
  1301     0603  1303               	bcf	3,6	;RP1=0, select bank1
  1302     0604  1208               	bcf	8,4	;volatile
  1303                           
  1304                           ;lcd.c: 140:  TRISD5 = 0;
  1305     0605  1288               	bcf	8,5	;volatile
  1306                           
  1307                           ;lcd.c: 141:  TRISD6 = 0;
  1308     0606  1308               	bcf	8,6	;volatile
  1309                           
  1310                           ;lcd.c: 142:  TRISD7 = 0;
  1311     0607  1388               	bcf	8,7	;volatile
  1312     0608                     l921:
  1313                           
  1314                           ;lcd.c: 144:  if(rs)
  1315     0608  0875               	movf	lcd_put_byte@rs,w
  1316     0609  1903               	btfsc	3,2
  1317     060A  2E0C               	goto	u341
  1318     060B  2E0D               	goto	u340
  1319     060C                     u341:
  1320     060C  2E11               	goto	l60
  1321     060D                     u340:
  1322     060D                     l923:
  1323                           
  1324                           ;lcd.c: 145:   RD1 = 1;
  1325     060D  1283               	bcf	3,5	;RP0=0, select bank0
  1326     060E  1303               	bcf	3,6	;RP1=0, select bank0
  1327     060F  1488               	bsf	8,1	;volatile
  1328     0610  2E14               	goto	l925
  1329     0611                     l60:	
  1330                           ;lcd.c: 146:  else
  1331                           
  1332                           
  1333                           ;lcd.c: 147:   RD1 = 0;
  1334     0611  1283               	bcf	3,5	;RP0=0, select bank0
  1335     0612  1303               	bcf	3,6	;RP1=0, select bank0
  1336     0613  1088               	bcf	8,1	;volatile
  1337     0614                     l925:
  1338                           
  1339                           ;lcd.c: 148:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  1340     0614  3006               	movlw	6
  1341     0615  00F4               	movwf	??_lcd_put_byte
  1342     0616                     u577:
  1343     0616  0BF4               	decfsz	??_lcd_put_byte,f
  1344     0617  2E16               	goto	u577
  1345     0618  0000               	nop
  1346     0619                     l927:
  1347                           
  1348                           ;lcd.c: 150:  RD2 = 0;
  1349     0619  1283               	bcf	3,5	;RP0=0, select bank0
  1350     061A  1303               	bcf	3,6	;RP1=0, select bank0
  1351     061B  1108               	bcf	8,2	;volatile
  1352                           
  1353                           ;lcd.c: 151:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  1354     061C  3006               	movlw	6
  1355     061D  00F4               	movwf	??_lcd_put_byte
  1356     061E                     u587:
  1357     061E  0BF4               	decfsz	??_lcd_put_byte,f
  1358     061F  2E1E               	goto	u587
  1359     0620  0000               	nop
  1360     0621                     l929:
  1361                           
  1362                           ;lcd.c: 153:  RD3 = 0;
  1363     0621  1283               	bcf	3,5	;RP0=0, select bank0
  1364     0622  1303               	bcf	3,6	;RP1=0, select bank0
  1365     0623  1188               	bcf	8,3	;volatile
  1366     0624                     l931:
  1367                           
  1368                           ;lcd.c: 155:  lcd_put_nibble(b >> 4);
  1369     0624  0873               	movf	lcd_put_byte@b,w
  1370     0625  00F4               	movwf	??_lcd_put_byte
  1371     0626  3004               	movlw	4
  1372     0627                     u355:
  1373     0627  1003               	clrc
  1374     0628  0CF4               	rrf	??_lcd_put_byte,f
  1375     0629  3EFF               	addlw	-1
  1376     062A  1D03               	skipz
  1377     062B  2E27               	goto	u355
  1378     062C  0874               	movf	??_lcd_put_byte,w
  1379     062D  120A  118A  263A  120A  118A  	fcall	_lcd_put_nibble
  1380     0632                     l933:
  1381                           
  1382                           ;lcd.c: 157:  lcd_put_nibble(b & 0xf);
  1383     0632  0873               	movf	lcd_put_byte@b,w
  1384     0633  390F               	andlw	15
  1385     0634  120A  118A  263A  120A  118A  	fcall	_lcd_put_nibble
  1386     0639                     l62:
  1387     0639  0008               	return
  1388     063A                     __end_of_lcd_put_byte:
  1389                           
  1390                           	psect	text6
  1391     063A                     __ptext6:	
  1392 ;; *************** function _lcd_put_nibble *****************
  1393 ;; Defined at:
  1394 ;;		line 103 in file "lcd.c"
  1395 ;; Parameters:    Size  Location     Type
  1396 ;;  b               1    wreg     unsigned char 
  1397 ;; Auto vars:     Size  Location     Type
  1398 ;;  b               1    1[COMMON] unsigned char 
  1399 ;;  temp            1    2[COMMON] struct _BYTE_VAL
  1400 ;; Return value:  Size  Location     Type
  1401 ;;                  1    wreg      void 
  1402 ;; Registers used:
  1403 ;;		wreg
  1404 ;; Tracked objects:
  1405 ;;		On entry : 0/0
  1406 ;;		On exit  : 0/0
  1407 ;;		Unchanged: 0/0
  1408 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1409 ;;      Params:         0       0       0       0       0
  1410 ;;      Locals:         2       0       0       0       0
  1411 ;;      Temps:          1       0       0       0       0
  1412 ;;      Totals:         3       0       0       0       0
  1413 ;;Total ram usage:        3 bytes
  1414 ;; Hardware stack levels used: 1
  1415 ;; This function calls:
  1416 ;;		Nothing
  1417 ;; This function is called by:
  1418 ;;		_lcd_put_byte
  1419 ;;		_lcd_init
  1420 ;; This function uses a non-reentrant model
  1421 ;;
  1422                           
  1423     063A                     _lcd_put_nibble:	
  1424                           ;psect for function _lcd_put_nibble
  1425                           
  1426                           
  1427                           ;incstack = 0
  1428                           ; Regs used in _lcd_put_nibble: [wreg]
  1429                           ;lcd_put_nibble@b stored from wreg
  1430     063A  00F1               	movwf	lcd_put_nibble@b
  1431     063B                     l683:
  1432                           
  1433                           ;lcd.c: 103: void lcd_put_nibble(unsigned char b);lcd.c: 104: {;lcd.c: 106:  BYTE_VAL te
      +                          mp;;lcd.c: 109:  TRISD4 = 0;
  1434     063B  1683               	bsf	3,5	;RP0=1, select bank1
  1435     063C  1303               	bcf	3,6	;RP1=0, select bank1
  1436     063D  1208               	bcf	8,4	;volatile
  1437                           
  1438                           ;lcd.c: 110:  TRISD5 = 0;
  1439     063E  1288               	bcf	8,5	;volatile
  1440                           
  1441                           ;lcd.c: 111:  TRISD6 = 0;
  1442     063F  1308               	bcf	8,6	;volatile
  1443                           
  1444                           ;lcd.c: 112:  TRISD7 = 0;
  1445     0640  1388               	bcf	8,7	;volatile
  1446     0641                     l685:
  1447                           
  1448                           ;lcd.c: 114:  temp.Val = b;
  1449     0641  0871               	movf	lcd_put_nibble@b,w
  1450     0642  00F2               	movwf	lcd_put_nibble@temp
  1451     0643                     l687:
  1452                           
  1453                           ;lcd.c: 116:  RD4 = temp.bits.b0;
  1454     0643  1872               	btfsc	lcd_put_nibble@temp,0
  1455     0644  2E46               	goto	u11
  1456     0645  2E4A               	goto	u10
  1457     0646                     u11:
  1458     0646  1283               	bcf	3,5	;RP0=0, select bank0
  1459     0647  1303               	bcf	3,6	;RP1=0, select bank0
  1460     0648  1608               	bsf	8,4	;volatile
  1461     0649  2E4D               	goto	u24
  1462     064A                     u10:
  1463     064A  1283               	bcf	3,5	;RP0=0, select bank0
  1464     064B  1303               	bcf	3,6	;RP1=0, select bank0
  1465     064C  1208               	bcf	8,4	;volatile
  1466     064D                     u24:
  1467     064D                     l689:
  1468                           
  1469                           ;lcd.c: 117:  RD5 = temp.bits.b1;
  1470     064D  18F2               	btfsc	lcd_put_nibble@temp,1
  1471     064E  2E50               	goto	u31
  1472     064F  2E54               	goto	u30
  1473     0650                     u31:
  1474     0650  1283               	bcf	3,5	;RP0=0, select bank0
  1475     0651  1303               	bcf	3,6	;RP1=0, select bank0
  1476     0652  1688               	bsf	8,5	;volatile
  1477     0653  2E57               	goto	u44
  1478     0654                     u30:
  1479     0654  1283               	bcf	3,5	;RP0=0, select bank0
  1480     0655  1303               	bcf	3,6	;RP1=0, select bank0
  1481     0656  1288               	bcf	8,5	;volatile
  1482     0657                     u44:
  1483     0657                     l691:
  1484                           
  1485                           ;lcd.c: 118:  RD6 = temp.bits.b2;
  1486     0657  1972               	btfsc	lcd_put_nibble@temp,2
  1487     0658  2E5A               	goto	u51
  1488     0659  2E5E               	goto	u50
  1489     065A                     u51:
  1490     065A  1283               	bcf	3,5	;RP0=0, select bank0
  1491     065B  1303               	bcf	3,6	;RP1=0, select bank0
  1492     065C  1708               	bsf	8,6	;volatile
  1493     065D  2E61               	goto	u64
  1494     065E                     u50:
  1495     065E  1283               	bcf	3,5	;RP0=0, select bank0
  1496     065F  1303               	bcf	3,6	;RP1=0, select bank0
  1497     0660  1308               	bcf	8,6	;volatile
  1498     0661                     u64:
  1499     0661                     l693:
  1500                           
  1501                           ;lcd.c: 119:  RD7 = temp.bits.b3;
  1502     0661  19F2               	btfsc	lcd_put_nibble@temp,3
  1503     0662  2E64               	goto	u71
  1504     0663  2E68               	goto	u70
  1505     0664                     u71:
  1506     0664  1283               	bcf	3,5	;RP0=0, select bank0
  1507     0665  1303               	bcf	3,6	;RP1=0, select bank0
  1508     0666  1788               	bsf	8,7	;volatile
  1509     0667  2E6B               	goto	u84
  1510     0668                     u70:
  1511     0668  1283               	bcf	3,5	;RP0=0, select bank0
  1512     0669  1303               	bcf	3,6	;RP1=0, select bank0
  1513     066A  1388               	bcf	8,7	;volatile
  1514     066B                     u84:
  1515                           
  1516                           ;lcd.c: 121:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  1517     066B  3006               	movlw	6
  1518     066C  00F0               	movwf	??_lcd_put_nibble
  1519     066D                     u597:
  1520     066D  0BF0               	decfsz	??_lcd_put_nibble,f
  1521     066E  2E6D               	goto	u597
  1522     066F  0000               	nop
  1523     0670                     l695:
  1524                           
  1525                           ;lcd.c: 122:  RD3 = 1;
  1526     0670  1283               	bcf	3,5	;RP0=0, select bank0
  1527     0671  1303               	bcf	3,6	;RP1=0, select bank0
  1528     0672  1588               	bsf	8,3	;volatile
  1529                           
  1530                           ;lcd.c: 123:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  1531     0673  3006               	movlw	6
  1532     0674  00F0               	movwf	??_lcd_put_nibble
  1533     0675                     u607:
  1534     0675  0BF0               	decfsz	??_lcd_put_nibble,f
  1535     0676  2E75               	goto	u607
  1536     0677  0000               	nop
  1537     0678                     l697:
  1538                           
  1539                           ;lcd.c: 124:  RD3 = 0;
  1540     0678  1283               	bcf	3,5	;RP0=0, select bank0
  1541     0679  1303               	bcf	3,6	;RP1=0, select bank0
  1542     067A  1188               	bcf	8,3	;volatile
  1543     067B                     l57:
  1544     067B  0008               	return
  1545     067C                     __end_of_lcd_put_nibble:
  1546                           
  1547                           	psect	text7
  1548     05D1                     __ptext7:	
  1549 ;; *************** function _lcd_busy *****************
  1550 ;; Defined at:
  1551 ;;		line 18 in file "lcd.c"
  1552 ;; Parameters:    Size  Location     Type
  1553 ;;		None
  1554 ;; Auto vars:     Size  Location     Type
  1555 ;;  busy            1    1[COMMON] unsigned char 
  1556 ;; Return value:  Size  Location     Type
  1557 ;;                  1    wreg      unsigned char 
  1558 ;; Registers used:
  1559 ;;		wreg, status,2
  1560 ;; Tracked objects:
  1561 ;;		On entry : 0/0
  1562 ;;		On exit  : 0/0
  1563 ;;		Unchanged: 0/0
  1564 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1565 ;;      Params:         0       0       0       0       0
  1566 ;;      Locals:         1       0       0       0       0
  1567 ;;      Temps:          1       0       0       0       0
  1568 ;;      Totals:         2       0       0       0       0
  1569 ;;Total ram usage:        2 bytes
  1570 ;; Hardware stack levels used: 1
  1571 ;; This function calls:
  1572 ;;		Nothing
  1573 ;; This function is called by:
  1574 ;;		_lcd_gotoxy
  1575 ;;		_lcd_putc
  1576 ;;		_lcd_init
  1577 ;; This function uses a non-reentrant model
  1578 ;;
  1579                           
  1580     05D1                     _lcd_busy:	
  1581                           ;psect for function _lcd_busy
  1582                           
  1583     05D1                     l699:	
  1584                           ;incstack = 0
  1585                           ; Regs used in _lcd_busy: [wreg+status,2]
  1586                           
  1587                           
  1588                           ;lcd.c: 21: unsigned char busy;;lcd.c: 24:  TRISD4 = 1;
  1589     05D1  1683               	bsf	3,5	;RP0=1, select bank1
  1590     05D2  1303               	bcf	3,6	;RP1=0, select bank1
  1591     05D3  1608               	bsf	8,4	;volatile
  1592                           
  1593                           ;lcd.c: 25:  TRISD5 = 1;
  1594     05D4  1688               	bsf	8,5	;volatile
  1595                           
  1596                           ;lcd.c: 26:  TRISD6 = 1;
  1597     05D5  1708               	bsf	8,6	;volatile
  1598                           
  1599                           ;lcd.c: 27:  TRISD7 = 1;
  1600     05D6  1788               	bsf	8,7	;volatile
  1601                           
  1602                           ;lcd.c: 29:  RD2 = 1;
  1603     05D7  1283               	bcf	3,5	;RP0=0, select bank0
  1604     05D8  1303               	bcf	3,6	;RP1=0, select bank0
  1605     05D9  1508               	bsf	8,2	;volatile
  1606                           
  1607                           ;lcd.c: 30:  RD1 = 0;
  1608     05DA  1088               	bcf	8,1	;volatile
  1609     05DB                     l701:
  1610                           
  1611                           ;lcd.c: 31:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  1612     05DB  3006               	movlw	6
  1613     05DC  00F0               	movwf	??_lcd_busy
  1614     05DD                     u617:
  1615     05DD  0BF0               	decfsz	??_lcd_busy,f
  1616     05DE  2DDD               	goto	u617
  1617     05DF  0000               	nop
  1618     05E0                     l703:
  1619                           
  1620                           ;lcd.c: 32:  RD3 = 1;
  1621     05E0  1283               	bcf	3,5	;RP0=0, select bank0
  1622     05E1  1303               	bcf	3,6	;RP1=0, select bank0
  1623     05E2  1588               	bsf	8,3	;volatile
  1624                           
  1625                           ;lcd.c: 33:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  1626     05E3  3006               	movlw	6
  1627     05E4  00F0               	movwf	??_lcd_busy
  1628     05E5                     u627:
  1629     05E5  0BF0               	decfsz	??_lcd_busy,f
  1630     05E6  2DE5               	goto	u627
  1631     05E7  0000               	nop
  1632     05E8                     l705:
  1633                           
  1634                           ;lcd.c: 35:  busy = RD7;
  1635     05E8  3000               	movlw	0
  1636     05E9  1283               	bcf	3,5	;RP0=0, select bank0
  1637     05EA  1303               	bcf	3,6	;RP1=0, select bank0
  1638     05EB  1B88               	btfsc	8,7	;volatile
  1639     05EC  3001               	movlw	1
  1640     05ED  00F1               	movwf	lcd_busy@busy
  1641     05EE                     l707:
  1642                           
  1643                           ;lcd.c: 37:  RD3 = 0;
  1644     05EE  1188               	bcf	8,3	;volatile
  1645     05EF                     l709:
  1646                           
  1647                           ;lcd.c: 38:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  1648     05EF  3006               	movlw	6
  1649     05F0  00F0               	movwf	??_lcd_busy
  1650     05F1                     u637:
  1651     05F1  0BF0               	decfsz	??_lcd_busy,f
  1652     05F2  2DF1               	goto	u637
  1653     05F3  0000               	nop
  1654     05F4                     l711:
  1655                           
  1656                           ;lcd.c: 39:  RD3 = 1;
  1657     05F4  1283               	bcf	3,5	;RP0=0, select bank0
  1658     05F5  1303               	bcf	3,6	;RP1=0, select bank0
  1659     05F6  1588               	bsf	8,3	;volatile
  1660     05F7                     l713:
  1661                           
  1662                           ;lcd.c: 40:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  1663     05F7  3006               	movlw	6
  1664     05F8  00F0               	movwf	??_lcd_busy
  1665     05F9                     u647:
  1666     05F9  0BF0               	decfsz	??_lcd_busy,f
  1667     05FA  2DF9               	goto	u647
  1668     05FB  0000               	nop
  1669     05FC                     l715:
  1670                           
  1671                           ;lcd.c: 41:  RD3 = 0;
  1672     05FC  1283               	bcf	3,5	;RP0=0, select bank0
  1673     05FD  1303               	bcf	3,6	;RP1=0, select bank0
  1674     05FE  1188               	bcf	8,3	;volatile
  1675     05FF                     l717:
  1676                           
  1677                           ;lcd.c: 43:  return busy;
  1678     05FF  0871               	movf	lcd_busy@busy,w
  1679     0600                     l49:
  1680     0600  0008               	return
  1681     0601                     __end_of_lcd_busy:
  1682     007E                     btemp	set	126	;btemp
  1683     007E                     wtemp0	set	126
  1684                           
  1685                           	psect	config
  1686                           
  1687                           ;Config register CONFIG1 @ 0x2007
  1688                           ;	Oscillator Selection bits
  1689                           ;	FOSC = HS, HS oscillator: High-speed crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1
      +                          /CLKIN
  1690                           ;	Watchdog Timer Enable bit
  1691                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1692                           ;	Power-up Timer Enable bit
  1693                           ;	PWRTE = OFF, PWRT disabled
  1694                           ;	RE3/MCLR pin function select bit
  1695                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1696                           ;	Code Protection bit
  1697                           ;	CP = OFF, Program memory code protection is disabled
  1698                           ;	Data Code Protection bit
  1699                           ;	CPD = OFF, Data memory code protection is disabled
  1700                           ;	Brown Out Reset Selection bits
  1701                           ;	BOREN = OFF, BOR disabled
  1702                           ;	Internal External Switchover bit
  1703                           ;	IESO = ON, Internal/External Switchover mode is enabled
  1704                           ;	Fail-Safe Clock Monitor Enabled bit
  1705                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1706                           ;	Low Voltage Programming Enable bit
  1707                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1708                           ;	In-Circuit Debugger Mode bit
  1709                           ;	DEBUG = 0x1, unprogrammed default
  1710     2007                     	org	8199
  1711     2007  24D2               	dw	9426
  1712                           
  1713                           ;Config register CONFIG2 @ 0x2008
  1714                           ;	Brown-out Reset Selection bit
  1715                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1716                           ;	Flash Program Memory Self Write Enable bits
  1717                           ;	WRT = OFF, Write protection off
  1718     2008                     	org	8200
  1719     2008  3FFF               	dw	16383

Data Sizes:
    Strings     89
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    lcd_puts@s	PTR const unsigned char  size(1) Largest target is 17
		 -> STR_1(CODE[15]), STR_2(CODE[15]), STR_3(CODE[2]), STR_4(CODE[17]), 
		 -> STR_5(CODE[13]), STR_6(CODE[2]), STR_7(CODE[10]), STR_8(CODE[17]), 
		 -> STR_9(CODE[2]), 


Critical Paths under _main in COMMON

    _main->_lcd_puts
    _lcd_puts->_lcd_putc
    _lcd_putc->_lcd_gotoxy
    _lcd_gotoxy->_lcd_put_byte
    _lcd_init->_lcd_put_byte
    _lcd_put_byte->_lcd_put_nibble

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    5327
                                             11 COMMON     3     3      0
                         _lcd_gotoxy
                           _lcd_init
                           _lcd_puts
 ---------------------------------------------------------------------------------
 (1) _lcd_puts                                             1     1      0    2819
                                             10 COMMON     1     1      0
                           _lcd_putc
 ---------------------------------------------------------------------------------
 (2) _lcd_putc                                             1     1      0    2477
                                              9 COMMON     1     1      0
                           _lcd_busy
                         _lcd_gotoxy
                       _lcd_put_byte
 ---------------------------------------------------------------------------------
 (3) _lcd_gotoxy                                           3     2      1    1517
                                              6 COMMON     3     2      1
                           _lcd_busy
                       _lcd_put_byte
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             3     3      0     991
                                              6 COMMON     2     2      0
                           _lcd_busy
                       _lcd_put_byte
                     _lcd_put_nibble
 ---------------------------------------------------------------------------------
 (3) _lcd_put_byte                                         3     2      1     901
                                              3 COMMON     3     2      1
                     _lcd_put_nibble
 ---------------------------------------------------------------------------------
 (4) _lcd_put_nibble                                       3     3      0      75
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (4) _lcd_busy                                             2     2      0      15
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _lcd_gotoxy
     _lcd_busy
     _lcd_put_byte
       _lcd_put_nibble
   _lcd_init
     _lcd_busy
     _lcd_put_byte
     _lcd_put_nibble
   _lcd_puts
     _lcd_putc
       _lcd_busy
       _lcd_gotoxy
       _lcd_put_byte

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Thu Sep 05 09:48:12 2024

                      pc 0002                       l60 0611                       l62 0639  
                     l70 05D0                       l49 0600                       l57 067B  
                     l94 05AE                       l88 06CB                       u10 064A  
                     u11 0646                       u30 0654                       u31 0650  
                     u24 064D                       u50 065E                       u51 065A  
                     u44 0657                       u70 0668                       u71 0664  
                     u64 0661                       u84 066B   __end_of_lcd_put_nibble 067C  
                     fsr 0004            ?_lcd_put_byte 0073                      l112 07FB  
                    l701 05DB                      l711 05F4                      l703 05E0  
                    l713 05F7                      l705 05E8                      l715 05FC  
                    l707 05EE                      l717 05FF                      l709 05EF  
                    l921 0608                      l691 0657                      l683 063B  
                    l931 0624                      l923 060D                      l693 0661  
                    l685 0641                      l933 0632                      l925 0614  
                    l941 05B9                      l695 0670                      l687 0643  
                    l927 0619                      l919 0602                      l943 05BD  
                    l935 05B0                      l951 0686                      l697 0678  
                    l689 064D                      l929 0621                      l945 05C6  
                    l937 05B5                      l961 06B5                      l953 0691  
                    l699 05D1                      l971 0774                      l939 05B8  
                    l955 069A                      l963 06C0                      l947 067D  
                    l981 0794                      l973 0775                      l965 075F  
                    l957 06A2                      l949 067E                      l991 07C5  
                    l983 07A3                      l975 0776                      l967 0768  
                    l959 06AD                      l993 07CD                      l985 07A9  
                    l977 077C                      l969 0771                      l995 07D7  
                    l987 07B3                      l979 078B                      l997 07DF  
                    l989 07BB                      l999 07E9                      _RD1 0041  
                    _RD2 0042                      _RD3 0043                      _RD4 0044  
                    _RD5 0045                      _RD6 0046                      _RD7 0047  
                    u400 06BF                      u401 06BE                      u410 07B3  
                    u411 07B2                      u340 060D                      u420 07C5  
                    u341 060C                      u421 07C4                      u430 07D7  
                    u431 07D6                      u440 07E9                      u360 05B5  
                    u441 07E8                      u361 05B4                      u450 07FB  
                    u370 05D0                      u355 0627                      u451 07FA  
                    u371 05CF                      u507 06F2                      u380 0690  
                    u460 05AE                      u381 068F                      u461 05AD  
                    u517 0720                      u390 06AC                      u607 0675  
                    u391 06AB                      u527 074E                      u617 05DD  
                    u537 076C                      u627 05E5                      u547 0780  
                    u637 05F1                      u557 078F                      u647 05F9  
                    u567 079E                      u577 0616                      u587 061E  
                    u597 066D                      fsr0 0004                     l1001 07F1  
                   l1003 0591                     l1005 0592                     l1021 06DE  
                   l1007 059E                     l1031 0706                     l1023 06E6  
                   l1015 06CC                     l1009 05A2                     l1041 072D  
                   l1033 070C                     l1025 06EC                     l1017 06D1  
                   l1051 0755                     l1043 0734                     l1035 0714  
                   l1027 06F9                     l1019 06D8                     l1045 073A  
                   l1037 071A                     l1029 06FF                     l1047 0742  
                   l1039 0727                     l1049 0748                     STR_1 003A  
                   STR_2 002B                     STR_3 0060                     STR_4 0009  
                   STR_5 0049                     STR_6 0060                     STR_7 0056  
                   STR_8 001A                     STR_9 0060                     _main 06CC  
           lcd_busy@busy 0071                     btemp 007E                     start 0000  
        ?_lcd_put_nibble 0070           ??_lcd_put_byte 0074                    ?_main 0070  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 07FC             __end_of_main 075F            lcd_gotoxy@col 0077  
          lcd_gotoxy@row 0076       lcd_put_nibble@temp 0072                   ??_main 007B  
                 _TRISD1 0441                   _TRISD2 0442                   _TRISD3 0443  
                 _TRISD4 0444                   _TRISD5 0445                   _TRISD6 0446  
                 _TRISD7 0447         __end_of_lcd_busy 0601         __end_of_lcd_init 07FC  
       __end_of_lcd_putc 06CC         __end_of_lcd_puts 05AF            lcd_put_byte@b 0073  
__end_of__initialization 07FC     __end_of_lcd_put_byte 063A           __pcstackCOMMON 0070  
      lcd_gotoxy@address 0078         ??_lcd_put_nibble 0070               __pmaintext 06CC  
             _lcd_gotoxy 05AF                ?_lcd_busy 0070                ?_lcd_init 0070  
              ?_lcd_putc 0070                ?_lcd_puts 0070               __stringtab 0003  
                __ptext1 0590                  __ptext2 067C                  __ptext3 05AF  
                __ptext4 075F                  __ptext5 0601                  __ptext6 063A  
                __ptext7 05D1               ??_lcd_busy 0070               ??_lcd_init 0076  
             ??_lcd_putc 0079               ??_lcd_puts 007A     end_of_initialization 07FC  
         lcd_put_byte@rs 0075             _lcd_put_byte 0601              ?_lcd_gotoxy 0076  
    start_initialization 07FC                ___latbits 0002                __pstrings 0003  
            __stringbase 0008                lcd_putc@c 0079                lcd_puts@s 007A  
           ??_lcd_gotoxy 0077       __end_of_lcd_gotoxy 05D1       __end_of__stringtab 0009  
               _lcd_busy 05D1                 _lcd_init 075F                 _lcd_putc 067C  
               _lcd_puts 0590          lcd_put_nibble@b 0071                stringcode 0003  
         _lcd_put_nibble 063A                 stringdir 0003                 stringtab 0003  
