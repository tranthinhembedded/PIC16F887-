

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Thu Sep 05 09:39:17 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	text6,local,class=CODE,merge=1,delta=2
    14                           	psect	text7,local,class=CODE,merge=1,delta=2
    15                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    16                           	dabs	1,0x7E,2
    17     0000                     
    18                           ; Generated 12/10/2023 GMT
    19                           ; 
    20                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution. Publication is not required when
    34                           ;        this file is used in an embedded application.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC16F887 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52     0000                     	;# 
    53     0001                     	;# 
    54     0002                     	;# 
    55     0003                     	;# 
    56     0004                     	;# 
    57     0005                     	;# 
    58     0006                     	;# 
    59     0007                     	;# 
    60     0008                     	;# 
    61     0009                     	;# 
    62     000A                     	;# 
    63     000B                     	;# 
    64     000C                     	;# 
    65     000D                     	;# 
    66     000E                     	;# 
    67     000E                     	;# 
    68     000F                     	;# 
    69     0010                     	;# 
    70     0011                     	;# 
    71     0012                     	;# 
    72     0013                     	;# 
    73     0014                     	;# 
    74     0015                     	;# 
    75     0015                     	;# 
    76     0016                     	;# 
    77     0017                     	;# 
    78     0018                     	;# 
    79     0019                     	;# 
    80     001A                     	;# 
    81     001B                     	;# 
    82     001B                     	;# 
    83     001C                     	;# 
    84     001D                     	;# 
    85     001E                     	;# 
    86     001F                     	;# 
    87     0081                     	;# 
    88     0085                     	;# 
    89     0086                     	;# 
    90     0087                     	;# 
    91     0088                     	;# 
    92     0089                     	;# 
    93     008C                     	;# 
    94     008D                     	;# 
    95     008E                     	;# 
    96     008F                     	;# 
    97     0090                     	;# 
    98     0091                     	;# 
    99     0092                     	;# 
   100     0093                     	;# 
   101     0093                     	;# 
   102     0093                     	;# 
   103     0094                     	;# 
   104     0095                     	;# 
   105     0096                     	;# 
   106     0097                     	;# 
   107     0098                     	;# 
   108     0099                     	;# 
   109     009A                     	;# 
   110     009B                     	;# 
   111     009C                     	;# 
   112     009D                     	;# 
   113     009E                     	;# 
   114     009F                     	;# 
   115     0105                     	;# 
   116     0107                     	;# 
   117     0108                     	;# 
   118     0109                     	;# 
   119     010C                     	;# 
   120     010C                     	;# 
   121     010D                     	;# 
   122     010E                     	;# 
   123     010F                     	;# 
   124     0185                     	;# 
   125     0187                     	;# 
   126     0188                     	;# 
   127     0189                     	;# 
   128     018C                     	;# 
   129     018D                     	;# 
   130     0000                     	;# 
   131     0001                     	;# 
   132     0002                     	;# 
   133     0003                     	;# 
   134     0004                     	;# 
   135     0005                     	;# 
   136     0006                     	;# 
   137     0007                     	;# 
   138     0008                     	;# 
   139     0009                     	;# 
   140     000A                     	;# 
   141     000B                     	;# 
   142     000C                     	;# 
   143     000D                     	;# 
   144     000E                     	;# 
   145     000E                     	;# 
   146     000F                     	;# 
   147     0010                     	;# 
   148     0011                     	;# 
   149     0012                     	;# 
   150     0013                     	;# 
   151     0014                     	;# 
   152     0015                     	;# 
   153     0015                     	;# 
   154     0016                     	;# 
   155     0017                     	;# 
   156     0018                     	;# 
   157     0019                     	;# 
   158     001A                     	;# 
   159     001B                     	;# 
   160     001B                     	;# 
   161     001C                     	;# 
   162     001D                     	;# 
   163     001E                     	;# 
   164     001F                     	;# 
   165     0081                     	;# 
   166     0085                     	;# 
   167     0086                     	;# 
   168     0087                     	;# 
   169     0088                     	;# 
   170     0089                     	;# 
   171     008C                     	;# 
   172     008D                     	;# 
   173     008E                     	;# 
   174     008F                     	;# 
   175     0090                     	;# 
   176     0091                     	;# 
   177     0092                     	;# 
   178     0093                     	;# 
   179     0093                     	;# 
   180     0093                     	;# 
   181     0094                     	;# 
   182     0095                     	;# 
   183     0096                     	;# 
   184     0097                     	;# 
   185     0098                     	;# 
   186     0099                     	;# 
   187     009A                     	;# 
   188     009B                     	;# 
   189     009C                     	;# 
   190     009D                     	;# 
   191     009E                     	;# 
   192     009F                     	;# 
   193     0105                     	;# 
   194     0107                     	;# 
   195     0108                     	;# 
   196     0109                     	;# 
   197     010C                     	;# 
   198     010C                     	;# 
   199     010D                     	;# 
   200     010E                     	;# 
   201     010F                     	;# 
   202     0185                     	;# 
   203     0187                     	;# 
   204     0188                     	;# 
   205     0189                     	;# 
   206     018C                     	;# 
   207     018D                     	;# 
   208     0000                     	;# 
   209     0001                     	;# 
   210     0002                     	;# 
   211     0003                     	;# 
   212     0004                     	;# 
   213     0005                     	;# 
   214     0006                     	;# 
   215     0007                     	;# 
   216     0008                     	;# 
   217     0009                     	;# 
   218     000A                     	;# 
   219     000B                     	;# 
   220     000C                     	;# 
   221     000D                     	;# 
   222     000E                     	;# 
   223     000E                     	;# 
   224     000F                     	;# 
   225     0010                     	;# 
   226     0011                     	;# 
   227     0012                     	;# 
   228     0013                     	;# 
   229     0014                     	;# 
   230     0015                     	;# 
   231     0015                     	;# 
   232     0016                     	;# 
   233     0017                     	;# 
   234     0018                     	;# 
   235     0019                     	;# 
   236     001A                     	;# 
   237     001B                     	;# 
   238     001B                     	;# 
   239     001C                     	;# 
   240     001D                     	;# 
   241     001E                     	;# 
   242     001F                     	;# 
   243     0081                     	;# 
   244     0085                     	;# 
   245     0086                     	;# 
   246     0087                     	;# 
   247     0088                     	;# 
   248     0089                     	;# 
   249     008C                     	;# 
   250     008D                     	;# 
   251     008E                     	;# 
   252     008F                     	;# 
   253     0090                     	;# 
   254     0091                     	;# 
   255     0092                     	;# 
   256     0093                     	;# 
   257     0093                     	;# 
   258     0093                     	;# 
   259     0094                     	;# 
   260     0095                     	;# 
   261     0096                     	;# 
   262     0097                     	;# 
   263     0098                     	;# 
   264     0099                     	;# 
   265     009A                     	;# 
   266     009B                     	;# 
   267     009C                     	;# 
   268     009D                     	;# 
   269     009E                     	;# 
   270     009F                     	;# 
   271     0105                     	;# 
   272     0107                     	;# 
   273     0108                     	;# 
   274     0109                     	;# 
   275     010C                     	;# 
   276     010C                     	;# 
   277     010D                     	;# 
   278     010E                     	;# 
   279     010F                     	;# 
   280     0185                     	;# 
   281     0187                     	;# 
   282     0188                     	;# 
   283     0189                     	;# 
   284     018C                     	;# 
   285     018D                     	;# 
   286     0044                     _RD4	set	68
   287     0045                     _RD5	set	69
   288     0046                     _RD6	set	70
   289     0047                     _RD7	set	71
   290     0043                     _RD3	set	67
   291     0041                     _RD1	set	65
   292     0042                     _RD2	set	66
   293     0442                     _TRISD2	set	1090
   294     0441                     _TRISD1	set	1089
   295     0443                     _TRISD3	set	1091
   296     0447                     _TRISD7	set	1095
   297     0446                     _TRISD6	set	1094
   298     0445                     _TRISD5	set	1093
   299     0444                     _TRISD4	set	1092
   300                           
   301                           	psect	strings
   302     0003                     __pstrings:
   303     0003                     stringtab:
   304     0003                     __stringtab:
   305     0003                     stringcode:	
   306                           ;	String table - string pointers are 1 byte each
   307                           
   308     0003                     stringdir:
   309     0003  3000               	movlw	high stringdir
   310     0004  008A               	movwf	10
   311     0005  0804               	movf	4,w
   312     0006  0A84               	incf	4,f
   313     0007  0782               	addwf	2,f
   314     0008                     __stringbase:
   315     0008  3400               	retlw	0
   316     0009                     __end_of__stringtab:
   317     0009                     STR_2:
   318     0009  3420               	retlw	32	;' '
   319     000A  344B               	retlw	75	;'K'
   320     000B  3469               	retlw	105	;'i'
   321     000C  3420               	retlw	32	;' '
   322     000D  3474               	retlw	116	;'t'
   323     000E  3475               	retlw	117	;'u'
   324     000F  3420               	retlw	32	;' '
   325     0010  3464               	retlw	100	;'d'
   326     0011  3461               	retlw	97	;'a'
   327     0012  3463               	retlw	99	;'c'
   328     0013  3420               	retlw	32	;' '
   329     0014  3462               	retlw	98	;'b'
   330     0015  3469               	retlw	105	;'i'
   331     0016  3465               	retlw	101	;'e'
   332     0017  3474               	retlw	116	;'t'
   333     0018  3420               	retlw	32	;' '
   334     0019  3400               	retlw	0
   335     001A                     STR_1:
   336     001A  340C               	retlw	12
   337     001B  3400               	retlw	0
   338                           
   339                           	psect	cinit
   340     07FC                     start_initialization:	
   341                           ; #config settings
   342                           
   343     07FC                     __initialization:
   344     07FC                     end_of_initialization:	
   345                           ;End of C runtime variable initialization code
   346                           
   347     07FC                     __end_of__initialization:
   348     07FC  0183               	clrf	3
   349     07FD  120A  118A  2EFD   	ljmp	_main	;jump to C main() function
   350                           
   351                           	psect	cstackCOMMON
   352     0070                     __pcstackCOMMON:
   353     0070                     ?_lcd_init:
   354     0070                     ?_lcd_putc:	
   355                           ; 1 bytes @ 0x0
   356                           
   357     0070                     ?_lcd_puts:	
   358                           ; 1 bytes @ 0x0
   359                           
   360     0070                     ?_main:	
   361                           ; 1 bytes @ 0x0
   362                           
   363     0070                     ?_lcd_busy:	
   364                           ; 1 bytes @ 0x0
   365                           
   366     0070                     ??_lcd_busy:	
   367                           ; 1 bytes @ 0x0
   368                           
   369     0070                     ?_lcd_put_nibble:	
   370                           ; 1 bytes @ 0x0
   371                           
   372     0070                     ??_lcd_put_nibble:	
   373                           ; 1 bytes @ 0x0
   374                           
   375                           
   376                           ; 1 bytes @ 0x0
   377     0070                     	ds	1
   378     0071                     lcd_busy@busy:
   379     0071                     lcd_put_nibble@b:	
   380                           ; 1 bytes @ 0x1
   381                           
   382                           
   383                           ; 1 bytes @ 0x1
   384     0071                     	ds	1
   385     0072                     lcd_put_nibble@temp:
   386                           
   387                           ; 1 bytes @ 0x2
   388     0072                     	ds	1
   389     0073                     ?_lcd_put_byte:
   390     0073                     lcd_put_byte@b:	
   391                           ; 1 bytes @ 0x3
   392                           
   393                           
   394                           ; 1 bytes @ 0x3
   395     0073                     	ds	1
   396     0074                     ??_lcd_put_byte:
   397                           
   398                           ; 1 bytes @ 0x4
   399     0074                     	ds	1
   400     0075                     lcd_put_byte@rs:
   401                           
   402                           ; 1 bytes @ 0x5
   403     0075                     	ds	1
   404     0076                     ??_lcd_init:
   405     0076                     ?_lcd_gotoxy:	
   406                           ; 1 bytes @ 0x6
   407                           
   408     0076                     lcd_gotoxy@row:	
   409                           ; 1 bytes @ 0x6
   410                           
   411                           
   412                           ; 1 bytes @ 0x6
   413     0076                     	ds	1
   414     0077                     ??_lcd_gotoxy:
   415     0077                     lcd_gotoxy@col:	
   416                           ; 1 bytes @ 0x7
   417                           
   418                           
   419                           ; 1 bytes @ 0x7
   420     0077                     	ds	1
   421     0078                     lcd_gotoxy@address:
   422                           
   423                           ; 1 bytes @ 0x8
   424     0078                     	ds	1
   425     0079                     ??_lcd_putc:
   426     0079                     lcd_putc@c:	
   427                           ; 1 bytes @ 0x9
   428                           
   429                           
   430                           ; 1 bytes @ 0x9
   431     0079                     	ds	1
   432     007A                     ??_lcd_puts:
   433     007A                     lcd_puts@s:	
   434                           ; 1 bytes @ 0xA
   435                           
   436                           
   437                           ; 1 bytes @ 0xA
   438     007A                     	ds	1
   439     007B                     ??_main:
   440                           
   441                           	psect	maintext
   442     06FD                     __pmaintext:	
   443                           ; 1 bytes @ 0xB
   444 ;;
   445 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   446 ;;
   447 ;; *************** function _main *****************
   448 ;; Defined at:
   449 ;;		line 27 in file "VD2.c"
   450 ;; Parameters:    Size  Location     Type
   451 ;;		None
   452 ;; Auto vars:     Size  Location     Type
   453 ;;		None
   454 ;; Return value:  Size  Location     Type
   455 ;;                  1    wreg      void 
   456 ;; Registers used:
   457 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   458 ;; Tracked objects:
   459 ;;		On entry : B00/0
   460 ;;		On exit  : 0/0
   461 ;;		Unchanged: 0/0
   462 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   463 ;;      Params:         0       0       0       0       0
   464 ;;      Locals:         0       0       0       0       0
   465 ;;      Temps:          0       0       0       0       0
   466 ;;      Totals:         0       0       0       0       0
   467 ;;Total ram usage:        0 bytes
   468 ;; Hardware stack levels required when called: 5
   469 ;; This function calls:
   470 ;;		_lcd_gotoxy
   471 ;;		_lcd_init
   472 ;;		_lcd_putc
   473 ;;		_lcd_puts
   474 ;; This function is called by:
   475 ;;		Startup code after reset
   476 ;; This function uses a non-reentrant model
   477 ;;
   478                           
   479     06FD                     _main:	
   480                           ;psect for function _main
   481                           
   482     06FD                     l1005:	
   483                           ;incstack = 0
   484                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   485                           
   486                           
   487                           ;VD2.c: 29: lcd_init();
   488     06FD  120A  118A  275F  120A  118A  	fcall	_lcd_init
   489     0702                     l1007:
   490                           
   491                           ;VD2.c: 30: lcd_putc("\f");
   492     0702  3012               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   493     0703  120A  118A  26AD  120A  118A  	fcall	_lcd_putc
   494     0708                     l1009:
   495                           
   496                           ;VD2.c: 31: lcd_gotoxy(0,0);
   497     0708  01F6               	clrf	lcd_gotoxy@row
   498     0709  3000               	movlw	0
   499     070A  120A  118A  25E0  120A  118A  	fcall	_lcd_gotoxy
   500     070F                     l1011:
   501                           
   502                           ;VD2.c: 32: lcd_puts(" Ki tu dac biet ");
   503     070F  3001               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   504     0710  120A  118A  25C1  120A  118A  	fcall	_lcd_puts
   505     0715                     l1013:
   506                           
   507                           ;VD2.c: 33: lcd_gotoxy(4,1);
   508     0715  01F6               	clrf	lcd_gotoxy@row
   509     0716  0AF6               	incf	lcd_gotoxy@row,f
   510     0717  3004               	movlw	4
   511     0718  120A  118A  25E0  120A  118A  	fcall	_lcd_gotoxy
   512     071D                     l1015:
   513                           
   514                           ;VD2.c: 34: lcd_putc(0b11100000);
   515     071D  30E0               	movlw	224
   516     071E  120A  118A  26AD  120A  118A  	fcall	_lcd_putc
   517     0723                     l1017:
   518                           
   519                           ;VD2.c: 35: lcd_gotoxy(6,1);
   520     0723  01F6               	clrf	lcd_gotoxy@row
   521     0724  0AF6               	incf	lcd_gotoxy@row,f
   522     0725  3006               	movlw	6
   523     0726  120A  118A  25E0  120A  118A  	fcall	_lcd_gotoxy
   524     072B                     l1019:
   525                           
   526                           ;VD2.c: 36: lcd_putc(0b11100010);
   527     072B  30E2               	movlw	226
   528     072C  120A  118A  26AD  120A  118A  	fcall	_lcd_putc
   529     0731                     l1021:
   530                           
   531                           ;VD2.c: 37: lcd_gotoxy(8,1);
   532     0731  01F6               	clrf	lcd_gotoxy@row
   533     0732  0AF6               	incf	lcd_gotoxy@row,f
   534     0733  3008               	movlw	8
   535     0734  120A  118A  25E0  120A  118A  	fcall	_lcd_gotoxy
   536     0739                     l1023:
   537                           
   538                           ;VD2.c: 38: lcd_putc(0b11100011);
   539     0739  30E3               	movlw	227
   540     073A  120A  118A  26AD  120A  118A  	fcall	_lcd_putc
   541     073F                     l1025:
   542                           
   543                           ;VD2.c: 39: lcd_gotoxy(10,1);
   544     073F  01F6               	clrf	lcd_gotoxy@row
   545     0740  0AF6               	incf	lcd_gotoxy@row,f
   546     0741  300A               	movlw	10
   547     0742  120A  118A  25E0  120A  118A  	fcall	_lcd_gotoxy
   548     0747                     l1027:
   549                           
   550                           ;VD2.c: 40: lcd_putc(0b11100101);
   551     0747  30E5               	movlw	229
   552     0748  120A  118A  26AD  120A  118A  	fcall	_lcd_putc
   553     074D                     l1029:
   554                           
   555                           ;VD2.c: 41: lcd_gotoxy(12,1);
   556     074D  01F6               	clrf	lcd_gotoxy@row
   557     074E  0AF6               	incf	lcd_gotoxy@row,f
   558     074F  300C               	movlw	12
   559     0750  120A  118A  25E0  120A  118A  	fcall	_lcd_gotoxy
   560     0755                     l1031:
   561                           
   562                           ;VD2.c: 42: lcd_putc(0b11100100);
   563     0755  30E4               	movlw	228
   564     0756  120A  118A  26AD  120A  118A  	fcall	_lcd_putc
   565     075B                     l13:	
   566                           ;VD2.c: 43: while (1);
   567                           
   568     075B                     l14:
   569     075B  2F5B               	goto	l13
   570     075C  120A  118A  2800   	ljmp	start
   571     075F                     __end_of_main:
   572                           
   573                           	psect	text1
   574     05C1                     __ptext1:	
   575 ;; *************** function _lcd_puts *****************
   576 ;; Defined at:
   577 ;;		line 224 in file "lcd.c"
   578 ;; Parameters:    Size  Location     Type
   579 ;;  s               1    wreg     PTR const unsigned char 
   580 ;;		 -> STR_2(17), 
   581 ;; Auto vars:     Size  Location     Type
   582 ;;  s               1   10[COMMON] PTR const unsigned char 
   583 ;;		 -> STR_2(17), 
   584 ;; Return value:  Size  Location     Type
   585 ;;                  1    wreg      void 
   586 ;; Registers used:
   587 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   588 ;; Tracked objects:
   589 ;;		On entry : 0/0
   590 ;;		On exit  : 0/0
   591 ;;		Unchanged: 0/0
   592 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   593 ;;      Params:         0       0       0       0       0
   594 ;;      Locals:         1       0       0       0       0
   595 ;;      Temps:          0       0       0       0       0
   596 ;;      Totals:         1       0       0       0       0
   597 ;;Total ram usage:        1 bytes
   598 ;; Hardware stack levels used: 1
   599 ;; Hardware stack levels required when called: 4
   600 ;; This function calls:
   601 ;;		_lcd_putc
   602 ;; This function is called by:
   603 ;;		_main
   604 ;; This function uses a non-reentrant model
   605 ;;
   606                           
   607     05C1                     _lcd_puts:	
   608                           ;psect for function _lcd_puts
   609                           
   610                           
   611                           ;incstack = 0
   612                           ; Regs used in _lcd_puts: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   613                           ;lcd_puts@s stored from wreg
   614     05C1  00FA               	movwf	lcd_puts@s
   615     05C2                     l993:
   616                           
   617                           ;lcd.c: 224: void lcd_puts(const char* s);lcd.c: 225: {;lcd.c: 229:  while(*s)
   618     05C2  2DD3               	goto	l999
   619     05C3                     l995:
   620                           
   621                           ;lcd.c: 230:   {;lcd.c: 231:   lcd_putc(*s++);
   622     05C3  087A               	movf	lcd_puts@s,w
   623     05C4  0084               	movwf	4
   624     05C5  120A  118A  2003  120A  118A  	fcall	stringdir
   625     05CA  120A  118A  26AD  120A  118A  	fcall	_lcd_putc
   626     05CF                     l997:
   627     05CF  3001               	movlw	1
   628     05D0  00FF               	movwf	btemp+1
   629     05D1  087F               	movf	btemp+1,w
   630     05D2  07FA               	addwf	lcd_puts@s,f
   631     05D3                     l999:
   632                           
   633                           ;lcd.c: 229:  while(*s)
   634     05D3  087A               	movf	lcd_puts@s,w
   635     05D4  0084               	movwf	4
   636     05D5  120A  118A  2003  120A  118A  	fcall	stringdir
   637     05DA  3A00               	xorlw	0
   638     05DB  1D03               	skipz
   639     05DC  2DDE               	goto	u461
   640     05DD  2DDF               	goto	u460
   641     05DE                     u461:
   642     05DE  2DC3               	goto	l995
   643     05DF                     u460:
   644     05DF                     l94:
   645     05DF  0008               	return
   646     05E0                     __end_of_lcd_puts:
   647                           
   648                           	psect	text2
   649     06AD                     __ptext2:	
   650 ;; *************** function _lcd_putc *****************
   651 ;; Defined at:
   652 ;;		line 190 in file "lcd.c"
   653 ;; Parameters:    Size  Location     Type
   654 ;;  c               1    wreg     unsigned char 
   655 ;; Auto vars:     Size  Location     Type
   656 ;;  c               1    9[COMMON] unsigned char 
   657 ;; Return value:  Size  Location     Type
   658 ;;                  1    wreg      void 
   659 ;; Registers used:
   660 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   661 ;; Tracked objects:
   662 ;;		On entry : 0/0
   663 ;;		On exit  : 0/0
   664 ;;		Unchanged: 0/0
   665 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   666 ;;      Params:         0       0       0       0       0
   667 ;;      Locals:         1       0       0       0       0
   668 ;;      Temps:          0       0       0       0       0
   669 ;;      Totals:         1       0       0       0       0
   670 ;;Total ram usage:        1 bytes
   671 ;; Hardware stack levels used: 1
   672 ;; Hardware stack levels required when called: 3
   673 ;; This function calls:
   674 ;;		_lcd_busy
   675 ;;		_lcd_gotoxy
   676 ;;		_lcd_put_byte
   677 ;; This function is called by:
   678 ;;		_main
   679 ;;		_lcd_puts
   680 ;;		_lcd_String_Delay
   681 ;;		_putch
   682 ;; This function uses a non-reentrant model
   683 ;;
   684                           
   685     06AD                     _lcd_putc:	
   686                           ;psect for function _lcd_putc
   687                           
   688                           
   689                           ;incstack = 0
   690                           ; Regs used in _lcd_putc: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   691                           ;lcd_putc@c stored from wreg
   692     06AD  00F9               	movwf	lcd_putc@c
   693     06AE                     l937:
   694                           
   695                           ;lcd.c: 190: void lcd_putc(char c);lcd.c: 191: {;lcd.c: 195:  switch(c)
   696     06AE  2EF1               	goto	l953
   697     06AF                     l939:
   698                           
   699                           ;lcd.c: 198:    lcd_put_byte(0,1);
   700     06AF  01F3               	clrf	lcd_put_byte@b
   701     06B0  0AF3               	incf	lcd_put_byte@b,f
   702     06B1  3000               	movlw	0
   703     06B2  120A  118A  2632  120A  118A  	fcall	_lcd_put_byte
   704     06B7                     l941:	
   705                           ;lcd.c: 199:    while(lcd_busy());
   706                           
   707     06B7  120A  118A  2602  120A  118A  	fcall	_lcd_busy
   708     06BC  3A00               	xorlw	0
   709     06BD  1D03               	skipz
   710     06BE  2EC0               	goto	u381
   711     06BF  2EC1               	goto	u380
   712     06C0                     u381:
   713     06C0  2EB7               	goto	l941
   714     06C1                     u380:
   715     06C1  2EFC               	goto	l88
   716     06C2                     l943:
   717                           
   718                           ;lcd.c: 202:    lcd_gotoxy(0,1);
   719     06C2  01F6               	clrf	lcd_gotoxy@row
   720     06C3  0AF6               	incf	lcd_gotoxy@row,f
   721     06C4  3000               	movlw	0
   722     06C5  120A  118A  25E0  120A  118A  	fcall	_lcd_gotoxy
   723                           
   724                           ;lcd.c: 203:    break;
   725     06CA  2EFC               	goto	l88
   726     06CB                     l945:
   727                           
   728                           ;lcd.c: 205:    lcd_put_byte(0,0x10);
   729     06CB  3010               	movlw	16
   730     06CC  00F3               	movwf	lcd_put_byte@b
   731     06CD  3000               	movlw	0
   732     06CE  120A  118A  2632  120A  118A  	fcall	_lcd_put_byte
   733     06D3                     l947:	
   734                           ;lcd.c: 206:    while(lcd_busy());
   735                           
   736     06D3  120A  118A  2602  120A  118A  	fcall	_lcd_busy
   737     06D8  3A00               	xorlw	0
   738     06D9  1D03               	skipz
   739     06DA  2EDC               	goto	u391
   740     06DB  2EDD               	goto	u390
   741     06DC                     u391:
   742     06DC  2ED3               	goto	l947
   743     06DD                     u390:
   744     06DD  2EFC               	goto	l88
   745     06DE                     l949:
   746                           
   747                           ;lcd.c: 210:     {;lcd.c: 211:     lcd_put_byte(1,c);
   748     06DE  0879               	movf	lcd_putc@c,w
   749     06DF  00F3               	movwf	lcd_put_byte@b
   750     06E0  3001               	movlw	1
   751     06E1  120A  118A  2632  120A  118A  	fcall	_lcd_put_byte
   752     06E6                     l951:	
   753                           ;lcd.c: 212:     while(lcd_busy());
   754                           
   755     06E6  120A  118A  2602  120A  118A  	fcall	_lcd_busy
   756     06EB  3A00               	xorlw	0
   757     06EC  1D03               	skipz
   758     06ED  2EEF               	goto	u401
   759     06EE  2EF0               	goto	u400
   760     06EF                     u401:
   761     06EF  2EE6               	goto	l951
   762     06F0                     u400:
   763     06F0  2EFC               	goto	l88
   764     06F1                     l953:
   765     06F1  0879               	movf	lcd_putc@c,w
   766                           
   767                           ; Switch size 1, requested type "simple"
   768                           ; Number of cases is 3, Range of values is 8 to 12
   769                           ; switch strategies available:
   770                           ; Name         Instructions Cycles
   771                           ; simple_byte           10     6 (average)
   772                           ; direct_byte           26    11 (fixed)
   773                           ; jumptable            263     9 (fixed)
   774                           ;	Chosen strategy is simple_byte
   775     06F2  3A08               	xorlw	8	; case 8
   776     06F3  1903               	skipnz
   777     06F4  2ECB               	goto	l945
   778     06F5  3A02               	xorlw	2	; case 10
   779     06F6  1903               	skipnz
   780     06F7  2EC2               	goto	l943
   781     06F8  3A06               	xorlw	6	; case 12
   782     06F9  1903               	skipnz
   783     06FA  2EAF               	goto	l939
   784     06FB  2EDE               	goto	l949
   785     06FC                     l88:
   786     06FC  0008               	return
   787     06FD                     __end_of_lcd_putc:
   788                           
   789                           	psect	text3
   790     05E0                     __ptext3:	
   791 ;; *************** function _lcd_gotoxy *****************
   792 ;; Defined at:
   793 ;;		line 167 in file "lcd.c"
   794 ;; Parameters:    Size  Location     Type
   795 ;;  col             1    wreg     unsigned char 
   796 ;;  row             1    6[COMMON] unsigned char 
   797 ;; Auto vars:     Size  Location     Type
   798 ;;  col             1    7[COMMON] unsigned char 
   799 ;;  address         1    8[COMMON] unsigned char 
   800 ;; Return value:  Size  Location     Type
   801 ;;                  1    wreg      void 
   802 ;; Registers used:
   803 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   804 ;; Tracked objects:
   805 ;;		On entry : 0/0
   806 ;;		On exit  : 0/0
   807 ;;		Unchanged: 0/0
   808 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   809 ;;      Params:         1       0       0       0       0
   810 ;;      Locals:         2       0       0       0       0
   811 ;;      Temps:          0       0       0       0       0
   812 ;;      Totals:         3       0       0       0       0
   813 ;;Total ram usage:        3 bytes
   814 ;; Hardware stack levels used: 1
   815 ;; Hardware stack levels required when called: 2
   816 ;; This function calls:
   817 ;;		_lcd_busy
   818 ;;		_lcd_put_byte
   819 ;; This function is called by:
   820 ;;		_main
   821 ;;		_lcd_putc
   822 ;; This function uses a non-reentrant model
   823 ;;
   824                           
   825     05E0                     _lcd_gotoxy:	
   826                           ;psect for function _lcd_gotoxy
   827                           
   828                           
   829                           ;incstack = 0
   830                           ; Regs used in _lcd_gotoxy: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   831                           ;lcd_gotoxy@col stored from wreg
   832     05E0  00F7               	movwf	lcd_gotoxy@col
   833     05E1                     l925:
   834                           
   835                           ;lcd.c: 167: void lcd_gotoxy(unsigned char col, unsigned char row);lcd.c: 168: {;lcd.c: 
      +                          170:  unsigned char address;;lcd.c: 173:  if(row!=0)
   836     05E1  0876               	movf	lcd_gotoxy@row,w
   837     05E2  1903               	btfsc	3,2
   838     05E3  2DE5               	goto	u361
   839     05E4  2DE6               	goto	u360
   840     05E5                     u361:
   841     05E5  2DE9               	goto	l929
   842     05E6                     u360:
   843     05E6                     l927:
   844                           
   845                           ;lcd.c: 174:   address=0x40;
   846     05E6  3040               	movlw	64
   847     05E7  00F8               	movwf	lcd_gotoxy@address
   848     05E8  2DEA               	goto	l931
   849     05E9                     l929:
   850                           
   851                           ;lcd.c: 176:   address=0;
   852     05E9  01F8               	clrf	lcd_gotoxy@address
   853     05EA                     l931:
   854                           
   855                           ;lcd.c: 178:  address += col;
   856     05EA  0877               	movf	lcd_gotoxy@col,w
   857     05EB  00FF               	movwf	btemp+1
   858     05EC  087F               	movf	btemp+1,w
   859     05ED  07F8               	addwf	lcd_gotoxy@address,f
   860     05EE                     l933:
   861                           
   862                           ;lcd.c: 180:  lcd_put_byte(0,0x80|address);
   863     05EE  0878               	movf	lcd_gotoxy@address,w
   864     05EF  3880               	iorlw	128
   865     05F0  00F3               	movwf	lcd_put_byte@b
   866     05F1  3000               	movlw	0
   867     05F2  120A  118A  2632  120A  118A  	fcall	_lcd_put_byte
   868     05F7                     l935:	
   869                           ;lcd.c: 181:  while(lcd_busy());
   870                           
   871     05F7  120A  118A  2602  120A  118A  	fcall	_lcd_busy
   872     05FC  3A00               	xorlw	0
   873     05FD  1D03               	skipz
   874     05FE  2E00               	goto	u371
   875     05FF  2E01               	goto	u370
   876     0600                     u371:
   877     0600  2DF7               	goto	l935
   878     0601                     u370:
   879     0601                     l70:
   880     0601  0008               	return
   881     0602                     __end_of_lcd_gotoxy:
   882                           
   883                           	psect	text4
   884     075F                     __ptext4:	
   885 ;; *************** function _lcd_init *****************
   886 ;; Defined at:
   887 ;;		line 241 in file "lcd.c"
   888 ;; Parameters:    Size  Location     Type
   889 ;;		None
   890 ;; Auto vars:     Size  Location     Type
   891 ;;  i               1    0        unsigned char 
   892 ;; Return value:  Size  Location     Type
   893 ;;                  1    wreg      void 
   894 ;; Registers used:
   895 ;;		wreg, status,2, status,0, pclath, cstack
   896 ;; Tracked objects:
   897 ;;		On entry : 0/0
   898 ;;		On exit  : 0/0
   899 ;;		Unchanged: 0/0
   900 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   901 ;;      Params:         0       0       0       0       0
   902 ;;      Locals:         0       0       0       0       0
   903 ;;      Temps:          2       0       0       0       0
   904 ;;      Totals:         2       0       0       0       0
   905 ;;Total ram usage:        2 bytes
   906 ;; Hardware stack levels used: 1
   907 ;; Hardware stack levels required when called: 2
   908 ;; This function calls:
   909 ;;		_lcd_busy
   910 ;;		_lcd_put_byte
   911 ;;		_lcd_put_nibble
   912 ;; This function is called by:
   913 ;;		_main
   914 ;; This function uses a non-reentrant model
   915 ;;
   916                           
   917     075F                     _lcd_init:	
   918                           ;psect for function _lcd_init
   919                           
   920     075F                     l955:	
   921                           ;incstack = 0
   922                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
   923                           
   924                           
   925                           ;lcd.c: 244: unsigned char i;;lcd.c: 247:  TRISD3 = 0;
   926     075F  1683               	bsf	3,5	;RP0=1, select bank1
   927     0760  1303               	bcf	3,6	;RP1=0, select bank1
   928     0761  1188               	bcf	8,3	;volatile
   929                           
   930                           ;lcd.c: 248:  TRISD1 = 0;
   931     0762  1088               	bcf	8,1	;volatile
   932                           
   933                           ;lcd.c: 249:  TRISD2 = 0;
   934     0763  1108               	bcf	8,2	;volatile
   935                           
   936                           ;lcd.c: 250:  TRISD4 = 0;
   937     0764  1208               	bcf	8,4	;volatile
   938                           
   939                           ;lcd.c: 251:  TRISD5 = 0;
   940     0765  1288               	bcf	8,5	;volatile
   941                           
   942                           ;lcd.c: 252:  TRISD6 = 0;
   943     0766  1308               	bcf	8,6	;volatile
   944                           
   945                           ;lcd.c: 253:  TRISD7 = 0;
   946     0767  1388               	bcf	8,7	;volatile
   947     0768                     l957:
   948                           
   949                           ;lcd.c: 255:  _delay((unsigned long)((15)*(4000000/4000.0)));
   950     0768  3014               	movlw	20
   951     0769  00F7               	movwf	??_lcd_init+1
   952     076A  3079               	movlw	121
   953     076B  00F6               	movwf	??_lcd_init
   954     076C                     u507:
   955     076C  0BF6               	decfsz	??_lcd_init,f
   956     076D  2F6C               	goto	u507
   957     076E  0BF7               	decfsz	??_lcd_init+1,f
   958     076F  2F6C               	goto	u507
   959     0770  2F71               	nop2
   960     0771                     l959:
   961                           
   962                           ;lcd.c: 257:  RD1 = 0;
   963     0771  1283               	bcf	3,5	;RP0=0, select bank0
   964     0772  1303               	bcf	3,6	;RP1=0, select bank0
   965     0773  1088               	bcf	8,1	;volatile
   966     0774                     l961:
   967                           
   968                           ;lcd.c: 258:  RD2 = 0;
   969     0774  1108               	bcf	8,2	;volatile
   970     0775                     l963:
   971                           
   972                           ;lcd.c: 259:  RD3 = 0;
   973     0775  1188               	bcf	8,3	;volatile
   974     0776                     l965:
   975                           
   976                           ;lcd.c: 261:  lcd_put_nibble(3);
   977     0776  3003               	movlw	3
   978     0777  120A  118A  266B  120A  118A  	fcall	_lcd_put_nibble
   979     077C                     l967:
   980                           
   981                           ;lcd.c: 262:  _delay((unsigned long)((10)*(4000000/4000.0)));
   982     077C  300D               	movlw	13
   983     077D  00F7               	movwf	??_lcd_init+1
   984     077E  30FB               	movlw	251
   985     077F  00F6               	movwf	??_lcd_init
   986     0780                     u517:
   987     0780  0BF6               	decfsz	??_lcd_init,f
   988     0781  2F80               	goto	u517
   989     0782  0BF7               	decfsz	??_lcd_init+1,f
   990     0783  2F80               	goto	u517
   991     0784  2F85               	nop2
   992                           
   993                           ;lcd.c: 263:  lcd_put_nibble(3);
   994     0785  3003               	movlw	3
   995     0786  120A  118A  266B  120A  118A  	fcall	_lcd_put_nibble
   996     078B                     l969:
   997                           
   998                           ;lcd.c: 264:  _delay((unsigned long)((10)*(4000000/4000.0)));
   999     078B  300D               	movlw	13
  1000     078C  00F7               	movwf	??_lcd_init+1
  1001     078D  30FB               	movlw	251
  1002     078E  00F6               	movwf	??_lcd_init
  1003     078F                     u527:
  1004     078F  0BF6               	decfsz	??_lcd_init,f
  1005     0790  2F8F               	goto	u527
  1006     0791  0BF7               	decfsz	??_lcd_init+1,f
  1007     0792  2F8F               	goto	u527
  1008     0793  2F94               	nop2
  1009     0794                     l971:
  1010                           
  1011                           ;lcd.c: 265:  lcd_put_nibble(3);
  1012     0794  3003               	movlw	3
  1013     0795  120A  118A  266B  120A  118A  	fcall	_lcd_put_nibble
  1014                           
  1015                           ;lcd.c: 266:  _delay((unsigned long)((10)*(4000000/4000.0)));
  1016     079A  300D               	movlw	13
  1017     079B  00F7               	movwf	??_lcd_init+1
  1018     079C  30FB               	movlw	251
  1019     079D  00F6               	movwf	??_lcd_init
  1020     079E                     u537:
  1021     079E  0BF6               	decfsz	??_lcd_init,f
  1022     079F  2F9E               	goto	u537
  1023     07A0  0BF7               	decfsz	??_lcd_init+1,f
  1024     07A1  2F9E               	goto	u537
  1025     07A2  2FA3               	nop2
  1026     07A3                     l973:
  1027                           
  1028                           ;lcd.c: 268:  lcd_put_nibble(2);
  1029     07A3  3002               	movlw	2
  1030     07A4  120A  118A  266B  120A  118A  	fcall	_lcd_put_nibble
  1031     07A9                     l975:	
  1032                           ;lcd.c: 269:  while(lcd_busy());
  1033                           
  1034     07A9  120A  118A  2602  120A  118A  	fcall	_lcd_busy
  1035     07AE  3A00               	xorlw	0
  1036     07AF  1D03               	skipz
  1037     07B0  2FB2               	goto	u411
  1038     07B1  2FB3               	goto	u410
  1039     07B2                     u411:
  1040     07B2  2FA9               	goto	l975
  1041     07B3                     u410:
  1042     07B3                     l977:
  1043                           
  1044                           ;lcd.c: 271:  lcd_put_byte(0,0b00101100 & 0b00111000);
  1045     07B3  3028               	movlw	40
  1046     07B4  00F3               	movwf	lcd_put_byte@b
  1047     07B5  3000               	movlw	0
  1048     07B6  120A  118A  2632  120A  118A  	fcall	_lcd_put_byte
  1049     07BB                     l979:	
  1050                           ;lcd.c: 272:  while(lcd_busy());
  1051                           
  1052     07BB  120A  118A  2602  120A  118A  	fcall	_lcd_busy
  1053     07C0  3A00               	xorlw	0
  1054     07C1  1D03               	skipz
  1055     07C2  2FC4               	goto	u421
  1056     07C3  2FC5               	goto	u420
  1057     07C4                     u421:
  1058     07C4  2FBB               	goto	l979
  1059     07C5                     u420:
  1060     07C5                     l981:
  1061                           
  1062                           ;lcd.c: 274:  lcd_put_byte(0,0b00001111 & 0b00001101 & 0b00001110);
  1063     07C5  300C               	movlw	12
  1064     07C6  00F3               	movwf	lcd_put_byte@b
  1065     07C7  3000               	movlw	0
  1066     07C8  120A  118A  2632  120A  118A  	fcall	_lcd_put_byte
  1067     07CD                     l983:	
  1068                           ;lcd.c: 275:  while(lcd_busy());
  1069                           
  1070     07CD  120A  118A  2602  120A  118A  	fcall	_lcd_busy
  1071     07D2  3A00               	xorlw	0
  1072     07D3  1D03               	skipz
  1073     07D4  2FD6               	goto	u431
  1074     07D5  2FD7               	goto	u430
  1075     07D6                     u431:
  1076     07D6  2FCD               	goto	l983
  1077     07D7                     u430:
  1078     07D7                     l985:
  1079                           
  1080                           ;lcd.c: 277:  lcd_put_byte(0,0x01);
  1081     07D7  01F3               	clrf	lcd_put_byte@b
  1082     07D8  0AF3               	incf	lcd_put_byte@b,f
  1083     07D9  3000               	movlw	0
  1084     07DA  120A  118A  2632  120A  118A  	fcall	_lcd_put_byte
  1085     07DF                     l987:	
  1086                           ;lcd.c: 278:  while(lcd_busy());
  1087                           
  1088     07DF  120A  118A  2602  120A  118A  	fcall	_lcd_busy
  1089     07E4  3A00               	xorlw	0
  1090     07E5  1D03               	skipz
  1091     07E6  2FE8               	goto	u441
  1092     07E7  2FE9               	goto	u440
  1093     07E8                     u441:
  1094     07E8  2FDF               	goto	l987
  1095     07E9                     u440:
  1096     07E9                     l989:
  1097                           
  1098                           ;lcd.c: 280:  lcd_put_byte(0,0b00000110);
  1099     07E9  3006               	movlw	6
  1100     07EA  00F3               	movwf	lcd_put_byte@b
  1101     07EB  3000               	movlw	0
  1102     07EC  120A  118A  2632  120A  118A  	fcall	_lcd_put_byte
  1103     07F1                     l991:	
  1104                           ;lcd.c: 281:  while(lcd_busy());
  1105                           
  1106     07F1  120A  118A  2602  120A  118A  	fcall	_lcd_busy
  1107     07F6  3A00               	xorlw	0
  1108     07F7  1D03               	skipz
  1109     07F8  2FFA               	goto	u451
  1110     07F9  2FFB               	goto	u450
  1111     07FA                     u451:
  1112     07FA  2FF1               	goto	l991
  1113     07FB                     u450:
  1114     07FB                     l112:
  1115     07FB  0008               	return
  1116     07FC                     __end_of_lcd_init:
  1117                           
  1118                           	psect	text5
  1119     0632                     __ptext5:	
  1120 ;; *************** function _lcd_put_byte *****************
  1121 ;; Defined at:
  1122 ;;		line 134 in file "lcd.c"
  1123 ;; Parameters:    Size  Location     Type
  1124 ;;  rs              1    wreg     unsigned char 
  1125 ;;  b               1    3[COMMON] unsigned char 
  1126 ;; Auto vars:     Size  Location     Type
  1127 ;;  rs              1    5[COMMON] unsigned char 
  1128 ;; Return value:  Size  Location     Type
  1129 ;;                  1    wreg      void 
  1130 ;; Registers used:
  1131 ;;		wreg, status,2, status,0, pclath, cstack
  1132 ;; Tracked objects:
  1133 ;;		On entry : 0/0
  1134 ;;		On exit  : 0/0
  1135 ;;		Unchanged: 0/0
  1136 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1137 ;;      Params:         1       0       0       0       0
  1138 ;;      Locals:         1       0       0       0       0
  1139 ;;      Temps:          1       0       0       0       0
  1140 ;;      Totals:         3       0       0       0       0
  1141 ;;Total ram usage:        3 bytes
  1142 ;; Hardware stack levels used: 1
  1143 ;; Hardware stack levels required when called: 1
  1144 ;; This function calls:
  1145 ;;		_lcd_put_nibble
  1146 ;; This function is called by:
  1147 ;;		_lcd_gotoxy
  1148 ;;		_lcd_putc
  1149 ;;		_lcd_init
  1150 ;;		_lcd_ShiftLeft
  1151 ;;		_lcd_ShiftRight
  1152 ;; This function uses a non-reentrant model
  1153 ;;
  1154                           
  1155     0632                     _lcd_put_byte:	
  1156                           ;psect for function _lcd_put_byte
  1157                           
  1158                           
  1159                           ;incstack = 0
  1160                           ; Regs used in _lcd_put_byte: [wreg+status,2+status,0+pclath+cstack]
  1161                           ;lcd_put_byte@rs stored from wreg
  1162     0632  00F5               	movwf	lcd_put_byte@rs
  1163     0633                     l909:
  1164                           
  1165                           ;lcd.c: 134: void lcd_put_byte(unsigned char rs, unsigned char b);lcd.c: 135: {;lcd.c: 1
      +                          39:  TRISD4 = 0;
  1166     0633  1683               	bsf	3,5	;RP0=1, select bank1
  1167     0634  1303               	bcf	3,6	;RP1=0, select bank1
  1168     0635  1208               	bcf	8,4	;volatile
  1169                           
  1170                           ;lcd.c: 140:  TRISD5 = 0;
  1171     0636  1288               	bcf	8,5	;volatile
  1172                           
  1173                           ;lcd.c: 141:  TRISD6 = 0;
  1174     0637  1308               	bcf	8,6	;volatile
  1175                           
  1176                           ;lcd.c: 142:  TRISD7 = 0;
  1177     0638  1388               	bcf	8,7	;volatile
  1178     0639                     l911:
  1179                           
  1180                           ;lcd.c: 144:  if(rs)
  1181     0639  0875               	movf	lcd_put_byte@rs,w
  1182     063A  1903               	btfsc	3,2
  1183     063B  2E3D               	goto	u341
  1184     063C  2E3E               	goto	u340
  1185     063D                     u341:
  1186     063D  2E42               	goto	l60
  1187     063E                     u340:
  1188     063E                     l913:
  1189                           
  1190                           ;lcd.c: 145:   RD1 = 1;
  1191     063E  1283               	bcf	3,5	;RP0=0, select bank0
  1192     063F  1303               	bcf	3,6	;RP1=0, select bank0
  1193     0640  1488               	bsf	8,1	;volatile
  1194     0641  2E45               	goto	l915
  1195     0642                     l60:	
  1196                           ;lcd.c: 146:  else
  1197                           
  1198                           
  1199                           ;lcd.c: 147:   RD1 = 0;
  1200     0642  1283               	bcf	3,5	;RP0=0, select bank0
  1201     0643  1303               	bcf	3,6	;RP1=0, select bank0
  1202     0644  1088               	bcf	8,1	;volatile
  1203     0645                     l915:
  1204                           
  1205                           ;lcd.c: 148:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  1206     0645  3006               	movlw	6
  1207     0646  00F4               	movwf	??_lcd_put_byte
  1208     0647                     u547:
  1209     0647  0BF4               	decfsz	??_lcd_put_byte,f
  1210     0648  2E47               	goto	u547
  1211     0649  0000               	nop
  1212     064A                     l917:
  1213                           
  1214                           ;lcd.c: 150:  RD2 = 0;
  1215     064A  1283               	bcf	3,5	;RP0=0, select bank0
  1216     064B  1303               	bcf	3,6	;RP1=0, select bank0
  1217     064C  1108               	bcf	8,2	;volatile
  1218                           
  1219                           ;lcd.c: 151:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  1220     064D  3006               	movlw	6
  1221     064E  00F4               	movwf	??_lcd_put_byte
  1222     064F                     u557:
  1223     064F  0BF4               	decfsz	??_lcd_put_byte,f
  1224     0650  2E4F               	goto	u557
  1225     0651  0000               	nop
  1226     0652                     l919:
  1227                           
  1228                           ;lcd.c: 153:  RD3 = 0;
  1229     0652  1283               	bcf	3,5	;RP0=0, select bank0
  1230     0653  1303               	bcf	3,6	;RP1=0, select bank0
  1231     0654  1188               	bcf	8,3	;volatile
  1232     0655                     l921:
  1233                           
  1234                           ;lcd.c: 155:  lcd_put_nibble(b >> 4);
  1235     0655  0873               	movf	lcd_put_byte@b,w
  1236     0656  00F4               	movwf	??_lcd_put_byte
  1237     0657  3004               	movlw	4
  1238     0658                     u355:
  1239     0658  1003               	clrc
  1240     0659  0CF4               	rrf	??_lcd_put_byte,f
  1241     065A  3EFF               	addlw	-1
  1242     065B  1D03               	skipz
  1243     065C  2E58               	goto	u355
  1244     065D  0874               	movf	??_lcd_put_byte,w
  1245     065E  120A  118A  266B  120A  118A  	fcall	_lcd_put_nibble
  1246     0663                     l923:
  1247                           
  1248                           ;lcd.c: 157:  lcd_put_nibble(b & 0xf);
  1249     0663  0873               	movf	lcd_put_byte@b,w
  1250     0664  390F               	andlw	15
  1251     0665  120A  118A  266B  120A  118A  	fcall	_lcd_put_nibble
  1252     066A                     l62:
  1253     066A  0008               	return
  1254     066B                     __end_of_lcd_put_byte:
  1255                           
  1256                           	psect	text6
  1257     066B                     __ptext6:	
  1258 ;; *************** function _lcd_put_nibble *****************
  1259 ;; Defined at:
  1260 ;;		line 103 in file "lcd.c"
  1261 ;; Parameters:    Size  Location     Type
  1262 ;;  b               1    wreg     unsigned char 
  1263 ;; Auto vars:     Size  Location     Type
  1264 ;;  b               1    1[COMMON] unsigned char 
  1265 ;;  temp            1    2[COMMON] struct _BYTE_VAL
  1266 ;; Return value:  Size  Location     Type
  1267 ;;                  1    wreg      void 
  1268 ;; Registers used:
  1269 ;;		wreg
  1270 ;; Tracked objects:
  1271 ;;		On entry : 0/0
  1272 ;;		On exit  : 0/0
  1273 ;;		Unchanged: 0/0
  1274 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1275 ;;      Params:         0       0       0       0       0
  1276 ;;      Locals:         2       0       0       0       0
  1277 ;;      Temps:          1       0       0       0       0
  1278 ;;      Totals:         3       0       0       0       0
  1279 ;;Total ram usage:        3 bytes
  1280 ;; Hardware stack levels used: 1
  1281 ;; This function calls:
  1282 ;;		Nothing
  1283 ;; This function is called by:
  1284 ;;		_lcd_put_byte
  1285 ;;		_lcd_init
  1286 ;; This function uses a non-reentrant model
  1287 ;;
  1288                           
  1289     066B                     _lcd_put_nibble:	
  1290                           ;psect for function _lcd_put_nibble
  1291                           
  1292                           
  1293                           ;incstack = 0
  1294                           ; Regs used in _lcd_put_nibble: [wreg]
  1295                           ;lcd_put_nibble@b stored from wreg
  1296     066B  00F1               	movwf	lcd_put_nibble@b
  1297     066C                     l683:
  1298                           
  1299                           ;lcd.c: 103: void lcd_put_nibble(unsigned char b);lcd.c: 104: {;lcd.c: 106:  BYTE_VAL te
      +                          mp;;lcd.c: 109:  TRISD4 = 0;
  1300     066C  1683               	bsf	3,5	;RP0=1, select bank1
  1301     066D  1303               	bcf	3,6	;RP1=0, select bank1
  1302     066E  1208               	bcf	8,4	;volatile
  1303                           
  1304                           ;lcd.c: 110:  TRISD5 = 0;
  1305     066F  1288               	bcf	8,5	;volatile
  1306                           
  1307                           ;lcd.c: 111:  TRISD6 = 0;
  1308     0670  1308               	bcf	8,6	;volatile
  1309                           
  1310                           ;lcd.c: 112:  TRISD7 = 0;
  1311     0671  1388               	bcf	8,7	;volatile
  1312     0672                     l685:
  1313                           
  1314                           ;lcd.c: 114:  temp.Val = b;
  1315     0672  0871               	movf	lcd_put_nibble@b,w
  1316     0673  00F2               	movwf	lcd_put_nibble@temp
  1317     0674                     l687:
  1318                           
  1319                           ;lcd.c: 116:  RD4 = temp.bits.b0;
  1320     0674  1872               	btfsc	lcd_put_nibble@temp,0
  1321     0675  2E77               	goto	u11
  1322     0676  2E7B               	goto	u10
  1323     0677                     u11:
  1324     0677  1283               	bcf	3,5	;RP0=0, select bank0
  1325     0678  1303               	bcf	3,6	;RP1=0, select bank0
  1326     0679  1608               	bsf	8,4	;volatile
  1327     067A  2E7E               	goto	u24
  1328     067B                     u10:
  1329     067B  1283               	bcf	3,5	;RP0=0, select bank0
  1330     067C  1303               	bcf	3,6	;RP1=0, select bank0
  1331     067D  1208               	bcf	8,4	;volatile
  1332     067E                     u24:
  1333     067E                     l689:
  1334                           
  1335                           ;lcd.c: 117:  RD5 = temp.bits.b1;
  1336     067E  18F2               	btfsc	lcd_put_nibble@temp,1
  1337     067F  2E81               	goto	u31
  1338     0680  2E85               	goto	u30
  1339     0681                     u31:
  1340     0681  1283               	bcf	3,5	;RP0=0, select bank0
  1341     0682  1303               	bcf	3,6	;RP1=0, select bank0
  1342     0683  1688               	bsf	8,5	;volatile
  1343     0684  2E88               	goto	u44
  1344     0685                     u30:
  1345     0685  1283               	bcf	3,5	;RP0=0, select bank0
  1346     0686  1303               	bcf	3,6	;RP1=0, select bank0
  1347     0687  1288               	bcf	8,5	;volatile
  1348     0688                     u44:
  1349     0688                     l691:
  1350                           
  1351                           ;lcd.c: 118:  RD6 = temp.bits.b2;
  1352     0688  1972               	btfsc	lcd_put_nibble@temp,2
  1353     0689  2E8B               	goto	u51
  1354     068A  2E8F               	goto	u50
  1355     068B                     u51:
  1356     068B  1283               	bcf	3,5	;RP0=0, select bank0
  1357     068C  1303               	bcf	3,6	;RP1=0, select bank0
  1358     068D  1708               	bsf	8,6	;volatile
  1359     068E  2E92               	goto	u64
  1360     068F                     u50:
  1361     068F  1283               	bcf	3,5	;RP0=0, select bank0
  1362     0690  1303               	bcf	3,6	;RP1=0, select bank0
  1363     0691  1308               	bcf	8,6	;volatile
  1364     0692                     u64:
  1365     0692                     l693:
  1366                           
  1367                           ;lcd.c: 119:  RD7 = temp.bits.b3;
  1368     0692  19F2               	btfsc	lcd_put_nibble@temp,3
  1369     0693  2E95               	goto	u71
  1370     0694  2E99               	goto	u70
  1371     0695                     u71:
  1372     0695  1283               	bcf	3,5	;RP0=0, select bank0
  1373     0696  1303               	bcf	3,6	;RP1=0, select bank0
  1374     0697  1788               	bsf	8,7	;volatile
  1375     0698  2E9C               	goto	u84
  1376     0699                     u70:
  1377     0699  1283               	bcf	3,5	;RP0=0, select bank0
  1378     069A  1303               	bcf	3,6	;RP1=0, select bank0
  1379     069B  1388               	bcf	8,7	;volatile
  1380     069C                     u84:
  1381                           
  1382                           ;lcd.c: 121:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  1383     069C  3006               	movlw	6
  1384     069D  00F0               	movwf	??_lcd_put_nibble
  1385     069E                     u567:
  1386     069E  0BF0               	decfsz	??_lcd_put_nibble,f
  1387     069F  2E9E               	goto	u567
  1388     06A0  0000               	nop
  1389     06A1                     l695:
  1390                           
  1391                           ;lcd.c: 122:  RD3 = 1;
  1392     06A1  1283               	bcf	3,5	;RP0=0, select bank0
  1393     06A2  1303               	bcf	3,6	;RP1=0, select bank0
  1394     06A3  1588               	bsf	8,3	;volatile
  1395                           
  1396                           ;lcd.c: 123:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  1397     06A4  3006               	movlw	6
  1398     06A5  00F0               	movwf	??_lcd_put_nibble
  1399     06A6                     u577:
  1400     06A6  0BF0               	decfsz	??_lcd_put_nibble,f
  1401     06A7  2EA6               	goto	u577
  1402     06A8  0000               	nop
  1403     06A9                     l697:
  1404                           
  1405                           ;lcd.c: 124:  RD3 = 0;
  1406     06A9  1283               	bcf	3,5	;RP0=0, select bank0
  1407     06AA  1303               	bcf	3,6	;RP1=0, select bank0
  1408     06AB  1188               	bcf	8,3	;volatile
  1409     06AC                     l57:
  1410     06AC  0008               	return
  1411     06AD                     __end_of_lcd_put_nibble:
  1412                           
  1413                           	psect	text7
  1414     0602                     __ptext7:	
  1415 ;; *************** function _lcd_busy *****************
  1416 ;; Defined at:
  1417 ;;		line 18 in file "lcd.c"
  1418 ;; Parameters:    Size  Location     Type
  1419 ;;		None
  1420 ;; Auto vars:     Size  Location     Type
  1421 ;;  busy            1    1[COMMON] unsigned char 
  1422 ;; Return value:  Size  Location     Type
  1423 ;;                  1    wreg      unsigned char 
  1424 ;; Registers used:
  1425 ;;		wreg, status,2
  1426 ;; Tracked objects:
  1427 ;;		On entry : 0/0
  1428 ;;		On exit  : 0/0
  1429 ;;		Unchanged: 0/0
  1430 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1431 ;;      Params:         0       0       0       0       0
  1432 ;;      Locals:         1       0       0       0       0
  1433 ;;      Temps:          1       0       0       0       0
  1434 ;;      Totals:         2       0       0       0       0
  1435 ;;Total ram usage:        2 bytes
  1436 ;; Hardware stack levels used: 1
  1437 ;; This function calls:
  1438 ;;		Nothing
  1439 ;; This function is called by:
  1440 ;;		_lcd_gotoxy
  1441 ;;		_lcd_putc
  1442 ;;		_lcd_init
  1443 ;; This function uses a non-reentrant model
  1444 ;;
  1445                           
  1446     0602                     _lcd_busy:	
  1447                           ;psect for function _lcd_busy
  1448                           
  1449     0602                     l699:	
  1450                           ;incstack = 0
  1451                           ; Regs used in _lcd_busy: [wreg+status,2]
  1452                           
  1453                           
  1454                           ;lcd.c: 21: unsigned char busy;;lcd.c: 24:  TRISD4 = 1;
  1455     0602  1683               	bsf	3,5	;RP0=1, select bank1
  1456     0603  1303               	bcf	3,6	;RP1=0, select bank1
  1457     0604  1608               	bsf	8,4	;volatile
  1458                           
  1459                           ;lcd.c: 25:  TRISD5 = 1;
  1460     0605  1688               	bsf	8,5	;volatile
  1461                           
  1462                           ;lcd.c: 26:  TRISD6 = 1;
  1463     0606  1708               	bsf	8,6	;volatile
  1464                           
  1465                           ;lcd.c: 27:  TRISD7 = 1;
  1466     0607  1788               	bsf	8,7	;volatile
  1467                           
  1468                           ;lcd.c: 29:  RD2 = 1;
  1469     0608  1283               	bcf	3,5	;RP0=0, select bank0
  1470     0609  1303               	bcf	3,6	;RP1=0, select bank0
  1471     060A  1508               	bsf	8,2	;volatile
  1472                           
  1473                           ;lcd.c: 30:  RD1 = 0;
  1474     060B  1088               	bcf	8,1	;volatile
  1475     060C                     l701:
  1476                           
  1477                           ;lcd.c: 31:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  1478     060C  3006               	movlw	6
  1479     060D  00F0               	movwf	??_lcd_busy
  1480     060E                     u587:
  1481     060E  0BF0               	decfsz	??_lcd_busy,f
  1482     060F  2E0E               	goto	u587
  1483     0610  0000               	nop
  1484     0611                     l703:
  1485                           
  1486                           ;lcd.c: 32:  RD3 = 1;
  1487     0611  1283               	bcf	3,5	;RP0=0, select bank0
  1488     0612  1303               	bcf	3,6	;RP1=0, select bank0
  1489     0613  1588               	bsf	8,3	;volatile
  1490                           
  1491                           ;lcd.c: 33:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  1492     0614  3006               	movlw	6
  1493     0615  00F0               	movwf	??_lcd_busy
  1494     0616                     u597:
  1495     0616  0BF0               	decfsz	??_lcd_busy,f
  1496     0617  2E16               	goto	u597
  1497     0618  0000               	nop
  1498     0619                     l705:
  1499                           
  1500                           ;lcd.c: 35:  busy = RD7;
  1501     0619  3000               	movlw	0
  1502     061A  1283               	bcf	3,5	;RP0=0, select bank0
  1503     061B  1303               	bcf	3,6	;RP1=0, select bank0
  1504     061C  1B88               	btfsc	8,7	;volatile
  1505     061D  3001               	movlw	1
  1506     061E  00F1               	movwf	lcd_busy@busy
  1507     061F                     l707:
  1508                           
  1509                           ;lcd.c: 37:  RD3 = 0;
  1510     061F  1188               	bcf	8,3	;volatile
  1511     0620                     l709:
  1512                           
  1513                           ;lcd.c: 38:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  1514     0620  3006               	movlw	6
  1515     0621  00F0               	movwf	??_lcd_busy
  1516     0622                     u607:
  1517     0622  0BF0               	decfsz	??_lcd_busy,f
  1518     0623  2E22               	goto	u607
  1519     0624  0000               	nop
  1520     0625                     l711:
  1521                           
  1522                           ;lcd.c: 39:  RD3 = 1;
  1523     0625  1283               	bcf	3,5	;RP0=0, select bank0
  1524     0626  1303               	bcf	3,6	;RP1=0, select bank0
  1525     0627  1588               	bsf	8,3	;volatile
  1526     0628                     l713:
  1527                           
  1528                           ;lcd.c: 40:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  1529     0628  3006               	movlw	6
  1530     0629  00F0               	movwf	??_lcd_busy
  1531     062A                     u617:
  1532     062A  0BF0               	decfsz	??_lcd_busy,f
  1533     062B  2E2A               	goto	u617
  1534     062C  0000               	nop
  1535     062D                     l715:
  1536                           
  1537                           ;lcd.c: 41:  RD3 = 0;
  1538     062D  1283               	bcf	3,5	;RP0=0, select bank0
  1539     062E  1303               	bcf	3,6	;RP1=0, select bank0
  1540     062F  1188               	bcf	8,3	;volatile
  1541     0630                     l717:
  1542                           
  1543                           ;lcd.c: 43:  return busy;
  1544     0630  0871               	movf	lcd_busy@busy,w
  1545     0631                     l49:
  1546     0631  0008               	return
  1547     0632                     __end_of_lcd_busy:
  1548     007E                     btemp	set	126	;btemp
  1549     007E                     wtemp0	set	126
  1550                           
  1551                           	psect	config
  1552                           
  1553                           ;Config register CONFIG1 @ 0x2007
  1554                           ;	Oscillator Selection bits
  1555                           ;	FOSC = HS, HS oscillator: High-speed crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1
      +                          /CLKIN
  1556                           ;	Watchdog Timer Enable bit
  1557                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1558                           ;	Power-up Timer Enable bit
  1559                           ;	PWRTE = OFF, PWRT disabled
  1560                           ;	RE3/MCLR pin function select bit
  1561                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1562                           ;	Code Protection bit
  1563                           ;	CP = OFF, Program memory code protection is disabled
  1564                           ;	Data Code Protection bit
  1565                           ;	CPD = OFF, Data memory code protection is disabled
  1566                           ;	Brown Out Reset Selection bits
  1567                           ;	BOREN = OFF, BOR disabled
  1568                           ;	Internal External Switchover bit
  1569                           ;	IESO = ON, Internal/External Switchover mode is enabled
  1570                           ;	Fail-Safe Clock Monitor Enabled bit
  1571                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1572                           ;	Low Voltage Programming Enable bit
  1573                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1574                           ;	In-Circuit Debugger Mode bit
  1575                           ;	DEBUG = 0x1, unprogrammed default
  1576     2007                     	org	8199
  1577     2007  24D2               	dw	9426
  1578                           
  1579                           ;Config register CONFIG2 @ 0x2008
  1580                           ;	Brown-out Reset Selection bit
  1581                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1582                           ;	Flash Program Memory Self Write Enable bits
  1583                           ;	WRT = OFF, Write protection off
  1584     2008                     	org	8200
  1585     2008  3FFF               	dw	16383

Data Sizes:
    Strings     19
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      11
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    lcd_puts@s	PTR const unsigned char  size(1) Largest target is 17
		 -> STR_2(CODE[17]), 


Critical Paths under _main in COMMON

    _main->_lcd_puts
    _lcd_puts->_lcd_putc
    _lcd_putc->_lcd_gotoxy
    _lcd_gotoxy->_lcd_put_byte
    _lcd_init->_lcd_put_byte
    _lcd_put_byte->_lcd_put_nibble

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    7540
                         _lcd_gotoxy
                           _lcd_init
                           _lcd_putc
                           _lcd_puts
 ---------------------------------------------------------------------------------
 (1) _lcd_puts                                             1     1      0    2555
                                             10 COMMON     1     1      0
                           _lcd_putc
 ---------------------------------------------------------------------------------
 (2) _lcd_putc                                             1     1      0    2477
                                              9 COMMON     1     1      0
                           _lcd_busy
                         _lcd_gotoxy
                       _lcd_put_byte
 ---------------------------------------------------------------------------------
 (3) _lcd_gotoxy                                           3     2      1    1517
                                              6 COMMON     3     2      1
                           _lcd_busy
                       _lcd_put_byte
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             3     3      0     991
                                              6 COMMON     2     2      0
                           _lcd_busy
                       _lcd_put_byte
                     _lcd_put_nibble
 ---------------------------------------------------------------------------------
 (3) _lcd_put_byte                                         3     2      1     901
                                              3 COMMON     3     2      1
                     _lcd_put_nibble
 ---------------------------------------------------------------------------------
 (4) _lcd_put_nibble                                       3     3      0      75
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (4) _lcd_busy                                             2     2      0      15
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _lcd_gotoxy
     _lcd_busy
     _lcd_put_byte
       _lcd_put_nibble
   _lcd_init
     _lcd_busy
     _lcd_put_byte
     _lcd_put_nibble
   _lcd_putc
     _lcd_busy
     _lcd_gotoxy
     _lcd_put_byte
   _lcd_puts
     _lcd_putc

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      B       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Thu Sep 05 09:39:17 2024

                      pc 0002                       l13 075B                       l14 075B  
                     l60 0642                       l62 066A                       l70 0601  
                     l49 0631                       l57 06AC                       l94 05DF  
                     l88 06FC                       u10 067B                       u11 0677  
                     u30 0685                       u31 0681                       u24 067E  
                     u50 068F                       u51 068B                       u44 0688  
                     u70 0699                       u71 0695                       u64 0692  
                     u84 069C   __end_of_lcd_put_nibble 06AD                       fsr 0004  
          ?_lcd_put_byte 0073                      l112 07FB                      l701 060C  
                    l711 0625                      l703 0611                      l713 0628  
                    l705 0619                      l715 062D                      l707 061F  
                    l717 0630                      l709 0620                      l911 0639  
                    l921 0655                      l913 063E                      l691 0688  
                    l683 066C                      l923 0663                      l915 0645  
                    l931 05EA                      l693 0692                      l685 0672  
                    l917 064A                      l909 0633                      l933 05EE  
                    l925 05E1                      l941 06B7                      l695 06A1  
                    l687 0674                      l919 0652                      l935 05F7  
                    l927 05E6                      l951 06E6                      l943 06C2  
                    l697 06A9                      l689 067E                      l961 0774  
                    l929 05E9                      l945 06CB                      l953 06F1  
                    l937 06AE                      l699 0602                      l971 0794  
                    l963 0775                      l955 075F                      l947 06D3  
                    l939 06AF                      l981 07C5                      l973 07A3  
                    l965 0776                      l957 0768                      l949 06DE  
                    l991 07F1                      l983 07CD                      l975 07A9  
                    l967 077C                      l959 0771                      l985 07D7  
                    l977 07B3                      l969 078B                      l993 05C2  
                    l987 07DF                      l979 07BB                      l995 05C3  
                    l989 07E9                      l997 05CF                      l999 05D3  
                    _RD1 0041                      _RD2 0042                      _RD3 0043  
                    _RD4 0044                      _RD5 0045                      _RD6 0046  
                    _RD7 0047                      u400 06F0                      u401 06EF  
                    u410 07B3                      u411 07B2                      u340 063E  
                    u420 07C5                      u341 063D                      u421 07C4  
                    u430 07D7                      u431 07D6                      u440 07E9  
                    u360 05E6                      u441 07E8                      u361 05E5  
                    u450 07FB                      u370 0601                      u355 0658  
                    u451 07FA                      u507 076C                      u371 0600  
                    u380 06C1                      u460 05DF                      u517 0780  
                    u381 06C0                      u461 05DE                      u390 06DD  
                    u607 0622                      u527 078F                      u391 06DC  
                    u617 062A                      u537 079E                      u547 0647  
                    u557 064F                      u567 069E                      u577 06A6  
                    u587 060E                      u597 0616                      fsr0 0004  
                   l1011 070F                     l1021 0731                     l1013 0715  
                   l1005 06FD                     l1031 0755                     l1023 0739  
                   l1015 071D                     l1007 0702                     l1025 073F  
                   l1017 0723                     l1009 0708                     l1027 0747  
                   l1019 072B                     l1029 074D                     STR_1 001A  
                   STR_2 0009                     _main 06FD             lcd_busy@busy 0071  
                   btemp 007E                     start 0000          ?_lcd_put_nibble 0070  
         ??_lcd_put_byte 0074                    ?_main 0070                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 07FC  
           __end_of_main 075F            lcd_gotoxy@col 0077            lcd_gotoxy@row 0076  
     lcd_put_nibble@temp 0072                   ??_main 007B                   _TRISD1 0441  
                 _TRISD2 0442                   _TRISD3 0443                   _TRISD4 0444  
                 _TRISD5 0445                   _TRISD6 0446                   _TRISD7 0447  
       __end_of_lcd_busy 0632         __end_of_lcd_init 07FC         __end_of_lcd_putc 06FD  
       __end_of_lcd_puts 05E0            lcd_put_byte@b 0073  __end_of__initialization 07FC  
   __end_of_lcd_put_byte 066B           __pcstackCOMMON 0070        lcd_gotoxy@address 0078  
       ??_lcd_put_nibble 0070               __pmaintext 06FD               _lcd_gotoxy 05E0  
              ?_lcd_busy 0070                ?_lcd_init 0070                ?_lcd_putc 0070  
              ?_lcd_puts 0070               __stringtab 0003                  __ptext1 05C1  
                __ptext2 06AD                  __ptext3 05E0                  __ptext4 075F  
                __ptext5 0632                  __ptext6 066B                  __ptext7 0602  
             ??_lcd_busy 0070               ??_lcd_init 0076               ??_lcd_putc 0079  
             ??_lcd_puts 007A     end_of_initialization 07FC           lcd_put_byte@rs 0075  
           _lcd_put_byte 0632              ?_lcd_gotoxy 0076      start_initialization 07FC  
              ___latbits 0002                __pstrings 0003              __stringbase 0008  
              lcd_putc@c 0079                lcd_puts@s 007A             ??_lcd_gotoxy 0077  
     __end_of_lcd_gotoxy 0602       __end_of__stringtab 0009                 _lcd_busy 0602  
               _lcd_init 075F                 _lcd_putc 06AD                 _lcd_puts 05C1  
        lcd_put_nibble@b 0071                stringcode 0003           _lcd_put_nibble 066B  
               stringdir 0003                 stringtab 0003  
