

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Thu Sep 05 09:35:14 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	text6,local,class=CODE,merge=1,delta=2
    14                           	psect	text7,local,class=CODE,merge=1,delta=2
    15                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    16                           	dabs	1,0x7E,2
    17     0000                     
    18                           ; Generated 12/10/2023 GMT
    19                           ; 
    20                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution. Publication is not required when
    34                           ;        this file is used in an embedded application.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC16F887 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52     0000                     	;# 
    53     0001                     	;# 
    54     0002                     	;# 
    55     0003                     	;# 
    56     0004                     	;# 
    57     0005                     	;# 
    58     0006                     	;# 
    59     0007                     	;# 
    60     0008                     	;# 
    61     0009                     	;# 
    62     000A                     	;# 
    63     000B                     	;# 
    64     000C                     	;# 
    65     000D                     	;# 
    66     000E                     	;# 
    67     000E                     	;# 
    68     000F                     	;# 
    69     0010                     	;# 
    70     0011                     	;# 
    71     0012                     	;# 
    72     0013                     	;# 
    73     0014                     	;# 
    74     0015                     	;# 
    75     0015                     	;# 
    76     0016                     	;# 
    77     0017                     	;# 
    78     0018                     	;# 
    79     0019                     	;# 
    80     001A                     	;# 
    81     001B                     	;# 
    82     001B                     	;# 
    83     001C                     	;# 
    84     001D                     	;# 
    85     001E                     	;# 
    86     001F                     	;# 
    87     0081                     	;# 
    88     0085                     	;# 
    89     0086                     	;# 
    90     0087                     	;# 
    91     0088                     	;# 
    92     0089                     	;# 
    93     008C                     	;# 
    94     008D                     	;# 
    95     008E                     	;# 
    96     008F                     	;# 
    97     0090                     	;# 
    98     0091                     	;# 
    99     0092                     	;# 
   100     0093                     	;# 
   101     0093                     	;# 
   102     0093                     	;# 
   103     0094                     	;# 
   104     0095                     	;# 
   105     0096                     	;# 
   106     0097                     	;# 
   107     0098                     	;# 
   108     0099                     	;# 
   109     009A                     	;# 
   110     009B                     	;# 
   111     009C                     	;# 
   112     009D                     	;# 
   113     009E                     	;# 
   114     009F                     	;# 
   115     0105                     	;# 
   116     0107                     	;# 
   117     0108                     	;# 
   118     0109                     	;# 
   119     010C                     	;# 
   120     010C                     	;# 
   121     010D                     	;# 
   122     010E                     	;# 
   123     010F                     	;# 
   124     0185                     	;# 
   125     0187                     	;# 
   126     0188                     	;# 
   127     0189                     	;# 
   128     018C                     	;# 
   129     018D                     	;# 
   130     0000                     	;# 
   131     0001                     	;# 
   132     0002                     	;# 
   133     0003                     	;# 
   134     0004                     	;# 
   135     0005                     	;# 
   136     0006                     	;# 
   137     0007                     	;# 
   138     0008                     	;# 
   139     0009                     	;# 
   140     000A                     	;# 
   141     000B                     	;# 
   142     000C                     	;# 
   143     000D                     	;# 
   144     000E                     	;# 
   145     000E                     	;# 
   146     000F                     	;# 
   147     0010                     	;# 
   148     0011                     	;# 
   149     0012                     	;# 
   150     0013                     	;# 
   151     0014                     	;# 
   152     0015                     	;# 
   153     0015                     	;# 
   154     0016                     	;# 
   155     0017                     	;# 
   156     0018                     	;# 
   157     0019                     	;# 
   158     001A                     	;# 
   159     001B                     	;# 
   160     001B                     	;# 
   161     001C                     	;# 
   162     001D                     	;# 
   163     001E                     	;# 
   164     001F                     	;# 
   165     0081                     	;# 
   166     0085                     	;# 
   167     0086                     	;# 
   168     0087                     	;# 
   169     0088                     	;# 
   170     0089                     	;# 
   171     008C                     	;# 
   172     008D                     	;# 
   173     008E                     	;# 
   174     008F                     	;# 
   175     0090                     	;# 
   176     0091                     	;# 
   177     0092                     	;# 
   178     0093                     	;# 
   179     0093                     	;# 
   180     0093                     	;# 
   181     0094                     	;# 
   182     0095                     	;# 
   183     0096                     	;# 
   184     0097                     	;# 
   185     0098                     	;# 
   186     0099                     	;# 
   187     009A                     	;# 
   188     009B                     	;# 
   189     009C                     	;# 
   190     009D                     	;# 
   191     009E                     	;# 
   192     009F                     	;# 
   193     0105                     	;# 
   194     0107                     	;# 
   195     0108                     	;# 
   196     0109                     	;# 
   197     010C                     	;# 
   198     010C                     	;# 
   199     010D                     	;# 
   200     010E                     	;# 
   201     010F                     	;# 
   202     0185                     	;# 
   203     0187                     	;# 
   204     0188                     	;# 
   205     0189                     	;# 
   206     018C                     	;# 
   207     018D                     	;# 
   208     0000                     	;# 
   209     0001                     	;# 
   210     0002                     	;# 
   211     0003                     	;# 
   212     0004                     	;# 
   213     0005                     	;# 
   214     0006                     	;# 
   215     0007                     	;# 
   216     0008                     	;# 
   217     0009                     	;# 
   218     000A                     	;# 
   219     000B                     	;# 
   220     000C                     	;# 
   221     000D                     	;# 
   222     000E                     	;# 
   223     000E                     	;# 
   224     000F                     	;# 
   225     0010                     	;# 
   226     0011                     	;# 
   227     0012                     	;# 
   228     0013                     	;# 
   229     0014                     	;# 
   230     0015                     	;# 
   231     0015                     	;# 
   232     0016                     	;# 
   233     0017                     	;# 
   234     0018                     	;# 
   235     0019                     	;# 
   236     001A                     	;# 
   237     001B                     	;# 
   238     001B                     	;# 
   239     001C                     	;# 
   240     001D                     	;# 
   241     001E                     	;# 
   242     001F                     	;# 
   243     0081                     	;# 
   244     0085                     	;# 
   245     0086                     	;# 
   246     0087                     	;# 
   247     0088                     	;# 
   248     0089                     	;# 
   249     008C                     	;# 
   250     008D                     	;# 
   251     008E                     	;# 
   252     008F                     	;# 
   253     0090                     	;# 
   254     0091                     	;# 
   255     0092                     	;# 
   256     0093                     	;# 
   257     0093                     	;# 
   258     0093                     	;# 
   259     0094                     	;# 
   260     0095                     	;# 
   261     0096                     	;# 
   262     0097                     	;# 
   263     0098                     	;# 
   264     0099                     	;# 
   265     009A                     	;# 
   266     009B                     	;# 
   267     009C                     	;# 
   268     009D                     	;# 
   269     009E                     	;# 
   270     009F                     	;# 
   271     0105                     	;# 
   272     0107                     	;# 
   273     0108                     	;# 
   274     0109                     	;# 
   275     010C                     	;# 
   276     010C                     	;# 
   277     010D                     	;# 
   278     010E                     	;# 
   279     010F                     	;# 
   280     0185                     	;# 
   281     0187                     	;# 
   282     0188                     	;# 
   283     0189                     	;# 
   284     018C                     	;# 
   285     018D                     	;# 
   286     0044                     _RD4	set	68
   287     0045                     _RD5	set	69
   288     0046                     _RD6	set	70
   289     0047                     _RD7	set	71
   290     0043                     _RD3	set	67
   291     0041                     _RD1	set	65
   292     0042                     _RD2	set	66
   293     0442                     _TRISD2	set	1090
   294     0441                     _TRISD1	set	1089
   295     0443                     _TRISD3	set	1091
   296     0447                     _TRISD7	set	1095
   297     0446                     _TRISD6	set	1094
   298     0445                     _TRISD5	set	1093
   299     0444                     _TRISD4	set	1092
   300                           
   301                           	psect	strings
   302     0003                     __pstrings:
   303     0003                     stringtab:
   304     0003                     __stringtab:
   305     0003                     stringcode:	
   306                           ;	String table - string pointers are 1 byte each
   307                           
   308     0003                     stringdir:
   309     0003  3000               	movlw	high stringdir
   310     0004  008A               	movwf	10
   311     0005  0804               	movf	4,w
   312     0006  0A84               	incf	4,f
   313     0007  0782               	addwf	2,f
   314     0008                     __stringbase:
   315     0008  3400               	retlw	0
   316     0009                     __end_of__stringtab:
   317     0009                     STR_1:
   318     0009  340C               	retlw	12
   319     000A  3420               	retlw	32	;' '
   320     000B  3444               	retlw	68	;'D'
   321     000C  3448               	retlw	72	;'H'
   322     000D  3420               	retlw	32	;' '
   323     000E  3443               	retlw	67	;'C'
   324     000F  344F               	retlw	79	;'O'
   325     0010  344E               	retlw	78	;'N'
   326     0011  3447               	retlw	71	;'G'
   327     0012  3420               	retlw	32	;' '
   328     0013  344E               	retlw	78	;'N'
   329     0014  3447               	retlw	71	;'G'
   330     0015  3448               	retlw	72	;'H'
   331     0016  3449               	retlw	73	;'I'
   332     0017  3445               	retlw	69	;'E'
   333     0018  3450               	retlw	80	;'P'
   334     0019  340A               	retlw	10
   335     001A  3420               	retlw	32	;' '
   336     001B  342A               	retlw	42	;'*'
   337     001C  342A               	retlw	42	;'*'
   338     001D  3420               	retlw	32	;' '
   339     001E  3454               	retlw	84	;'T'
   340     001F  3450               	retlw	80	;'P'
   341     0020  3420               	retlw	32	;' '
   342     0021  3448               	retlw	72	;'H'
   343     0022  3443               	retlw	67	;'C'
   344     0023  344D               	retlw	77	;'M'
   345     0024  3420               	retlw	32	;' '
   346     0025  342A               	retlw	42	;'*'
   347     0026  342A               	retlw	42	;'*'
   348     0027  3420               	retlw	32	;' '
   349     0028  3400               	retlw	0
   350                           
   351                           	psect	cinit
   352     07FC                     start_initialization:	
   353                           ; #config settings
   354                           
   355     07FC                     __initialization:
   356     07FC                     end_of_initialization:	
   357                           ;End of C runtime variable initialization code
   358                           
   359     07FC                     __end_of__initialization:
   360     07FC  0183               	clrf	3
   361     07FD  120A  118A  2E14   	ljmp	_main	;jump to C main() function
   362                           
   363                           	psect	cstackCOMMON
   364     0070                     __pcstackCOMMON:
   365     0070                     ?_lcd_init:
   366     0070                     ?_lcd_puts:	
   367                           ; 1 bytes @ 0x0
   368                           
   369     0070                     ?_main:	
   370                           ; 1 bytes @ 0x0
   371                           
   372     0070                     ?_lcd_busy:	
   373                           ; 1 bytes @ 0x0
   374                           
   375     0070                     ??_lcd_busy:	
   376                           ; 1 bytes @ 0x0
   377                           
   378     0070                     ?_lcd_put_nibble:	
   379                           ; 1 bytes @ 0x0
   380                           
   381     0070                     ??_lcd_put_nibble:	
   382                           ; 1 bytes @ 0x0
   383                           
   384     0070                     ?_lcd_putc:	
   385                           ; 1 bytes @ 0x0
   386                           
   387                           
   388                           ; 1 bytes @ 0x0
   389     0070                     	ds	1
   390     0071                     lcd_busy@busy:
   391     0071                     lcd_put_nibble@b:	
   392                           ; 1 bytes @ 0x1
   393                           
   394                           
   395                           ; 1 bytes @ 0x1
   396     0071                     	ds	1
   397     0072                     lcd_put_nibble@temp:
   398                           
   399                           ; 1 bytes @ 0x2
   400     0072                     	ds	1
   401     0073                     ?_lcd_put_byte:
   402     0073                     lcd_put_byte@b:	
   403                           ; 1 bytes @ 0x3
   404                           
   405                           
   406                           ; 1 bytes @ 0x3
   407     0073                     	ds	1
   408     0074                     ??_lcd_put_byte:
   409                           
   410                           ; 1 bytes @ 0x4
   411     0074                     	ds	1
   412     0075                     lcd_put_byte@rs:
   413                           
   414                           ; 1 bytes @ 0x5
   415     0075                     	ds	1
   416     0076                     ??_lcd_init:
   417     0076                     ?_lcd_gotoxy:	
   418                           ; 1 bytes @ 0x6
   419                           
   420     0076                     lcd_gotoxy@row:	
   421                           ; 1 bytes @ 0x6
   422                           
   423                           
   424                           ; 1 bytes @ 0x6
   425     0076                     	ds	1
   426     0077                     ??_lcd_gotoxy:
   427     0077                     lcd_gotoxy@col:	
   428                           ; 1 bytes @ 0x7
   429                           
   430                           
   431                           ; 1 bytes @ 0x7
   432     0077                     	ds	1
   433     0078                     lcd_gotoxy@address:
   434                           
   435                           ; 1 bytes @ 0x8
   436     0078                     	ds	1
   437     0079                     ??_lcd_putc:
   438     0079                     lcd_putc@c:	
   439                           ; 1 bytes @ 0x9
   440                           
   441                           
   442                           ; 1 bytes @ 0x9
   443     0079                     	ds	1
   444     007A                     ??_lcd_puts:
   445     007A                     lcd_puts@s:	
   446                           ; 1 bytes @ 0xA
   447                           
   448                           
   449                           ; 1 bytes @ 0xA
   450     007A                     	ds	1
   451     007B                     ??_main:
   452                           
   453                           	psect	maintext
   454     0614                     __pmaintext:	
   455                           ; 1 bytes @ 0xB
   456 ;;
   457 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   458 ;;
   459 ;; *************** function _main *****************
   460 ;; Defined at:
   461 ;;		line 27 in file "VD1.c"
   462 ;; Parameters:    Size  Location     Type
   463 ;;		None
   464 ;; Auto vars:     Size  Location     Type
   465 ;;		None
   466 ;; Return value:  Size  Location     Type
   467 ;;                  1    wreg      void 
   468 ;; Registers used:
   469 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   470 ;; Tracked objects:
   471 ;;		On entry : B00/0
   472 ;;		On exit  : 0/0
   473 ;;		Unchanged: 0/0
   474 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   475 ;;      Params:         0       0       0       0       0
   476 ;;      Locals:         0       0       0       0       0
   477 ;;      Temps:          0       0       0       0       0
   478 ;;      Totals:         0       0       0       0       0
   479 ;;Total ram usage:        0 bytes
   480 ;; Hardware stack levels required when called: 5
   481 ;; This function calls:
   482 ;;		_lcd_init
   483 ;;		_lcd_puts
   484 ;; This function is called by:
   485 ;;		Startup code after reset
   486 ;; This function uses a non-reentrant model
   487 ;;
   488                           
   489     0614                     _main:	
   490                           ;psect for function _main
   491                           
   492     0614                     l977:	
   493                           ;incstack = 0
   494                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   495                           
   496                           
   497                           ;VD1.c: 29: lcd_init();
   498     0614  120A  118A  275F  120A  118A  	fcall	_lcd_init
   499     0619                     l979:
   500                           
   501                           ;VD1.c: 30: lcd_puts("\f DH CONG NGHIEP\n ** TP HCM ** ");
   502     0619  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   503     061A  120A  118A  2623  120A  118A  	fcall	_lcd_puts
   504     061F                     l9:	
   505                           ;VD1.c: 31: while(1);
   506                           
   507     061F                     l10:
   508     061F  2E1F               	goto	l9
   509     0620  120A  118A  2800   	ljmp	start
   510     0623                     __end_of_main:
   511                           
   512                           	psect	text1
   513     0623                     __ptext1:	
   514 ;; *************** function _lcd_puts *****************
   515 ;; Defined at:
   516 ;;		line 224 in file "lcd.c"
   517 ;; Parameters:    Size  Location     Type
   518 ;;  s               1    wreg     PTR const unsigned char 
   519 ;;		 -> STR_1(32), 
   520 ;; Auto vars:     Size  Location     Type
   521 ;;  s               1   10[COMMON] PTR const unsigned char 
   522 ;;		 -> STR_1(32), 
   523 ;; Return value:  Size  Location     Type
   524 ;;                  1    wreg      void 
   525 ;; Registers used:
   526 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   527 ;; Tracked objects:
   528 ;;		On entry : 0/0
   529 ;;		On exit  : 0/0
   530 ;;		Unchanged: 0/0
   531 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   532 ;;      Params:         0       0       0       0       0
   533 ;;      Locals:         1       0       0       0       0
   534 ;;      Temps:          0       0       0       0       0
   535 ;;      Totals:         1       0       0       0       0
   536 ;;Total ram usage:        1 bytes
   537 ;; Hardware stack levels used: 1
   538 ;; Hardware stack levels required when called: 4
   539 ;; This function calls:
   540 ;;		_lcd_putc
   541 ;; This function is called by:
   542 ;;		_main
   543 ;; This function uses a non-reentrant model
   544 ;;
   545                           
   546     0623                     _lcd_puts:	
   547                           ;psect for function _lcd_puts
   548                           
   549                           
   550                           ;incstack = 0
   551                           ; Regs used in _lcd_puts: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   552                           ;lcd_puts@s stored from wreg
   553     0623  00FA               	movwf	lcd_puts@s
   554     0624                     l965:
   555                           
   556                           ;lcd.c: 224: void lcd_puts(const char* s);lcd.c: 225: {;lcd.c: 229:  while(*s)
   557     0624  2E35               	goto	l971
   558     0625                     l967:
   559                           
   560                           ;lcd.c: 230:   {;lcd.c: 231:   lcd_putc(*s++);
   561     0625  087A               	movf	lcd_puts@s,w
   562     0626  0084               	movwf	4
   563     0627  120A  118A  2003  120A  118A  	fcall	stringdir
   564     062C  120A  118A  270F  120A  118A  	fcall	_lcd_putc
   565     0631                     l969:
   566     0631  3001               	movlw	1
   567     0632  00FF               	movwf	btemp+1
   568     0633  087F               	movf	btemp+1,w
   569     0634  07FA               	addwf	lcd_puts@s,f
   570     0635                     l971:
   571                           
   572                           ;lcd.c: 229:  while(*s)
   573     0635  087A               	movf	lcd_puts@s,w
   574     0636  0084               	movwf	4
   575     0637  120A  118A  2003  120A  118A  	fcall	stringdir
   576     063C  3A00               	xorlw	0
   577     063D  1D03               	skipz
   578     063E  2E40               	goto	u461
   579     063F  2E41               	goto	u460
   580     0640                     u461:
   581     0640  2E25               	goto	l967
   582     0641                     u460:
   583     0641                     l90:
   584     0641  0008               	return
   585     0642                     __end_of_lcd_puts:
   586                           
   587                           	psect	text2
   588     070F                     __ptext2:	
   589 ;; *************** function _lcd_putc *****************
   590 ;; Defined at:
   591 ;;		line 190 in file "lcd.c"
   592 ;; Parameters:    Size  Location     Type
   593 ;;  c               1    wreg     unsigned char 
   594 ;; Auto vars:     Size  Location     Type
   595 ;;  c               1    9[COMMON] unsigned char 
   596 ;; Return value:  Size  Location     Type
   597 ;;                  1    wreg      void 
   598 ;; Registers used:
   599 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   600 ;; Tracked objects:
   601 ;;		On entry : 0/0
   602 ;;		On exit  : 0/0
   603 ;;		Unchanged: 0/0
   604 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   605 ;;      Params:         0       0       0       0       0
   606 ;;      Locals:         1       0       0       0       0
   607 ;;      Temps:          0       0       0       0       0
   608 ;;      Totals:         1       0       0       0       0
   609 ;;Total ram usage:        1 bytes
   610 ;; Hardware stack levels used: 1
   611 ;; Hardware stack levels required when called: 3
   612 ;; This function calls:
   613 ;;		_lcd_busy
   614 ;;		_lcd_gotoxy
   615 ;;		_lcd_put_byte
   616 ;; This function is called by:
   617 ;;		_lcd_puts
   618 ;;		_lcd_String_Delay
   619 ;;		_putch
   620 ;; This function uses a non-reentrant model
   621 ;;
   622                           
   623     070F                     _lcd_putc:	
   624                           ;psect for function _lcd_putc
   625                           
   626                           
   627                           ;incstack = 0
   628                           ; Regs used in _lcd_putc: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   629                           ;lcd_putc@c stored from wreg
   630     070F  00F9               	movwf	lcd_putc@c
   631     0710                     l909:
   632                           
   633                           ;lcd.c: 190: void lcd_putc(char c);lcd.c: 191: {;lcd.c: 195:  switch(c)
   634     0710  2F53               	goto	l925
   635     0711                     l911:
   636                           
   637                           ;lcd.c: 198:    lcd_put_byte(0,1);
   638     0711  01F3               	clrf	lcd_put_byte@b
   639     0712  0AF3               	incf	lcd_put_byte@b,f
   640     0713  3000               	movlw	0
   641     0714  120A  118A  2694  120A  118A  	fcall	_lcd_put_byte
   642     0719                     l913:	
   643                           ;lcd.c: 199:    while(lcd_busy());
   644                           
   645     0719  120A  118A  2664  120A  118A  	fcall	_lcd_busy
   646     071E  3A00               	xorlw	0
   647     071F  1D03               	skipz
   648     0720  2F22               	goto	u381
   649     0721  2F23               	goto	u380
   650     0722                     u381:
   651     0722  2F19               	goto	l913
   652     0723                     u380:
   653     0723  2F5E               	goto	l84
   654     0724                     l915:
   655                           
   656                           ;lcd.c: 202:    lcd_gotoxy(0,1);
   657     0724  01F6               	clrf	lcd_gotoxy@row
   658     0725  0AF6               	incf	lcd_gotoxy@row,f
   659     0726  3000               	movlw	0
   660     0727  120A  118A  2642  120A  118A  	fcall	_lcd_gotoxy
   661                           
   662                           ;lcd.c: 203:    break;
   663     072C  2F5E               	goto	l84
   664     072D                     l917:
   665                           
   666                           ;lcd.c: 205:    lcd_put_byte(0,0x10);
   667     072D  3010               	movlw	16
   668     072E  00F3               	movwf	lcd_put_byte@b
   669     072F  3000               	movlw	0
   670     0730  120A  118A  2694  120A  118A  	fcall	_lcd_put_byte
   671     0735                     l919:	
   672                           ;lcd.c: 206:    while(lcd_busy());
   673                           
   674     0735  120A  118A  2664  120A  118A  	fcall	_lcd_busy
   675     073A  3A00               	xorlw	0
   676     073B  1D03               	skipz
   677     073C  2F3E               	goto	u391
   678     073D  2F3F               	goto	u390
   679     073E                     u391:
   680     073E  2F35               	goto	l919
   681     073F                     u390:
   682     073F  2F5E               	goto	l84
   683     0740                     l921:
   684                           
   685                           ;lcd.c: 210:     {;lcd.c: 211:     lcd_put_byte(1,c);
   686     0740  0879               	movf	lcd_putc@c,w
   687     0741  00F3               	movwf	lcd_put_byte@b
   688     0742  3001               	movlw	1
   689     0743  120A  118A  2694  120A  118A  	fcall	_lcd_put_byte
   690     0748                     l923:	
   691                           ;lcd.c: 212:     while(lcd_busy());
   692                           
   693     0748  120A  118A  2664  120A  118A  	fcall	_lcd_busy
   694     074D  3A00               	xorlw	0
   695     074E  1D03               	skipz
   696     074F  2F51               	goto	u401
   697     0750  2F52               	goto	u400
   698     0751                     u401:
   699     0751  2F48               	goto	l923
   700     0752                     u400:
   701     0752  2F5E               	goto	l84
   702     0753                     l925:
   703     0753  0879               	movf	lcd_putc@c,w
   704                           
   705                           ; Switch size 1, requested type "simple"
   706                           ; Number of cases is 3, Range of values is 8 to 12
   707                           ; switch strategies available:
   708                           ; Name         Instructions Cycles
   709                           ; simple_byte           10     6 (average)
   710                           ; direct_byte           26    11 (fixed)
   711                           ; jumptable            263     9 (fixed)
   712                           ;	Chosen strategy is simple_byte
   713     0754  3A08               	xorlw	8	; case 8
   714     0755  1903               	skipnz
   715     0756  2F2D               	goto	l917
   716     0757  3A02               	xorlw	2	; case 10
   717     0758  1903               	skipnz
   718     0759  2F24               	goto	l915
   719     075A  3A06               	xorlw	6	; case 12
   720     075B  1903               	skipnz
   721     075C  2F11               	goto	l911
   722     075D  2F40               	goto	l921
   723     075E                     l84:
   724     075E  0008               	return
   725     075F                     __end_of_lcd_putc:
   726                           
   727                           	psect	text3
   728     0642                     __ptext3:	
   729 ;; *************** function _lcd_gotoxy *****************
   730 ;; Defined at:
   731 ;;		line 167 in file "lcd.c"
   732 ;; Parameters:    Size  Location     Type
   733 ;;  col             1    wreg     unsigned char 
   734 ;;  row             1    6[COMMON] unsigned char 
   735 ;; Auto vars:     Size  Location     Type
   736 ;;  col             1    7[COMMON] unsigned char 
   737 ;;  address         1    8[COMMON] unsigned char 
   738 ;; Return value:  Size  Location     Type
   739 ;;                  1    wreg      void 
   740 ;; Registers used:
   741 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   742 ;; Tracked objects:
   743 ;;		On entry : 0/0
   744 ;;		On exit  : 0/0
   745 ;;		Unchanged: 0/0
   746 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   747 ;;      Params:         1       0       0       0       0
   748 ;;      Locals:         2       0       0       0       0
   749 ;;      Temps:          0       0       0       0       0
   750 ;;      Totals:         3       0       0       0       0
   751 ;;Total ram usage:        3 bytes
   752 ;; Hardware stack levels used: 1
   753 ;; Hardware stack levels required when called: 2
   754 ;; This function calls:
   755 ;;		_lcd_busy
   756 ;;		_lcd_put_byte
   757 ;; This function is called by:
   758 ;;		_lcd_putc
   759 ;; This function uses a non-reentrant model
   760 ;;
   761                           
   762     0642                     _lcd_gotoxy:	
   763                           ;psect for function _lcd_gotoxy
   764                           
   765                           
   766                           ;incstack = 0
   767                           ; Regs used in _lcd_gotoxy: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   768                           ;lcd_gotoxy@col stored from wreg
   769     0642  00F7               	movwf	lcd_gotoxy@col
   770     0643                     l897:
   771                           
   772                           ;lcd.c: 167: void lcd_gotoxy(unsigned char col, unsigned char row);lcd.c: 168: {;lcd.c: 
      +                          170:  unsigned char address;;lcd.c: 173:  if(row!=0)
   773     0643  0876               	movf	lcd_gotoxy@row,w
   774     0644  1903               	btfsc	3,2
   775     0645  2E47               	goto	u361
   776     0646  2E48               	goto	u360
   777     0647                     u361:
   778     0647  2E4B               	goto	l901
   779     0648                     u360:
   780     0648                     l899:
   781                           
   782                           ;lcd.c: 174:   address=0x40;
   783     0648  3040               	movlw	64
   784     0649  00F8               	movwf	lcd_gotoxy@address
   785     064A  2E4C               	goto	l903
   786     064B                     l901:
   787                           
   788                           ;lcd.c: 176:   address=0;
   789     064B  01F8               	clrf	lcd_gotoxy@address
   790     064C                     l903:
   791                           
   792                           ;lcd.c: 178:  address += col;
   793     064C  0877               	movf	lcd_gotoxy@col,w
   794     064D  00FF               	movwf	btemp+1
   795     064E  087F               	movf	btemp+1,w
   796     064F  07F8               	addwf	lcd_gotoxy@address,f
   797     0650                     l905:
   798                           
   799                           ;lcd.c: 180:  lcd_put_byte(0,0x80|address);
   800     0650  0878               	movf	lcd_gotoxy@address,w
   801     0651  3880               	iorlw	128
   802     0652  00F3               	movwf	lcd_put_byte@b
   803     0653  3000               	movlw	0
   804     0654  120A  118A  2694  120A  118A  	fcall	_lcd_put_byte
   805     0659                     l907:	
   806                           ;lcd.c: 181:  while(lcd_busy());
   807                           
   808     0659  120A  118A  2664  120A  118A  	fcall	_lcd_busy
   809     065E  3A00               	xorlw	0
   810     065F  1D03               	skipz
   811     0660  2E62               	goto	u371
   812     0661  2E63               	goto	u370
   813     0662                     u371:
   814     0662  2E59               	goto	l907
   815     0663                     u370:
   816     0663                     l66:
   817     0663  0008               	return
   818     0664                     __end_of_lcd_gotoxy:
   819                           
   820                           	psect	text4
   821     075F                     __ptext4:	
   822 ;; *************** function _lcd_init *****************
   823 ;; Defined at:
   824 ;;		line 241 in file "lcd.c"
   825 ;; Parameters:    Size  Location     Type
   826 ;;		None
   827 ;; Auto vars:     Size  Location     Type
   828 ;;  i               1    0        unsigned char 
   829 ;; Return value:  Size  Location     Type
   830 ;;                  1    wreg      void 
   831 ;; Registers used:
   832 ;;		wreg, status,2, status,0, pclath, cstack
   833 ;; Tracked objects:
   834 ;;		On entry : 0/0
   835 ;;		On exit  : 0/0
   836 ;;		Unchanged: 0/0
   837 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   838 ;;      Params:         0       0       0       0       0
   839 ;;      Locals:         0       0       0       0       0
   840 ;;      Temps:          2       0       0       0       0
   841 ;;      Totals:         2       0       0       0       0
   842 ;;Total ram usage:        2 bytes
   843 ;; Hardware stack levels used: 1
   844 ;; Hardware stack levels required when called: 2
   845 ;; This function calls:
   846 ;;		_lcd_busy
   847 ;;		_lcd_put_byte
   848 ;;		_lcd_put_nibble
   849 ;; This function is called by:
   850 ;;		_main
   851 ;; This function uses a non-reentrant model
   852 ;;
   853                           
   854     075F                     _lcd_init:	
   855                           ;psect for function _lcd_init
   856                           
   857     075F                     l927:	
   858                           ;incstack = 0
   859                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
   860                           
   861                           
   862                           ;lcd.c: 244: unsigned char i;;lcd.c: 247:  TRISD3 = 0;
   863     075F  1683               	bsf	3,5	;RP0=1, select bank1
   864     0760  1303               	bcf	3,6	;RP1=0, select bank1
   865     0761  1188               	bcf	8,3	;volatile
   866                           
   867                           ;lcd.c: 248:  TRISD1 = 0;
   868     0762  1088               	bcf	8,1	;volatile
   869                           
   870                           ;lcd.c: 249:  TRISD2 = 0;
   871     0763  1108               	bcf	8,2	;volatile
   872                           
   873                           ;lcd.c: 250:  TRISD4 = 0;
   874     0764  1208               	bcf	8,4	;volatile
   875                           
   876                           ;lcd.c: 251:  TRISD5 = 0;
   877     0765  1288               	bcf	8,5	;volatile
   878                           
   879                           ;lcd.c: 252:  TRISD6 = 0;
   880     0766  1308               	bcf	8,6	;volatile
   881                           
   882                           ;lcd.c: 253:  TRISD7 = 0;
   883     0767  1388               	bcf	8,7	;volatile
   884     0768                     l929:
   885                           
   886                           ;lcd.c: 255:  _delay((unsigned long)((15)*(4000000/4000.0)));
   887     0768  3014               	movlw	20
   888     0769  00F7               	movwf	??_lcd_init+1
   889     076A  3079               	movlw	121
   890     076B  00F6               	movwf	??_lcd_init
   891     076C                     u507:
   892     076C  0BF6               	decfsz	??_lcd_init,f
   893     076D  2F6C               	goto	u507
   894     076E  0BF7               	decfsz	??_lcd_init+1,f
   895     076F  2F6C               	goto	u507
   896     0770  2F71               	nop2
   897     0771                     l931:
   898                           
   899                           ;lcd.c: 257:  RD1 = 0;
   900     0771  1283               	bcf	3,5	;RP0=0, select bank0
   901     0772  1303               	bcf	3,6	;RP1=0, select bank0
   902     0773  1088               	bcf	8,1	;volatile
   903     0774                     l933:
   904                           
   905                           ;lcd.c: 258:  RD2 = 0;
   906     0774  1108               	bcf	8,2	;volatile
   907     0775                     l935:
   908                           
   909                           ;lcd.c: 259:  RD3 = 0;
   910     0775  1188               	bcf	8,3	;volatile
   911     0776                     l937:
   912                           
   913                           ;lcd.c: 261:  lcd_put_nibble(3);
   914     0776  3003               	movlw	3
   915     0777  120A  118A  26CD  120A  118A  	fcall	_lcd_put_nibble
   916     077C                     l939:
   917                           
   918                           ;lcd.c: 262:  _delay((unsigned long)((10)*(4000000/4000.0)));
   919     077C  300D               	movlw	13
   920     077D  00F7               	movwf	??_lcd_init+1
   921     077E  30FB               	movlw	251
   922     077F  00F6               	movwf	??_lcd_init
   923     0780                     u517:
   924     0780  0BF6               	decfsz	??_lcd_init,f
   925     0781  2F80               	goto	u517
   926     0782  0BF7               	decfsz	??_lcd_init+1,f
   927     0783  2F80               	goto	u517
   928     0784  2F85               	nop2
   929                           
   930                           ;lcd.c: 263:  lcd_put_nibble(3);
   931     0785  3003               	movlw	3
   932     0786  120A  118A  26CD  120A  118A  	fcall	_lcd_put_nibble
   933     078B                     l941:
   934                           
   935                           ;lcd.c: 264:  _delay((unsigned long)((10)*(4000000/4000.0)));
   936     078B  300D               	movlw	13
   937     078C  00F7               	movwf	??_lcd_init+1
   938     078D  30FB               	movlw	251
   939     078E  00F6               	movwf	??_lcd_init
   940     078F                     u527:
   941     078F  0BF6               	decfsz	??_lcd_init,f
   942     0790  2F8F               	goto	u527
   943     0791  0BF7               	decfsz	??_lcd_init+1,f
   944     0792  2F8F               	goto	u527
   945     0793  2F94               	nop2
   946     0794                     l943:
   947                           
   948                           ;lcd.c: 265:  lcd_put_nibble(3);
   949     0794  3003               	movlw	3
   950     0795  120A  118A  26CD  120A  118A  	fcall	_lcd_put_nibble
   951                           
   952                           ;lcd.c: 266:  _delay((unsigned long)((10)*(4000000/4000.0)));
   953     079A  300D               	movlw	13
   954     079B  00F7               	movwf	??_lcd_init+1
   955     079C  30FB               	movlw	251
   956     079D  00F6               	movwf	??_lcd_init
   957     079E                     u537:
   958     079E  0BF6               	decfsz	??_lcd_init,f
   959     079F  2F9E               	goto	u537
   960     07A0  0BF7               	decfsz	??_lcd_init+1,f
   961     07A1  2F9E               	goto	u537
   962     07A2  2FA3               	nop2
   963     07A3                     l945:
   964                           
   965                           ;lcd.c: 268:  lcd_put_nibble(2);
   966     07A3  3002               	movlw	2
   967     07A4  120A  118A  26CD  120A  118A  	fcall	_lcd_put_nibble
   968     07A9                     l947:	
   969                           ;lcd.c: 269:  while(lcd_busy());
   970                           
   971     07A9  120A  118A  2664  120A  118A  	fcall	_lcd_busy
   972     07AE  3A00               	xorlw	0
   973     07AF  1D03               	skipz
   974     07B0  2FB2               	goto	u411
   975     07B1  2FB3               	goto	u410
   976     07B2                     u411:
   977     07B2  2FA9               	goto	l947
   978     07B3                     u410:
   979     07B3                     l949:
   980                           
   981                           ;lcd.c: 271:  lcd_put_byte(0,0b00101100 & 0b00111000);
   982     07B3  3028               	movlw	40
   983     07B4  00F3               	movwf	lcd_put_byte@b
   984     07B5  3000               	movlw	0
   985     07B6  120A  118A  2694  120A  118A  	fcall	_lcd_put_byte
   986     07BB                     l951:	
   987                           ;lcd.c: 272:  while(lcd_busy());
   988                           
   989     07BB  120A  118A  2664  120A  118A  	fcall	_lcd_busy
   990     07C0  3A00               	xorlw	0
   991     07C1  1D03               	skipz
   992     07C2  2FC4               	goto	u421
   993     07C3  2FC5               	goto	u420
   994     07C4                     u421:
   995     07C4  2FBB               	goto	l951
   996     07C5                     u420:
   997     07C5                     l953:
   998                           
   999                           ;lcd.c: 274:  lcd_put_byte(0,0b00001111 & 0b00001101 & 0b00001110);
  1000     07C5  300C               	movlw	12
  1001     07C6  00F3               	movwf	lcd_put_byte@b
  1002     07C7  3000               	movlw	0
  1003     07C8  120A  118A  2694  120A  118A  	fcall	_lcd_put_byte
  1004     07CD                     l955:	
  1005                           ;lcd.c: 275:  while(lcd_busy());
  1006                           
  1007     07CD  120A  118A  2664  120A  118A  	fcall	_lcd_busy
  1008     07D2  3A00               	xorlw	0
  1009     07D3  1D03               	skipz
  1010     07D4  2FD6               	goto	u431
  1011     07D5  2FD7               	goto	u430
  1012     07D6                     u431:
  1013     07D6  2FCD               	goto	l955
  1014     07D7                     u430:
  1015     07D7                     l957:
  1016                           
  1017                           ;lcd.c: 277:  lcd_put_byte(0,0x01);
  1018     07D7  01F3               	clrf	lcd_put_byte@b
  1019     07D8  0AF3               	incf	lcd_put_byte@b,f
  1020     07D9  3000               	movlw	0
  1021     07DA  120A  118A  2694  120A  118A  	fcall	_lcd_put_byte
  1022     07DF                     l959:	
  1023                           ;lcd.c: 278:  while(lcd_busy());
  1024                           
  1025     07DF  120A  118A  2664  120A  118A  	fcall	_lcd_busy
  1026     07E4  3A00               	xorlw	0
  1027     07E5  1D03               	skipz
  1028     07E6  2FE8               	goto	u441
  1029     07E7  2FE9               	goto	u440
  1030     07E8                     u441:
  1031     07E8  2FDF               	goto	l959
  1032     07E9                     u440:
  1033     07E9                     l961:
  1034                           
  1035                           ;lcd.c: 280:  lcd_put_byte(0,0b00000110);
  1036     07E9  3006               	movlw	6
  1037     07EA  00F3               	movwf	lcd_put_byte@b
  1038     07EB  3000               	movlw	0
  1039     07EC  120A  118A  2694  120A  118A  	fcall	_lcd_put_byte
  1040     07F1                     l963:	
  1041                           ;lcd.c: 281:  while(lcd_busy());
  1042                           
  1043     07F1  120A  118A  2664  120A  118A  	fcall	_lcd_busy
  1044     07F6  3A00               	xorlw	0
  1045     07F7  1D03               	skipz
  1046     07F8  2FFA               	goto	u451
  1047     07F9  2FFB               	goto	u450
  1048     07FA                     u451:
  1049     07FA  2FF1               	goto	l963
  1050     07FB                     u450:
  1051     07FB                     l108:
  1052     07FB  0008               	return
  1053     07FC                     __end_of_lcd_init:
  1054                           
  1055                           	psect	text5
  1056     0694                     __ptext5:	
  1057 ;; *************** function _lcd_put_byte *****************
  1058 ;; Defined at:
  1059 ;;		line 134 in file "lcd.c"
  1060 ;; Parameters:    Size  Location     Type
  1061 ;;  rs              1    wreg     unsigned char 
  1062 ;;  b               1    3[COMMON] unsigned char 
  1063 ;; Auto vars:     Size  Location     Type
  1064 ;;  rs              1    5[COMMON] unsigned char 
  1065 ;; Return value:  Size  Location     Type
  1066 ;;                  1    wreg      void 
  1067 ;; Registers used:
  1068 ;;		wreg, status,2, status,0, pclath, cstack
  1069 ;; Tracked objects:
  1070 ;;		On entry : 0/0
  1071 ;;		On exit  : 0/0
  1072 ;;		Unchanged: 0/0
  1073 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1074 ;;      Params:         1       0       0       0       0
  1075 ;;      Locals:         1       0       0       0       0
  1076 ;;      Temps:          1       0       0       0       0
  1077 ;;      Totals:         3       0       0       0       0
  1078 ;;Total ram usage:        3 bytes
  1079 ;; Hardware stack levels used: 1
  1080 ;; Hardware stack levels required when called: 1
  1081 ;; This function calls:
  1082 ;;		_lcd_put_nibble
  1083 ;; This function is called by:
  1084 ;;		_lcd_gotoxy
  1085 ;;		_lcd_putc
  1086 ;;		_lcd_init
  1087 ;;		_lcd_ShiftLeft
  1088 ;;		_lcd_ShiftRight
  1089 ;; This function uses a non-reentrant model
  1090 ;;
  1091                           
  1092     0694                     _lcd_put_byte:	
  1093                           ;psect for function _lcd_put_byte
  1094                           
  1095                           
  1096                           ;incstack = 0
  1097                           ; Regs used in _lcd_put_byte: [wreg+status,2+status,0+pclath+cstack]
  1098                           ;lcd_put_byte@rs stored from wreg
  1099     0694  00F5               	movwf	lcd_put_byte@rs
  1100     0695                     l881:
  1101                           
  1102                           ;lcd.c: 134: void lcd_put_byte(unsigned char rs, unsigned char b);lcd.c: 135: {;lcd.c: 1
      +                          39:  TRISD4 = 0;
  1103     0695  1683               	bsf	3,5	;RP0=1, select bank1
  1104     0696  1303               	bcf	3,6	;RP1=0, select bank1
  1105     0697  1208               	bcf	8,4	;volatile
  1106                           
  1107                           ;lcd.c: 140:  TRISD5 = 0;
  1108     0698  1288               	bcf	8,5	;volatile
  1109                           
  1110                           ;lcd.c: 141:  TRISD6 = 0;
  1111     0699  1308               	bcf	8,6	;volatile
  1112                           
  1113                           ;lcd.c: 142:  TRISD7 = 0;
  1114     069A  1388               	bcf	8,7	;volatile
  1115     069B                     l883:
  1116                           
  1117                           ;lcd.c: 144:  if(rs)
  1118     069B  0875               	movf	lcd_put_byte@rs,w
  1119     069C  1903               	btfsc	3,2
  1120     069D  2E9F               	goto	u341
  1121     069E  2EA0               	goto	u340
  1122     069F                     u341:
  1123     069F  2EA4               	goto	l56
  1124     06A0                     u340:
  1125     06A0                     l885:
  1126                           
  1127                           ;lcd.c: 145:   RD1 = 1;
  1128     06A0  1283               	bcf	3,5	;RP0=0, select bank0
  1129     06A1  1303               	bcf	3,6	;RP1=0, select bank0
  1130     06A2  1488               	bsf	8,1	;volatile
  1131     06A3  2EA7               	goto	l887
  1132     06A4                     l56:	
  1133                           ;lcd.c: 146:  else
  1134                           
  1135                           
  1136                           ;lcd.c: 147:   RD1 = 0;
  1137     06A4  1283               	bcf	3,5	;RP0=0, select bank0
  1138     06A5  1303               	bcf	3,6	;RP1=0, select bank0
  1139     06A6  1088               	bcf	8,1	;volatile
  1140     06A7                     l887:
  1141                           
  1142                           ;lcd.c: 148:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  1143     06A7  3006               	movlw	6
  1144     06A8  00F4               	movwf	??_lcd_put_byte
  1145     06A9                     u547:
  1146     06A9  0BF4               	decfsz	??_lcd_put_byte,f
  1147     06AA  2EA9               	goto	u547
  1148     06AB  0000               	nop
  1149     06AC                     l889:
  1150                           
  1151                           ;lcd.c: 150:  RD2 = 0;
  1152     06AC  1283               	bcf	3,5	;RP0=0, select bank0
  1153     06AD  1303               	bcf	3,6	;RP1=0, select bank0
  1154     06AE  1108               	bcf	8,2	;volatile
  1155                           
  1156                           ;lcd.c: 151:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  1157     06AF  3006               	movlw	6
  1158     06B0  00F4               	movwf	??_lcd_put_byte
  1159     06B1                     u557:
  1160     06B1  0BF4               	decfsz	??_lcd_put_byte,f
  1161     06B2  2EB1               	goto	u557
  1162     06B3  0000               	nop
  1163     06B4                     l891:
  1164                           
  1165                           ;lcd.c: 153:  RD3 = 0;
  1166     06B4  1283               	bcf	3,5	;RP0=0, select bank0
  1167     06B5  1303               	bcf	3,6	;RP1=0, select bank0
  1168     06B6  1188               	bcf	8,3	;volatile
  1169     06B7                     l893:
  1170                           
  1171                           ;lcd.c: 155:  lcd_put_nibble(b >> 4);
  1172     06B7  0873               	movf	lcd_put_byte@b,w
  1173     06B8  00F4               	movwf	??_lcd_put_byte
  1174     06B9  3004               	movlw	4
  1175     06BA                     u355:
  1176     06BA  1003               	clrc
  1177     06BB  0CF4               	rrf	??_lcd_put_byte,f
  1178     06BC  3EFF               	addlw	-1
  1179     06BD  1D03               	skipz
  1180     06BE  2EBA               	goto	u355
  1181     06BF  0874               	movf	??_lcd_put_byte,w
  1182     06C0  120A  118A  26CD  120A  118A  	fcall	_lcd_put_nibble
  1183     06C5                     l895:
  1184                           
  1185                           ;lcd.c: 157:  lcd_put_nibble(b & 0xf);
  1186     06C5  0873               	movf	lcd_put_byte@b,w
  1187     06C6  390F               	andlw	15
  1188     06C7  120A  118A  26CD  120A  118A  	fcall	_lcd_put_nibble
  1189     06CC                     l58:
  1190     06CC  0008               	return
  1191     06CD                     __end_of_lcd_put_byte:
  1192                           
  1193                           	psect	text6
  1194     06CD                     __ptext6:	
  1195 ;; *************** function _lcd_put_nibble *****************
  1196 ;; Defined at:
  1197 ;;		line 103 in file "lcd.c"
  1198 ;; Parameters:    Size  Location     Type
  1199 ;;  b               1    wreg     unsigned char 
  1200 ;; Auto vars:     Size  Location     Type
  1201 ;;  b               1    1[COMMON] unsigned char 
  1202 ;;  temp            1    2[COMMON] struct _BYTE_VAL
  1203 ;; Return value:  Size  Location     Type
  1204 ;;                  1    wreg      void 
  1205 ;; Registers used:
  1206 ;;		wreg
  1207 ;; Tracked objects:
  1208 ;;		On entry : 0/0
  1209 ;;		On exit  : 0/0
  1210 ;;		Unchanged: 0/0
  1211 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1212 ;;      Params:         0       0       0       0       0
  1213 ;;      Locals:         2       0       0       0       0
  1214 ;;      Temps:          1       0       0       0       0
  1215 ;;      Totals:         3       0       0       0       0
  1216 ;;Total ram usage:        3 bytes
  1217 ;; Hardware stack levels used: 1
  1218 ;; This function calls:
  1219 ;;		Nothing
  1220 ;; This function is called by:
  1221 ;;		_lcd_put_byte
  1222 ;;		_lcd_init
  1223 ;; This function uses a non-reentrant model
  1224 ;;
  1225                           
  1226     06CD                     _lcd_put_nibble:	
  1227                           ;psect for function _lcd_put_nibble
  1228                           
  1229                           
  1230                           ;incstack = 0
  1231                           ; Regs used in _lcd_put_nibble: [wreg]
  1232                           ;lcd_put_nibble@b stored from wreg
  1233     06CD  00F1               	movwf	lcd_put_nibble@b
  1234     06CE                     l679:
  1235                           
  1236                           ;lcd.c: 103: void lcd_put_nibble(unsigned char b);lcd.c: 104: {;lcd.c: 106:  BYTE_VAL te
      +                          mp;;lcd.c: 109:  TRISD4 = 0;
  1237     06CE  1683               	bsf	3,5	;RP0=1, select bank1
  1238     06CF  1303               	bcf	3,6	;RP1=0, select bank1
  1239     06D0  1208               	bcf	8,4	;volatile
  1240                           
  1241                           ;lcd.c: 110:  TRISD5 = 0;
  1242     06D1  1288               	bcf	8,5	;volatile
  1243                           
  1244                           ;lcd.c: 111:  TRISD6 = 0;
  1245     06D2  1308               	bcf	8,6	;volatile
  1246                           
  1247                           ;lcd.c: 112:  TRISD7 = 0;
  1248     06D3  1388               	bcf	8,7	;volatile
  1249     06D4                     l681:
  1250                           
  1251                           ;lcd.c: 114:  temp.Val = b;
  1252     06D4  0871               	movf	lcd_put_nibble@b,w
  1253     06D5  00F2               	movwf	lcd_put_nibble@temp
  1254     06D6                     l683:
  1255                           
  1256                           ;lcd.c: 116:  RD4 = temp.bits.b0;
  1257     06D6  1872               	btfsc	lcd_put_nibble@temp,0
  1258     06D7  2ED9               	goto	u11
  1259     06D8  2EDD               	goto	u10
  1260     06D9                     u11:
  1261     06D9  1283               	bcf	3,5	;RP0=0, select bank0
  1262     06DA  1303               	bcf	3,6	;RP1=0, select bank0
  1263     06DB  1608               	bsf	8,4	;volatile
  1264     06DC  2EE0               	goto	u24
  1265     06DD                     u10:
  1266     06DD  1283               	bcf	3,5	;RP0=0, select bank0
  1267     06DE  1303               	bcf	3,6	;RP1=0, select bank0
  1268     06DF  1208               	bcf	8,4	;volatile
  1269     06E0                     u24:
  1270     06E0                     l685:
  1271                           
  1272                           ;lcd.c: 117:  RD5 = temp.bits.b1;
  1273     06E0  18F2               	btfsc	lcd_put_nibble@temp,1
  1274     06E1  2EE3               	goto	u31
  1275     06E2  2EE7               	goto	u30
  1276     06E3                     u31:
  1277     06E3  1283               	bcf	3,5	;RP0=0, select bank0
  1278     06E4  1303               	bcf	3,6	;RP1=0, select bank0
  1279     06E5  1688               	bsf	8,5	;volatile
  1280     06E6  2EEA               	goto	u44
  1281     06E7                     u30:
  1282     06E7  1283               	bcf	3,5	;RP0=0, select bank0
  1283     06E8  1303               	bcf	3,6	;RP1=0, select bank0
  1284     06E9  1288               	bcf	8,5	;volatile
  1285     06EA                     u44:
  1286     06EA                     l687:
  1287                           
  1288                           ;lcd.c: 118:  RD6 = temp.bits.b2;
  1289     06EA  1972               	btfsc	lcd_put_nibble@temp,2
  1290     06EB  2EED               	goto	u51
  1291     06EC  2EF1               	goto	u50
  1292     06ED                     u51:
  1293     06ED  1283               	bcf	3,5	;RP0=0, select bank0
  1294     06EE  1303               	bcf	3,6	;RP1=0, select bank0
  1295     06EF  1708               	bsf	8,6	;volatile
  1296     06F0  2EF4               	goto	u64
  1297     06F1                     u50:
  1298     06F1  1283               	bcf	3,5	;RP0=0, select bank0
  1299     06F2  1303               	bcf	3,6	;RP1=0, select bank0
  1300     06F3  1308               	bcf	8,6	;volatile
  1301     06F4                     u64:
  1302     06F4                     l689:
  1303                           
  1304                           ;lcd.c: 119:  RD7 = temp.bits.b3;
  1305     06F4  19F2               	btfsc	lcd_put_nibble@temp,3
  1306     06F5  2EF7               	goto	u71
  1307     06F6  2EFB               	goto	u70
  1308     06F7                     u71:
  1309     06F7  1283               	bcf	3,5	;RP0=0, select bank0
  1310     06F8  1303               	bcf	3,6	;RP1=0, select bank0
  1311     06F9  1788               	bsf	8,7	;volatile
  1312     06FA  2EFE               	goto	u84
  1313     06FB                     u70:
  1314     06FB  1283               	bcf	3,5	;RP0=0, select bank0
  1315     06FC  1303               	bcf	3,6	;RP1=0, select bank0
  1316     06FD  1388               	bcf	8,7	;volatile
  1317     06FE                     u84:
  1318                           
  1319                           ;lcd.c: 121:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  1320     06FE  3006               	movlw	6
  1321     06FF  00F0               	movwf	??_lcd_put_nibble
  1322     0700                     u567:
  1323     0700  0BF0               	decfsz	??_lcd_put_nibble,f
  1324     0701  2F00               	goto	u567
  1325     0702  0000               	nop
  1326     0703                     l691:
  1327                           
  1328                           ;lcd.c: 122:  RD3 = 1;
  1329     0703  1283               	bcf	3,5	;RP0=0, select bank0
  1330     0704  1303               	bcf	3,6	;RP1=0, select bank0
  1331     0705  1588               	bsf	8,3	;volatile
  1332                           
  1333                           ;lcd.c: 123:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  1334     0706  3006               	movlw	6
  1335     0707  00F0               	movwf	??_lcd_put_nibble
  1336     0708                     u577:
  1337     0708  0BF0               	decfsz	??_lcd_put_nibble,f
  1338     0709  2F08               	goto	u577
  1339     070A  0000               	nop
  1340     070B                     l693:
  1341                           
  1342                           ;lcd.c: 124:  RD3 = 0;
  1343     070B  1283               	bcf	3,5	;RP0=0, select bank0
  1344     070C  1303               	bcf	3,6	;RP1=0, select bank0
  1345     070D  1188               	bcf	8,3	;volatile
  1346     070E                     l53:
  1347     070E  0008               	return
  1348     070F                     __end_of_lcd_put_nibble:
  1349                           
  1350                           	psect	text7
  1351     0664                     __ptext7:	
  1352 ;; *************** function _lcd_busy *****************
  1353 ;; Defined at:
  1354 ;;		line 18 in file "lcd.c"
  1355 ;; Parameters:    Size  Location     Type
  1356 ;;		None
  1357 ;; Auto vars:     Size  Location     Type
  1358 ;;  busy            1    1[COMMON] unsigned char 
  1359 ;; Return value:  Size  Location     Type
  1360 ;;                  1    wreg      unsigned char 
  1361 ;; Registers used:
  1362 ;;		wreg, status,2
  1363 ;; Tracked objects:
  1364 ;;		On entry : 0/0
  1365 ;;		On exit  : 0/0
  1366 ;;		Unchanged: 0/0
  1367 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1368 ;;      Params:         0       0       0       0       0
  1369 ;;      Locals:         1       0       0       0       0
  1370 ;;      Temps:          1       0       0       0       0
  1371 ;;      Totals:         2       0       0       0       0
  1372 ;;Total ram usage:        2 bytes
  1373 ;; Hardware stack levels used: 1
  1374 ;; This function calls:
  1375 ;;		Nothing
  1376 ;; This function is called by:
  1377 ;;		_lcd_gotoxy
  1378 ;;		_lcd_putc
  1379 ;;		_lcd_init
  1380 ;; This function uses a non-reentrant model
  1381 ;;
  1382                           
  1383     0664                     _lcd_busy:	
  1384                           ;psect for function _lcd_busy
  1385                           
  1386     0664                     l695:	
  1387                           ;incstack = 0
  1388                           ; Regs used in _lcd_busy: [wreg+status,2]
  1389                           
  1390                           
  1391                           ;lcd.c: 21: unsigned char busy;;lcd.c: 24:  TRISD4 = 1;
  1392     0664  1683               	bsf	3,5	;RP0=1, select bank1
  1393     0665  1303               	bcf	3,6	;RP1=0, select bank1
  1394     0666  1608               	bsf	8,4	;volatile
  1395                           
  1396                           ;lcd.c: 25:  TRISD5 = 1;
  1397     0667  1688               	bsf	8,5	;volatile
  1398                           
  1399                           ;lcd.c: 26:  TRISD6 = 1;
  1400     0668  1708               	bsf	8,6	;volatile
  1401                           
  1402                           ;lcd.c: 27:  TRISD7 = 1;
  1403     0669  1788               	bsf	8,7	;volatile
  1404                           
  1405                           ;lcd.c: 29:  RD2 = 1;
  1406     066A  1283               	bcf	3,5	;RP0=0, select bank0
  1407     066B  1303               	bcf	3,6	;RP1=0, select bank0
  1408     066C  1508               	bsf	8,2	;volatile
  1409                           
  1410                           ;lcd.c: 30:  RD1 = 0;
  1411     066D  1088               	bcf	8,1	;volatile
  1412     066E                     l697:
  1413                           
  1414                           ;lcd.c: 31:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  1415     066E  3006               	movlw	6
  1416     066F  00F0               	movwf	??_lcd_busy
  1417     0670                     u587:
  1418     0670  0BF0               	decfsz	??_lcd_busy,f
  1419     0671  2E70               	goto	u587
  1420     0672  0000               	nop
  1421     0673                     l699:
  1422                           
  1423                           ;lcd.c: 32:  RD3 = 1;
  1424     0673  1283               	bcf	3,5	;RP0=0, select bank0
  1425     0674  1303               	bcf	3,6	;RP1=0, select bank0
  1426     0675  1588               	bsf	8,3	;volatile
  1427                           
  1428                           ;lcd.c: 33:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  1429     0676  3006               	movlw	6
  1430     0677  00F0               	movwf	??_lcd_busy
  1431     0678                     u597:
  1432     0678  0BF0               	decfsz	??_lcd_busy,f
  1433     0679  2E78               	goto	u597
  1434     067A  0000               	nop
  1435     067B                     l701:
  1436                           
  1437                           ;lcd.c: 35:  busy = RD7;
  1438     067B  3000               	movlw	0
  1439     067C  1283               	bcf	3,5	;RP0=0, select bank0
  1440     067D  1303               	bcf	3,6	;RP1=0, select bank0
  1441     067E  1B88               	btfsc	8,7	;volatile
  1442     067F  3001               	movlw	1
  1443     0680  00F1               	movwf	lcd_busy@busy
  1444     0681                     l703:
  1445                           
  1446                           ;lcd.c: 37:  RD3 = 0;
  1447     0681  1188               	bcf	8,3	;volatile
  1448     0682                     l705:
  1449                           
  1450                           ;lcd.c: 38:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  1451     0682  3006               	movlw	6
  1452     0683  00F0               	movwf	??_lcd_busy
  1453     0684                     u607:
  1454     0684  0BF0               	decfsz	??_lcd_busy,f
  1455     0685  2E84               	goto	u607
  1456     0686  0000               	nop
  1457     0687                     l707:
  1458                           
  1459                           ;lcd.c: 39:  RD3 = 1;
  1460     0687  1283               	bcf	3,5	;RP0=0, select bank0
  1461     0688  1303               	bcf	3,6	;RP1=0, select bank0
  1462     0689  1588               	bsf	8,3	;volatile
  1463     068A                     l709:
  1464                           
  1465                           ;lcd.c: 40:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  1466     068A  3006               	movlw	6
  1467     068B  00F0               	movwf	??_lcd_busy
  1468     068C                     u617:
  1469     068C  0BF0               	decfsz	??_lcd_busy,f
  1470     068D  2E8C               	goto	u617
  1471     068E  0000               	nop
  1472     068F                     l711:
  1473                           
  1474                           ;lcd.c: 41:  RD3 = 0;
  1475     068F  1283               	bcf	3,5	;RP0=0, select bank0
  1476     0690  1303               	bcf	3,6	;RP1=0, select bank0
  1477     0691  1188               	bcf	8,3	;volatile
  1478     0692                     l713:
  1479                           
  1480                           ;lcd.c: 43:  return busy;
  1481     0692  0871               	movf	lcd_busy@busy,w
  1482     0693                     l45:
  1483     0693  0008               	return
  1484     0694                     __end_of_lcd_busy:
  1485     007E                     btemp	set	126	;btemp
  1486     007E                     wtemp0	set	126
  1487                           
  1488                           	psect	config
  1489                           
  1490                           ;Config register CONFIG1 @ 0x2007
  1491                           ;	Oscillator Selection bits
  1492                           ;	FOSC = HS, HS oscillator: High-speed crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1
      +                          /CLKIN
  1493                           ;	Watchdog Timer Enable bit
  1494                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1495                           ;	Power-up Timer Enable bit
  1496                           ;	PWRTE = OFF, PWRT disabled
  1497                           ;	RE3/MCLR pin function select bit
  1498                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1499                           ;	Code Protection bit
  1500                           ;	CP = OFF, Program memory code protection is disabled
  1501                           ;	Data Code Protection bit
  1502                           ;	CPD = OFF, Data memory code protection is disabled
  1503                           ;	Brown Out Reset Selection bits
  1504                           ;	BOREN = OFF, BOR disabled
  1505                           ;	Internal External Switchover bit
  1506                           ;	IESO = ON, Internal/External Switchover mode is enabled
  1507                           ;	Fail-Safe Clock Monitor Enabled bit
  1508                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1509                           ;	Low Voltage Programming Enable bit
  1510                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1511                           ;	In-Circuit Debugger Mode bit
  1512                           ;	DEBUG = 0x1, unprogrammed default
  1513     2007                     	org	8199
  1514     2007  24D2               	dw	9426
  1515                           
  1516                           ;Config register CONFIG2 @ 0x2008
  1517                           ;	Brown-out Reset Selection bit
  1518                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1519                           ;	Flash Program Memory Self Write Enable bits
  1520                           ;	WRT = OFF, Write protection off
  1521     2008                     	org	8200
  1522     2008  3FFF               	dw	16383

Data Sizes:
    Strings     32
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      11
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    lcd_puts@s	PTR const unsigned char  size(1) Largest target is 32
		 -> STR_1(CODE[32]), 


Critical Paths under _main in COMMON

    _main->_lcd_puts
    _lcd_puts->_lcd_putc
    _lcd_putc->_lcd_gotoxy
    _lcd_gotoxy->_lcd_put_byte
    _lcd_init->_lcd_put_byte
    _lcd_put_byte->_lcd_put_nibble

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    3090
                           _lcd_init
                           _lcd_puts
 ---------------------------------------------------------------------------------
 (1) _lcd_puts                                             1     1      0    2099
                                             10 COMMON     1     1      0
                           _lcd_putc
 ---------------------------------------------------------------------------------
 (2) _lcd_putc                                             1     1      0    2021
                                              9 COMMON     1     1      0
                           _lcd_busy
                         _lcd_gotoxy
                       _lcd_put_byte
 ---------------------------------------------------------------------------------
 (3) _lcd_gotoxy                                           3     2      1    1061
                                              6 COMMON     3     2      1
                           _lcd_busy
                       _lcd_put_byte
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             3     3      0     991
                                              6 COMMON     2     2      0
                           _lcd_busy
                       _lcd_put_byte
                     _lcd_put_nibble
 ---------------------------------------------------------------------------------
 (3) _lcd_put_byte                                         3     2      1     901
                                              3 COMMON     3     2      1
                     _lcd_put_nibble
 ---------------------------------------------------------------------------------
 (4) _lcd_put_nibble                                       3     3      0      75
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (4) _lcd_busy                                             2     2      0      15
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _lcd_init
     _lcd_busy
     _lcd_put_byte
       _lcd_put_nibble
     _lcd_put_nibble
   _lcd_puts
     _lcd_putc
       _lcd_busy
       _lcd_gotoxy
         _lcd_busy
         _lcd_put_byte
       _lcd_put_byte

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      B       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Thu Sep 05 09:35:14 2024

                      l9 061F                        pc 0002                       l10 061F  
                     l45 0693                       l53 070E                       l56 06A4  
                     l58 06CC                       l66 0663                       l90 0641  
                     l84 075E                       u10 06DD                       u11 06D9  
                     u30 06E7                       u31 06E3                       u24 06E0  
                     u50 06F1                       u51 06ED                       u44 06EA  
                     u70 06FB                       u71 06F7                       u64 06F4  
                     u84 06FE   __end_of_lcd_put_nibble 070F                       fsr 0004  
          ?_lcd_put_byte 0073                      l108 07FB                      l701 067B  
                    l711 068F                      l703 0681                      l713 0692  
                    l705 0682                      l707 0687                      l709 068A  
                    l901 064B                      l903 064C                      l911 0711  
                    l681 06D4                      l905 0650                      l921 0740  
                    l913 0719                      l691 0703                      l683 06D6  
                    l931 0771                      l907 0659                      l923 0748  
                    l915 0724                      l693 070B                      l685 06E0  
                    l941 078B                      l933 0774                      l917 072D  
                    l925 0753                      l909 0710                      l695 0664  
                    l687 06EA                      l679 06CE                      l951 07BB  
                    l943 0794                      l935 0775                      l927 075F  
                    l919 0735                      l697 066E                      l689 06F4  
                    l881 0695                      l961 07E9                      l953 07C5  
                    l945 07A3                      l937 0776                      l929 0768  
                    l699 0673                      l891 06B4                      l883 069B  
                    l963 07F1                      l955 07CD                      l947 07A9  
                    l939 077C                      l971 0635                      l893 06B7  
                    l885 06A0                      l957 07D7                      l949 07B3  
                    l965 0624                      l895 06C5                      l887 06A7  
                    l959 07DF                      l967 0625                      l889 06AC  
                    l897 0643                      l969 0631                      l977 0614  
                    l899 0648                      l979 0619                      _RD1 0041  
                    _RD2 0042                      _RD3 0043                      _RD4 0044  
                    _RD5 0045                      _RD6 0046                      _RD7 0047  
                    u400 0752                      u401 0751                      u410 07B3  
                    u411 07B2                      u340 06A0                      u420 07C5  
                    u341 069F                      u421 07C4                      u430 07D7  
                    u431 07D6                      u440 07E9                      u360 0648  
                    u441 07E8                      u361 0647                      u450 07FB  
                    u370 0663                      u355 06BA                      u451 07FA  
                    u507 076C                      u371 0662                      u380 0723  
                    u460 0641                      u517 0780                      u381 0722  
                    u461 0640                      u390 073F                      u607 0684  
                    u527 078F                      u391 073E                      u617 068C  
                    u537 079E                      u547 06A9                      u557 06B1  
                    u567 0700                      u577 0708                      u587 0670  
                    u597 0678                      fsr0 0004                     STR_1 0009  
                   _main 0614             lcd_busy@busy 0071                     btemp 007E  
                   start 0000          ?_lcd_put_nibble 0070           ??_lcd_put_byte 0074  
                  ?_main 0070                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 07FC             __end_of_main 0623  
          lcd_gotoxy@col 0077            lcd_gotoxy@row 0076       lcd_put_nibble@temp 0072  
                 ??_main 007B                   _TRISD1 0441                   _TRISD2 0442  
                 _TRISD3 0443                   _TRISD4 0444                   _TRISD5 0445  
                 _TRISD6 0446                   _TRISD7 0447         __end_of_lcd_busy 0694  
       __end_of_lcd_init 07FC         __end_of_lcd_putc 075F         __end_of_lcd_puts 0642  
          lcd_put_byte@b 0073  __end_of__initialization 07FC     __end_of_lcd_put_byte 06CD  
         __pcstackCOMMON 0070        lcd_gotoxy@address 0078         ??_lcd_put_nibble 0070  
             __pmaintext 0614               _lcd_gotoxy 0642                ?_lcd_busy 0070  
              ?_lcd_init 0070                ?_lcd_putc 0070                ?_lcd_puts 0070  
             __stringtab 0003                  __ptext1 0623                  __ptext2 070F  
                __ptext3 0642                  __ptext4 075F                  __ptext5 0694  
                __ptext6 06CD                  __ptext7 0664               ??_lcd_busy 0070  
             ??_lcd_init 0076               ??_lcd_putc 0079               ??_lcd_puts 007A  
   end_of_initialization 07FC           lcd_put_byte@rs 0075             _lcd_put_byte 0694  
            ?_lcd_gotoxy 0076      start_initialization 07FC                ___latbits 0002  
              __pstrings 0003              __stringbase 0008                lcd_putc@c 0079  
              lcd_puts@s 007A             ??_lcd_gotoxy 0077       __end_of_lcd_gotoxy 0664  
     __end_of__stringtab 0009                 _lcd_busy 0664                 _lcd_init 075F  
               _lcd_putc 070F                 _lcd_puts 0623          lcd_put_nibble@b 0071  
              stringcode 0003           _lcd_put_nibble 06CD                 stringdir 0003  
               stringtab 0003  
