

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Thu Sep 05 09:54:46 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	text6,local,class=CODE,merge=1,delta=2
    14                           	psect	text7,local,class=CODE,merge=1,delta=2
    15                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    16                           	dabs	1,0x7E,2
    17     0000                     
    18                           ; Generated 12/10/2023 GMT
    19                           ; 
    20                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution. Publication is not required when
    34                           ;        this file is used in an embedded application.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC16F887 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52     0000                     	;# 
    53     0001                     	;# 
    54     0002                     	;# 
    55     0003                     	;# 
    56     0004                     	;# 
    57     0005                     	;# 
    58     0006                     	;# 
    59     0007                     	;# 
    60     0008                     	;# 
    61     0009                     	;# 
    62     000A                     	;# 
    63     000B                     	;# 
    64     000C                     	;# 
    65     000D                     	;# 
    66     000E                     	;# 
    67     000E                     	;# 
    68     000F                     	;# 
    69     0010                     	;# 
    70     0011                     	;# 
    71     0012                     	;# 
    72     0013                     	;# 
    73     0014                     	;# 
    74     0015                     	;# 
    75     0015                     	;# 
    76     0016                     	;# 
    77     0017                     	;# 
    78     0018                     	;# 
    79     0019                     	;# 
    80     001A                     	;# 
    81     001B                     	;# 
    82     001B                     	;# 
    83     001C                     	;# 
    84     001D                     	;# 
    85     001E                     	;# 
    86     001F                     	;# 
    87     0081                     	;# 
    88     0085                     	;# 
    89     0086                     	;# 
    90     0087                     	;# 
    91     0088                     	;# 
    92     0089                     	;# 
    93     008C                     	;# 
    94     008D                     	;# 
    95     008E                     	;# 
    96     008F                     	;# 
    97     0090                     	;# 
    98     0091                     	;# 
    99     0092                     	;# 
   100     0093                     	;# 
   101     0093                     	;# 
   102     0093                     	;# 
   103     0094                     	;# 
   104     0095                     	;# 
   105     0096                     	;# 
   106     0097                     	;# 
   107     0098                     	;# 
   108     0099                     	;# 
   109     009A                     	;# 
   110     009B                     	;# 
   111     009C                     	;# 
   112     009D                     	;# 
   113     009E                     	;# 
   114     009F                     	;# 
   115     0105                     	;# 
   116     0107                     	;# 
   117     0108                     	;# 
   118     0109                     	;# 
   119     010C                     	;# 
   120     010C                     	;# 
   121     010D                     	;# 
   122     010E                     	;# 
   123     010F                     	;# 
   124     0185                     	;# 
   125     0187                     	;# 
   126     0188                     	;# 
   127     0189                     	;# 
   128     018C                     	;# 
   129     018D                     	;# 
   130     0000                     	;# 
   131     0001                     	;# 
   132     0002                     	;# 
   133     0003                     	;# 
   134     0004                     	;# 
   135     0005                     	;# 
   136     0006                     	;# 
   137     0007                     	;# 
   138     0008                     	;# 
   139     0009                     	;# 
   140     000A                     	;# 
   141     000B                     	;# 
   142     000C                     	;# 
   143     000D                     	;# 
   144     000E                     	;# 
   145     000E                     	;# 
   146     000F                     	;# 
   147     0010                     	;# 
   148     0011                     	;# 
   149     0012                     	;# 
   150     0013                     	;# 
   151     0014                     	;# 
   152     0015                     	;# 
   153     0015                     	;# 
   154     0016                     	;# 
   155     0017                     	;# 
   156     0018                     	;# 
   157     0019                     	;# 
   158     001A                     	;# 
   159     001B                     	;# 
   160     001B                     	;# 
   161     001C                     	;# 
   162     001D                     	;# 
   163     001E                     	;# 
   164     001F                     	;# 
   165     0081                     	;# 
   166     0085                     	;# 
   167     0086                     	;# 
   168     0087                     	;# 
   169     0088                     	;# 
   170     0089                     	;# 
   171     008C                     	;# 
   172     008D                     	;# 
   173     008E                     	;# 
   174     008F                     	;# 
   175     0090                     	;# 
   176     0091                     	;# 
   177     0092                     	;# 
   178     0093                     	;# 
   179     0093                     	;# 
   180     0093                     	;# 
   181     0094                     	;# 
   182     0095                     	;# 
   183     0096                     	;# 
   184     0097                     	;# 
   185     0098                     	;# 
   186     0099                     	;# 
   187     009A                     	;# 
   188     009B                     	;# 
   189     009C                     	;# 
   190     009D                     	;# 
   191     009E                     	;# 
   192     009F                     	;# 
   193     0105                     	;# 
   194     0107                     	;# 
   195     0108                     	;# 
   196     0109                     	;# 
   197     010C                     	;# 
   198     010C                     	;# 
   199     010D                     	;# 
   200     010E                     	;# 
   201     010F                     	;# 
   202     0185                     	;# 
   203     0187                     	;# 
   204     0188                     	;# 
   205     0189                     	;# 
   206     018C                     	;# 
   207     018D                     	;# 
   208     0000                     	;# 
   209     0001                     	;# 
   210     0002                     	;# 
   211     0003                     	;# 
   212     0004                     	;# 
   213     0005                     	;# 
   214     0006                     	;# 
   215     0007                     	;# 
   216     0008                     	;# 
   217     0009                     	;# 
   218     000A                     	;# 
   219     000B                     	;# 
   220     000C                     	;# 
   221     000D                     	;# 
   222     000E                     	;# 
   223     000E                     	;# 
   224     000F                     	;# 
   225     0010                     	;# 
   226     0011                     	;# 
   227     0012                     	;# 
   228     0013                     	;# 
   229     0014                     	;# 
   230     0015                     	;# 
   231     0015                     	;# 
   232     0016                     	;# 
   233     0017                     	;# 
   234     0018                     	;# 
   235     0019                     	;# 
   236     001A                     	;# 
   237     001B                     	;# 
   238     001B                     	;# 
   239     001C                     	;# 
   240     001D                     	;# 
   241     001E                     	;# 
   242     001F                     	;# 
   243     0081                     	;# 
   244     0085                     	;# 
   245     0086                     	;# 
   246     0087                     	;# 
   247     0088                     	;# 
   248     0089                     	;# 
   249     008C                     	;# 
   250     008D                     	;# 
   251     008E                     	;# 
   252     008F                     	;# 
   253     0090                     	;# 
   254     0091                     	;# 
   255     0092                     	;# 
   256     0093                     	;# 
   257     0093                     	;# 
   258     0093                     	;# 
   259     0094                     	;# 
   260     0095                     	;# 
   261     0096                     	;# 
   262     0097                     	;# 
   263     0098                     	;# 
   264     0099                     	;# 
   265     009A                     	;# 
   266     009B                     	;# 
   267     009C                     	;# 
   268     009D                     	;# 
   269     009E                     	;# 
   270     009F                     	;# 
   271     0105                     	;# 
   272     0107                     	;# 
   273     0108                     	;# 
   274     0109                     	;# 
   275     010C                     	;# 
   276     010C                     	;# 
   277     010D                     	;# 
   278     010E                     	;# 
   279     010F                     	;# 
   280     0185                     	;# 
   281     0187                     	;# 
   282     0188                     	;# 
   283     0189                     	;# 
   284     018C                     	;# 
   285     018D                     	;# 
   286                           
   287                           	psect	strings
   288     0003                     __pstrings:
   289     0003                     stringtab:
   290     0003                     __stringtab:
   291     0003                     stringcode:	
   292                           ;	String table - string pointers are 1 byte each
   293                           
   294     0003                     stringdir:
   295     0003  3000               	movlw	high stringdir
   296     0004  008A               	movwf	10
   297     0005  0804               	movf	4,w
   298     0006  0A84               	incf	4,f
   299     0007  0782               	addwf	2,f
   300     0008                     __stringbase:
   301     0008  3400               	retlw	0
   302     0009                     __end_of__stringtab:
   303     0009                     _cgram_dat:
   304     0009  340E               	retlw	14
   305     000A  3409               	retlw	9
   306     000B  3409               	retlw	9
   307     000C  341D               	retlw	29
   308     000D  3409               	retlw	9
   309     000E  3409               	retlw	9
   310     000F  340E               	retlw	14
   311     0010  3400               	retlw	0
   312     0011  340C               	retlw	12
   313     0012  3412               	retlw	18
   314     0013  340C               	retlw	12
   315     0014  341E               	retlw	30
   316     0015  3410               	retlw	16
   317     0016  341E               	retlw	30
   318     0017  3404               	retlw	4
   319     0018  3400               	retlw	0
   320     0019  340C               	retlw	12
   321     001A  3402               	retlw	2
   322     001B  3405               	retlw	5
   323     001C  3412               	retlw	18
   324     001D  3412               	retlw	18
   325     001E  3412               	retlw	18
   326     001F  340C               	retlw	12
   327     0020  3400               	retlw	0
   328     0021  3499               	retlw	153
   329     0022                     __end_of_cgram_dat:
   330     0022                     _dat_line2:
   331     0022  3443               	retlw	67
   332     0023  344E               	retlw	78
   333     0024  3420               	retlw	32
   334     0025  3400               	retlw	0
   335     0026  3469               	retlw	105
   336     0027  3401               	retlw	1
   337     0028  346E               	retlw	110
   338     0029  3420               	retlw	32
   339     002A  3454               	retlw	84
   340     002B  3402               	retlw	2
   341     002C                     __end_of_dat_line2:
   342     002C                     _dat_line1:
   343     002C  344B               	retlw	75
   344     002D  3448               	retlw	72
   345     002E  344F               	retlw	79
   346     002F  3441               	retlw	65
   347     0030  3400               	retlw	0
   348     0031                     __end_of_dat_line1:
   349     0044                     _RD4	set	68
   350     0045                     _RD5	set	69
   351     0046                     _RD6	set	70
   352     0047                     _RD7	set	71
   353     0043                     _RD3	set	67
   354     0041                     _RD1	set	65
   355     0042                     _RD2	set	66
   356     0442                     _TRISD2	set	1090
   357     0441                     _TRISD1	set	1089
   358     0443                     _TRISD3	set	1091
   359     0447                     _TRISD7	set	1095
   360     0446                     _TRISD6	set	1094
   361     0445                     _TRISD5	set	1093
   362     0444                     _TRISD4	set	1092
   363                           
   364                           	psect	cinit
   365     07FC                     start_initialization:	
   366                           ; #config settings
   367                           
   368     07FC                     __initialization:
   369     07FC                     end_of_initialization:	
   370                           ;End of C runtime variable initialization code
   371                           
   372     07FC                     __end_of__initialization:
   373     07FC  0183               	clrf	3
   374     07FD  120A  118A  2EE5   	ljmp	_main	;jump to C main() function
   375                           
   376                           	psect	cstackCOMMON
   377     0070                     __pcstackCOMMON:
   378     0070                     ?_lcd_init:
   379     0070                     ?_lcd_busy:	
   380                           ; 1 bytes @ 0x0
   381                           
   382     0070                     ??_lcd_busy:	
   383                           ; 1 bytes @ 0x0
   384                           
   385     0070                     ?_lcd_putc:	
   386                           ; 1 bytes @ 0x0
   387                           
   388     0070                     ?_lcd_puts:	
   389                           ; 1 bytes @ 0x0
   390                           
   391     0070                     ?_main:	
   392                           ; 1 bytes @ 0x0
   393                           
   394     0070                     ?_lcd_put_nibble:	
   395                           ; 1 bytes @ 0x0
   396                           
   397     0070                     ??_lcd_put_nibble:	
   398                           ; 1 bytes @ 0x0
   399                           
   400                           
   401                           ; 1 bytes @ 0x0
   402     0070                     	ds	1
   403     0071                     lcd_busy@busy:
   404     0071                     lcd_put_nibble@b:	
   405                           ; 1 bytes @ 0x1
   406                           
   407                           
   408                           ; 1 bytes @ 0x1
   409     0071                     	ds	1
   410     0072                     lcd_put_nibble@temp:
   411                           
   412                           ; 1 bytes @ 0x2
   413     0072                     	ds	1
   414     0073                     ?_lcd_put_byte:
   415     0073                     lcd_put_byte@b:	
   416                           ; 1 bytes @ 0x3
   417                           
   418                           
   419                           ; 1 bytes @ 0x3
   420     0073                     	ds	1
   421     0074                     ??_lcd_put_byte:
   422                           
   423                           ; 1 bytes @ 0x4
   424     0074                     	ds	1
   425     0075                     lcd_put_byte@rs:
   426                           
   427                           ; 1 bytes @ 0x5
   428     0075                     	ds	1
   429     0076                     ??_lcd_init:
   430     0076                     ?_lcd_gotoxy:	
   431                           ; 1 bytes @ 0x6
   432                           
   433     0076                     lcd_gotoxy@row:	
   434                           ; 1 bytes @ 0x6
   435                           
   436                           
   437                           ; 1 bytes @ 0x6
   438     0076                     	ds	1
   439     0077                     ??_lcd_gotoxy:
   440     0077                     lcd_gotoxy@col:	
   441                           ; 1 bytes @ 0x7
   442                           
   443                           
   444                           ; 1 bytes @ 0x7
   445     0077                     	ds	1
   446     0078                     lcd_gotoxy@address:
   447                           
   448                           ; 1 bytes @ 0x8
   449     0078                     	ds	1
   450     0079                     ??_lcd_putc:
   451     0079                     lcd_putc@c:	
   452                           ; 1 bytes @ 0x9
   453                           
   454                           
   455                           ; 1 bytes @ 0x9
   456     0079                     	ds	1
   457     007A                     ??_lcd_puts:
   458     007A                     lcd_puts@s:	
   459                           ; 1 bytes @ 0xA
   460                           
   461                           
   462                           ; 1 bytes @ 0xA
   463     007A                     	ds	1
   464     007B                     ??_main:
   465     007B                     main@i:	
   466                           ; 1 bytes @ 0xB
   467                           
   468                           
   469                           ; 1 bytes @ 0xB
   470     007B                     	ds	1
   471                           
   472                           	psect	maintext
   473     06E5                     __pmaintext:	
   474 ;;
   475 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   476 ;;
   477 ;; *************** function _main *****************
   478 ;; Defined at:
   479 ;;		line 34 in file "VD3.c"
   480 ;; Parameters:    Size  Location     Type
   481 ;;		None
   482 ;; Auto vars:     Size  Location     Type
   483 ;;  i               1   11[COMMON] unsigned char 
   484 ;; Return value:  Size  Location     Type
   485 ;;                  1    wreg      void 
   486 ;; Registers used:
   487 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   488 ;; Tracked objects:
   489 ;;		On entry : B00/0
   490 ;;		On exit  : 0/0
   491 ;;		Unchanged: 0/0
   492 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   493 ;;      Params:         0       0       0       0       0
   494 ;;      Locals:         1       0       0       0       0
   495 ;;      Temps:          0       0       0       0       0
   496 ;;      Totals:         1       0       0       0       0
   497 ;;Total ram usage:        1 bytes
   498 ;; Hardware stack levels required when called: 5
   499 ;; This function calls:
   500 ;;		_lcd_busy
   501 ;;		_lcd_gotoxy
   502 ;;		_lcd_init
   503 ;;		_lcd_put_byte
   504 ;;		_lcd_putc
   505 ;;		_lcd_puts
   506 ;; This function is called by:
   507 ;;		Startup code after reset
   508 ;; This function uses a non-reentrant model
   509 ;;
   510                           
   511     06E5                     _main:	
   512                           ;psect for function _main
   513                           
   514     06E5                     l1032:	
   515                           ;incstack = 0
   516                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   517                           
   518                           
   519                           ;VD3.c: 36: unsigned char i;;VD3.c: 37: lcd_init();
   520     06E5  120A  118A  275F  120A  118A  	fcall	_lcd_init
   521     06EA                     l1034:
   522                           
   523                           ;VD3.c: 39: i = 0;
   524     06EA  01FB               	clrf	main@i
   525     06EB                     l1036:
   526                           
   527                           ;VD3.c: 40: lcd_put_byte(0,0x40);
   528     06EB  3040               	movlw	64
   529     06EC  00F3               	movwf	lcd_put_byte@b
   530     06ED  3000               	movlw	0
   531     06EE  120A  118A  261A  120A  118A  	fcall	_lcd_put_byte
   532     06F3                     l1038:	
   533                           ;VD3.c: 41: while(lcd_busy());
   534                           
   535     06F3  120A  118A  25EA  120A  118A  	fcall	_lcd_busy
   536     06F8  3A00               	xorlw	0
   537     06F9  1D03               	skipz
   538     06FA  2EFC               	goto	u511
   539     06FB  2EFD               	goto	u510
   540     06FC                     u511:
   541     06FC  2EF3               	goto	l1038
   542     06FD                     u510:
   543     06FD  2F1B               	goto	l1046
   544     06FE                     l1040:
   545                           
   546                           ;VD3.c: 43: {;VD3.c: 44: lcd_put_byte(1,cgram_dat[i]);
   547     06FE  087B               	movf	main@i,w
   548     06FF  3E01               	addlw	low ((_cgram_dat-__stringbase)| (0+32768))
   549     0700  0084               	movwf	4
   550     0701  120A  118A  2003  120A  118A  	fcall	stringdir
   551     0706  00F3               	movwf	lcd_put_byte@b
   552     0707  3001               	movlw	1
   553     0708  120A  118A  261A  120A  118A  	fcall	_lcd_put_byte
   554     070D                     l1042:	
   555                           ;VD3.c: 45: while(lcd_busy());
   556                           
   557     070D  120A  118A  25EA  120A  118A  	fcall	_lcd_busy
   558     0712  3A00               	xorlw	0
   559     0713  1D03               	skipz
   560     0714  2F16               	goto	u521
   561     0715  2F17               	goto	u520
   562     0716                     u521:
   563     0716  2F0D               	goto	l1042
   564     0717                     u520:
   565     0717                     l1044:
   566                           
   567                           ;VD3.c: 46: i++;
   568     0717  3001               	movlw	1
   569     0718  00FF               	movwf	btemp+1
   570     0719  087F               	movf	btemp+1,w
   571     071A  07FB               	addwf	main@i,f
   572     071B                     l1046:
   573                           
   574                           ;VD3.c: 42: while(cgram_dat[i]!=0x99)
   575     071B  087B               	movf	main@i,w
   576     071C  3E01               	addlw	low ((_cgram_dat-__stringbase)| (0+32768))
   577     071D  0084               	movwf	4
   578     071E  120A  118A  2003  120A  118A  	fcall	stringdir
   579     0723  3A99               	xorlw	153
   580     0724  1D03               	skipz
   581     0725  2F27               	goto	u531
   582     0726  2F28               	goto	u530
   583     0727                     u531:
   584     0727  2EFE               	goto	l1040
   585     0728                     u530:
   586     0728                     l1048:
   587                           
   588                           ;VD3.c: 48: lcd_putc('\f');
   589     0728  300C               	movlw	12
   590     0729  120A  118A  2695  120A  118A  	fcall	_lcd_putc
   591     072E                     l1050:
   592                           
   593                           ;VD3.c: 49: lcd_gotoxy(5,0);
   594     072E  01F6               	clrf	lcd_gotoxy@row
   595     072F  3005               	movlw	5
   596     0730  120A  118A  25C8  120A  118A  	fcall	_lcd_gotoxy
   597     0735                     l1052:
   598                           
   599                           ;VD3.c: 50: lcd_puts(dat_line1);
   600     0735  3024               	movlw	(low ((_dat_line1-__stringbase)| (0+32768)))& (0+255)
   601     0736  120A  118A  25A9  120A  118A  	fcall	_lcd_puts
   602                           
   603                           ;VD3.c: 51: lcd_gotoxy(2,1);
   604     073B  01F6               	clrf	lcd_gotoxy@row
   605     073C  0AF6               	incf	lcd_gotoxy@row,f
   606     073D  3002               	movlw	2
   607     073E  120A  118A  25C8  120A  118A  	fcall	_lcd_gotoxy
   608     0743                     l1054:
   609                           
   610                           ;VD3.c: 52: for(i=0;i<=9;i++)
   611     0743  01FB               	clrf	main@i
   612     0744                     l1060:
   613                           
   614                           ;VD3.c: 53: lcd_putc(dat_line2[i]);
   615     0744  087B               	movf	main@i,w
   616     0745  3E1A               	addlw	low ((_dat_line2-__stringbase)| (0+32768))
   617     0746  0084               	movwf	4
   618     0747  120A  118A  2003  120A  118A  	fcall	stringdir
   619     074C  120A  118A  2695  120A  118A  	fcall	_lcd_putc
   620     0751                     l1062:
   621     0751  3001               	movlw	1
   622     0752  00FF               	movwf	btemp+1
   623     0753  087F               	movf	btemp+1,w
   624     0754  07FB               	addwf	main@i,f
   625     0755                     l1064:
   626     0755  300A               	movlw	10
   627     0756  027B               	subwf	main@i,w
   628     0757  1C03               	skipc
   629     0758  2F5A               	goto	u541
   630     0759  2F5B               	goto	u540
   631     075A                     u541:
   632     075A  2F44               	goto	l1060
   633     075B                     u540:
   634     075B                     l34:	
   635                           ;VD3.c: 54: while(1);}
   636                           
   637     075B  2F5B               	goto	l34
   638     075C  120A  118A  2800   	ljmp	start
   639     075F                     __end_of_main:
   640                           
   641                           	psect	text1
   642     05A9                     __ptext1:	
   643 ;; *************** function _lcd_puts *****************
   644 ;; Defined at:
   645 ;;		line 224 in file "lcd.c"
   646 ;; Parameters:    Size  Location     Type
   647 ;;  s               1    wreg     PTR const unsigned char 
   648 ;;		 -> dat_line1(5), 
   649 ;; Auto vars:     Size  Location     Type
   650 ;;  s               1   10[COMMON] PTR const unsigned char 
   651 ;;		 -> dat_line1(5), 
   652 ;; Return value:  Size  Location     Type
   653 ;;                  1    wreg      void 
   654 ;; Registers used:
   655 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   656 ;; Tracked objects:
   657 ;;		On entry : 0/0
   658 ;;		On exit  : 0/0
   659 ;;		Unchanged: 0/0
   660 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   661 ;;      Params:         0       0       0       0       0
   662 ;;      Locals:         1       0       0       0       0
   663 ;;      Temps:          0       0       0       0       0
   664 ;;      Totals:         1       0       0       0       0
   665 ;;Total ram usage:        1 bytes
   666 ;; Hardware stack levels used: 1
   667 ;; Hardware stack levels required when called: 4
   668 ;; This function calls:
   669 ;;		_lcd_putc
   670 ;; This function is called by:
   671 ;;		_main
   672 ;; This function uses a non-reentrant model
   673 ;;
   674                           
   675     05A9                     _lcd_puts:	
   676                           ;psect for function _lcd_puts
   677                           
   678                           
   679                           ;incstack = 0
   680                           ; Regs used in _lcd_puts: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   681                           ;lcd_puts@s stored from wreg
   682     05A9  00FA               	movwf	lcd_puts@s
   683     05AA                     l1020:
   684                           
   685                           ;lcd.c: 224: void lcd_puts(const char* s);lcd.c: 225: {;lcd.c: 229:  while(*s)
   686     05AA  2DBB               	goto	l1026
   687     05AB                     l1022:
   688                           
   689                           ;lcd.c: 230:   {;lcd.c: 231:   lcd_putc(*s++);
   690     05AB  087A               	movf	lcd_puts@s,w
   691     05AC  0084               	movwf	4
   692     05AD  120A  118A  2003  120A  118A  	fcall	stringdir
   693     05B2  120A  118A  2695  120A  118A  	fcall	_lcd_putc
   694     05B7                     l1024:
   695     05B7  3001               	movlw	1
   696     05B8  00FF               	movwf	btemp+1
   697     05B9  087F               	movf	btemp+1,w
   698     05BA  07FA               	addwf	lcd_puts@s,f
   699     05BB                     l1026:
   700                           
   701                           ;lcd.c: 229:  while(*s)
   702     05BB  087A               	movf	lcd_puts@s,w
   703     05BC  0084               	movwf	4
   704     05BD  120A  118A  2003  120A  118A  	fcall	stringdir
   705     05C2  3A00               	xorlw	0
   706     05C3  1D03               	skipz
   707     05C4  2DC6               	goto	u501
   708     05C5  2DC7               	goto	u500
   709     05C6                     u501:
   710     05C6  2DAB               	goto	l1022
   711     05C7                     u500:
   712     05C7                     l115:
   713     05C7  0008               	return
   714     05C8                     __end_of_lcd_puts:
   715                           
   716                           	psect	text2
   717     0695                     __ptext2:	
   718 ;; *************** function _lcd_putc *****************
   719 ;; Defined at:
   720 ;;		line 190 in file "lcd.c"
   721 ;; Parameters:    Size  Location     Type
   722 ;;  c               1    wreg     unsigned char 
   723 ;; Auto vars:     Size  Location     Type
   724 ;;  c               1    9[COMMON] unsigned char 
   725 ;; Return value:  Size  Location     Type
   726 ;;                  1    wreg      void 
   727 ;; Registers used:
   728 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   729 ;; Tracked objects:
   730 ;;		On entry : 0/0
   731 ;;		On exit  : 0/0
   732 ;;		Unchanged: 0/0
   733 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   734 ;;      Params:         0       0       0       0       0
   735 ;;      Locals:         1       0       0       0       0
   736 ;;      Temps:          0       0       0       0       0
   737 ;;      Totals:         1       0       0       0       0
   738 ;;Total ram usage:        1 bytes
   739 ;; Hardware stack levels used: 1
   740 ;; Hardware stack levels required when called: 3
   741 ;; This function calls:
   742 ;;		_lcd_busy
   743 ;;		_lcd_gotoxy
   744 ;;		_lcd_put_byte
   745 ;; This function is called by:
   746 ;;		_main
   747 ;;		_lcd_puts
   748 ;;		_lcd_String_Delay
   749 ;;		_putch
   750 ;; This function uses a non-reentrant model
   751 ;;
   752                           
   753     0695                     _lcd_putc:	
   754                           ;psect for function _lcd_putc
   755                           
   756                           
   757                           ;incstack = 0
   758                           ; Regs used in _lcd_putc: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   759                           ;lcd_putc@c stored from wreg
   760     0695  00F9               	movwf	lcd_putc@c
   761     0696                     l964:
   762                           
   763                           ;lcd.c: 190: void lcd_putc(char c);lcd.c: 191: {;lcd.c: 195:  switch(c)
   764     0696  2ED9               	goto	l980
   765     0697                     l966:
   766                           
   767                           ;lcd.c: 198:    lcd_put_byte(0,1);
   768     0697  01F3               	clrf	lcd_put_byte@b
   769     0698  0AF3               	incf	lcd_put_byte@b,f
   770     0699  3000               	movlw	0
   771     069A  120A  118A  261A  120A  118A  	fcall	_lcd_put_byte
   772     069F                     l968:	
   773                           ;lcd.c: 199:    while(lcd_busy());
   774                           
   775     069F  120A  118A  25EA  120A  118A  	fcall	_lcd_busy
   776     06A4  3A00               	xorlw	0
   777     06A5  1D03               	skipz
   778     06A6  2EA8               	goto	u421
   779     06A7  2EA9               	goto	u420
   780     06A8                     u421:
   781     06A8  2E9F               	goto	l968
   782     06A9                     u420:
   783     06A9  2EE4               	goto	l109
   784     06AA                     l970:
   785                           
   786                           ;lcd.c: 202:    lcd_gotoxy(0,1);
   787     06AA  01F6               	clrf	lcd_gotoxy@row
   788     06AB  0AF6               	incf	lcd_gotoxy@row,f
   789     06AC  3000               	movlw	0
   790     06AD  120A  118A  25C8  120A  118A  	fcall	_lcd_gotoxy
   791                           
   792                           ;lcd.c: 203:    break;
   793     06B2  2EE4               	goto	l109
   794     06B3                     l972:
   795                           
   796                           ;lcd.c: 205:    lcd_put_byte(0,0x10);
   797     06B3  3010               	movlw	16
   798     06B4  00F3               	movwf	lcd_put_byte@b
   799     06B5  3000               	movlw	0
   800     06B6  120A  118A  261A  120A  118A  	fcall	_lcd_put_byte
   801     06BB                     l974:	
   802                           ;lcd.c: 206:    while(lcd_busy());
   803                           
   804     06BB  120A  118A  25EA  120A  118A  	fcall	_lcd_busy
   805     06C0  3A00               	xorlw	0
   806     06C1  1D03               	skipz
   807     06C2  2EC4               	goto	u431
   808     06C3  2EC5               	goto	u430
   809     06C4                     u431:
   810     06C4  2EBB               	goto	l974
   811     06C5                     u430:
   812     06C5  2EE4               	goto	l109
   813     06C6                     l976:
   814                           
   815                           ;lcd.c: 210:     {;lcd.c: 211:     lcd_put_byte(1,c);
   816     06C6  0879               	movf	lcd_putc@c,w
   817     06C7  00F3               	movwf	lcd_put_byte@b
   818     06C8  3001               	movlw	1
   819     06C9  120A  118A  261A  120A  118A  	fcall	_lcd_put_byte
   820     06CE                     l978:	
   821                           ;lcd.c: 212:     while(lcd_busy());
   822                           
   823     06CE  120A  118A  25EA  120A  118A  	fcall	_lcd_busy
   824     06D3  3A00               	xorlw	0
   825     06D4  1D03               	skipz
   826     06D5  2ED7               	goto	u441
   827     06D6  2ED8               	goto	u440
   828     06D7                     u441:
   829     06D7  2ECE               	goto	l978
   830     06D8                     u440:
   831     06D8  2EE4               	goto	l109
   832     06D9                     l980:
   833     06D9  0879               	movf	lcd_putc@c,w
   834                           
   835                           ; Switch size 1, requested type "simple"
   836                           ; Number of cases is 3, Range of values is 8 to 12
   837                           ; switch strategies available:
   838                           ; Name         Instructions Cycles
   839                           ; simple_byte           10     6 (average)
   840                           ; direct_byte           26    11 (fixed)
   841                           ; jumptable            263     9 (fixed)
   842                           ;	Chosen strategy is simple_byte
   843     06DA  3A08               	xorlw	8	; case 8
   844     06DB  1903               	skipnz
   845     06DC  2EB3               	goto	l972
   846     06DD  3A02               	xorlw	2	; case 10
   847     06DE  1903               	skipnz
   848     06DF  2EAA               	goto	l970
   849     06E0  3A06               	xorlw	6	; case 12
   850     06E1  1903               	skipnz
   851     06E2  2E97               	goto	l966
   852     06E3  2EC6               	goto	l976
   853     06E4                     l109:
   854     06E4  0008               	return
   855     06E5                     __end_of_lcd_putc:
   856                           
   857                           	psect	text3
   858     05C8                     __ptext3:	
   859 ;; *************** function _lcd_gotoxy *****************
   860 ;; Defined at:
   861 ;;		line 167 in file "lcd.c"
   862 ;; Parameters:    Size  Location     Type
   863 ;;  col             1    wreg     unsigned char 
   864 ;;  row             1    6[COMMON] unsigned char 
   865 ;; Auto vars:     Size  Location     Type
   866 ;;  col             1    7[COMMON] unsigned char 
   867 ;;  address         1    8[COMMON] unsigned char 
   868 ;; Return value:  Size  Location     Type
   869 ;;                  1    wreg      void 
   870 ;; Registers used:
   871 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   872 ;; Tracked objects:
   873 ;;		On entry : 0/0
   874 ;;		On exit  : 0/0
   875 ;;		Unchanged: 0/0
   876 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   877 ;;      Params:         1       0       0       0       0
   878 ;;      Locals:         2       0       0       0       0
   879 ;;      Temps:          0       0       0       0       0
   880 ;;      Totals:         3       0       0       0       0
   881 ;;Total ram usage:        3 bytes
   882 ;; Hardware stack levels used: 1
   883 ;; Hardware stack levels required when called: 2
   884 ;; This function calls:
   885 ;;		_lcd_busy
   886 ;;		_lcd_put_byte
   887 ;; This function is called by:
   888 ;;		_main
   889 ;;		_lcd_putc
   890 ;; This function uses a non-reentrant model
   891 ;;
   892                           
   893     05C8                     _lcd_gotoxy:	
   894                           ;psect for function _lcd_gotoxy
   895                           
   896                           
   897                           ;incstack = 0
   898                           ; Regs used in _lcd_gotoxy: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   899                           ;lcd_gotoxy@col stored from wreg
   900     05C8  00F7               	movwf	lcd_gotoxy@col
   901     05C9                     l952:
   902                           
   903                           ;lcd.c: 167: void lcd_gotoxy(unsigned char col, unsigned char row);lcd.c: 168: {;lcd.c: 
      +                          170:  unsigned char address;;lcd.c: 173:  if(row!=0)
   904     05C9  0876               	movf	lcd_gotoxy@row,w
   905     05CA  1903               	btfsc	3,2
   906     05CB  2DCD               	goto	u401
   907     05CC  2DCE               	goto	u400
   908     05CD                     u401:
   909     05CD  2DD1               	goto	l956
   910     05CE                     u400:
   911     05CE                     l954:
   912                           
   913                           ;lcd.c: 174:   address=0x40;
   914     05CE  3040               	movlw	64
   915     05CF  00F8               	movwf	lcd_gotoxy@address
   916     05D0  2DD2               	goto	l958
   917     05D1                     l956:
   918                           
   919                           ;lcd.c: 176:   address=0;
   920     05D1  01F8               	clrf	lcd_gotoxy@address
   921     05D2                     l958:
   922                           
   923                           ;lcd.c: 178:  address += col;
   924     05D2  0877               	movf	lcd_gotoxy@col,w
   925     05D3  00FF               	movwf	btemp+1
   926     05D4  087F               	movf	btemp+1,w
   927     05D5  07F8               	addwf	lcd_gotoxy@address,f
   928     05D6                     l960:
   929                           
   930                           ;lcd.c: 180:  lcd_put_byte(0,0x80|address);
   931     05D6  0878               	movf	lcd_gotoxy@address,w
   932     05D7  3880               	iorlw	128
   933     05D8  00F3               	movwf	lcd_put_byte@b
   934     05D9  3000               	movlw	0
   935     05DA  120A  118A  261A  120A  118A  	fcall	_lcd_put_byte
   936     05DF                     l962:	
   937                           ;lcd.c: 181:  while(lcd_busy());
   938                           
   939     05DF  120A  118A  25EA  120A  118A  	fcall	_lcd_busy
   940     05E4  3A00               	xorlw	0
   941     05E5  1D03               	skipz
   942     05E6  2DE8               	goto	u411
   943     05E7  2DE9               	goto	u410
   944     05E8                     u411:
   945     05E8  2DDF               	goto	l962
   946     05E9                     u410:
   947     05E9                     l91:
   948     05E9  0008               	return
   949     05EA                     __end_of_lcd_gotoxy:
   950                           
   951                           	psect	text4
   952     075F                     __ptext4:	
   953 ;; *************** function _lcd_init *****************
   954 ;; Defined at:
   955 ;;		line 241 in file "lcd.c"
   956 ;; Parameters:    Size  Location     Type
   957 ;;		None
   958 ;; Auto vars:     Size  Location     Type
   959 ;;  i               1    0        unsigned char 
   960 ;; Return value:  Size  Location     Type
   961 ;;                  1    wreg      void 
   962 ;; Registers used:
   963 ;;		wreg, status,2, status,0, pclath, cstack
   964 ;; Tracked objects:
   965 ;;		On entry : 0/0
   966 ;;		On exit  : 0/0
   967 ;;		Unchanged: 0/0
   968 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   969 ;;      Params:         0       0       0       0       0
   970 ;;      Locals:         0       0       0       0       0
   971 ;;      Temps:          2       0       0       0       0
   972 ;;      Totals:         2       0       0       0       0
   973 ;;Total ram usage:        2 bytes
   974 ;; Hardware stack levels used: 1
   975 ;; Hardware stack levels required when called: 2
   976 ;; This function calls:
   977 ;;		_lcd_busy
   978 ;;		_lcd_put_byte
   979 ;;		_lcd_put_nibble
   980 ;; This function is called by:
   981 ;;		_main
   982 ;; This function uses a non-reentrant model
   983 ;;
   984                           
   985     075F                     _lcd_init:	
   986                           ;psect for function _lcd_init
   987                           
   988     075F                     l982:	
   989                           ;incstack = 0
   990                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
   991                           
   992                           
   993                           ;lcd.c: 244: unsigned char i;;lcd.c: 247:  TRISD3 = 0;
   994     075F  1683               	bsf	3,5	;RP0=1, select bank1
   995     0760  1303               	bcf	3,6	;RP1=0, select bank1
   996     0761  1188               	bcf	8,3	;volatile
   997                           
   998                           ;lcd.c: 248:  TRISD1 = 0;
   999     0762  1088               	bcf	8,1	;volatile
  1000                           
  1001                           ;lcd.c: 249:  TRISD2 = 0;
  1002     0763  1108               	bcf	8,2	;volatile
  1003                           
  1004                           ;lcd.c: 250:  TRISD4 = 0;
  1005     0764  1208               	bcf	8,4	;volatile
  1006                           
  1007                           ;lcd.c: 251:  TRISD5 = 0;
  1008     0765  1288               	bcf	8,5	;volatile
  1009                           
  1010                           ;lcd.c: 252:  TRISD6 = 0;
  1011     0766  1308               	bcf	8,6	;volatile
  1012                           
  1013                           ;lcd.c: 253:  TRISD7 = 0;
  1014     0767  1388               	bcf	8,7	;volatile
  1015     0768                     l984:
  1016                           
  1017                           ;lcd.c: 255:  _delay((unsigned long)((15)*(4000000/4000.0)));
  1018     0768  3014               	movlw	20
  1019     0769  00F7               	movwf	??_lcd_init+1
  1020     076A  3079               	movlw	121
  1021     076B  00F6               	movwf	??_lcd_init
  1022     076C                     u587:
  1023     076C  0BF6               	decfsz	??_lcd_init,f
  1024     076D  2F6C               	goto	u587
  1025     076E  0BF7               	decfsz	??_lcd_init+1,f
  1026     076F  2F6C               	goto	u587
  1027     0770  2F71               	nop2
  1028     0771                     l986:
  1029                           
  1030                           ;lcd.c: 257:  RD1 = 0;
  1031     0771  1283               	bcf	3,5	;RP0=0, select bank0
  1032     0772  1303               	bcf	3,6	;RP1=0, select bank0
  1033     0773  1088               	bcf	8,1	;volatile
  1034     0774                     l988:
  1035                           
  1036                           ;lcd.c: 258:  RD2 = 0;
  1037     0774  1108               	bcf	8,2	;volatile
  1038     0775                     l990:
  1039                           
  1040                           ;lcd.c: 259:  RD3 = 0;
  1041     0775  1188               	bcf	8,3	;volatile
  1042     0776                     l992:
  1043                           
  1044                           ;lcd.c: 261:  lcd_put_nibble(3);
  1045     0776  3003               	movlw	3
  1046     0777  120A  118A  2653  120A  118A  	fcall	_lcd_put_nibble
  1047     077C                     l994:
  1048                           
  1049                           ;lcd.c: 262:  _delay((unsigned long)((10)*(4000000/4000.0)));
  1050     077C  300D               	movlw	13
  1051     077D  00F7               	movwf	??_lcd_init+1
  1052     077E  30FB               	movlw	251
  1053     077F  00F6               	movwf	??_lcd_init
  1054     0780                     u597:
  1055     0780  0BF6               	decfsz	??_lcd_init,f
  1056     0781  2F80               	goto	u597
  1057     0782  0BF7               	decfsz	??_lcd_init+1,f
  1058     0783  2F80               	goto	u597
  1059     0784  2F85               	nop2
  1060                           
  1061                           ;lcd.c: 263:  lcd_put_nibble(3);
  1062     0785  3003               	movlw	3
  1063     0786  120A  118A  2653  120A  118A  	fcall	_lcd_put_nibble
  1064     078B                     l996:
  1065                           
  1066                           ;lcd.c: 264:  _delay((unsigned long)((10)*(4000000/4000.0)));
  1067     078B  300D               	movlw	13
  1068     078C  00F7               	movwf	??_lcd_init+1
  1069     078D  30FB               	movlw	251
  1070     078E  00F6               	movwf	??_lcd_init
  1071     078F                     u607:
  1072     078F  0BF6               	decfsz	??_lcd_init,f
  1073     0790  2F8F               	goto	u607
  1074     0791  0BF7               	decfsz	??_lcd_init+1,f
  1075     0792  2F8F               	goto	u607
  1076     0793  2F94               	nop2
  1077     0794                     l998:
  1078                           
  1079                           ;lcd.c: 265:  lcd_put_nibble(3);
  1080     0794  3003               	movlw	3
  1081     0795  120A  118A  2653  120A  118A  	fcall	_lcd_put_nibble
  1082                           
  1083                           ;lcd.c: 266:  _delay((unsigned long)((10)*(4000000/4000.0)));
  1084     079A  300D               	movlw	13
  1085     079B  00F7               	movwf	??_lcd_init+1
  1086     079C  30FB               	movlw	251
  1087     079D  00F6               	movwf	??_lcd_init
  1088     079E                     u617:
  1089     079E  0BF6               	decfsz	??_lcd_init,f
  1090     079F  2F9E               	goto	u617
  1091     07A0  0BF7               	decfsz	??_lcd_init+1,f
  1092     07A1  2F9E               	goto	u617
  1093     07A2  2FA3               	nop2
  1094     07A3                     l1000:
  1095                           
  1096                           ;lcd.c: 268:  lcd_put_nibble(2);
  1097     07A3  3002               	movlw	2
  1098     07A4  120A  118A  2653  120A  118A  	fcall	_lcd_put_nibble
  1099     07A9                     l1002:	
  1100                           ;lcd.c: 269:  while(lcd_busy());
  1101                           
  1102     07A9  120A  118A  25EA  120A  118A  	fcall	_lcd_busy
  1103     07AE  3A00               	xorlw	0
  1104     07AF  1D03               	skipz
  1105     07B0  2FB2               	goto	u451
  1106     07B1  2FB3               	goto	u450
  1107     07B2                     u451:
  1108     07B2  2FA9               	goto	l1002
  1109     07B3                     u450:
  1110     07B3                     l1004:
  1111                           
  1112                           ;lcd.c: 271:  lcd_put_byte(0,0b00101100 & 0b00111000);
  1113     07B3  3028               	movlw	40
  1114     07B4  00F3               	movwf	lcd_put_byte@b
  1115     07B5  3000               	movlw	0
  1116     07B6  120A  118A  261A  120A  118A  	fcall	_lcd_put_byte
  1117     07BB                     l1006:	
  1118                           ;lcd.c: 272:  while(lcd_busy());
  1119                           
  1120     07BB  120A  118A  25EA  120A  118A  	fcall	_lcd_busy
  1121     07C0  3A00               	xorlw	0
  1122     07C1  1D03               	skipz
  1123     07C2  2FC4               	goto	u461
  1124     07C3  2FC5               	goto	u460
  1125     07C4                     u461:
  1126     07C4  2FBB               	goto	l1006
  1127     07C5                     u460:
  1128     07C5                     l1008:
  1129                           
  1130                           ;lcd.c: 274:  lcd_put_byte(0,0b00001111 & 0b00001101 & 0b00001110);
  1131     07C5  300C               	movlw	12
  1132     07C6  00F3               	movwf	lcd_put_byte@b
  1133     07C7  3000               	movlw	0
  1134     07C8  120A  118A  261A  120A  118A  	fcall	_lcd_put_byte
  1135     07CD                     l1010:	
  1136                           ;lcd.c: 275:  while(lcd_busy());
  1137                           
  1138     07CD  120A  118A  25EA  120A  118A  	fcall	_lcd_busy
  1139     07D2  3A00               	xorlw	0
  1140     07D3  1D03               	skipz
  1141     07D4  2FD6               	goto	u471
  1142     07D5  2FD7               	goto	u470
  1143     07D6                     u471:
  1144     07D6  2FCD               	goto	l1010
  1145     07D7                     u470:
  1146     07D7                     l1012:
  1147                           
  1148                           ;lcd.c: 277:  lcd_put_byte(0,0x01);
  1149     07D7  01F3               	clrf	lcd_put_byte@b
  1150     07D8  0AF3               	incf	lcd_put_byte@b,f
  1151     07D9  3000               	movlw	0
  1152     07DA  120A  118A  261A  120A  118A  	fcall	_lcd_put_byte
  1153     07DF                     l1014:	
  1154                           ;lcd.c: 278:  while(lcd_busy());
  1155                           
  1156     07DF  120A  118A  25EA  120A  118A  	fcall	_lcd_busy
  1157     07E4  3A00               	xorlw	0
  1158     07E5  1D03               	skipz
  1159     07E6  2FE8               	goto	u481
  1160     07E7  2FE9               	goto	u480
  1161     07E8                     u481:
  1162     07E8  2FDF               	goto	l1014
  1163     07E9                     u480:
  1164     07E9                     l1016:
  1165                           
  1166                           ;lcd.c: 280:  lcd_put_byte(0,0b00000110);
  1167     07E9  3006               	movlw	6
  1168     07EA  00F3               	movwf	lcd_put_byte@b
  1169     07EB  3000               	movlw	0
  1170     07EC  120A  118A  261A  120A  118A  	fcall	_lcd_put_byte
  1171     07F1                     l1018:	
  1172                           ;lcd.c: 281:  while(lcd_busy());
  1173                           
  1174     07F1  120A  118A  25EA  120A  118A  	fcall	_lcd_busy
  1175     07F6  3A00               	xorlw	0
  1176     07F7  1D03               	skipz
  1177     07F8  2FFA               	goto	u491
  1178     07F9  2FFB               	goto	u490
  1179     07FA                     u491:
  1180     07FA  2FF1               	goto	l1018
  1181     07FB                     u490:
  1182     07FB                     l133:
  1183     07FB  0008               	return
  1184     07FC                     __end_of_lcd_init:
  1185                           
  1186                           	psect	text5
  1187     061A                     __ptext5:	
  1188 ;; *************** function _lcd_put_byte *****************
  1189 ;; Defined at:
  1190 ;;		line 134 in file "lcd.c"
  1191 ;; Parameters:    Size  Location     Type
  1192 ;;  rs              1    wreg     unsigned char 
  1193 ;;  b               1    3[COMMON] unsigned char 
  1194 ;; Auto vars:     Size  Location     Type
  1195 ;;  rs              1    5[COMMON] unsigned char 
  1196 ;; Return value:  Size  Location     Type
  1197 ;;                  1    wreg      void 
  1198 ;; Registers used:
  1199 ;;		wreg, status,2, status,0, pclath, cstack
  1200 ;; Tracked objects:
  1201 ;;		On entry : 0/0
  1202 ;;		On exit  : 0/0
  1203 ;;		Unchanged: 0/0
  1204 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1205 ;;      Params:         1       0       0       0       0
  1206 ;;      Locals:         1       0       0       0       0
  1207 ;;      Temps:          1       0       0       0       0
  1208 ;;      Totals:         3       0       0       0       0
  1209 ;;Total ram usage:        3 bytes
  1210 ;; Hardware stack levels used: 1
  1211 ;; Hardware stack levels required when called: 1
  1212 ;; This function calls:
  1213 ;;		_lcd_put_nibble
  1214 ;; This function is called by:
  1215 ;;		_main
  1216 ;;		_lcd_gotoxy
  1217 ;;		_lcd_putc
  1218 ;;		_lcd_init
  1219 ;;		_lcd_ShiftLeft
  1220 ;;		_lcd_ShiftRight
  1221 ;; This function uses a non-reentrant model
  1222 ;;
  1223                           
  1224     061A                     _lcd_put_byte:	
  1225                           ;psect for function _lcd_put_byte
  1226                           
  1227                           
  1228                           ;incstack = 0
  1229                           ; Regs used in _lcd_put_byte: [wreg+status,2+status,0+pclath+cstack]
  1230                           ;lcd_put_byte@rs stored from wreg
  1231     061A  00F5               	movwf	lcd_put_byte@rs
  1232     061B                     l936:
  1233                           
  1234                           ;lcd.c: 134: void lcd_put_byte(unsigned char rs, unsigned char b);lcd.c: 135: {;lcd.c: 1
      +                          39:  TRISD4 = 0;
  1235     061B  1683               	bsf	3,5	;RP0=1, select bank1
  1236     061C  1303               	bcf	3,6	;RP1=0, select bank1
  1237     061D  1208               	bcf	8,4	;volatile
  1238                           
  1239                           ;lcd.c: 140:  TRISD5 = 0;
  1240     061E  1288               	bcf	8,5	;volatile
  1241                           
  1242                           ;lcd.c: 141:  TRISD6 = 0;
  1243     061F  1308               	bcf	8,6	;volatile
  1244                           
  1245                           ;lcd.c: 142:  TRISD7 = 0;
  1246     0620  1388               	bcf	8,7	;volatile
  1247     0621                     l938:
  1248                           
  1249                           ;lcd.c: 144:  if(rs)
  1250     0621  0875               	movf	lcd_put_byte@rs,w
  1251     0622  1903               	btfsc	3,2
  1252     0623  2E25               	goto	u381
  1253     0624  2E26               	goto	u380
  1254     0625                     u381:
  1255     0625  2E2A               	goto	l81
  1256     0626                     u380:
  1257     0626                     l940:
  1258                           
  1259                           ;lcd.c: 145:   RD1 = 1;
  1260     0626  1283               	bcf	3,5	;RP0=0, select bank0
  1261     0627  1303               	bcf	3,6	;RP1=0, select bank0
  1262     0628  1488               	bsf	8,1	;volatile
  1263     0629  2E2D               	goto	l942
  1264     062A                     l81:	
  1265                           ;lcd.c: 146:  else
  1266                           
  1267                           
  1268                           ;lcd.c: 147:   RD1 = 0;
  1269     062A  1283               	bcf	3,5	;RP0=0, select bank0
  1270     062B  1303               	bcf	3,6	;RP1=0, select bank0
  1271     062C  1088               	bcf	8,1	;volatile
  1272     062D                     l942:
  1273                           
  1274                           ;lcd.c: 148:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  1275     062D  3006               	movlw	6
  1276     062E  00F4               	movwf	??_lcd_put_byte
  1277     062F                     u627:
  1278     062F  0BF4               	decfsz	??_lcd_put_byte,f
  1279     0630  2E2F               	goto	u627
  1280     0631  0000               	nop
  1281     0632                     l944:
  1282                           
  1283                           ;lcd.c: 150:  RD2 = 0;
  1284     0632  1283               	bcf	3,5	;RP0=0, select bank0
  1285     0633  1303               	bcf	3,6	;RP1=0, select bank0
  1286     0634  1108               	bcf	8,2	;volatile
  1287                           
  1288                           ;lcd.c: 151:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  1289     0635  3006               	movlw	6
  1290     0636  00F4               	movwf	??_lcd_put_byte
  1291     0637                     u637:
  1292     0637  0BF4               	decfsz	??_lcd_put_byte,f
  1293     0638  2E37               	goto	u637
  1294     0639  0000               	nop
  1295     063A                     l946:
  1296                           
  1297                           ;lcd.c: 153:  RD3 = 0;
  1298     063A  1283               	bcf	3,5	;RP0=0, select bank0
  1299     063B  1303               	bcf	3,6	;RP1=0, select bank0
  1300     063C  1188               	bcf	8,3	;volatile
  1301     063D                     l948:
  1302                           
  1303                           ;lcd.c: 155:  lcd_put_nibble(b >> 4);
  1304     063D  0873               	movf	lcd_put_byte@b,w
  1305     063E  00F4               	movwf	??_lcd_put_byte
  1306     063F  3004               	movlw	4
  1307     0640                     u395:
  1308     0640  1003               	clrc
  1309     0641  0CF4               	rrf	??_lcd_put_byte,f
  1310     0642  3EFF               	addlw	-1
  1311     0643  1D03               	skipz
  1312     0644  2E40               	goto	u395
  1313     0645  0874               	movf	??_lcd_put_byte,w
  1314     0646  120A  118A  2653  120A  118A  	fcall	_lcd_put_nibble
  1315     064B                     l950:
  1316                           
  1317                           ;lcd.c: 157:  lcd_put_nibble(b & 0xf);
  1318     064B  0873               	movf	lcd_put_byte@b,w
  1319     064C  390F               	andlw	15
  1320     064D  120A  118A  2653  120A  118A  	fcall	_lcd_put_nibble
  1321     0652                     l83:
  1322     0652  0008               	return
  1323     0653                     __end_of_lcd_put_byte:
  1324                           
  1325                           	psect	text6
  1326     0653                     __ptext6:	
  1327 ;; *************** function _lcd_put_nibble *****************
  1328 ;; Defined at:
  1329 ;;		line 103 in file "lcd.c"
  1330 ;; Parameters:    Size  Location     Type
  1331 ;;  b               1    wreg     unsigned char 
  1332 ;; Auto vars:     Size  Location     Type
  1333 ;;  b               1    1[COMMON] unsigned char 
  1334 ;;  temp            1    2[COMMON] struct _BYTE_VAL
  1335 ;; Return value:  Size  Location     Type
  1336 ;;                  1    wreg      void 
  1337 ;; Registers used:
  1338 ;;		wreg
  1339 ;; Tracked objects:
  1340 ;;		On entry : 0/0
  1341 ;;		On exit  : 0/0
  1342 ;;		Unchanged: 0/0
  1343 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1344 ;;      Params:         0       0       0       0       0
  1345 ;;      Locals:         2       0       0       0       0
  1346 ;;      Temps:          1       0       0       0       0
  1347 ;;      Totals:         3       0       0       0       0
  1348 ;;Total ram usage:        3 bytes
  1349 ;; Hardware stack levels used: 1
  1350 ;; This function calls:
  1351 ;;		Nothing
  1352 ;; This function is called by:
  1353 ;;		_lcd_put_byte
  1354 ;;		_lcd_init
  1355 ;; This function uses a non-reentrant model
  1356 ;;
  1357                           
  1358     0653                     _lcd_put_nibble:	
  1359                           ;psect for function _lcd_put_nibble
  1360                           
  1361                           
  1362                           ;incstack = 0
  1363                           ; Regs used in _lcd_put_nibble: [wreg]
  1364                           ;lcd_put_nibble@b stored from wreg
  1365     0653  00F1               	movwf	lcd_put_nibble@b
  1366     0654                     l704:
  1367                           
  1368                           ;lcd.c: 103: void lcd_put_nibble(unsigned char b);lcd.c: 104: {;lcd.c: 106:  BYTE_VAL te
      +                          mp;;lcd.c: 109:  TRISD4 = 0;
  1369     0654  1683               	bsf	3,5	;RP0=1, select bank1
  1370     0655  1303               	bcf	3,6	;RP1=0, select bank1
  1371     0656  1208               	bcf	8,4	;volatile
  1372                           
  1373                           ;lcd.c: 110:  TRISD5 = 0;
  1374     0657  1288               	bcf	8,5	;volatile
  1375                           
  1376                           ;lcd.c: 111:  TRISD6 = 0;
  1377     0658  1308               	bcf	8,6	;volatile
  1378                           
  1379                           ;lcd.c: 112:  TRISD7 = 0;
  1380     0659  1388               	bcf	8,7	;volatile
  1381     065A                     l706:
  1382                           
  1383                           ;lcd.c: 114:  temp.Val = b;
  1384     065A  0871               	movf	lcd_put_nibble@b,w
  1385     065B  00F2               	movwf	lcd_put_nibble@temp
  1386     065C                     l708:
  1387                           
  1388                           ;lcd.c: 116:  RD4 = temp.bits.b0;
  1389     065C  1872               	btfsc	lcd_put_nibble@temp,0
  1390     065D  2E5F               	goto	u11
  1391     065E  2E63               	goto	u10
  1392     065F                     u11:
  1393     065F  1283               	bcf	3,5	;RP0=0, select bank0
  1394     0660  1303               	bcf	3,6	;RP1=0, select bank0
  1395     0661  1608               	bsf	8,4	;volatile
  1396     0662  2E66               	goto	u24
  1397     0663                     u10:
  1398     0663  1283               	bcf	3,5	;RP0=0, select bank0
  1399     0664  1303               	bcf	3,6	;RP1=0, select bank0
  1400     0665  1208               	bcf	8,4	;volatile
  1401     0666                     u24:
  1402     0666                     l710:
  1403                           
  1404                           ;lcd.c: 117:  RD5 = temp.bits.b1;
  1405     0666  18F2               	btfsc	lcd_put_nibble@temp,1
  1406     0667  2E69               	goto	u31
  1407     0668  2E6D               	goto	u30
  1408     0669                     u31:
  1409     0669  1283               	bcf	3,5	;RP0=0, select bank0
  1410     066A  1303               	bcf	3,6	;RP1=0, select bank0
  1411     066B  1688               	bsf	8,5	;volatile
  1412     066C  2E70               	goto	u44
  1413     066D                     u30:
  1414     066D  1283               	bcf	3,5	;RP0=0, select bank0
  1415     066E  1303               	bcf	3,6	;RP1=0, select bank0
  1416     066F  1288               	bcf	8,5	;volatile
  1417     0670                     u44:
  1418     0670                     l712:
  1419                           
  1420                           ;lcd.c: 118:  RD6 = temp.bits.b2;
  1421     0670  1972               	btfsc	lcd_put_nibble@temp,2
  1422     0671  2E73               	goto	u51
  1423     0672  2E77               	goto	u50
  1424     0673                     u51:
  1425     0673  1283               	bcf	3,5	;RP0=0, select bank0
  1426     0674  1303               	bcf	3,6	;RP1=0, select bank0
  1427     0675  1708               	bsf	8,6	;volatile
  1428     0676  2E7A               	goto	u64
  1429     0677                     u50:
  1430     0677  1283               	bcf	3,5	;RP0=0, select bank0
  1431     0678  1303               	bcf	3,6	;RP1=0, select bank0
  1432     0679  1308               	bcf	8,6	;volatile
  1433     067A                     u64:
  1434     067A                     l714:
  1435                           
  1436                           ;lcd.c: 119:  RD7 = temp.bits.b3;
  1437     067A  19F2               	btfsc	lcd_put_nibble@temp,3
  1438     067B  2E7D               	goto	u71
  1439     067C  2E81               	goto	u70
  1440     067D                     u71:
  1441     067D  1283               	bcf	3,5	;RP0=0, select bank0
  1442     067E  1303               	bcf	3,6	;RP1=0, select bank0
  1443     067F  1788               	bsf	8,7	;volatile
  1444     0680  2E84               	goto	u84
  1445     0681                     u70:
  1446     0681  1283               	bcf	3,5	;RP0=0, select bank0
  1447     0682  1303               	bcf	3,6	;RP1=0, select bank0
  1448     0683  1388               	bcf	8,7	;volatile
  1449     0684                     u84:
  1450                           
  1451                           ;lcd.c: 121:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  1452     0684  3006               	movlw	6
  1453     0685  00F0               	movwf	??_lcd_put_nibble
  1454     0686                     u647:
  1455     0686  0BF0               	decfsz	??_lcd_put_nibble,f
  1456     0687  2E86               	goto	u647
  1457     0688  0000               	nop
  1458     0689                     l716:
  1459                           
  1460                           ;lcd.c: 122:  RD3 = 1;
  1461     0689  1283               	bcf	3,5	;RP0=0, select bank0
  1462     068A  1303               	bcf	3,6	;RP1=0, select bank0
  1463     068B  1588               	bsf	8,3	;volatile
  1464                           
  1465                           ;lcd.c: 123:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  1466     068C  3006               	movlw	6
  1467     068D  00F0               	movwf	??_lcd_put_nibble
  1468     068E                     u657:
  1469     068E  0BF0               	decfsz	??_lcd_put_nibble,f
  1470     068F  2E8E               	goto	u657
  1471     0690  0000               	nop
  1472     0691                     l718:
  1473                           
  1474                           ;lcd.c: 124:  RD3 = 0;
  1475     0691  1283               	bcf	3,5	;RP0=0, select bank0
  1476     0692  1303               	bcf	3,6	;RP1=0, select bank0
  1477     0693  1188               	bcf	8,3	;volatile
  1478     0694                     l78:
  1479     0694  0008               	return
  1480     0695                     __end_of_lcd_put_nibble:
  1481                           
  1482                           	psect	text7
  1483     05EA                     __ptext7:	
  1484 ;; *************** function _lcd_busy *****************
  1485 ;; Defined at:
  1486 ;;		line 18 in file "lcd.c"
  1487 ;; Parameters:    Size  Location     Type
  1488 ;;		None
  1489 ;; Auto vars:     Size  Location     Type
  1490 ;;  busy            1    1[COMMON] unsigned char 
  1491 ;; Return value:  Size  Location     Type
  1492 ;;                  1    wreg      unsigned char 
  1493 ;; Registers used:
  1494 ;;		wreg, status,2
  1495 ;; Tracked objects:
  1496 ;;		On entry : 0/0
  1497 ;;		On exit  : 0/0
  1498 ;;		Unchanged: 0/0
  1499 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1500 ;;      Params:         0       0       0       0       0
  1501 ;;      Locals:         1       0       0       0       0
  1502 ;;      Temps:          1       0       0       0       0
  1503 ;;      Totals:         2       0       0       0       0
  1504 ;;Total ram usage:        2 bytes
  1505 ;; Hardware stack levels used: 1
  1506 ;; This function calls:
  1507 ;;		Nothing
  1508 ;; This function is called by:
  1509 ;;		_main
  1510 ;;		_lcd_gotoxy
  1511 ;;		_lcd_putc
  1512 ;;		_lcd_init
  1513 ;; This function uses a non-reentrant model
  1514 ;;
  1515                           
  1516     05EA                     _lcd_busy:	
  1517                           ;psect for function _lcd_busy
  1518                           
  1519     05EA                     l736:	
  1520                           ;incstack = 0
  1521                           ; Regs used in _lcd_busy: [wreg+status,2]
  1522                           
  1523                           
  1524                           ;lcd.c: 21: unsigned char busy;;lcd.c: 24:  TRISD4 = 1;
  1525     05EA  1683               	bsf	3,5	;RP0=1, select bank1
  1526     05EB  1303               	bcf	3,6	;RP1=0, select bank1
  1527     05EC  1608               	bsf	8,4	;volatile
  1528                           
  1529                           ;lcd.c: 25:  TRISD5 = 1;
  1530     05ED  1688               	bsf	8,5	;volatile
  1531                           
  1532                           ;lcd.c: 26:  TRISD6 = 1;
  1533     05EE  1708               	bsf	8,6	;volatile
  1534                           
  1535                           ;lcd.c: 27:  TRISD7 = 1;
  1536     05EF  1788               	bsf	8,7	;volatile
  1537                           
  1538                           ;lcd.c: 29:  RD2 = 1;
  1539     05F0  1283               	bcf	3,5	;RP0=0, select bank0
  1540     05F1  1303               	bcf	3,6	;RP1=0, select bank0
  1541     05F2  1508               	bsf	8,2	;volatile
  1542                           
  1543                           ;lcd.c: 30:  RD1 = 0;
  1544     05F3  1088               	bcf	8,1	;volatile
  1545     05F4                     l738:
  1546                           
  1547                           ;lcd.c: 31:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  1548     05F4  3006               	movlw	6
  1549     05F5  00F0               	movwf	??_lcd_busy
  1550     05F6                     u667:
  1551     05F6  0BF0               	decfsz	??_lcd_busy,f
  1552     05F7  2DF6               	goto	u667
  1553     05F8  0000               	nop
  1554     05F9                     l740:
  1555                           
  1556                           ;lcd.c: 32:  RD3 = 1;
  1557     05F9  1283               	bcf	3,5	;RP0=0, select bank0
  1558     05FA  1303               	bcf	3,6	;RP1=0, select bank0
  1559     05FB  1588               	bsf	8,3	;volatile
  1560                           
  1561                           ;lcd.c: 33:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  1562     05FC  3006               	movlw	6
  1563     05FD  00F0               	movwf	??_lcd_busy
  1564     05FE                     u677:
  1565     05FE  0BF0               	decfsz	??_lcd_busy,f
  1566     05FF  2DFE               	goto	u677
  1567     0600  0000               	nop
  1568     0601                     l742:
  1569                           
  1570                           ;lcd.c: 35:  busy = RD7;
  1571     0601  3000               	movlw	0
  1572     0602  1283               	bcf	3,5	;RP0=0, select bank0
  1573     0603  1303               	bcf	3,6	;RP1=0, select bank0
  1574     0604  1B88               	btfsc	8,7	;volatile
  1575     0605  3001               	movlw	1
  1576     0606  00F1               	movwf	lcd_busy@busy
  1577     0607                     l744:
  1578                           
  1579                           ;lcd.c: 37:  RD3 = 0;
  1580     0607  1188               	bcf	8,3	;volatile
  1581     0608                     l746:
  1582                           
  1583                           ;lcd.c: 38:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  1584     0608  3006               	movlw	6
  1585     0609  00F0               	movwf	??_lcd_busy
  1586     060A                     u687:
  1587     060A  0BF0               	decfsz	??_lcd_busy,f
  1588     060B  2E0A               	goto	u687
  1589     060C  0000               	nop
  1590     060D                     l748:
  1591                           
  1592                           ;lcd.c: 39:  RD3 = 1;
  1593     060D  1283               	bcf	3,5	;RP0=0, select bank0
  1594     060E  1303               	bcf	3,6	;RP1=0, select bank0
  1595     060F  1588               	bsf	8,3	;volatile
  1596     0610                     l750:
  1597                           
  1598                           ;lcd.c: 40:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  1599     0610  3006               	movlw	6
  1600     0611  00F0               	movwf	??_lcd_busy
  1601     0612                     u697:
  1602     0612  0BF0               	decfsz	??_lcd_busy,f
  1603     0613  2E12               	goto	u697
  1604     0614  0000               	nop
  1605     0615                     l752:
  1606                           
  1607                           ;lcd.c: 41:  RD3 = 0;
  1608     0615  1283               	bcf	3,5	;RP0=0, select bank0
  1609     0616  1303               	bcf	3,6	;RP1=0, select bank0
  1610     0617  1188               	bcf	8,3	;volatile
  1611     0618                     l754:
  1612                           
  1613                           ;lcd.c: 43:  return busy;
  1614     0618  0871               	movf	lcd_busy@busy,w
  1615     0619                     l70:
  1616     0619  0008               	return
  1617     061A                     __end_of_lcd_busy:
  1618     007E                     btemp	set	126	;btemp
  1619     007E                     wtemp0	set	126
  1620                           
  1621                           	psect	config
  1622                           
  1623                           ;Config register CONFIG1 @ 0x2007
  1624                           ;	Oscillator Selection bits
  1625                           ;	FOSC = HS, HS oscillator: High-speed crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1
      +                          /CLKIN
  1626                           ;	Watchdog Timer Enable bit
  1627                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1628                           ;	Power-up Timer Enable bit
  1629                           ;	PWRTE = OFF, PWRT disabled
  1630                           ;	RE3/MCLR pin function select bit
  1631                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1632                           ;	Code Protection bit
  1633                           ;	CP = OFF, Program memory code protection is disabled
  1634                           ;	Data Code Protection bit
  1635                           ;	CPD = OFF, Data memory code protection is disabled
  1636                           ;	Brown Out Reset Selection bits
  1637                           ;	BOREN = OFF, BOR disabled
  1638                           ;	Internal External Switchover bit
  1639                           ;	IESO = ON, Internal/External Switchover mode is enabled
  1640                           ;	Fail-Safe Clock Monitor Enabled bit
  1641                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1642                           ;	Low Voltage Programming Enable bit
  1643                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1644                           ;	In-Circuit Debugger Mode bit
  1645                           ;	DEBUG = 0x1, unprogrammed default
  1646     2007                     	org	8199
  1647     2007  24D2               	dw	9426
  1648                           
  1649                           ;Config register CONFIG2 @ 0x2008
  1650                           ;	Brown-out Reset Selection bit
  1651                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1652                           ;	Flash Program Memory Self Write Enable bits
  1653                           ;	WRT = OFF, Write protection off
  1654     2008                     	org	8200
  1655     2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    40
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      12
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    lcd_puts@s	PTR const unsigned char  size(1) Largest target is 5
		 -> dat_line1(CODE[5]), 


Critical Paths under _main in COMMON

    _main->_lcd_puts
    _lcd_puts->_lcd_putc
    _lcd_putc->_lcd_gotoxy
    _lcd_gotoxy->_lcd_put_byte
    _lcd_init->_lcd_put_byte
    _lcd_put_byte->_lcd_put_nibble

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    8722
                                             11 COMMON     1     1      0
                           _lcd_busy
                         _lcd_gotoxy
                           _lcd_init
                       _lcd_put_byte
                           _lcd_putc
                           _lcd_puts
 ---------------------------------------------------------------------------------
 (1) _lcd_puts                                             1     1      0    2555
                                             10 COMMON     1     1      0
                           _lcd_putc
 ---------------------------------------------------------------------------------
 (2) _lcd_putc                                             1     1      0    2477
                                              9 COMMON     1     1      0
                           _lcd_busy
                         _lcd_gotoxy
                       _lcd_put_byte
 ---------------------------------------------------------------------------------
 (3) _lcd_gotoxy                                           3     2      1    1365
                                              6 COMMON     3     2      1
                           _lcd_busy
                       _lcd_put_byte
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             3     3      0    1143
                                              6 COMMON     2     2      0
                           _lcd_busy
                       _lcd_put_byte
                     _lcd_put_nibble
 ---------------------------------------------------------------------------------
 (3) _lcd_put_byte                                         3     2      1    1053
                                              3 COMMON     3     2      1
                     _lcd_put_nibble
 ---------------------------------------------------------------------------------
 (4) _lcd_put_nibble                                       3     3      0      75
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (4) _lcd_busy                                             2     2      0      15
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _lcd_busy
   _lcd_gotoxy
     _lcd_busy
     _lcd_put_byte
       _lcd_put_nibble
   _lcd_init
     _lcd_busy
     _lcd_put_byte
     _lcd_put_nibble
   _lcd_put_byte
   _lcd_putc
     _lcd_busy
     _lcd_gotoxy
     _lcd_put_byte
   _lcd_puts
     _lcd_putc

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      C       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Thu Sep 05 09:54:46 2024

                      pc 0002                       l34 075B                       l70 0619  
                     l81 062A                       l83 0652                       l91 05E9  
                     l78 0694                       u10 0663                       u11 065F  
                     u30 066D                       u31 0669                       u24 0666  
                     u50 0677                       u51 0673                       u44 0670  
                     u70 0681                       u71 067D                       u64 067A  
                     u84 0684   __end_of_lcd_put_nibble 0695                       fsr 0004  
          ?_lcd_put_byte 0073                      l115 05C7                      l133 07FB  
                    l109 06E4                      l710 0666                      l712 0670  
                    l704 0654                      l714 067A                      l706 065A  
                    l740 05F9                      l716 0689                      l708 065C  
                    l750 0610                      l742 0601                      l718 0691  
                    l752 0615                      l744 0607                      l736 05EA  
                    l754 0618                      l746 0608                      l738 05F4  
                    l748 060D                      l940 0626                      l950 064B  
                    l942 062D                      l944 0632                      l936 061B  
                    l960 05D6                      l952 05C9                      l946 063A  
                    l938 0621                      l962 05DF                      l954 05CE  
                    l970 06AA                      l948 063D                      l956 05D1  
                    l972 06B3                      l980 06D9                      l964 0696  
                    l990 0775                      l982 075F                      l958 05D2  
                    l974 06BB                      l966 0697                      l992 0776  
                    l984 0768                      l976 06C6                      l968 069F  
                    l994 077C                      l986 0771                      l978 06CE  
                    l996 078B                      l988 0774                      l998 0794  
                    _RD1 0041                      _RD2 0042                      _RD3 0043  
                    _RD4 0044                      _RD5 0045                      _RD6 0046  
                    _RD7 0047                      u400 05CE                      u401 05CD  
                    u410 05E9                      u411 05E8                      u420 06A9  
                    u500 05C7                      u421 06A8                      u501 05C6  
                    u430 06C5                      u510 06FD                      u431 06C4  
                    u511 06FC                      u440 06D8                      u520 0717  
                    u441 06D7                      u521 0716                      u450 07B3  
                    u530 0728                      u451 07B2                      u531 0727  
                    u380 0626                      u460 07C5                      u540 075B  
                    u381 0625                      u461 07C4                      u541 075A  
                    u470 07D7                      u471 07D6                      u607 078F  
                    u480 07E9                      u481 07E8                      u617 079E  
                    u490 07FB                      u395 0640                      u627 062F  
                    u491 07FA                      u637 0637                      u647 0686  
                    u657 068E                      u667 05F6                      u587 076C  
                    u677 05FE                      u597 0780                      u687 060A  
                    u697 0612                      fsr0 0004                     l1000 07A3  
                   l1010 07CD                     l1002 07A9                     l1012 07D7  
                   l1004 07B3                     l1020 05AA                     l1014 07DF  
                   l1006 07BB                     l1022 05AB                     l1016 07E9  
                   l1008 07C5                     l1024 05B7                     l1040 06FE  
                   l1032 06E5                     l1018 07F1                     l1026 05BB  
                   l1050 072E                     l1042 070D                     l1034 06EA  
                   l1060 0744                     l1052 0735                     l1044 0717  
                   l1036 06EB                     l1062 0751                     l1054 0743  
                   l1046 071B                     l1038 06F3                     l1064 0755  
                   l1048 0728                     _main 06E5             lcd_busy@busy 0071  
                   btemp 007E                     start 0000          ?_lcd_put_nibble 0070  
         ??_lcd_put_byte 0074                    ?_main 0070                    main@i 007B  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 07FC             __end_of_main 075F            lcd_gotoxy@col 0077  
          lcd_gotoxy@row 0076       lcd_put_nibble@temp 0072                   ??_main 007B  
                 _TRISD1 0441                   _TRISD2 0442                   _TRISD3 0443  
                 _TRISD4 0444                   _TRISD5 0445                   _TRISD6 0446  
                 _TRISD7 0447         __end_of_lcd_busy 061A         __end_of_lcd_init 07FC  
       __end_of_lcd_putc 06E5         __end_of_lcd_puts 05C8            lcd_put_byte@b 0073  
__end_of__initialization 07FC     __end_of_lcd_put_byte 0653           __pcstackCOMMON 0070  
      lcd_gotoxy@address 0078         ??_lcd_put_nibble 0070               __pmaintext 06E5  
             _lcd_gotoxy 05C8                ?_lcd_busy 0070                ?_lcd_init 0070  
              ?_lcd_putc 0070                ?_lcd_puts 0070               __stringtab 0003  
      __end_of_dat_line1 0031        __end_of_dat_line2 002C        __end_of_cgram_dat 0022  
                __ptext1 05A9                  __ptext2 0695                  __ptext3 05C8  
                __ptext4 075F                  __ptext5 061A                  __ptext6 0653  
                __ptext7 05EA               ??_lcd_busy 0070               ??_lcd_init 0076  
             ??_lcd_putc 0079               ??_lcd_puts 007A     end_of_initialization 07FC  
         lcd_put_byte@rs 0075             _lcd_put_byte 061A              ?_lcd_gotoxy 0076  
    start_initialization 07FC                ___latbits 0002                _dat_line1 002C  
              _dat_line2 0022                _cgram_dat 0009                __pstrings 0003  
            __stringbase 0008                lcd_putc@c 0079                lcd_puts@s 007A  
           ??_lcd_gotoxy 0077       __end_of_lcd_gotoxy 05EA       __end_of__stringtab 0009  
               _lcd_busy 05EA                 _lcd_init 075F                 _lcd_putc 0695  
               _lcd_puts 05A9          lcd_put_nibble@b 0071                stringcode 0003  
         _lcd_put_nibble 0653                 stringdir 0003                 stringtab 0003  
