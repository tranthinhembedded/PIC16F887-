

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Thu Sep 19 10:14:58 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	psect	text8,local,class=CODE,merge=1,delta=2
    17                           	psect	text9,local,class=CODE,merge=1,delta=2
    18                           	psect	text10,local,class=CODE,merge=1,delta=2
    19                           	psect	text11,local,class=CODE,merge=1,delta=2
    20                           	psect	text12,local,class=CODE,merge=1,delta=2
    21                           	psect	text13,local,class=CODE,merge=1,delta=2
    22                           	psect	text14,local,class=CODE,merge=1,delta=2
    23                           	psect	text15,local,class=CODE,merge=1,delta=2
    24                           	psect	text16,local,class=CODE,merge=1,delta=2
    25                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    26                           	dabs	1,0x7E,2
    27     0000                     
    28                           ; Generated 12/10/2023 GMT
    29                           ; 
    30                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    31                           ; All rights reserved.
    32                           ; 
    33                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    34                           ; 
    35                           ; Redistribution and use in source and binary forms, with or without modification, are
    36                           ; permitted provided that the following conditions are met:
    37                           ; 
    38                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    39                           ;        conditions and the following disclaimer.
    40                           ; 
    41                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    42                           ;        of conditions and the following disclaimer in the documentation and/or other
    43                           ;        materials provided with the distribution. Publication is not required when
    44                           ;        this file is used in an embedded application.
    45                           ; 
    46                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    47                           ;        software without specific prior written permission.
    48                           ; 
    49                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    50                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    51                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    52                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    53                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    54                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    55                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    56                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    57                           ; 
    58                           ; 
    59                           ; Code-generator required, PIC16F887 Definitions
    60                           ; 
    61                           ; SFR Addresses
    62     0000                     	;# 
    63     0001                     	;# 
    64     0002                     	;# 
    65     0003                     	;# 
    66     0004                     	;# 
    67     0005                     	;# 
    68     0006                     	;# 
    69     0007                     	;# 
    70     0008                     	;# 
    71     0009                     	;# 
    72     000A                     	;# 
    73     000B                     	;# 
    74     000C                     	;# 
    75     000D                     	;# 
    76     000E                     	;# 
    77     000E                     	;# 
    78     000F                     	;# 
    79     0010                     	;# 
    80     0011                     	;# 
    81     0012                     	;# 
    82     0013                     	;# 
    83     0014                     	;# 
    84     0015                     	;# 
    85     0015                     	;# 
    86     0016                     	;# 
    87     0017                     	;# 
    88     0018                     	;# 
    89     0019                     	;# 
    90     001A                     	;# 
    91     001B                     	;# 
    92     001B                     	;# 
    93     001C                     	;# 
    94     001D                     	;# 
    95     001E                     	;# 
    96     001F                     	;# 
    97     0081                     	;# 
    98     0085                     	;# 
    99     0086                     	;# 
   100     0087                     	;# 
   101     0088                     	;# 
   102     0089                     	;# 
   103     008C                     	;# 
   104     008D                     	;# 
   105     008E                     	;# 
   106     008F                     	;# 
   107     0090                     	;# 
   108     0091                     	;# 
   109     0092                     	;# 
   110     0093                     	;# 
   111     0093                     	;# 
   112     0093                     	;# 
   113     0094                     	;# 
   114     0095                     	;# 
   115     0096                     	;# 
   116     0097                     	;# 
   117     0098                     	;# 
   118     0099                     	;# 
   119     009A                     	;# 
   120     009B                     	;# 
   121     009C                     	;# 
   122     009D                     	;# 
   123     009E                     	;# 
   124     009F                     	;# 
   125     0105                     	;# 
   126     0107                     	;# 
   127     0108                     	;# 
   128     0109                     	;# 
   129     010C                     	;# 
   130     010C                     	;# 
   131     010D                     	;# 
   132     010E                     	;# 
   133     010F                     	;# 
   134     0185                     	;# 
   135     0187                     	;# 
   136     0188                     	;# 
   137     0189                     	;# 
   138     018C                     	;# 
   139     018D                     	;# 
   140     0000                     	;# 
   141     0001                     	;# 
   142     0002                     	;# 
   143     0003                     	;# 
   144     0004                     	;# 
   145     0005                     	;# 
   146     0006                     	;# 
   147     0007                     	;# 
   148     0008                     	;# 
   149     0009                     	;# 
   150     000A                     	;# 
   151     000B                     	;# 
   152     000C                     	;# 
   153     000D                     	;# 
   154     000E                     	;# 
   155     000E                     	;# 
   156     000F                     	;# 
   157     0010                     	;# 
   158     0011                     	;# 
   159     0012                     	;# 
   160     0013                     	;# 
   161     0014                     	;# 
   162     0015                     	;# 
   163     0015                     	;# 
   164     0016                     	;# 
   165     0017                     	;# 
   166     0018                     	;# 
   167     0019                     	;# 
   168     001A                     	;# 
   169     001B                     	;# 
   170     001B                     	;# 
   171     001C                     	;# 
   172     001D                     	;# 
   173     001E                     	;# 
   174     001F                     	;# 
   175     0081                     	;# 
   176     0085                     	;# 
   177     0086                     	;# 
   178     0087                     	;# 
   179     0088                     	;# 
   180     0089                     	;# 
   181     008C                     	;# 
   182     008D                     	;# 
   183     008E                     	;# 
   184     008F                     	;# 
   185     0090                     	;# 
   186     0091                     	;# 
   187     0092                     	;# 
   188     0093                     	;# 
   189     0093                     	;# 
   190     0093                     	;# 
   191     0094                     	;# 
   192     0095                     	;# 
   193     0096                     	;# 
   194     0097                     	;# 
   195     0098                     	;# 
   196     0099                     	;# 
   197     009A                     	;# 
   198     009B                     	;# 
   199     009C                     	;# 
   200     009D                     	;# 
   201     009E                     	;# 
   202     009F                     	;# 
   203     0105                     	;# 
   204     0107                     	;# 
   205     0108                     	;# 
   206     0109                     	;# 
   207     010C                     	;# 
   208     010C                     	;# 
   209     010D                     	;# 
   210     010E                     	;# 
   211     010F                     	;# 
   212     0185                     	;# 
   213     0187                     	;# 
   214     0188                     	;# 
   215     0189                     	;# 
   216     018C                     	;# 
   217     018D                     	;# 
   218     0000                     	;# 
   219     0001                     	;# 
   220     0002                     	;# 
   221     0003                     	;# 
   222     0004                     	;# 
   223     0005                     	;# 
   224     0006                     	;# 
   225     0007                     	;# 
   226     0008                     	;# 
   227     0009                     	;# 
   228     000A                     	;# 
   229     000B                     	;# 
   230     000C                     	;# 
   231     000D                     	;# 
   232     000E                     	;# 
   233     000E                     	;# 
   234     000F                     	;# 
   235     0010                     	;# 
   236     0011                     	;# 
   237     0012                     	;# 
   238     0013                     	;# 
   239     0014                     	;# 
   240     0015                     	;# 
   241     0015                     	;# 
   242     0016                     	;# 
   243     0017                     	;# 
   244     0018                     	;# 
   245     0019                     	;# 
   246     001A                     	;# 
   247     001B                     	;# 
   248     001B                     	;# 
   249     001C                     	;# 
   250     001D                     	;# 
   251     001E                     	;# 
   252     001F                     	;# 
   253     0081                     	;# 
   254     0085                     	;# 
   255     0086                     	;# 
   256     0087                     	;# 
   257     0088                     	;# 
   258     0089                     	;# 
   259     008C                     	;# 
   260     008D                     	;# 
   261     008E                     	;# 
   262     008F                     	;# 
   263     0090                     	;# 
   264     0091                     	;# 
   265     0092                     	;# 
   266     0093                     	;# 
   267     0093                     	;# 
   268     0093                     	;# 
   269     0094                     	;# 
   270     0095                     	;# 
   271     0096                     	;# 
   272     0097                     	;# 
   273     0098                     	;# 
   274     0099                     	;# 
   275     009A                     	;# 
   276     009B                     	;# 
   277     009C                     	;# 
   278     009D                     	;# 
   279     009E                     	;# 
   280     009F                     	;# 
   281     0105                     	;# 
   282     0107                     	;# 
   283     0108                     	;# 
   284     0109                     	;# 
   285     010C                     	;# 
   286     010C                     	;# 
   287     010D                     	;# 
   288     010E                     	;# 
   289     010F                     	;# 
   290     0185                     	;# 
   291     0187                     	;# 
   292     0188                     	;# 
   293     0189                     	;# 
   294     018C                     	;# 
   295     018D                     	;# 
   296                           
   297                           	psect	strings
   298     0003                     __pstrings:
   299     0003                     stringtab:
   300     0003                     __stringtab:
   301     0003                     stringcode:	
   302                           ;	String table - string pointers are 1 byte each
   303                           
   304     0003                     stringdir:
   305     0003  3000               	movlw	high stringdir
   306     0004  008A               	movwf	10
   307     0005  0804               	movf	4,w
   308     0006  0A84               	incf	4,f
   309     0007  0782               	addwf	2,f
   310     0008                     __stringbase:
   311     0008  3400               	retlw	0
   312     0009                     __end_of__stringtab:
   313     0009                     _dat_line2:
   314     0009  3442               	retlw	66
   315     000A  3406               	retlw	6
   316     000B  3469               	retlw	105
   317     000C  3420               	retlw	32
   318     000D  3454               	retlw	84
   319     000E  3407               	retlw	7
   320     000F  3470               	retlw	112
   321     0010  3420               	retlw	32
   322     0011  3454               	retlw	84
   323     0012  3469               	retlw	105
   324     0013  346D               	retlw	109
   325     0014  3465               	retlw	101
   326     0015  3472               	retlw	114
   327     0016  3430               	retlw	48
   328     0017                     __end_of_dat_line2:
   329     0017                     _dat_line1:
   330     0017  3454               	retlw	84
   331     0018  3400               	retlw	0
   332     0019  3401               	retlw	1
   333     001A  346E               	retlw	110
   334     001B  3420               	retlw	32
   335     001C  3402               	retlw	2
   336     001D  3403               	retlw	3
   337     001E  3463               	retlw	99
   338     001F  3420               	retlw	32
   339     0020  3454               	retlw	84
   340     0021  3468               	retlw	104
   341     0022  3404               	retlw	4
   342     0023  346E               	retlw	110
   343     0024  3468               	retlw	104
   344     0025                     __end_of_dat_line1:
   345     0025                     _cgram_dat:
   346     0025  3400               	retlw	0
   347     0026  3400               	retlw	0
   348     0027  3400               	retlw	0
   349     0028  3418               	retlw	24
   350     0029  3414               	retlw	20
   351     002A  3410               	retlw	16
   352     002B  3410               	retlw	16
   353     002C  3400               	retlw	0
   354     002D  3402               	retlw	2
   355     002E  3409               	retlw	9
   356     002F  3414               	retlw	20
   357     0030  3400               	retlw	0
   358     0031  341C               	retlw	28
   359     0032  3414               	retlw	20
   360     0033  341E               	retlw	30
   361     0034  3400               	retlw	0
   362     0035  340E               	retlw	14
   363     0036  3409               	retlw	9
   364     0037  3409               	retlw	9
   365     0038  341D               	retlw	29
   366     0039  3409               	retlw	9
   367     003A  3409               	retlw	9
   368     003B  340E               	retlw	14
   369     003C  3400               	retlw	0
   370     003D  3404               	retlw	4
   371     003E  3408               	retlw	8
   372     003F  3412               	retlw	18
   373     0040  3401               	retlw	1
   374     0041  3412               	retlw	18
   375     0042  3412               	retlw	18
   376     0043  341E               	retlw	30
   377     0044  3400               	retlw	0
   378     0045  3400               	retlw	0
   379     0046  3404               	retlw	4
   380     0047  3400               	retlw	0
   381     0048  340C               	retlw	12
   382     0049  3404               	retlw	4
   383     004A  3400               	retlw	0
   384     004B  3404               	retlw	4
   385     004C  3400               	retlw	0
   386     004D  3400               	retlw	0
   387     004E  340E               	retlw	14
   388     004F  3411               	retlw	17
   389     0050  3411               	retlw	17
   390     0051  3411               	retlw	17
   391     0052  340E               	retlw	14
   392     0053  3400               	retlw	0
   393     0054  3404               	retlw	4
   394     0055  3408               	retlw	8
   395     0056  3404               	retlw	4
   396     0057  3400               	retlw	0
   397     0058  340C               	retlw	12
   398     0059  3414               	retlw	20
   399     005A  3414               	retlw	20
   400     005B  341E               	retlw	30
   401     005C  3400               	retlw	0
   402     005D  3408               	retlw	8
   403     005E  3414               	retlw	20
   404     005F  3408               	retlw	8
   405     0060  3414               	retlw	20
   406     0061  341C               	retlw	28
   407     0062  3414               	retlw	20
   408     0063  3408               	retlw	8
   409     0064  3400               	retlw	0
   410     0065  3499               	retlw	153
   411     0066                     __end_of_cgram_dat:
   412     0001                     _TMR0	set	1
   413     0044                     _RD4	set	68
   414     0045                     _RD5	set	69
   415     0046                     _RD6	set	70
   416     0047                     _RD7	set	71
   417     0043                     _RD3	set	67
   418     0041                     _RD1	set	65
   419     0042                     _RD2	set	66
   420     005D                     _TMR0IE	set	93
   421     005E                     _PEIE	set	94
   422     005F                     _GIE	set	95
   423     005A                     _TMR0IF	set	90
   424     0442                     _TRISD2	set	1090
   425     0441                     _TRISD1	set	1089
   426     0443                     _TRISD3	set	1091
   427     0447                     _TRISD7	set	1095
   428     0446                     _TRISD6	set	1094
   429     0445                     _TRISD5	set	1093
   430     0444                     _TRISD4	set	1092
   431     0408                     _PS0	set	1032
   432     0409                     _PS1	set	1033
   433     040A                     _PS2	set	1034
   434     040B                     _PSA	set	1035
   435     040D                     _T0CS	set	1037
   436     0066                     STR_1:
   437     0066  340C               	retlw	12
   438     0067  3400               	retlw	0
   439     0066                     
   440                           	psect	cinit
   441     07FC                     start_initialization:	
   442                           ; #config settings
   443                           
   444     07FC                     __initialization:
   445     07FC                     end_of_initialization:	
   446                           ;End of C runtime variable initialization code
   447                           
   448     07FC                     __end_of__initialization:
   449     07FC  0183               	clrf	3
   450     07FD  120A  118A  2ED1   	ljmp	_main	;jump to C main() function
   451                           
   452                           	psect	cstackCOMMON
   453     0070                     __pcstackCOMMON:
   454     0070                     ?_lcd_busy:
   455     0070                     ??_lcd_busy:	
   456                           ; 1 bytes @ 0x0
   457                           
   458     0070                     ?_lcd_ShiftLeft:	
   459                           ; 1 bytes @ 0x0
   460                           
   461     0070                     ?_lcd_ShiftRight:	
   462                           ; 1 bytes @ 0x0
   463                           
   464     0070                     ?_lcd_putc:	
   465                           ; 1 bytes @ 0x0
   466                           
   467     0070                     ?_lcd_puts:	
   468                           ; 1 bytes @ 0x0
   469                           
   470     0070                     ?_lcd_init:	
   471                           ; 1 bytes @ 0x0
   472                           
   473     0070                     ?_delay100us:	
   474                           ; 1 bytes @ 0x0
   475                           
   476     0070                     ?_delay200ms:	
   477                           ; 1 bytes @ 0x0
   478                           
   479     0070                     ?_in_chu:	
   480                           ; 1 bytes @ 0x0
   481                           
   482     0070                     ?_main:	
   483                           ; 1 bytes @ 0x0
   484                           
   485     0070                     ?_lcd_put_nibble:	
   486                           ; 1 bytes @ 0x0
   487                           
   488     0070                     ??_lcd_put_nibble:	
   489                           ; 1 bytes @ 0x0
   490                           
   491     0070                     delay100us@n:	
   492                           ; 1 bytes @ 0x0
   493                           
   494                           
   495                           ; 2 bytes @ 0x0
   496     0070                     	ds	1
   497     0071                     lcd_busy@busy:
   498     0071                     lcd_put_nibble@b:	
   499                           ; 1 bytes @ 0x1
   500                           
   501                           
   502                           ; 1 bytes @ 0x1
   503     0071                     	ds	1
   504     0072                     ??_delay100us:
   505     0072                     ??_delay200ms:	
   506                           ; 1 bytes @ 0x2
   507                           
   508     0072                     lcd_put_nibble@temp:	
   509                           ; 1 bytes @ 0x2
   510                           
   511                           
   512                           ; 1 bytes @ 0x2
   513     0072                     	ds	1
   514     0073                     ?_lcd_put_byte:
   515     0073                     lcd_put_byte@b:	
   516                           ; 1 bytes @ 0x3
   517                           
   518                           
   519                           ; 1 bytes @ 0x3
   520     0073                     	ds	1
   521     0074                     ??_lcd_put_byte:
   522                           
   523                           ; 1 bytes @ 0x4
   524     0074                     	ds	1
   525     0075                     lcd_put_byte@rs:
   526                           
   527                           ; 1 bytes @ 0x5
   528     0075                     	ds	1
   529     0076                     ??_lcd_ShiftLeft:
   530     0076                     ??_lcd_ShiftRight:	
   531                           ; 1 bytes @ 0x6
   532                           
   533     0076                     ?_lcd_gotoxy:	
   534                           ; 1 bytes @ 0x6
   535                           
   536     0076                     ??_lcd_init:	
   537                           ; 1 bytes @ 0x6
   538                           
   539     0076                     ?_load_custom_characters:	
   540                           ; 1 bytes @ 0x6
   541                           
   542     0076                     ?_shift_left_screen:	
   543                           ; 1 bytes @ 0x6
   544                           
   545     0076                     ?_shift_right_screen:	
   546                           ; 1 bytes @ 0x6
   547                           
   548     0076                     load_custom_characters@start_address:	
   549                           ; 1 bytes @ 0x6
   550                           
   551     0076                     lcd_gotoxy@row:	
   552                           ; 1 bytes @ 0x6
   553                           
   554     0076                     shift_left_screen@times:	
   555                           ; 1 bytes @ 0x6
   556                           
   557     0076                     shift_right_screen@times:	
   558                           ; 2 bytes @ 0x6
   559                           
   560                           
   561                           ; 2 bytes @ 0x6
   562     0076                     	ds	1
   563     0077                     ??_lcd_gotoxy:
   564     0077                     ??_load_custom_characters:	
   565                           ; 1 bytes @ 0x7
   566                           
   567     0077                     lcd_gotoxy@col:	
   568                           ; 1 bytes @ 0x7
   569                           
   570                           
   571                           ; 1 bytes @ 0x7
   572     0077                     	ds	1
   573     0078                     ??_shift_left_screen:
   574     0078                     ??_shift_right_screen:	
   575                           ; 1 bytes @ 0x8
   576                           
   577     0078                     load_custom_characters@custom_data:	
   578                           ; 1 bytes @ 0x8
   579                           
   580     0078                     lcd_gotoxy@address:	
   581                           ; 1 bytes @ 0x8
   582                           
   583                           
   584                           ; 1 bytes @ 0x8
   585     0078                     	ds	1
   586     0079                     ??_lcd_putc:
   587     0079                     load_custom_characters@i:	
   588                           ; 1 bytes @ 0x9
   589                           
   590     0079                     lcd_putc@c:	
   591                           ; 1 bytes @ 0x9
   592                           
   593     0079                     shift_left_screen@i:	
   594                           ; 1 bytes @ 0x9
   595                           
   596     0079                     shift_right_screen@i:	
   597                           ; 2 bytes @ 0x9
   598                           
   599                           
   600                           ; 2 bytes @ 0x9
   601     0079                     	ds	1
   602     007A                     ??_lcd_puts:
   603     007A                     ??_in_chu:	
   604                           ; 1 bytes @ 0xA
   605                           
   606     007A                     lcd_puts@s:	
   607                           ; 1 bytes @ 0xA
   608                           
   609     007A                     in_chu@j:	
   610                           ; 1 bytes @ 0xA
   611                           
   612                           
   613                           ; 2 bytes @ 0xA
   614     007A                     	ds	1
   615     007B                     ?_chop_tat:
   616     007B                     chop_tat@times:	
   617                           ; 1 bytes @ 0xB
   618                           
   619                           
   620                           ; 2 bytes @ 0xB
   621     007B                     	ds	1
   622     007C                     in_chu@j_90:
   623                           
   624                           ; 2 bytes @ 0xC
   625     007C                     	ds	1
   626     007D                     ??_chop_tat:
   627                           
   628                           ; 1 bytes @ 0xD
   629     007D                     	ds	1
   630     007E                     ??_main:
   631                           
   632                           	psect	cstackBANK0
   633     0020                     __pcstackBANK0:	
   634                           ; 1 bytes @ 0xE
   635                           
   636     0020                     chop_tat@i:
   637                           
   638                           ; 2 bytes @ 0x0
   639     0020                     	ds	2
   640     0022                     chop_tat@j:
   641                           
   642                           ; 2 bytes @ 0x2
   643     0022                     	ds	2
   644     0024                     chop_tat@j_95:
   645                           
   646                           ; 2 bytes @ 0x4
   647     0024                     	ds	2
   648     0026                     main@i:
   649                           
   650                           ; 2 bytes @ 0x6
   651     0026                     	ds	2
   652     0028                     main@i_109:
   653                           
   654                           ; 2 bytes @ 0x8
   655     0028                     	ds	2
   656                           
   657                           	psect	maintext
   658     06D1                     __pmaintext:	
   659 ;;
   660 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   661 ;;
   662 ;; *************** function _main *****************
   663 ;; Defined at:
   664 ;;		line 106 in file "BT3.c"
   665 ;; Parameters:    Size  Location     Type
   666 ;;		None
   667 ;; Auto vars:     Size  Location     Type
   668 ;;  i               2    8[BANK0 ] int 
   669 ;;  i               2    6[BANK0 ] int 
   670 ;; Return value:  Size  Location     Type
   671 ;;                  1    wreg      void 
   672 ;; Registers used:
   673 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   674 ;; Tracked objects:
   675 ;;		On entry : B00/0
   676 ;;		On exit  : 0/0
   677 ;;		Unchanged: 0/0
   678 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   679 ;;      Params:         0       0       0       0       0
   680 ;;      Locals:         0       4       0       0       0
   681 ;;      Temps:          0       0       0       0       0
   682 ;;      Totals:         0       4       0       0       0
   683 ;;Total ram usage:        4 bytes
   684 ;; Hardware stack levels required when called: 6
   685 ;; This function calls:
   686 ;;		_chop_tat
   687 ;;		_delay200ms
   688 ;;		_in_chu
   689 ;;		_lcd_init
   690 ;;		_lcd_putc
   691 ;;		_lcd_puts
   692 ;;		_load_custom_characters
   693 ;;		_shift_left_screen
   694 ;;		_shift_right_screen
   695 ;; This function is called by:
   696 ;;		Startup code after reset
   697 ;; This function uses a non-reentrant model
   698 ;;
   699                           
   700     06D1                     _main:	
   701                           ;psect for function _main
   702                           
   703     06D1                     l1390:	
   704                           ;incstack = 0
   705                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   706                           
   707                           
   708                           ;BT3.c: 108:     lcd_init();
   709     06D1  120A  118A  275F  120A  118A  	fcall	_lcd_init
   710     06D6                     l1392:
   711                           
   712                           ;BT3.c: 109:     load_custom_characters(cgram_dat, 0);
   713     06D6  01F6               	clrf	load_custom_characters@start_address
   714     06D7  301D               	movlw	(low ((_cgram_dat-__stringbase)| (0+32768)))& (0+255)
   715     06D8  120A  118A  2570  120A  118A  	fcall	_load_custom_characters
   716     06DD                     l1394:
   717                           
   718                           ;BT3.c: 110:     lcd_putc('\f');
   719     06DD  300C               	movlw	12
   720     06DE  120A  118A  2606  120A  118A  	fcall	_lcd_putc
   721     06E3                     l1396:
   722                           
   723                           ;BT3.c: 112:     chop_tat(3);
   724     06E3  3003               	movlw	3
   725     06E4  00FB               	movwf	chop_tat@times
   726     06E5  3000               	movlw	0
   727     06E6  00FC               	movwf	chop_tat@times+1
   728     06E7  120A  118A  2656  120A  118A  	fcall	_chop_tat
   729     06EC                     l1398:
   730                           
   731                           ;BT3.c: 113:     lcd_puts("\f");
   732     06EC  305E               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   733     06ED  120A  118A  241D  120A  118A  	fcall	_lcd_puts
   734     06F2                     l1400:
   735                           
   736                           ;BT3.c: 115:     for(int i = 0; i< 2; i++){
   737     06F2  1283               	bcf	3,5	;RP0=0, select bank0
   738     06F3  1303               	bcf	3,6	;RP1=0, select bank0
   739     06F4  01A6               	clrf	main@i
   740     06F5  01A7               	clrf	main@i+1
   741     06F6                     l1406:
   742                           
   743                           ;BT3.c: 116:         in_chu();
   744     06F6  120A  118A  25BA  120A  118A  	fcall	_in_chu
   745     06FB                     l1408:
   746                           
   747                           ;BT3.c: 117:         delay200ms();
   748     06FB  120A  118A  2413  120A  118A  	fcall	_delay200ms
   749     0700                     l1410:
   750                           
   751                           ;BT3.c: 118:         shift_left_screen(16);
   752     0700  3010               	movlw	16
   753     0701  00F6               	movwf	shift_left_screen@times
   754     0702  3000               	movlw	0
   755     0703  00F7               	movwf	shift_left_screen@times+1
   756     0704  120A  118A  245E  120A  118A  	fcall	_shift_left_screen
   757                           
   758                           ;BT3.c: 119:         lcd_puts("\f");
   759     0709  305E               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   760     070A  120A  118A  241D  120A  118A  	fcall	_lcd_puts
   761     070F                     l1412:
   762                           
   763                           ;BT3.c: 120:     }
   764     070F  3001               	movlw	1
   765     0710  1283               	bcf	3,5	;RP0=0, select bank0
   766     0711  1303               	bcf	3,6	;RP1=0, select bank0
   767     0712  07A6               	addwf	main@i,f
   768     0713  1803               	skipnc
   769     0714  0AA7               	incf	main@i+1,f
   770     0715  3000               	movlw	0
   771     0716  07A7               	addwf	main@i+1,f
   772     0717                     l1414:
   773     0717  0827               	movf	main@i+1,w
   774     0718  3A80               	xorlw	128
   775     0719  00FF               	movwf	btemp+1
   776     071A  3080               	movlw	128
   777     071B  027F               	subwf	btemp+1,w
   778     071C  1D03               	skipz
   779     071D  2F20               	goto	u835
   780     071E  3002               	movlw	2
   781     071F  0226               	subwf	main@i,w
   782     0720                     u835:
   783     0720  1C03               	skipc
   784     0721  2F23               	goto	u831
   785     0722  2F24               	goto	u830
   786     0723                     u831:
   787     0723  2EF6               	goto	l1406
   788     0724                     u830:
   789     0724                     l1416:
   790                           
   791                           ;BT3.c: 122:     for(int i = 0; i< 2; i++){
   792     0724  1283               	bcf	3,5	;RP0=0, select bank0
   793     0725  1303               	bcf	3,6	;RP1=0, select bank0
   794     0726  01A8               	clrf	main@i_109
   795     0727  01A9               	clrf	main@i_109+1
   796     0728                     l1422:
   797                           
   798                           ;BT3.c: 123:         in_chu();
   799     0728  120A  118A  25BA  120A  118A  	fcall	_in_chu
   800     072D                     l1424:
   801                           
   802                           ;BT3.c: 124:         delay200ms();
   803     072D  120A  118A  2413  120A  118A  	fcall	_delay200ms
   804     0732                     l1426:
   805                           
   806                           ;BT3.c: 125:         shift_right_screen(16);
   807     0732  3010               	movlw	16
   808     0733  00F6               	movwf	shift_right_screen@times
   809     0734  3000               	movlw	0
   810     0735  00F7               	movwf	shift_right_screen@times+1
   811     0736  120A  118A  2480  120A  118A  	fcall	_shift_right_screen
   812                           
   813                           ;BT3.c: 126:         lcd_puts("\f");
   814     073B  305E               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   815     073C  120A  118A  241D  120A  118A  	fcall	_lcd_puts
   816     0741                     l1428:
   817                           
   818                           ;BT3.c: 127:     }
   819     0741  3001               	movlw	1
   820     0742  1283               	bcf	3,5	;RP0=0, select bank0
   821     0743  1303               	bcf	3,6	;RP1=0, select bank0
   822     0744  07A8               	addwf	main@i_109,f
   823     0745  1803               	skipnc
   824     0746  0AA9               	incf	main@i_109+1,f
   825     0747  3000               	movlw	0
   826     0748  07A9               	addwf	main@i_109+1,f
   827     0749                     l1430:
   828     0749  0829               	movf	main@i_109+1,w
   829     074A  3A80               	xorlw	128
   830     074B  00FF               	movwf	btemp+1
   831     074C  3080               	movlw	128
   832     074D  027F               	subwf	btemp+1,w
   833     074E  1D03               	skipz
   834     074F  2F52               	goto	u845
   835     0750  3002               	movlw	2
   836     0751  0228               	subwf	main@i_109,w
   837     0752                     u845:
   838     0752  1C03               	skipc
   839     0753  2F55               	goto	u841
   840     0754  2F56               	goto	u840
   841     0755                     u841:
   842     0755  2F28               	goto	l1422
   843     0756                     u840:
   844     0756                     l1432:
   845                           
   846                           ;BT3.c: 129:     in_chu();
   847     0756  120A  118A  25BA  120A  118A  	fcall	_in_chu
   848     075B                     l104:	
   849                           ;BT3.c: 132:     while(1);
   850                           
   851     075B                     l105:
   852     075B  2F5B               	goto	l104
   853     075C  120A  118A  2800   	ljmp	start
   854     075F                     __end_of_main:
   855                           
   856                           	psect	text1
   857     0480                     __ptext1:	
   858 ;; *************** function _shift_right_screen *****************
   859 ;; Defined at:
   860 ;;		line 72 in file "BT3.c"
   861 ;; Parameters:    Size  Location     Type
   862 ;;  times           2    6[COMMON] int 
   863 ;; Auto vars:     Size  Location     Type
   864 ;;  i               2    9[COMMON] int 
   865 ;; Return value:  Size  Location     Type
   866 ;;                  1    wreg      void 
   867 ;; Registers used:
   868 ;;		wreg, status,2, status,0, pclath, cstack
   869 ;; Tracked objects:
   870 ;;		On entry : 0/0
   871 ;;		On exit  : 0/0
   872 ;;		Unchanged: 0/0
   873 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   874 ;;      Params:         2       0       0       0       0
   875 ;;      Locals:         2       0       0       0       0
   876 ;;      Temps:          1       0       0       0       0
   877 ;;      Totals:         5       0       0       0       0
   878 ;;Total ram usage:        5 bytes
   879 ;; Hardware stack levels used: 1
   880 ;; Hardware stack levels required when called: 3
   881 ;; This function calls:
   882 ;;		_delay200ms
   883 ;;		_lcd_ShiftRight
   884 ;; This function is called by:
   885 ;;		_main
   886 ;; This function uses a non-reentrant model
   887 ;;
   888                           
   889     0480                     _shift_right_screen:	
   890                           ;psect for function _shift_right_screen
   891                           
   892     0480                     l1276:	
   893                           ;incstack = 0
   894                           ; Regs used in _shift_right_screen: [wreg+status,2+status,0+pclath+cstack]
   895                           
   896                           
   897                           ;BT3.c: 72: void shift_right_screen(int times);BT3.c: 73: {;BT3.c: 74:     for(int i = 0
      +                          ; i < times; i++) {
   898     0480  01F9               	clrf	shift_right_screen@i
   899     0481  01FA               	clrf	shift_right_screen@i+1
   900     0482  2C93               	goto	l1282
   901     0483                     l1278:
   902                           
   903                           ;BT3.c: 75:         lcd_ShiftRight();
   904     0483  120A  118A  240A  120A  118A  	fcall	_lcd_ShiftRight
   905                           
   906                           ;BT3.c: 76:         delay200ms();
   907     0488  120A  118A  2413  120A  118A  	fcall	_delay200ms
   908     048D                     l1280:
   909                           
   910                           ;BT3.c: 77:     }
   911     048D  3001               	movlw	1
   912     048E  07F9               	addwf	shift_right_screen@i,f
   913     048F  1803               	skipnc
   914     0490  0AFA               	incf	shift_right_screen@i+1,f
   915     0491  3000               	movlw	0
   916     0492  07FA               	addwf	shift_right_screen@i+1,f
   917     0493                     l1282:
   918     0493  087A               	movf	shift_right_screen@i+1,w
   919     0494  3A80               	xorlw	128
   920     0495  00F8               	movwf	??_shift_right_screen
   921     0496  0877               	movf	shift_right_screen@times+1,w
   922     0497  3A80               	xorlw	128
   923     0498  0278               	subwf	??_shift_right_screen,w
   924     0499  1D03               	skipz
   925     049A  2C9D               	goto	u725
   926     049B  0876               	movf	shift_right_screen@times,w
   927     049C  0279               	subwf	shift_right_screen@i,w
   928     049D                     u725:
   929     049D  1C03               	skipc
   930     049E  2CA0               	goto	u721
   931     049F  2CA1               	goto	u720
   932     04A0                     u721:
   933     04A0  2C83               	goto	l1278
   934     04A1                     u720:
   935     04A1                     l78:
   936     04A1  0008               	return
   937     04A2                     __end_of_shift_right_screen:
   938                           
   939                           	psect	text2
   940     040A                     __ptext2:	
   941 ;; *************** function _lcd_ShiftRight *****************
   942 ;; Defined at:
   943 ;;		line 304 in file "lcd.c"
   944 ;; Parameters:    Size  Location     Type
   945 ;;		None
   946 ;; Auto vars:     Size  Location     Type
   947 ;;		None
   948 ;; Return value:  Size  Location     Type
   949 ;;                  1    wreg      void 
   950 ;; Registers used:
   951 ;;		wreg, status,2, status,0, pclath, cstack
   952 ;; Tracked objects:
   953 ;;		On entry : 0/0
   954 ;;		On exit  : 0/0
   955 ;;		Unchanged: 0/0
   956 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   957 ;;      Params:         0       0       0       0       0
   958 ;;      Locals:         0       0       0       0       0
   959 ;;      Temps:          0       0       0       0       0
   960 ;;      Totals:         0       0       0       0       0
   961 ;;Total ram usage:        0 bytes
   962 ;; Hardware stack levels used: 1
   963 ;; Hardware stack levels required when called: 2
   964 ;; This function calls:
   965 ;;		_lcd_put_byte
   966 ;; This function is called by:
   967 ;;		_shift_right_screen
   968 ;;		_lcd_MoveRight
   969 ;; This function uses a non-reentrant model
   970 ;;
   971                           
   972     040A                     _lcd_ShiftRight:	
   973                           ;psect for function _lcd_ShiftRight
   974                           
   975     040A                     l1244:	
   976                           ;incstack = 0
   977                           ; Regs used in _lcd_ShiftRight: [wreg+status,2+status,0+pclath+cstack]
   978                           
   979                           
   980                           ;lcd.c: 309:      lcd_put_byte(0,0x1C);
   981     040A  301C               	movlw	28
   982     040B  00F3               	movwf	lcd_put_byte@b
   983     040C  3000               	movlw	0
   984     040D  120A  118A  24F5  120A  118A  	fcall	_lcd_put_byte
   985     0412                     l209:
   986     0412  0008               	return
   987     0413                     __end_of_lcd_ShiftRight:
   988                           
   989                           	psect	text3
   990     045E                     __ptext3:	
   991 ;; *************** function _shift_left_screen *****************
   992 ;; Defined at:
   993 ;;		line 65 in file "BT3.c"
   994 ;; Parameters:    Size  Location     Type
   995 ;;  times           2    6[COMMON] int 
   996 ;; Auto vars:     Size  Location     Type
   997 ;;  i               2    9[COMMON] int 
   998 ;; Return value:  Size  Location     Type
   999 ;;                  1    wreg      void 
  1000 ;; Registers used:
  1001 ;;		wreg, status,2, status,0, pclath, cstack
  1002 ;; Tracked objects:
  1003 ;;		On entry : 0/0
  1004 ;;		On exit  : 0/0
  1005 ;;		Unchanged: 0/0
  1006 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1007 ;;      Params:         2       0       0       0       0
  1008 ;;      Locals:         2       0       0       0       0
  1009 ;;      Temps:          1       0       0       0       0
  1010 ;;      Totals:         5       0       0       0       0
  1011 ;;Total ram usage:        5 bytes
  1012 ;; Hardware stack levels used: 1
  1013 ;; Hardware stack levels required when called: 3
  1014 ;; This function calls:
  1015 ;;		_delay200ms
  1016 ;;		_lcd_ShiftLeft
  1017 ;; This function is called by:
  1018 ;;		_main
  1019 ;; This function uses a non-reentrant model
  1020 ;;
  1021                           
  1022     045E                     _shift_left_screen:	
  1023                           ;psect for function _shift_left_screen
  1024                           
  1025     045E                     l1268:	
  1026                           ;incstack = 0
  1027                           ; Regs used in _shift_left_screen: [wreg+status,2+status,0+pclath+cstack]
  1028                           
  1029                           
  1030                           ;BT3.c: 65: void shift_left_screen(int times);BT3.c: 66: {;BT3.c: 67:     for(int i = 0;
      +                           i < times; i++) {
  1031     045E  01F9               	clrf	shift_left_screen@i
  1032     045F  01FA               	clrf	shift_left_screen@i+1
  1033     0460  2C71               	goto	l1274
  1034     0461                     l1270:
  1035                           
  1036                           ;BT3.c: 68:         lcd_ShiftLeft();
  1037     0461  120A  118A  2401  120A  118A  	fcall	_lcd_ShiftLeft
  1038                           
  1039                           ;BT3.c: 69:         delay200ms();
  1040     0466  120A  118A  2413  120A  118A  	fcall	_delay200ms
  1041     046B                     l1272:
  1042                           
  1043                           ;BT3.c: 70:     }
  1044     046B  3001               	movlw	1
  1045     046C  07F9               	addwf	shift_left_screen@i,f
  1046     046D  1803               	skipnc
  1047     046E  0AFA               	incf	shift_left_screen@i+1,f
  1048     046F  3000               	movlw	0
  1049     0470  07FA               	addwf	shift_left_screen@i+1,f
  1050     0471                     l1274:
  1051     0471  087A               	movf	shift_left_screen@i+1,w
  1052     0472  3A80               	xorlw	128
  1053     0473  00F8               	movwf	??_shift_left_screen
  1054     0474  0877               	movf	shift_left_screen@times+1,w
  1055     0475  3A80               	xorlw	128
  1056     0476  0278               	subwf	??_shift_left_screen,w
  1057     0477  1D03               	skipz
  1058     0478  2C7B               	goto	u715
  1059     0479  0876               	movf	shift_left_screen@times,w
  1060     047A  0279               	subwf	shift_left_screen@i,w
  1061     047B                     u715:
  1062     047B  1C03               	skipc
  1063     047C  2C7E               	goto	u711
  1064     047D  2C7F               	goto	u710
  1065     047E                     u711:
  1066     047E  2C61               	goto	l1270
  1067     047F                     u710:
  1068     047F                     l72:
  1069     047F  0008               	return
  1070     0480                     __end_of_shift_left_screen:
  1071                           
  1072                           	psect	text4
  1073     0401                     __ptext4:	
  1074 ;; *************** function _lcd_ShiftLeft *****************
  1075 ;; Defined at:
  1076 ;;		line 290 in file "lcd.c"
  1077 ;; Parameters:    Size  Location     Type
  1078 ;;		None
  1079 ;; Auto vars:     Size  Location     Type
  1080 ;;		None
  1081 ;; Return value:  Size  Location     Type
  1082 ;;                  1    wreg      void 
  1083 ;; Registers used:
  1084 ;;		wreg, status,2, status,0, pclath, cstack
  1085 ;; Tracked objects:
  1086 ;;		On entry : 0/0
  1087 ;;		On exit  : 0/0
  1088 ;;		Unchanged: 0/0
  1089 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1090 ;;      Params:         0       0       0       0       0
  1091 ;;      Locals:         0       0       0       0       0
  1092 ;;      Temps:          0       0       0       0       0
  1093 ;;      Totals:         0       0       0       0       0
  1094 ;;Total ram usage:        0 bytes
  1095 ;; Hardware stack levels used: 1
  1096 ;; Hardware stack levels required when called: 2
  1097 ;; This function calls:
  1098 ;;		_lcd_put_byte
  1099 ;; This function is called by:
  1100 ;;		_shift_left_screen
  1101 ;;		_lcd_MoveLeft
  1102 ;; This function uses a non-reentrant model
  1103 ;;
  1104                           
  1105     0401                     _lcd_ShiftLeft:	
  1106                           ;psect for function _lcd_ShiftLeft
  1107                           
  1108     0401                     l1242:	
  1109                           ;incstack = 0
  1110                           ; Regs used in _lcd_ShiftLeft: [wreg+status,2+status,0+pclath+cstack]
  1111                           
  1112                           
  1113                           ;lcd.c: 295:      lcd_put_byte(0,0x18);
  1114     0401  3018               	movlw	24
  1115     0402  00F3               	movwf	lcd_put_byte@b
  1116     0403  3000               	movlw	0
  1117     0404  120A  118A  24F5  120A  118A  	fcall	_lcd_put_byte
  1118     0409                     l206:
  1119     0409  0008               	return
  1120     040A                     __end_of_lcd_ShiftLeft:
  1121                           
  1122                           	psect	text5
  1123     0570                     __ptext5:	
  1124 ;; *************** function _load_custom_characters *****************
  1125 ;; Defined at:
  1126 ;;		line 41 in file "BT3.c"
  1127 ;; Parameters:    Size  Location     Type
  1128 ;;  custom_data     1    wreg     PTR const unsigned char 
  1129 ;;		 -> cgram_dat(65), 
  1130 ;;  start_addres    1    6[COMMON] unsigned char 
  1131 ;; Auto vars:     Size  Location     Type
  1132 ;;  custom_data     1    8[COMMON] PTR const unsigned char 
  1133 ;;		 -> cgram_dat(65), 
  1134 ;;  i               1    9[COMMON] unsigned char 
  1135 ;; Return value:  Size  Location     Type
  1136 ;;                  1    wreg      void 
  1137 ;; Registers used:
  1138 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1139 ;; Tracked objects:
  1140 ;;		On entry : 0/0
  1141 ;;		On exit  : 0/0
  1142 ;;		Unchanged: 0/0
  1143 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1144 ;;      Params:         1       0       0       0       0
  1145 ;;      Locals:         2       0       0       0       0
  1146 ;;      Temps:          1       0       0       0       0
  1147 ;;      Totals:         4       0       0       0       0
  1148 ;;Total ram usage:        4 bytes
  1149 ;; Hardware stack levels used: 1
  1150 ;; Hardware stack levels required when called: 2
  1151 ;; This function calls:
  1152 ;;		_lcd_busy
  1153 ;;		_lcd_put_byte
  1154 ;; This function is called by:
  1155 ;;		_main
  1156 ;; This function uses a non-reentrant model
  1157 ;;
  1158                           
  1159     0570                     _load_custom_characters:	
  1160                           ;psect for function _load_custom_characters
  1161                           
  1162                           
  1163                           ;incstack = 0
  1164                           ; Regs used in _load_custom_characters: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cst
      +                          ack]
  1165                           ;load_custom_characters@custom_data stored from wreg
  1166     0570  00F8               	movwf	load_custom_characters@custom_data
  1167     0571                     l1254:
  1168                           
  1169                           ;BT3.c: 42:     unsigned char i = 0;
  1170     0571  01F9               	clrf	load_custom_characters@i
  1171     0572                     l1256:
  1172                           
  1173                           ;BT3.c: 43:     lcd_put_byte(0, 0x40 + (start_address * 8));
  1174     0572  0876               	movf	load_custom_characters@start_address,w
  1175     0573  00F7               	movwf	??_load_custom_characters
  1176     0574  3002               	movlw	2
  1177     0575                     u675:
  1178     0575  1003               	clrc
  1179     0576  0DF7               	rlf	??_load_custom_characters,f
  1180     0577  3EFF               	addlw	-1
  1181     0578  1D03               	skipz
  1182     0579  2D75               	goto	u675
  1183     057A  1003               	clrc
  1184     057B  0D77               	rlf	??_load_custom_characters,w
  1185     057C  3E40               	addlw	64
  1186     057D  00F3               	movwf	lcd_put_byte@b
  1187     057E  3000               	movlw	0
  1188     057F  120A  118A  24F5  120A  118A  	fcall	_lcd_put_byte
  1189     0584                     l1258:	
  1190                           ;BT3.c: 44:     while(lcd_busy());
  1191                           
  1192     0584  120A  118A  24C5  120A  118A  	fcall	_lcd_busy
  1193     0589  3A00               	xorlw	0
  1194     058A  1D03               	skipz
  1195     058B  2D8D               	goto	u681
  1196     058C  2D8E               	goto	u680
  1197     058D                     u681:
  1198     058D  2D84               	goto	l1258
  1199     058E                     u680:
  1200     058E  2DAC               	goto	l1266
  1201     058F                     l1260:
  1202                           
  1203                           ;BT3.c: 46:         lcd_put_byte(1, custom_data[i]);
  1204     058F  0879               	movf	load_custom_characters@i,w
  1205     0590  0778               	addwf	load_custom_characters@custom_data,w
  1206     0591  0084               	movwf	4
  1207     0592  120A  118A  2003  120A  118A  	fcall	stringdir
  1208     0597  00F3               	movwf	lcd_put_byte@b
  1209     0598  3001               	movlw	1
  1210     0599  120A  118A  24F5  120A  118A  	fcall	_lcd_put_byte
  1211     059E                     l1262:	
  1212                           ;BT3.c: 47:         while(lcd_busy());
  1213                           
  1214     059E  120A  118A  24C5  120A  118A  	fcall	_lcd_busy
  1215     05A3  3A00               	xorlw	0
  1216     05A4  1D03               	skipz
  1217     05A5  2DA7               	goto	u691
  1218     05A6  2DA8               	goto	u690
  1219     05A7                     u691:
  1220     05A7  2D9E               	goto	l1262
  1221     05A8                     u690:
  1222     05A8                     l1264:
  1223                           
  1224                           ;BT3.c: 48:         i++;
  1225     05A8  3001               	movlw	1
  1226     05A9  00FF               	movwf	btemp+1
  1227     05AA  087F               	movf	btemp+1,w
  1228     05AB  07F9               	addwf	load_custom_characters@i,f
  1229     05AC                     l1266:
  1230                           
  1231                           ;BT3.c: 45:     while(custom_data[i] != 0x99) {
  1232     05AC  0879               	movf	load_custom_characters@i,w
  1233     05AD  0778               	addwf	load_custom_characters@custom_data,w
  1234     05AE  0084               	movwf	4
  1235     05AF  120A  118A  2003  120A  118A  	fcall	stringdir
  1236     05B4  3A99               	xorlw	153
  1237     05B5  1D03               	skipz
  1238     05B6  2DB8               	goto	u701
  1239     05B7  2DB9               	goto	u700
  1240     05B8                     u701:
  1241     05B8  2D8F               	goto	l1260
  1242     05B9                     u700:
  1243     05B9                     l54:
  1244     05B9  0008               	return
  1245     05BA                     __end_of_load_custom_characters:
  1246                           
  1247                           	psect	text6
  1248     075F                     __ptext6:	
  1249 ;; *************** function _lcd_init *****************
  1250 ;; Defined at:
  1251 ;;		line 241 in file "lcd.c"
  1252 ;; Parameters:    Size  Location     Type
  1253 ;;		None
  1254 ;; Auto vars:     Size  Location     Type
  1255 ;;  i               1    0        unsigned char 
  1256 ;; Return value:  Size  Location     Type
  1257 ;;                  1    wreg      void 
  1258 ;; Registers used:
  1259 ;;		wreg, status,2, status,0, pclath, cstack
  1260 ;; Tracked objects:
  1261 ;;		On entry : 0/0
  1262 ;;		On exit  : 0/0
  1263 ;;		Unchanged: 0/0
  1264 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1265 ;;      Params:         0       0       0       0       0
  1266 ;;      Locals:         0       0       0       0       0
  1267 ;;      Temps:          2       0       0       0       0
  1268 ;;      Totals:         2       0       0       0       0
  1269 ;;Total ram usage:        2 bytes
  1270 ;; Hardware stack levels used: 1
  1271 ;; Hardware stack levels required when called: 2
  1272 ;; This function calls:
  1273 ;;		_lcd_busy
  1274 ;;		_lcd_put_byte
  1275 ;;		_lcd_put_nibble
  1276 ;; This function is called by:
  1277 ;;		_main
  1278 ;; This function uses a non-reentrant model
  1279 ;;
  1280                           
  1281     075F                     _lcd_init:	
  1282                           ;psect for function _lcd_init
  1283                           
  1284     075F                     l1352:	
  1285                           ;incstack = 0
  1286                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  1287                           
  1288                           
  1289                           ;lcd.c: 244: unsigned char i;;lcd.c: 247:  TRISD3 = 0;
  1290     075F  1683               	bsf	3,5	;RP0=1, select bank1
  1291     0760  1303               	bcf	3,6	;RP1=0, select bank1
  1292     0761  1188               	bcf	8,3	;volatile
  1293                           
  1294                           ;lcd.c: 248:  TRISD1 = 0;
  1295     0762  1088               	bcf	8,1	;volatile
  1296                           
  1297                           ;lcd.c: 249:  TRISD2 = 0;
  1298     0763  1108               	bcf	8,2	;volatile
  1299                           
  1300                           ;lcd.c: 250:  TRISD4 = 0;
  1301     0764  1208               	bcf	8,4	;volatile
  1302                           
  1303                           ;lcd.c: 251:  TRISD5 = 0;
  1304     0765  1288               	bcf	8,5	;volatile
  1305                           
  1306                           ;lcd.c: 252:  TRISD6 = 0;
  1307     0766  1308               	bcf	8,6	;volatile
  1308                           
  1309                           ;lcd.c: 253:  TRISD7 = 0;
  1310     0767  1388               	bcf	8,7	;volatile
  1311     0768                     l1354:
  1312                           
  1313                           ;lcd.c: 255:  _delay((unsigned long)((15)*(4000000/4000.0)));
  1314     0768  3014               	movlw	20
  1315     0769  00F7               	movwf	??_lcd_init+1
  1316     076A  3079               	movlw	121
  1317     076B  00F6               	movwf	??_lcd_init
  1318     076C                     u887:
  1319     076C  0BF6               	decfsz	??_lcd_init,f
  1320     076D  2F6C               	goto	u887
  1321     076E  0BF7               	decfsz	??_lcd_init+1,f
  1322     076F  2F6C               	goto	u887
  1323     0770  2F71               	nop2
  1324     0771                     l1356:
  1325                           
  1326                           ;lcd.c: 257:  RD1 = 0;
  1327     0771  1283               	bcf	3,5	;RP0=0, select bank0
  1328     0772  1303               	bcf	3,6	;RP1=0, select bank0
  1329     0773  1088               	bcf	8,1	;volatile
  1330     0774                     l1358:
  1331                           
  1332                           ;lcd.c: 258:  RD2 = 0;
  1333     0774  1108               	bcf	8,2	;volatile
  1334     0775                     l1360:
  1335                           
  1336                           ;lcd.c: 259:  RD3 = 0;
  1337     0775  1188               	bcf	8,3	;volatile
  1338     0776                     l1362:
  1339                           
  1340                           ;lcd.c: 261:  lcd_put_nibble(3);
  1341     0776  3003               	movlw	3
  1342     0777  120A  118A  252E  120A  118A  	fcall	_lcd_put_nibble
  1343     077C                     l1364:
  1344                           
  1345                           ;lcd.c: 262:  _delay((unsigned long)((10)*(4000000/4000.0)));
  1346     077C  300D               	movlw	13
  1347     077D  00F7               	movwf	??_lcd_init+1
  1348     077E  30FB               	movlw	251
  1349     077F  00F6               	movwf	??_lcd_init
  1350     0780                     u897:
  1351     0780  0BF6               	decfsz	??_lcd_init,f
  1352     0781  2F80               	goto	u897
  1353     0782  0BF7               	decfsz	??_lcd_init+1,f
  1354     0783  2F80               	goto	u897
  1355     0784  2F85               	nop2
  1356                           
  1357                           ;lcd.c: 263:  lcd_put_nibble(3);
  1358     0785  3003               	movlw	3
  1359     0786  120A  118A  252E  120A  118A  	fcall	_lcd_put_nibble
  1360     078B                     l1366:
  1361                           
  1362                           ;lcd.c: 264:  _delay((unsigned long)((10)*(4000000/4000.0)));
  1363     078B  300D               	movlw	13
  1364     078C  00F7               	movwf	??_lcd_init+1
  1365     078D  30FB               	movlw	251
  1366     078E  00F6               	movwf	??_lcd_init
  1367     078F                     u907:
  1368     078F  0BF6               	decfsz	??_lcd_init,f
  1369     0790  2F8F               	goto	u907
  1370     0791  0BF7               	decfsz	??_lcd_init+1,f
  1371     0792  2F8F               	goto	u907
  1372     0793  2F94               	nop2
  1373     0794                     l1368:
  1374                           
  1375                           ;lcd.c: 265:  lcd_put_nibble(3);
  1376     0794  3003               	movlw	3
  1377     0795  120A  118A  252E  120A  118A  	fcall	_lcd_put_nibble
  1378                           
  1379                           ;lcd.c: 266:  _delay((unsigned long)((10)*(4000000/4000.0)));
  1380     079A  300D               	movlw	13
  1381     079B  00F7               	movwf	??_lcd_init+1
  1382     079C  30FB               	movlw	251
  1383     079D  00F6               	movwf	??_lcd_init
  1384     079E                     u917:
  1385     079E  0BF6               	decfsz	??_lcd_init,f
  1386     079F  2F9E               	goto	u917
  1387     07A0  0BF7               	decfsz	??_lcd_init+1,f
  1388     07A1  2F9E               	goto	u917
  1389     07A2  2FA3               	nop2
  1390     07A3                     l1370:
  1391                           
  1392                           ;lcd.c: 268:  lcd_put_nibble(2);
  1393     07A3  3002               	movlw	2
  1394     07A4  120A  118A  252E  120A  118A  	fcall	_lcd_put_nibble
  1395     07A9                     l1372:	
  1396                           ;lcd.c: 269:  while(lcd_busy());
  1397                           
  1398     07A9  120A  118A  24C5  120A  118A  	fcall	_lcd_busy
  1399     07AE  3A00               	xorlw	0
  1400     07AF  1D03               	skipz
  1401     07B0  2FB2               	goto	u781
  1402     07B1  2FB3               	goto	u780
  1403     07B2                     u781:
  1404     07B2  2FA9               	goto	l1372
  1405     07B3                     u780:
  1406     07B3                     l1374:
  1407                           
  1408                           ;lcd.c: 271:  lcd_put_byte(0,0b00101100 & 0b00111000);
  1409     07B3  3028               	movlw	40
  1410     07B4  00F3               	movwf	lcd_put_byte@b
  1411     07B5  3000               	movlw	0
  1412     07B6  120A  118A  24F5  120A  118A  	fcall	_lcd_put_byte
  1413     07BB                     l1376:	
  1414                           ;lcd.c: 272:  while(lcd_busy());
  1415                           
  1416     07BB  120A  118A  24C5  120A  118A  	fcall	_lcd_busy
  1417     07C0  3A00               	xorlw	0
  1418     07C1  1D03               	skipz
  1419     07C2  2FC4               	goto	u791
  1420     07C3  2FC5               	goto	u790
  1421     07C4                     u791:
  1422     07C4  2FBB               	goto	l1376
  1423     07C5                     u790:
  1424     07C5                     l1378:
  1425                           
  1426                           ;lcd.c: 274:  lcd_put_byte(0,0b00001111 & 0b00001101 & 0b00001110);
  1427     07C5  300C               	movlw	12
  1428     07C6  00F3               	movwf	lcd_put_byte@b
  1429     07C7  3000               	movlw	0
  1430     07C8  120A  118A  24F5  120A  118A  	fcall	_lcd_put_byte
  1431     07CD                     l1380:	
  1432                           ;lcd.c: 275:  while(lcd_busy());
  1433                           
  1434     07CD  120A  118A  24C5  120A  118A  	fcall	_lcd_busy
  1435     07D2  3A00               	xorlw	0
  1436     07D3  1D03               	skipz
  1437     07D4  2FD6               	goto	u801
  1438     07D5  2FD7               	goto	u800
  1439     07D6                     u801:
  1440     07D6  2FCD               	goto	l1380
  1441     07D7                     u800:
  1442     07D7                     l1382:
  1443                           
  1444                           ;lcd.c: 277:  lcd_put_byte(0,0x01);
  1445     07D7  01F3               	clrf	lcd_put_byte@b
  1446     07D8  0AF3               	incf	lcd_put_byte@b,f
  1447     07D9  3000               	movlw	0
  1448     07DA  120A  118A  24F5  120A  118A  	fcall	_lcd_put_byte
  1449     07DF                     l1384:	
  1450                           ;lcd.c: 278:  while(lcd_busy());
  1451                           
  1452     07DF  120A  118A  24C5  120A  118A  	fcall	_lcd_busy
  1453     07E4  3A00               	xorlw	0
  1454     07E5  1D03               	skipz
  1455     07E6  2FE8               	goto	u811
  1456     07E7  2FE9               	goto	u810
  1457     07E8                     u811:
  1458     07E8  2FDF               	goto	l1384
  1459     07E9                     u810:
  1460     07E9                     l1386:
  1461                           
  1462                           ;lcd.c: 280:  lcd_put_byte(0,0b00000110);
  1463     07E9  3006               	movlw	6
  1464     07EA  00F3               	movwf	lcd_put_byte@b
  1465     07EB  3000               	movlw	0
  1466     07EC  120A  118A  24F5  120A  118A  	fcall	_lcd_put_byte
  1467     07F1                     l1388:	
  1468                           ;lcd.c: 281:  while(lcd_busy());
  1469                           
  1470     07F1  120A  118A  24C5  120A  118A  	fcall	_lcd_busy
  1471     07F6  3A00               	xorlw	0
  1472     07F7  1D03               	skipz
  1473     07F8  2FFA               	goto	u821
  1474     07F9  2FFB               	goto	u820
  1475     07FA                     u821:
  1476     07FA  2FF1               	goto	l1388
  1477     07FB                     u820:
  1478     07FB                     l203:
  1479     07FB  0008               	return
  1480     07FC                     __end_of_lcd_init:
  1481                           
  1482                           	psect	text7
  1483     05BA                     __ptext7:	
  1484 ;; *************** function _in_chu *****************
  1485 ;; Defined at:
  1486 ;;		line 80 in file "BT3.c"
  1487 ;; Parameters:    Size  Location     Type
  1488 ;;		None
  1489 ;; Auto vars:     Size  Location     Type
  1490 ;;  j               2   12[COMMON] int 
  1491 ;;  j               2   10[COMMON] int 
  1492 ;; Return value:  Size  Location     Type
  1493 ;;                  1    wreg      void 
  1494 ;; Registers used:
  1495 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1496 ;; Tracked objects:
  1497 ;;		On entry : 0/0
  1498 ;;		On exit  : 0/0
  1499 ;;		Unchanged: 0/0
  1500 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1501 ;;      Params:         0       0       0       0       0
  1502 ;;      Locals:         4       0       0       0       0
  1503 ;;      Temps:          0       0       0       0       0
  1504 ;;      Totals:         4       0       0       0       0
  1505 ;;Total ram usage:        4 bytes
  1506 ;; Hardware stack levels used: 1
  1507 ;; Hardware stack levels required when called: 4
  1508 ;; This function calls:
  1509 ;;		_lcd_gotoxy
  1510 ;;		_lcd_putc
  1511 ;; This function is called by:
  1512 ;;		_main
  1513 ;; This function uses a non-reentrant model
  1514 ;;
  1515                           
  1516     05BA                     _in_chu:	
  1517                           ;psect for function _in_chu
  1518                           
  1519     05BA                     l1284:	
  1520                           ;incstack = 0
  1521                           ; Regs used in _in_chu: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1522                           
  1523                           
  1524                           ;BT3.c: 82:         lcd_gotoxy(0, 1);
  1525     05BA  01F6               	clrf	lcd_gotoxy@row
  1526     05BB  0AF6               	incf	lcd_gotoxy@row,f
  1527     05BC  3000               	movlw	0
  1528     05BD  120A  118A  243C  120A  118A  	fcall	_lcd_gotoxy
  1529     05C2                     l1286:
  1530                           
  1531                           ;BT3.c: 83:         for(int j = 0; j <= sizeof(dat_line1)-1; j++)
  1532     05C2  01FA               	clrf	in_chu@j
  1533     05C3  01FB               	clrf	in_chu@j+1
  1534     05C4                     l1292:
  1535                           
  1536                           ;BT3.c: 84:             lcd_putc(dat_line1[j]);
  1537     05C4  087A               	movf	in_chu@j,w
  1538     05C5  3E0F               	addlw	low ((_dat_line1-__stringbase)| (0+32768))
  1539     05C6  0084               	movwf	4
  1540     05C7  120A  118A  2003  120A  118A  	fcall	stringdir
  1541     05CC  120A  118A  2606  120A  118A  	fcall	_lcd_putc
  1542     05D1                     l1294:
  1543     05D1  3001               	movlw	1
  1544     05D2  07FA               	addwf	in_chu@j,f
  1545     05D3  1803               	skipnc
  1546     05D4  0AFB               	incf	in_chu@j+1,f
  1547     05D5  3000               	movlw	0
  1548     05D6  07FB               	addwf	in_chu@j+1,f
  1549     05D7                     l1296:
  1550     05D7  3000               	movlw	0
  1551     05D8  027B               	subwf	in_chu@j+1,w
  1552     05D9  300E               	movlw	14
  1553     05DA  1903               	skipnz
  1554     05DB  027A               	subwf	in_chu@j,w
  1555     05DC  1C03               	skipc
  1556     05DD  2DDF               	goto	u731
  1557     05DE  2DE0               	goto	u730
  1558     05DF                     u731:
  1559     05DF  2DC4               	goto	l1292
  1560     05E0                     u730:
  1561     05E0                     l1298:
  1562                           
  1563                           ;BT3.c: 85:         lcd_gotoxy(0, 0);
  1564     05E0  01F6               	clrf	lcd_gotoxy@row
  1565     05E1  3000               	movlw	0
  1566     05E2  120A  118A  243C  120A  118A  	fcall	_lcd_gotoxy
  1567     05E7                     l1300:
  1568                           
  1569                           ;BT3.c: 86:         for(int j = 0; j <= sizeof(dat_line2)-1; j++)
  1570     05E7  01FC               	clrf	in_chu@j_90
  1571     05E8  01FD               	clrf	in_chu@j_90+1
  1572     05E9                     l1306:
  1573                           
  1574                           ;BT3.c: 87:             lcd_putc(dat_line2[j]);
  1575     05E9  087C               	movf	in_chu@j_90,w
  1576     05EA  3E01               	addlw	low ((_dat_line2-__stringbase)| (0+32768))
  1577     05EB  0084               	movwf	4
  1578     05EC  120A  118A  2003  120A  118A  	fcall	stringdir
  1579     05F1  120A  118A  2606  120A  118A  	fcall	_lcd_putc
  1580     05F6                     l1308:
  1581     05F6  3001               	movlw	1
  1582     05F7  07FC               	addwf	in_chu@j_90,f
  1583     05F8  1803               	skipnc
  1584     05F9  0AFD               	incf	in_chu@j_90+1,f
  1585     05FA  3000               	movlw	0
  1586     05FB  07FD               	addwf	in_chu@j_90+1,f
  1587     05FC                     l1310:
  1588     05FC  3000               	movlw	0
  1589     05FD  027D               	subwf	in_chu@j_90+1,w
  1590     05FE  300E               	movlw	14
  1591     05FF  1903               	skipnz
  1592     0600  027C               	subwf	in_chu@j_90,w
  1593     0601  1C03               	skipc
  1594     0602  2E04               	goto	u741
  1595     0603  2E05               	goto	u740
  1596     0604                     u741:
  1597     0604  2DE9               	goto	l1306
  1598     0605                     u740:
  1599     0605                     l85:
  1600     0605  0008               	return
  1601     0606                     __end_of_in_chu:
  1602                           
  1603                           	psect	text8
  1604     0656                     __ptext8:	
  1605 ;; *************** function _chop_tat *****************
  1606 ;; Defined at:
  1607 ;;		line 91 in file "BT3.c"
  1608 ;; Parameters:    Size  Location     Type
  1609 ;;  times           2   11[COMMON] unsigned int 
  1610 ;; Auto vars:     Size  Location     Type
  1611 ;;  j               2    4[BANK0 ] int 
  1612 ;;  j               2    2[BANK0 ] int 
  1613 ;;  i               2    0[BANK0 ] int 
  1614 ;; Return value:  Size  Location     Type
  1615 ;;                  1    wreg      void 
  1616 ;; Registers used:
  1617 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1618 ;; Tracked objects:
  1619 ;;		On entry : 0/0
  1620 ;;		On exit  : 0/0
  1621 ;;		Unchanged: 0/0
  1622 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1623 ;;      Params:         2       0       0       0       0
  1624 ;;      Locals:         0       6       0       0       0
  1625 ;;      Temps:          0       0       0       0       0
  1626 ;;      Totals:         2       6       0       0       0
  1627 ;;Total ram usage:        8 bytes
  1628 ;; Hardware stack levels used: 1
  1629 ;; Hardware stack levels required when called: 5
  1630 ;; This function calls:
  1631 ;;		_delay200ms
  1632 ;;		_lcd_gotoxy
  1633 ;;		_lcd_putc
  1634 ;;		_lcd_puts
  1635 ;; This function is called by:
  1636 ;;		_main
  1637 ;; This function uses a non-reentrant model
  1638 ;;
  1639                           
  1640     0656                     _chop_tat:	
  1641                           ;psect for function _chop_tat
  1642                           
  1643     0656                     l1312:	
  1644                           ;incstack = 0
  1645                           ; Regs used in _chop_tat: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1646                           
  1647                           
  1648                           ;BT3.c: 91: void chop_tat(unsigned times);BT3.c: 92: {;BT3.c: 93:     for(int i = 0; i <
      +                           times; i++) {
  1649     0656  1283               	bcf	3,5	;RP0=0, select bank0
  1650     0657  1303               	bcf	3,6	;RP1=0, select bank0
  1651     0658  01A0               	clrf	chop_tat@i
  1652     0659  01A1               	clrf	chop_tat@i+1
  1653     065A  2EC6               	goto	l1350
  1654     065B                     l1314:
  1655                           
  1656                           ;BT3.c: 94:         lcd_gotoxy(0, 1);
  1657     065B  01F6               	clrf	lcd_gotoxy@row
  1658     065C  0AF6               	incf	lcd_gotoxy@row,f
  1659     065D  3000               	movlw	0
  1660     065E  120A  118A  243C  120A  118A  	fcall	_lcd_gotoxy
  1661     0663                     l1316:
  1662                           
  1663                           ;BT3.c: 95:         for(int j = 0; j <= sizeof(dat_line1)-1; j++)
  1664     0663  1283               	bcf	3,5	;RP0=0, select bank0
  1665     0664  1303               	bcf	3,6	;RP1=0, select bank0
  1666     0665  01A2               	clrf	chop_tat@j
  1667     0666  01A3               	clrf	chop_tat@j+1
  1668     0667                     l1322:
  1669                           
  1670                           ;BT3.c: 96:             lcd_putc(dat_line1[j]);
  1671     0667  0822               	movf	chop_tat@j,w
  1672     0668  3E0F               	addlw	low ((_dat_line1-__stringbase)| (0+32768))
  1673     0669  0084               	movwf	4
  1674     066A  120A  118A  2003  120A  118A  	fcall	stringdir
  1675     066F  120A  118A  2606  120A  118A  	fcall	_lcd_putc
  1676     0674                     l1324:
  1677     0674  3001               	movlw	1
  1678     0675  1283               	bcf	3,5	;RP0=0, select bank0
  1679     0676  1303               	bcf	3,6	;RP1=0, select bank0
  1680     0677  07A2               	addwf	chop_tat@j,f
  1681     0678  1803               	skipnc
  1682     0679  0AA3               	incf	chop_tat@j+1,f
  1683     067A  3000               	movlw	0
  1684     067B  07A3               	addwf	chop_tat@j+1,f
  1685     067C                     l1326:
  1686     067C  3000               	movlw	0
  1687     067D  0223               	subwf	chop_tat@j+1,w
  1688     067E  300E               	movlw	14
  1689     067F  1903               	skipnz
  1690     0680  0222               	subwf	chop_tat@j,w
  1691     0681  1C03               	skipc
  1692     0682  2E84               	goto	u751
  1693     0683  2E85               	goto	u750
  1694     0684                     u751:
  1695     0684  2E67               	goto	l1322
  1696     0685                     u750:
  1697     0685                     l1328:
  1698                           
  1699                           ;BT3.c: 97:         lcd_gotoxy(0, 0);
  1700     0685  01F6               	clrf	lcd_gotoxy@row
  1701     0686  3000               	movlw	0
  1702     0687  120A  118A  243C  120A  118A  	fcall	_lcd_gotoxy
  1703     068C                     l1330:
  1704                           
  1705                           ;BT3.c: 98:         for(int j = 0; j <= sizeof(dat_line2)-1; j++)
  1706     068C  1283               	bcf	3,5	;RP0=0, select bank0
  1707     068D  1303               	bcf	3,6	;RP1=0, select bank0
  1708     068E  01A4               	clrf	chop_tat@j_95
  1709     068F  01A5               	clrf	chop_tat@j_95+1
  1710     0690                     l1336:
  1711                           
  1712                           ;BT3.c: 99:             lcd_putc(dat_line2[j]);
  1713     0690  0824               	movf	chop_tat@j_95,w
  1714     0691  3E01               	addlw	low ((_dat_line2-__stringbase)| (0+32768))
  1715     0692  0084               	movwf	4
  1716     0693  120A  118A  2003  120A  118A  	fcall	stringdir
  1717     0698  120A  118A  2606  120A  118A  	fcall	_lcd_putc
  1718     069D                     l1338:
  1719     069D  3001               	movlw	1
  1720     069E  1283               	bcf	3,5	;RP0=0, select bank0
  1721     069F  1303               	bcf	3,6	;RP1=0, select bank0
  1722     06A0  07A4               	addwf	chop_tat@j_95,f
  1723     06A1  1803               	skipnc
  1724     06A2  0AA5               	incf	chop_tat@j_95+1,f
  1725     06A3  3000               	movlw	0
  1726     06A4  07A5               	addwf	chop_tat@j_95+1,f
  1727     06A5                     l1340:
  1728     06A5  3000               	movlw	0
  1729     06A6  0225               	subwf	chop_tat@j_95+1,w
  1730     06A7  300E               	movlw	14
  1731     06A8  1903               	skipnz
  1732     06A9  0224               	subwf	chop_tat@j_95,w
  1733     06AA  1C03               	skipc
  1734     06AB  2EAD               	goto	u761
  1735     06AC  2EAE               	goto	u760
  1736     06AD                     u761:
  1737     06AD  2E90               	goto	l1336
  1738     06AE                     u760:
  1739     06AE                     l1342:
  1740                           
  1741                           ;BT3.c: 100:         delay200ms();
  1742     06AE  120A  118A  2413  120A  118A  	fcall	_delay200ms
  1743     06B3                     l1344:
  1744                           
  1745                           ;BT3.c: 101:         lcd_puts("\f");
  1746     06B3  305E               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1747     06B4  120A  118A  241D  120A  118A  	fcall	_lcd_puts
  1748     06B9                     l1346:
  1749                           
  1750                           ;BT3.c: 102:         delay200ms();
  1751     06B9  120A  118A  2413  120A  118A  	fcall	_delay200ms
  1752     06BE                     l1348:
  1753                           
  1754                           ;BT3.c: 103:     }
  1755     06BE  3001               	movlw	1
  1756     06BF  1283               	bcf	3,5	;RP0=0, select bank0
  1757     06C0  1303               	bcf	3,6	;RP1=0, select bank0
  1758     06C1  07A0               	addwf	chop_tat@i,f
  1759     06C2  1803               	skipnc
  1760     06C3  0AA1               	incf	chop_tat@i+1,f
  1761     06C4  3000               	movlw	0
  1762     06C5  07A1               	addwf	chop_tat@i+1,f
  1763     06C6                     l1350:
  1764     06C6  087C               	movf	chop_tat@times+1,w
  1765     06C7  0221               	subwf	chop_tat@i+1,w
  1766     06C8  1D03               	skipz
  1767     06C9  2ECC               	goto	u775
  1768     06CA  087B               	movf	chop_tat@times,w
  1769     06CB  0220               	subwf	chop_tat@i,w
  1770     06CC                     u775:
  1771     06CC  1C03               	skipc
  1772     06CD  2ECF               	goto	u771
  1773     06CE  2ED0               	goto	u770
  1774     06CF                     u771:
  1775     06CF  2E5B               	goto	l1314
  1776     06D0                     u770:
  1777     06D0                     l95:
  1778     06D0  0008               	return
  1779     06D1                     __end_of_chop_tat:
  1780                           
  1781                           	psect	text9
  1782     041D                     __ptext9:	
  1783 ;; *************** function _lcd_puts *****************
  1784 ;; Defined at:
  1785 ;;		line 224 in file "lcd.c"
  1786 ;; Parameters:    Size  Location     Type
  1787 ;;  s               1    wreg     PTR const unsigned char 
  1788 ;;		 -> STR_4(2), STR_3(2), STR_2(2), STR_1(2), 
  1789 ;; Auto vars:     Size  Location     Type
  1790 ;;  s               1   10[COMMON] PTR const unsigned char 
  1791 ;;		 -> STR_4(2), STR_3(2), STR_2(2), STR_1(2), 
  1792 ;; Return value:  Size  Location     Type
  1793 ;;                  1    wreg      void 
  1794 ;; Registers used:
  1795 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1796 ;; Tracked objects:
  1797 ;;		On entry : 0/0
  1798 ;;		On exit  : 0/0
  1799 ;;		Unchanged: 0/0
  1800 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1801 ;;      Params:         0       0       0       0       0
  1802 ;;      Locals:         1       0       0       0       0
  1803 ;;      Temps:          0       0       0       0       0
  1804 ;;      Totals:         1       0       0       0       0
  1805 ;;Total ram usage:        1 bytes
  1806 ;; Hardware stack levels used: 1
  1807 ;; Hardware stack levels required when called: 4
  1808 ;; This function calls:
  1809 ;;		_lcd_putc
  1810 ;; This function is called by:
  1811 ;;		_chop_tat
  1812 ;;		_main
  1813 ;; This function uses a non-reentrant model
  1814 ;;
  1815                           
  1816     041D                     _lcd_puts:	
  1817                           ;psect for function _lcd_puts
  1818                           
  1819                           
  1820                           ;incstack = 0
  1821                           ; Regs used in _lcd_puts: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1822                           ;lcd_puts@s stored from wreg
  1823     041D  00FA               	movwf	lcd_puts@s
  1824     041E                     l1246:
  1825                           
  1826                           ;lcd.c: 224: void lcd_puts(const char* s);lcd.c: 225: {;lcd.c: 229:  while(*s)
  1827     041E  2C2F               	goto	l1252
  1828     041F                     l1248:
  1829                           
  1830                           ;lcd.c: 230:   {;lcd.c: 231:   lcd_putc(*s++);
  1831     041F  087A               	movf	lcd_puts@s,w
  1832     0420  0084               	movwf	4
  1833     0421  120A  118A  2003  120A  118A  	fcall	stringdir
  1834     0426  120A  118A  2606  120A  118A  	fcall	_lcd_putc
  1835     042B                     l1250:
  1836     042B  3001               	movlw	1
  1837     042C  00FF               	movwf	btemp+1
  1838     042D  087F               	movf	btemp+1,w
  1839     042E  07FA               	addwf	lcd_puts@s,f
  1840     042F                     l1252:
  1841                           
  1842                           ;lcd.c: 229:  while(*s)
  1843     042F  087A               	movf	lcd_puts@s,w
  1844     0430  0084               	movwf	4
  1845     0431  120A  118A  2003  120A  118A  	fcall	stringdir
  1846     0436  3A00               	xorlw	0
  1847     0437  1D03               	skipz
  1848     0438  2C3A               	goto	u661
  1849     0439  2C3B               	goto	u660
  1850     043A                     u661:
  1851     043A  2C1F               	goto	l1248
  1852     043B                     u660:
  1853     043B                     l185:
  1854     043B  0008               	return
  1855     043C                     __end_of_lcd_puts:
  1856                           
  1857                           	psect	text10
  1858     0606                     __ptext10:	
  1859 ;; *************** function _lcd_putc *****************
  1860 ;; Defined at:
  1861 ;;		line 190 in file "lcd.c"
  1862 ;; Parameters:    Size  Location     Type
  1863 ;;  c               1    wreg     unsigned char 
  1864 ;; Auto vars:     Size  Location     Type
  1865 ;;  c               1    9[COMMON] unsigned char 
  1866 ;; Return value:  Size  Location     Type
  1867 ;;                  1    wreg      void 
  1868 ;; Registers used:
  1869 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1870 ;; Tracked objects:
  1871 ;;		On entry : 0/0
  1872 ;;		On exit  : 0/0
  1873 ;;		Unchanged: 0/0
  1874 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1875 ;;      Params:         0       0       0       0       0
  1876 ;;      Locals:         1       0       0       0       0
  1877 ;;      Temps:          0       0       0       0       0
  1878 ;;      Totals:         1       0       0       0       0
  1879 ;;Total ram usage:        1 bytes
  1880 ;; Hardware stack levels used: 1
  1881 ;; Hardware stack levels required when called: 3
  1882 ;; This function calls:
  1883 ;;		_lcd_busy
  1884 ;;		_lcd_gotoxy
  1885 ;;		_lcd_put_byte
  1886 ;; This function is called by:
  1887 ;;		_in_chu
  1888 ;;		_chop_tat
  1889 ;;		_main
  1890 ;;		_lcd_puts
  1891 ;;		_lcd_String_Delay
  1892 ;;		_putch
  1893 ;; This function uses a non-reentrant model
  1894 ;;
  1895                           
  1896     0606                     _lcd_putc:	
  1897                           ;psect for function _lcd_putc
  1898                           
  1899                           
  1900                           ;incstack = 0
  1901                           ; Regs used in _lcd_putc: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1902                           ;lcd_putc@c stored from wreg
  1903     0606  00F9               	movwf	lcd_putc@c
  1904     0607                     l1222:
  1905                           
  1906                           ;lcd.c: 190: void lcd_putc(char c);lcd.c: 191: {;lcd.c: 195:  switch(c)
  1907     0607  2E4A               	goto	l1238
  1908     0608                     l1224:
  1909                           
  1910                           ;lcd.c: 198:    lcd_put_byte(0,1);
  1911     0608  01F3               	clrf	lcd_put_byte@b
  1912     0609  0AF3               	incf	lcd_put_byte@b,f
  1913     060A  3000               	movlw	0
  1914     060B  120A  118A  24F5  120A  118A  	fcall	_lcd_put_byte
  1915     0610                     l1226:	
  1916                           ;lcd.c: 199:    while(lcd_busy());
  1917                           
  1918     0610  120A  118A  24C5  120A  118A  	fcall	_lcd_busy
  1919     0615  3A00               	xorlw	0
  1920     0616  1D03               	skipz
  1921     0617  2E19               	goto	u631
  1922     0618  2E1A               	goto	u630
  1923     0619                     u631:
  1924     0619  2E10               	goto	l1226
  1925     061A                     u630:
  1926     061A  2E55               	goto	l179
  1927     061B                     l1228:
  1928                           
  1929                           ;lcd.c: 202:    lcd_gotoxy(0,1);
  1930     061B  01F6               	clrf	lcd_gotoxy@row
  1931     061C  0AF6               	incf	lcd_gotoxy@row,f
  1932     061D  3000               	movlw	0
  1933     061E  120A  118A  243C  120A  118A  	fcall	_lcd_gotoxy
  1934                           
  1935                           ;lcd.c: 203:    break;
  1936     0623  2E55               	goto	l179
  1937     0624                     l1230:
  1938                           
  1939                           ;lcd.c: 205:    lcd_put_byte(0,0x10);
  1940     0624  3010               	movlw	16
  1941     0625  00F3               	movwf	lcd_put_byte@b
  1942     0626  3000               	movlw	0
  1943     0627  120A  118A  24F5  120A  118A  	fcall	_lcd_put_byte
  1944     062C                     l1232:	
  1945                           ;lcd.c: 206:    while(lcd_busy());
  1946                           
  1947     062C  120A  118A  24C5  120A  118A  	fcall	_lcd_busy
  1948     0631  3A00               	xorlw	0
  1949     0632  1D03               	skipz
  1950     0633  2E35               	goto	u641
  1951     0634  2E36               	goto	u640
  1952     0635                     u641:
  1953     0635  2E2C               	goto	l1232
  1954     0636                     u640:
  1955     0636  2E55               	goto	l179
  1956     0637                     l1234:
  1957                           
  1958                           ;lcd.c: 210:     {;lcd.c: 211:     lcd_put_byte(1,c);
  1959     0637  0879               	movf	lcd_putc@c,w
  1960     0638  00F3               	movwf	lcd_put_byte@b
  1961     0639  3001               	movlw	1
  1962     063A  120A  118A  24F5  120A  118A  	fcall	_lcd_put_byte
  1963     063F                     l1236:	
  1964                           ;lcd.c: 212:     while(lcd_busy());
  1965                           
  1966     063F  120A  118A  24C5  120A  118A  	fcall	_lcd_busy
  1967     0644  3A00               	xorlw	0
  1968     0645  1D03               	skipz
  1969     0646  2E48               	goto	u651
  1970     0647  2E49               	goto	u650
  1971     0648                     u651:
  1972     0648  2E3F               	goto	l1236
  1973     0649                     u650:
  1974     0649  2E55               	goto	l179
  1975     064A                     l1238:
  1976     064A  0879               	movf	lcd_putc@c,w
  1977                           
  1978                           ; Switch size 1, requested type "simple"
  1979                           ; Number of cases is 3, Range of values is 8 to 12
  1980                           ; switch strategies available:
  1981                           ; Name         Instructions Cycles
  1982                           ; simple_byte           10     6 (average)
  1983                           ; direct_byte           26    11 (fixed)
  1984                           ; jumptable            263     9 (fixed)
  1985                           ;	Chosen strategy is simple_byte
  1986     064B  3A08               	xorlw	8	; case 8
  1987     064C  1903               	skipnz
  1988     064D  2E24               	goto	l1230
  1989     064E  3A02               	xorlw	2	; case 10
  1990     064F  1903               	skipnz
  1991     0650  2E1B               	goto	l1228
  1992     0651  3A06               	xorlw	6	; case 12
  1993     0652  1903               	skipnz
  1994     0653  2E08               	goto	l1224
  1995     0654  2E37               	goto	l1234
  1996     0655                     l179:
  1997     0655  0008               	return
  1998     0656                     __end_of_lcd_putc:
  1999                           
  2000                           	psect	text11
  2001     043C                     __ptext11:	
  2002 ;; *************** function _lcd_gotoxy *****************
  2003 ;; Defined at:
  2004 ;;		line 167 in file "lcd.c"
  2005 ;; Parameters:    Size  Location     Type
  2006 ;;  col             1    wreg     unsigned char 
  2007 ;;  row             1    6[COMMON] unsigned char 
  2008 ;; Auto vars:     Size  Location     Type
  2009 ;;  col             1    7[COMMON] unsigned char 
  2010 ;;  address         1    8[COMMON] unsigned char 
  2011 ;; Return value:  Size  Location     Type
  2012 ;;                  1    wreg      void 
  2013 ;; Registers used:
  2014 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2015 ;; Tracked objects:
  2016 ;;		On entry : 0/0
  2017 ;;		On exit  : 0/0
  2018 ;;		Unchanged: 0/0
  2019 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2020 ;;      Params:         1       0       0       0       0
  2021 ;;      Locals:         2       0       0       0       0
  2022 ;;      Temps:          0       0       0       0       0
  2023 ;;      Totals:         3       0       0       0       0
  2024 ;;Total ram usage:        3 bytes
  2025 ;; Hardware stack levels used: 1
  2026 ;; Hardware stack levels required when called: 2
  2027 ;; This function calls:
  2028 ;;		_lcd_busy
  2029 ;;		_lcd_put_byte
  2030 ;; This function is called by:
  2031 ;;		_in_chu
  2032 ;;		_chop_tat
  2033 ;;		_lcd_putc
  2034 ;; This function uses a non-reentrant model
  2035 ;;
  2036                           
  2037     043C                     _lcd_gotoxy:	
  2038                           ;psect for function _lcd_gotoxy
  2039                           
  2040                           
  2041                           ;incstack = 0
  2042                           ; Regs used in _lcd_gotoxy: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2043                           ;lcd_gotoxy@col stored from wreg
  2044     043C  00F7               	movwf	lcd_gotoxy@col
  2045     043D                     l1190:
  2046                           
  2047                           ;lcd.c: 167: void lcd_gotoxy(unsigned char col, unsigned char row);lcd.c: 168: {;lcd.c: 
      +                          170:  unsigned char address;;lcd.c: 173:  if(row!=0)
  2048     043D  0876               	movf	lcd_gotoxy@row,w
  2049     043E  1903               	btfsc	3,2
  2050     043F  2C41               	goto	u591
  2051     0440  2C42               	goto	u590
  2052     0441                     u591:
  2053     0441  2C45               	goto	l1194
  2054     0442                     u590:
  2055     0442                     l1192:
  2056                           
  2057                           ;lcd.c: 174:   address=0x40;
  2058     0442  3040               	movlw	64
  2059     0443  00F8               	movwf	lcd_gotoxy@address
  2060     0444  2C46               	goto	l1196
  2061     0445                     l1194:
  2062                           
  2063                           ;lcd.c: 176:   address=0;
  2064     0445  01F8               	clrf	lcd_gotoxy@address
  2065     0446                     l1196:
  2066                           
  2067                           ;lcd.c: 178:  address += col;
  2068     0446  0877               	movf	lcd_gotoxy@col,w
  2069     0447  00FF               	movwf	btemp+1
  2070     0448  087F               	movf	btemp+1,w
  2071     0449  07F8               	addwf	lcd_gotoxy@address,f
  2072     044A                     l1198:
  2073                           
  2074                           ;lcd.c: 180:  lcd_put_byte(0,0x80|address);
  2075     044A  0878               	movf	lcd_gotoxy@address,w
  2076     044B  3880               	iorlw	128
  2077     044C  00F3               	movwf	lcd_put_byte@b
  2078     044D  3000               	movlw	0
  2079     044E  120A  118A  24F5  120A  118A  	fcall	_lcd_put_byte
  2080     0453                     l1200:	
  2081                           ;lcd.c: 181:  while(lcd_busy());
  2082                           
  2083     0453  120A  118A  24C5  120A  118A  	fcall	_lcd_busy
  2084     0458  3A00               	xorlw	0
  2085     0459  1D03               	skipz
  2086     045A  2C5C               	goto	u601
  2087     045B  2C5D               	goto	u600
  2088     045C                     u601:
  2089     045C  2C53               	goto	l1200
  2090     045D                     u600:
  2091     045D                     l161:
  2092     045D  0008               	return
  2093     045E                     __end_of_lcd_gotoxy:
  2094                           
  2095                           	psect	text12
  2096     04F5                     __ptext12:	
  2097 ;; *************** function _lcd_put_byte *****************
  2098 ;; Defined at:
  2099 ;;		line 134 in file "lcd.c"
  2100 ;; Parameters:    Size  Location     Type
  2101 ;;  rs              1    wreg     unsigned char 
  2102 ;;  b               1    3[COMMON] unsigned char 
  2103 ;; Auto vars:     Size  Location     Type
  2104 ;;  rs              1    5[COMMON] unsigned char 
  2105 ;; Return value:  Size  Location     Type
  2106 ;;                  1    wreg      void 
  2107 ;; Registers used:
  2108 ;;		wreg, status,2, status,0, pclath, cstack
  2109 ;; Tracked objects:
  2110 ;;		On entry : 0/0
  2111 ;;		On exit  : 0/0
  2112 ;;		Unchanged: 0/0
  2113 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2114 ;;      Params:         1       0       0       0       0
  2115 ;;      Locals:         1       0       0       0       0
  2116 ;;      Temps:          1       0       0       0       0
  2117 ;;      Totals:         3       0       0       0       0
  2118 ;;Total ram usage:        3 bytes
  2119 ;; Hardware stack levels used: 1
  2120 ;; Hardware stack levels required when called: 1
  2121 ;; This function calls:
  2122 ;;		_lcd_put_nibble
  2123 ;; This function is called by:
  2124 ;;		_load_custom_characters
  2125 ;;		_lcd_gotoxy
  2126 ;;		_lcd_putc
  2127 ;;		_lcd_init
  2128 ;;		_lcd_ShiftLeft
  2129 ;;		_lcd_ShiftRight
  2130 ;; This function uses a non-reentrant model
  2131 ;;
  2132                           
  2133     04F5                     _lcd_put_byte:	
  2134                           ;psect for function _lcd_put_byte
  2135                           
  2136                           
  2137                           ;incstack = 0
  2138                           ; Regs used in _lcd_put_byte: [wreg+status,2+status,0+pclath+cstack]
  2139                           ;lcd_put_byte@rs stored from wreg
  2140     04F5  00F5               	movwf	lcd_put_byte@rs
  2141     04F6                     l1152:
  2142                           
  2143                           ;lcd.c: 134: void lcd_put_byte(unsigned char rs, unsigned char b);lcd.c: 135: {;lcd.c: 1
      +                          39:  TRISD4 = 0;
  2144     04F6  1683               	bsf	3,5	;RP0=1, select bank1
  2145     04F7  1303               	bcf	3,6	;RP1=0, select bank1
  2146     04F8  1208               	bcf	8,4	;volatile
  2147                           
  2148                           ;lcd.c: 140:  TRISD5 = 0;
  2149     04F9  1288               	bcf	8,5	;volatile
  2150                           
  2151                           ;lcd.c: 141:  TRISD6 = 0;
  2152     04FA  1308               	bcf	8,6	;volatile
  2153                           
  2154                           ;lcd.c: 142:  TRISD7 = 0;
  2155     04FB  1388               	bcf	8,7	;volatile
  2156     04FC                     l1154:
  2157                           
  2158                           ;lcd.c: 144:  if(rs)
  2159     04FC  0875               	movf	lcd_put_byte@rs,w
  2160     04FD  1903               	btfsc	3,2
  2161     04FE  2D00               	goto	u571
  2162     04FF  2D01               	goto	u570
  2163     0500                     u571:
  2164     0500  2D05               	goto	l151
  2165     0501                     u570:
  2166     0501                     l1156:
  2167                           
  2168                           ;lcd.c: 145:   RD1 = 1;
  2169     0501  1283               	bcf	3,5	;RP0=0, select bank0
  2170     0502  1303               	bcf	3,6	;RP1=0, select bank0
  2171     0503  1488               	bsf	8,1	;volatile
  2172     0504  2D08               	goto	l1158
  2173     0505                     l151:	
  2174                           ;lcd.c: 146:  else
  2175                           
  2176                           
  2177                           ;lcd.c: 147:   RD1 = 0;
  2178     0505  1283               	bcf	3,5	;RP0=0, select bank0
  2179     0506  1303               	bcf	3,6	;RP1=0, select bank0
  2180     0507  1088               	bcf	8,1	;volatile
  2181     0508                     l1158:
  2182                           
  2183                           ;lcd.c: 148:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  2184     0508  3006               	movlw	6
  2185     0509  00F4               	movwf	??_lcd_put_byte
  2186     050A                     u927:
  2187     050A  0BF4               	decfsz	??_lcd_put_byte,f
  2188     050B  2D0A               	goto	u927
  2189     050C  0000               	nop
  2190     050D                     l1160:
  2191                           
  2192                           ;lcd.c: 150:  RD2 = 0;
  2193     050D  1283               	bcf	3,5	;RP0=0, select bank0
  2194     050E  1303               	bcf	3,6	;RP1=0, select bank0
  2195     050F  1108               	bcf	8,2	;volatile
  2196                           
  2197                           ;lcd.c: 151:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  2198     0510  3006               	movlw	6
  2199     0511  00F4               	movwf	??_lcd_put_byte
  2200     0512                     u937:
  2201     0512  0BF4               	decfsz	??_lcd_put_byte,f
  2202     0513  2D12               	goto	u937
  2203     0514  0000               	nop
  2204     0515                     l1162:
  2205                           
  2206                           ;lcd.c: 153:  RD3 = 0;
  2207     0515  1283               	bcf	3,5	;RP0=0, select bank0
  2208     0516  1303               	bcf	3,6	;RP1=0, select bank0
  2209     0517  1188               	bcf	8,3	;volatile
  2210     0518                     l1164:
  2211                           
  2212                           ;lcd.c: 155:  lcd_put_nibble(b >> 4);
  2213     0518  0873               	movf	lcd_put_byte@b,w
  2214     0519  00F4               	movwf	??_lcd_put_byte
  2215     051A  3004               	movlw	4
  2216     051B                     u585:
  2217     051B  1003               	clrc
  2218     051C  0CF4               	rrf	??_lcd_put_byte,f
  2219     051D  3EFF               	addlw	-1
  2220     051E  1D03               	skipz
  2221     051F  2D1B               	goto	u585
  2222     0520  0874               	movf	??_lcd_put_byte,w
  2223     0521  120A  118A  252E  120A  118A  	fcall	_lcd_put_nibble
  2224     0526                     l1166:
  2225                           
  2226                           ;lcd.c: 157:  lcd_put_nibble(b & 0xf);
  2227     0526  0873               	movf	lcd_put_byte@b,w
  2228     0527  390F               	andlw	15
  2229     0528  120A  118A  252E  120A  118A  	fcall	_lcd_put_nibble
  2230     052D                     l153:
  2231     052D  0008               	return
  2232     052E                     __end_of_lcd_put_byte:
  2233                           
  2234                           	psect	text13
  2235     052E                     __ptext13:	
  2236 ;; *************** function _lcd_put_nibble *****************
  2237 ;; Defined at:
  2238 ;;		line 103 in file "lcd.c"
  2239 ;; Parameters:    Size  Location     Type
  2240 ;;  b               1    wreg     unsigned char 
  2241 ;; Auto vars:     Size  Location     Type
  2242 ;;  b               1    1[COMMON] unsigned char 
  2243 ;;  temp            1    2[COMMON] struct _BYTE_VAL
  2244 ;; Return value:  Size  Location     Type
  2245 ;;                  1    wreg      void 
  2246 ;; Registers used:
  2247 ;;		wreg
  2248 ;; Tracked objects:
  2249 ;;		On entry : 0/0
  2250 ;;		On exit  : 0/0
  2251 ;;		Unchanged: 0/0
  2252 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2253 ;;      Params:         0       0       0       0       0
  2254 ;;      Locals:         2       0       0       0       0
  2255 ;;      Temps:          1       0       0       0       0
  2256 ;;      Totals:         3       0       0       0       0
  2257 ;;Total ram usage:        3 bytes
  2258 ;; Hardware stack levels used: 1
  2259 ;; This function calls:
  2260 ;;		Nothing
  2261 ;; This function is called by:
  2262 ;;		_lcd_put_byte
  2263 ;;		_lcd_init
  2264 ;; This function uses a non-reentrant model
  2265 ;;
  2266                           
  2267     052E                     _lcd_put_nibble:	
  2268                           ;psect for function _lcd_put_nibble
  2269                           
  2270                           
  2271                           ;incstack = 0
  2272                           ; Regs used in _lcd_put_nibble: [wreg]
  2273                           ;lcd_put_nibble@b stored from wreg
  2274     052E  00F1               	movwf	lcd_put_nibble@b
  2275     052F                     l1136:
  2276                           
  2277                           ;lcd.c: 103: void lcd_put_nibble(unsigned char b);lcd.c: 104: {;lcd.c: 106:  BYTE_VAL te
      +                          mp;;lcd.c: 109:  TRISD4 = 0;
  2278     052F  1683               	bsf	3,5	;RP0=1, select bank1
  2279     0530  1303               	bcf	3,6	;RP1=0, select bank1
  2280     0531  1208               	bcf	8,4	;volatile
  2281                           
  2282                           ;lcd.c: 110:  TRISD5 = 0;
  2283     0532  1288               	bcf	8,5	;volatile
  2284                           
  2285                           ;lcd.c: 111:  TRISD6 = 0;
  2286     0533  1308               	bcf	8,6	;volatile
  2287                           
  2288                           ;lcd.c: 112:  TRISD7 = 0;
  2289     0534  1388               	bcf	8,7	;volatile
  2290     0535                     l1138:
  2291                           
  2292                           ;lcd.c: 114:  temp.Val = b;
  2293     0535  0871               	movf	lcd_put_nibble@b,w
  2294     0536  00F2               	movwf	lcd_put_nibble@temp
  2295     0537                     l1140:
  2296                           
  2297                           ;lcd.c: 116:  RD4 = temp.bits.b0;
  2298     0537  1872               	btfsc	lcd_put_nibble@temp,0
  2299     0538  2D3A               	goto	u491
  2300     0539  2D3E               	goto	u490
  2301     053A                     u491:
  2302     053A  1283               	bcf	3,5	;RP0=0, select bank0
  2303     053B  1303               	bcf	3,6	;RP1=0, select bank0
  2304     053C  1608               	bsf	8,4	;volatile
  2305     053D  2D41               	goto	u504
  2306     053E                     u490:
  2307     053E  1283               	bcf	3,5	;RP0=0, select bank0
  2308     053F  1303               	bcf	3,6	;RP1=0, select bank0
  2309     0540  1208               	bcf	8,4	;volatile
  2310     0541                     u504:
  2311     0541                     l1142:
  2312                           
  2313                           ;lcd.c: 117:  RD5 = temp.bits.b1;
  2314     0541  18F2               	btfsc	lcd_put_nibble@temp,1
  2315     0542  2D44               	goto	u511
  2316     0543  2D48               	goto	u510
  2317     0544                     u511:
  2318     0544  1283               	bcf	3,5	;RP0=0, select bank0
  2319     0545  1303               	bcf	3,6	;RP1=0, select bank0
  2320     0546  1688               	bsf	8,5	;volatile
  2321     0547  2D4B               	goto	u524
  2322     0548                     u510:
  2323     0548  1283               	bcf	3,5	;RP0=0, select bank0
  2324     0549  1303               	bcf	3,6	;RP1=0, select bank0
  2325     054A  1288               	bcf	8,5	;volatile
  2326     054B                     u524:
  2327     054B                     l1144:
  2328                           
  2329                           ;lcd.c: 118:  RD6 = temp.bits.b2;
  2330     054B  1972               	btfsc	lcd_put_nibble@temp,2
  2331     054C  2D4E               	goto	u531
  2332     054D  2D52               	goto	u530
  2333     054E                     u531:
  2334     054E  1283               	bcf	3,5	;RP0=0, select bank0
  2335     054F  1303               	bcf	3,6	;RP1=0, select bank0
  2336     0550  1708               	bsf	8,6	;volatile
  2337     0551  2D55               	goto	u544
  2338     0552                     u530:
  2339     0552  1283               	bcf	3,5	;RP0=0, select bank0
  2340     0553  1303               	bcf	3,6	;RP1=0, select bank0
  2341     0554  1308               	bcf	8,6	;volatile
  2342     0555                     u544:
  2343     0555                     l1146:
  2344                           
  2345                           ;lcd.c: 119:  RD7 = temp.bits.b3;
  2346     0555  19F2               	btfsc	lcd_put_nibble@temp,3
  2347     0556  2D58               	goto	u551
  2348     0557  2D5C               	goto	u550
  2349     0558                     u551:
  2350     0558  1283               	bcf	3,5	;RP0=0, select bank0
  2351     0559  1303               	bcf	3,6	;RP1=0, select bank0
  2352     055A  1788               	bsf	8,7	;volatile
  2353     055B  2D5F               	goto	u564
  2354     055C                     u550:
  2355     055C  1283               	bcf	3,5	;RP0=0, select bank0
  2356     055D  1303               	bcf	3,6	;RP1=0, select bank0
  2357     055E  1388               	bcf	8,7	;volatile
  2358     055F                     u564:
  2359                           
  2360                           ;lcd.c: 121:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  2361     055F  3006               	movlw	6
  2362     0560  00F0               	movwf	??_lcd_put_nibble
  2363     0561                     u947:
  2364     0561  0BF0               	decfsz	??_lcd_put_nibble,f
  2365     0562  2D61               	goto	u947
  2366     0563  0000               	nop
  2367     0564                     l1148:
  2368                           
  2369                           ;lcd.c: 122:  RD3 = 1;
  2370     0564  1283               	bcf	3,5	;RP0=0, select bank0
  2371     0565  1303               	bcf	3,6	;RP1=0, select bank0
  2372     0566  1588               	bsf	8,3	;volatile
  2373                           
  2374                           ;lcd.c: 123:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  2375     0567  3006               	movlw	6
  2376     0568  00F0               	movwf	??_lcd_put_nibble
  2377     0569                     u957:
  2378     0569  0BF0               	decfsz	??_lcd_put_nibble,f
  2379     056A  2D69               	goto	u957
  2380     056B  0000               	nop
  2381     056C                     l1150:
  2382                           
  2383                           ;lcd.c: 124:  RD3 = 0;
  2384     056C  1283               	bcf	3,5	;RP0=0, select bank0
  2385     056D  1303               	bcf	3,6	;RP1=0, select bank0
  2386     056E  1188               	bcf	8,3	;volatile
  2387     056F                     l148:
  2388     056F  0008               	return
  2389     0570                     __end_of_lcd_put_nibble:
  2390                           
  2391                           	psect	text14
  2392     04C5                     __ptext14:	
  2393 ;; *************** function _lcd_busy *****************
  2394 ;; Defined at:
  2395 ;;		line 18 in file "lcd.c"
  2396 ;; Parameters:    Size  Location     Type
  2397 ;;		None
  2398 ;; Auto vars:     Size  Location     Type
  2399 ;;  busy            1    1[COMMON] unsigned char 
  2400 ;; Return value:  Size  Location     Type
  2401 ;;                  1    wreg      unsigned char 
  2402 ;; Registers used:
  2403 ;;		wreg, status,2
  2404 ;; Tracked objects:
  2405 ;;		On entry : 0/0
  2406 ;;		On exit  : 0/0
  2407 ;;		Unchanged: 0/0
  2408 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2409 ;;      Params:         0       0       0       0       0
  2410 ;;      Locals:         1       0       0       0       0
  2411 ;;      Temps:          1       0       0       0       0
  2412 ;;      Totals:         2       0       0       0       0
  2413 ;;Total ram usage:        2 bytes
  2414 ;; Hardware stack levels used: 1
  2415 ;; This function calls:
  2416 ;;		Nothing
  2417 ;; This function is called by:
  2418 ;;		_load_custom_characters
  2419 ;;		_lcd_gotoxy
  2420 ;;		_lcd_putc
  2421 ;;		_lcd_init
  2422 ;; This function uses a non-reentrant model
  2423 ;;
  2424                           
  2425     04C5                     _lcd_busy:	
  2426                           ;psect for function _lcd_busy
  2427                           
  2428     04C5                     l1168:	
  2429                           ;incstack = 0
  2430                           ; Regs used in _lcd_busy: [wreg+status,2]
  2431                           
  2432                           
  2433                           ;lcd.c: 21: unsigned char busy;;lcd.c: 24:  TRISD4 = 1;
  2434     04C5  1683               	bsf	3,5	;RP0=1, select bank1
  2435     04C6  1303               	bcf	3,6	;RP1=0, select bank1
  2436     04C7  1608               	bsf	8,4	;volatile
  2437                           
  2438                           ;lcd.c: 25:  TRISD5 = 1;
  2439     04C8  1688               	bsf	8,5	;volatile
  2440                           
  2441                           ;lcd.c: 26:  TRISD6 = 1;
  2442     04C9  1708               	bsf	8,6	;volatile
  2443                           
  2444                           ;lcd.c: 27:  TRISD7 = 1;
  2445     04CA  1788               	bsf	8,7	;volatile
  2446                           
  2447                           ;lcd.c: 29:  RD2 = 1;
  2448     04CB  1283               	bcf	3,5	;RP0=0, select bank0
  2449     04CC  1303               	bcf	3,6	;RP1=0, select bank0
  2450     04CD  1508               	bsf	8,2	;volatile
  2451                           
  2452                           ;lcd.c: 30:  RD1 = 0;
  2453     04CE  1088               	bcf	8,1	;volatile
  2454     04CF                     l1170:
  2455                           
  2456                           ;lcd.c: 31:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  2457     04CF  3006               	movlw	6
  2458     04D0  00F0               	movwf	??_lcd_busy
  2459     04D1                     u967:
  2460     04D1  0BF0               	decfsz	??_lcd_busy,f
  2461     04D2  2CD1               	goto	u967
  2462     04D3  0000               	nop
  2463     04D4                     l1172:
  2464                           
  2465                           ;lcd.c: 32:  RD3 = 1;
  2466     04D4  1283               	bcf	3,5	;RP0=0, select bank0
  2467     04D5  1303               	bcf	3,6	;RP1=0, select bank0
  2468     04D6  1588               	bsf	8,3	;volatile
  2469                           
  2470                           ;lcd.c: 33:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  2471     04D7  3006               	movlw	6
  2472     04D8  00F0               	movwf	??_lcd_busy
  2473     04D9                     u977:
  2474     04D9  0BF0               	decfsz	??_lcd_busy,f
  2475     04DA  2CD9               	goto	u977
  2476     04DB  0000               	nop
  2477     04DC                     l1174:
  2478                           
  2479                           ;lcd.c: 35:  busy = RD7;
  2480     04DC  3000               	movlw	0
  2481     04DD  1283               	bcf	3,5	;RP0=0, select bank0
  2482     04DE  1303               	bcf	3,6	;RP1=0, select bank0
  2483     04DF  1B88               	btfsc	8,7	;volatile
  2484     04E0  3001               	movlw	1
  2485     04E1  00F1               	movwf	lcd_busy@busy
  2486     04E2                     l1176:
  2487                           
  2488                           ;lcd.c: 37:  RD3 = 0;
  2489     04E2  1188               	bcf	8,3	;volatile
  2490     04E3                     l1178:
  2491                           
  2492                           ;lcd.c: 38:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  2493     04E3  3006               	movlw	6
  2494     04E4  00F0               	movwf	??_lcd_busy
  2495     04E5                     u987:
  2496     04E5  0BF0               	decfsz	??_lcd_busy,f
  2497     04E6  2CE5               	goto	u987
  2498     04E7  0000               	nop
  2499     04E8                     l1180:
  2500                           
  2501                           ;lcd.c: 39:  RD3 = 1;
  2502     04E8  1283               	bcf	3,5	;RP0=0, select bank0
  2503     04E9  1303               	bcf	3,6	;RP1=0, select bank0
  2504     04EA  1588               	bsf	8,3	;volatile
  2505     04EB                     l1182:
  2506                           
  2507                           ;lcd.c: 40:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  2508     04EB  3006               	movlw	6
  2509     04EC  00F0               	movwf	??_lcd_busy
  2510     04ED                     u997:
  2511     04ED  0BF0               	decfsz	??_lcd_busy,f
  2512     04EE  2CED               	goto	u997
  2513     04EF  0000               	nop
  2514     04F0                     l1184:
  2515                           
  2516                           ;lcd.c: 41:  RD3 = 0;
  2517     04F0  1283               	bcf	3,5	;RP0=0, select bank0
  2518     04F1  1303               	bcf	3,6	;RP1=0, select bank0
  2519     04F2  1188               	bcf	8,3	;volatile
  2520     04F3                     l1186:
  2521                           
  2522                           ;lcd.c: 43:  return busy;
  2523     04F3  0871               	movf	lcd_busy@busy,w
  2524     04F4                     l140:
  2525     04F4  0008               	return
  2526     04F5                     __end_of_lcd_busy:
  2527                           
  2528                           	psect	text15
  2529     0413                     __ptext15:	
  2530 ;; *************** function _delay200ms *****************
  2531 ;; Defined at:
  2532 ;;		line 61 in file "BT3.c"
  2533 ;; Parameters:    Size  Location     Type
  2534 ;;		None
  2535 ;; Auto vars:     Size  Location     Type
  2536 ;;		None
  2537 ;; Return value:  Size  Location     Type
  2538 ;;                  1    wreg      void 
  2539 ;; Registers used:
  2540 ;;		wreg, status,2, status,0, pclath, cstack
  2541 ;; Tracked objects:
  2542 ;;		On entry : 0/0
  2543 ;;		On exit  : 0/0
  2544 ;;		Unchanged: 0/0
  2545 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2546 ;;      Params:         0       0       0       0       0
  2547 ;;      Locals:         0       0       0       0       0
  2548 ;;      Temps:          0       0       0       0       0
  2549 ;;      Totals:         0       0       0       0       0
  2550 ;;Total ram usage:        0 bytes
  2551 ;; Hardware stack levels used: 1
  2552 ;; Hardware stack levels required when called: 1
  2553 ;; This function calls:
  2554 ;;		_delay100us
  2555 ;; This function is called by:
  2556 ;;		_shift_left_screen
  2557 ;;		_shift_right_screen
  2558 ;;		_chop_tat
  2559 ;;		_main
  2560 ;; This function uses a non-reentrant model
  2561 ;;
  2562                           
  2563     0413                     _delay200ms:	
  2564                           ;psect for function _delay200ms
  2565                           
  2566     0413                     l1240:	
  2567                           ;incstack = 0
  2568                           ; Regs used in _delay200ms: [wreg+status,2+status,0+pclath+cstack]
  2569                           
  2570                           
  2571                           ;BT3.c: 63: delay100us(2000);
  2572     0413  30D0               	movlw	208
  2573     0414  00F0               	movwf	delay100us@n
  2574     0415  3007               	movlw	7
  2575     0416  00F1               	movwf	delay100us@n+1
  2576     0417  120A  118A  24A2  120A  118A  	fcall	_delay100us
  2577     041C                     l66:
  2578     041C  0008               	return
  2579     041D                     __end_of_delay200ms:
  2580                           
  2581                           	psect	text16
  2582     04A2                     __ptext16:	
  2583 ;; *************** function _delay100us *****************
  2584 ;; Defined at:
  2585 ;;		line 51 in file "BT3.c"
  2586 ;; Parameters:    Size  Location     Type
  2587 ;;  n               2    0[COMMON] unsigned int 
  2588 ;; Auto vars:     Size  Location     Type
  2589 ;;		None
  2590 ;; Return value:  Size  Location     Type
  2591 ;;                  1    wreg      void 
  2592 ;; Registers used:
  2593 ;;		wreg, status,2, status,0
  2594 ;; Tracked objects:
  2595 ;;		On entry : 0/0
  2596 ;;		On exit  : 0/0
  2597 ;;		Unchanged: 0/0
  2598 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2599 ;;      Params:         2       0       0       0       0
  2600 ;;      Locals:         0       0       0       0       0
  2601 ;;      Temps:          0       0       0       0       0
  2602 ;;      Totals:         2       0       0       0       0
  2603 ;;Total ram usage:        2 bytes
  2604 ;; Hardware stack levels used: 1
  2605 ;; This function calls:
  2606 ;;		Nothing
  2607 ;; This function is called by:
  2608 ;;		_delay200ms
  2609 ;; This function uses a non-reentrant model
  2610 ;;
  2611                           
  2612     04A2                     _delay100us:	
  2613                           ;psect for function _delay100us
  2614                           
  2615     04A2                     l1202:	
  2616                           ;incstack = 0
  2617                           ; Regs used in _delay100us: [wreg+status,2+status,0]
  2618                           
  2619                           
  2620                           ;BT3.c: 51: void delay100us(unsigned int n);BT3.c: 52: { while(n--)
  2621     04A2  2CB6               	goto	l1220
  2622     04A3                     l1204:
  2623                           
  2624                           ;BT3.c: 53: {;BT3.c: 54: TMR0 = 231;
  2625     04A3  30E7               	movlw	231
  2626     04A4  1283               	bcf	3,5	;RP0=0, select bank0
  2627     04A5  1303               	bcf	3,6	;RP1=0, select bank0
  2628     04A6  0081               	movwf	1	;volatile
  2629     04A7                     l1206:
  2630                           
  2631                           ;BT3.c: 55: TMR0IF = 0;
  2632     04A7  110B               	bcf	11,2	;volatile
  2633     04A8                     l1208:
  2634                           
  2635                           ;BT3.c: 56: T0CS = 0;
  2636     04A8  1683               	bsf	3,5	;RP0=1, select bank1
  2637     04A9  1303               	bcf	3,6	;RP1=0, select bank1
  2638     04AA  1281               	bcf	1,5	;volatile
  2639     04AB                     l1210:
  2640                           
  2641                           ;BT3.c: 57: GIE=PEIE =TMR0IE = 0;
  2642     04AB  128B               	bcf	11,5	;volatile
  2643     04AC  130B               	bcf	11,6	;volatile
  2644     04AD  138B               	bcf	11,7	;volatile
  2645     04AE                     l1212:
  2646                           
  2647                           ;BT3.c: 58: PSA = 0; PS2 = 0; PS1 = 0; PS0 = 1;
  2648     04AE  1181               	bcf	1,3	;volatile
  2649     04AF                     l1214:
  2650     04AF  1101               	bcf	1,2	;volatile
  2651     04B0                     l1216:
  2652     04B0  1081               	bcf	1,1	;volatile
  2653     04B1                     l1218:
  2654     04B1  1401               	bsf	1,0	;volatile
  2655     04B2                     l59:	
  2656                           ;BT3.c: 59: while(TMR0IF==0); } }
  2657                           
  2658     04B2  1D0B               	btfss	11,2	;volatile
  2659     04B3  2CB5               	goto	u611
  2660     04B4  2CB6               	goto	u610
  2661     04B5                     u611:
  2662     04B5  2CB2               	goto	l59
  2663     04B6                     u610:
  2664     04B6                     l1220:
  2665                           
  2666                           ;BT3.c: 52: { while(n--)
  2667     04B6  3001               	movlw	1
  2668     04B7  02F0               	subwf	delay100us@n,f
  2669     04B8  3000               	movlw	0
  2670     04B9  1C03               	skipc
  2671     04BA  03F1               	decf	delay100us@n+1,f
  2672     04BB  02F1               	subwf	delay100us@n+1,f
  2673     04BC  0A70               	incf	delay100us@n,w
  2674     04BD  1D03               	skipz
  2675     04BE  2CC3               	goto	u621
  2676     04BF  0A71               	incf	delay100us@n+1,w
  2677     04C0  1D03               	btfss	3,2
  2678     04C1  2CC3               	goto	u621
  2679     04C2  2CC4               	goto	u620
  2680     04C3                     u621:
  2681     04C3  2CA3               	goto	l1204
  2682     04C4                     u620:
  2683     04C4                     l63:
  2684     04C4  0008               	return
  2685     04C5                     __end_of_delay100us:
  2686     007E                     btemp	set	126	;btemp
  2687     007E                     wtemp0	set	126
  2688                           
  2689                           	psect	config
  2690                           
  2691                           ;Config register CONFIG1 @ 0x2007
  2692                           ;	Oscillator Selection bits
  2693                           ;	FOSC = HS, HS oscillator: High-speed crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1
      +                          /CLKIN
  2694                           ;	Watchdog Timer Enable bit
  2695                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2696                           ;	Power-up Timer Enable bit
  2697                           ;	PWRTE = OFF, PWRT disabled
  2698                           ;	RE3/MCLR pin function select bit
  2699                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  2700                           ;	Code Protection bit
  2701                           ;	CP = OFF, Program memory code protection is disabled
  2702                           ;	Data Code Protection bit
  2703                           ;	CPD = OFF, Data memory code protection is disabled
  2704                           ;	Brown Out Reset Selection bits
  2705                           ;	BOREN = OFF, BOR disabled
  2706                           ;	Internal External Switchover bit
  2707                           ;	IESO = ON, Internal/External Switchover mode is enabled
  2708                           ;	Fail-Safe Clock Monitor Enabled bit
  2709                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2710                           ;	Low Voltage Programming Enable bit
  2711                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2712                           ;	In-Circuit Debugger Mode bit
  2713                           ;	DEBUG = 0x1, unprogrammed default
  2714     2007                     	org	8199
  2715     2007  24D2               	dw	9426
  2716                           
  2717                           ;Config register CONFIG2 @ 0x2008
  2718                           ;	Brown-out Reset Selection bit
  2719                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2720                           ;	Flash Program Memory Self Write Enable bits
  2721                           ;	WRT = OFF, Write protection off
  2722     2008                     	org	8200
  2723     2008  3FFF               	dw	16383

Data Sizes:
    Strings     2
    Constant    93
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     10      10
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    lcd_puts@s	PTR const unsigned char  size(1) Largest target is 2
		 -> STR_1(CODE[2]), STR_2(CODE[2]), STR_3(CODE[2]), STR_4(CODE[2]), 

    load_custom_characters@custom_data	PTR const unsigned char  size(1) Largest target is 65
		 -> cgram_dat(CODE[65]), 


Critical Paths under _main in COMMON

    _main->_in_chu
    _lcd_ShiftRight->_lcd_put_byte
    _lcd_ShiftLeft->_lcd_put_byte
    _load_custom_characters->_lcd_put_byte
    _lcd_init->_lcd_put_byte
    _in_chu->_lcd_putc
    _chop_tat->_lcd_puts
    _lcd_puts->_lcd_putc
    _lcd_putc->_lcd_gotoxy
    _lcd_gotoxy->_lcd_put_byte
    _lcd_put_byte->_lcd_put_nibble
    _delay200ms->_delay100us

Critical Paths under _main in BANK0

    _main->_chop_tat

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   22917
                                              6 BANK0      4     4      0
                           _chop_tat
                         _delay200ms
                             _in_chu
                           _lcd_init
                           _lcd_putc
                           _lcd_puts
             _load_custom_characters
                  _shift_left_screen
                 _shift_right_screen
 ---------------------------------------------------------------------------------
 (1) _shift_right_screen                                   5     3      2    1309
                                              6 COMMON     5     3      2
                         _delay200ms
                     _lcd_ShiftRight
 ---------------------------------------------------------------------------------
 (2) _lcd_ShiftRight                                       0     0      0    1089
                       _lcd_put_byte
 ---------------------------------------------------------------------------------
 (1) _shift_left_screen                                    5     3      2    1309
                                              6 COMMON     5     3      2
                         _delay200ms
                      _lcd_ShiftLeft
 ---------------------------------------------------------------------------------
 (2) _lcd_ShiftLeft                                        0     0      0    1089
                       _lcd_put_byte
 ---------------------------------------------------------------------------------
 (1) _load_custom_characters                               4     3      1    1333
                                              6 COMMON     4     3      1
                           _lcd_busy
                       _lcd_put_byte
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             3     3      0    1223
                                              6 COMMON     2     2      0
                           _lcd_busy
                       _lcd_put_byte
                     _lcd_put_nibble
 ---------------------------------------------------------------------------------
 (1) _in_chu                                               4     4      0    4414
                                             10 COMMON     4     4      0
                         _lcd_gotoxy
                           _lcd_putc
 ---------------------------------------------------------------------------------
 (1) _chop_tat                                             8     6      2    7528
                                             11 COMMON     2     0      2
                                              0 BANK0      6     6      0
                         _delay200ms
                         _lcd_gotoxy
                           _lcd_putc
                           _lcd_puts
 ---------------------------------------------------------------------------------
 (1) _lcd_puts                                             1     1      0    2894
                                             10 COMMON     1     1      0
                           _lcd_putc
 ---------------------------------------------------------------------------------
 (2) _lcd_putc                                             1     1      0    2717
                                              9 COMMON     1     1      0
                           _lcd_busy
                         _lcd_gotoxy
                       _lcd_put_byte
 ---------------------------------------------------------------------------------
 (3) _lcd_gotoxy                                           3     2      1    1561
                                              6 COMMON     3     2      1
                           _lcd_busy
                       _lcd_put_byte
 ---------------------------------------------------------------------------------
 (3) _lcd_put_byte                                         3     2      1    1089
                                              3 COMMON     3     2      1
                     _lcd_put_nibble
 ---------------------------------------------------------------------------------
 (4) _lcd_put_nibble                                       3     3      0     111
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _lcd_busy                                             2     2      0      23
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _delay200ms                                           0     0      0      98
                         _delay100us
 ---------------------------------------------------------------------------------
 (3) _delay100us                                           2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _chop_tat
     _delay200ms
       _delay100us
     _lcd_gotoxy
       _lcd_busy
       _lcd_put_byte
         _lcd_put_nibble
     _lcd_putc
       _lcd_busy
       _lcd_gotoxy
       _lcd_put_byte
     _lcd_puts
       _lcd_putc
   _delay200ms
   _in_chu
     _lcd_gotoxy
     _lcd_putc
   _lcd_init
     _lcd_busy
     _lcd_put_byte
     _lcd_put_nibble
   _lcd_putc
   _lcd_puts
   _load_custom_characters
     _lcd_busy
     _lcd_put_byte
   _shift_left_screen
     _delay200ms
     _lcd_ShiftLeft
       _lcd_put_byte
   _shift_right_screen
     _delay200ms
     _lcd_ShiftRight
       _lcd_put_byte

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      A       A       5       12.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Thu Sep 19 10:14:58 2024

                    ??_lcd_ShiftLeft 0076                                    pc 0002  
                                 l54 05B9                                   l63 04C4  
                                 l72 047F                                   l66 041C  
                                 l59 04B2                                   l85 0605  
                                 l78 04A1                                   l95 06D0  
             __end_of_lcd_put_nibble 0570                     ??_lcd_ShiftRight 0076  
                                 fsr 0004                        ?_lcd_put_byte 0073  
                                l104 075B                                  l105 075B  
                                l203 07FB                                  l140 04F4  
                                l206 0409                                  l151 0505  
                                l153 052D                                  l161 045D  
                                l209 0412                                  l148 056F  
                                l185 043B                                  l179 0655  
                                _GIE 005F                                  _RD1 0041  
                                _RD2 0042                                  _RD3 0043  
                                _RD4 0044                                  _RD5 0045  
                                _RD6 0046                                  _RD7 0047  
                                u510 0548                                  _PS0 0408  
                                u511 0544                                  _PS1 0409  
                                u504 0541                                  u600 045D  
                                _PS2 040A                                  u601 045C  
                                u610 04B6                                  u530 0552  
                                u611 04B5                                  u531 054E  
                                u620 04C4                                  u524 054B  
                                u700 05B9                                  u621 04C3  
                                u701 05B8                                  u550 055C  
                                u630 061A                                  u710 047F  
                                u551 0558                                  u631 0619  
                                u711 047E                                  u544 0555  
                                u640 0636                                  u800 07D7  
                                u720 04A1                                  u641 0635  
                                u801 07D6                                  u721 04A0  
                                u490 053E                                  u570 0501  
                                u650 0649                                  u730 05E0  
                                u810 07E9                                  u491 053A  
                                u571 0500                                  u651 0648  
                                u731 05DF                                  u811 07E8  
                                u715 047B                                  u564 055F  
                                u660 043B                                  u740 0605  
                                u820 07FB                                  u661 043A  
                                u741 0604                                  u821 07FA  
                                u725 049D                                  u590 0442  
                                u750 0685                                  u830 0724  
                                u591 0441                                  u751 0684  
                                u831 0723                                  _PSA 040B  
                                u760 06AE                                  u680 058E  
                                u840 0756                                  u585 051B  
                                u761 06AD                                  u681 058D  
                                u841 0755                                  u770 06D0  
                                u690 05A8                                  u771 06CF  
                                u907 078F                                  u691 05A7  
                                u675 0575                                  u835 0720  
                                u780 07B3                                  u781 07B2  
                                u917 079E                                  u845 0752  
                                u790 07C5                                  u927 050A  
                                u775 06CC                                  u791 07C4  
                                u937 0512                                  u947 0561  
                                u957 0569                                  u967 04D1  
                                u887 076C                                  u977 04D9  
                                u897 0780                                  u987 04E5  
                                u997 04ED                                  fsr0 0004  
                               l1200 0453                                 l1210 04AB  
                               l1202 04A2                                 l1212 04AE  
                               l1204 04A3                                 l1220 04B6  
                               l1140 0537                                 l1300 05E7  
                               l1214 04AF                                 l1206 04A7  
                               l1150 056C                                 l1142 0541  
                               l1230 0624                                 l1222 0607  
                               l1310 05FC                                 l1216 04B0  
                               l1208 04A8                                 l1240 0413  
                               l1144 054B                                 l1136 052F  
                               l1160 050D                                 l1152 04F6  
                               l1232 062C                                 l1224 0608  
                               l1312 0656                                 l1400 06F2  
                               l1218 04B1                                 l1170 04CF  
                               l1146 0555                                 l1138 0535  
                               l1162 0515                                 l1154 04FC  
                               l1234 0637                                 l1226 0610  
                               l1250 042B                                 l1330 068C  
                               l1322 0667                                 l1314 065B  
                               l1306 05E9                                 l1242 0401  
                               l1410 0700                                 l1180 04E8  
                               l1172 04D4                                 l1148 0564  
                               l1164 0518                                 l1156 0501  
                               l1236 063F                                 l1228 061B  
                               l1252 042F                                 l1340 06A5  
                               l1324 0674                                 l1316 0663  
                               l1308 05F6                                 l1260 058F  
                               l1244 040A                                 l1412 070F  
                               l1182 04EB                                 l1174 04DC  
                               l1166 0526                                 l1158 0508  
                               l1190 043D                                 l1238 064A  
                               l1246 041E                                 l1342 06AE  
                               l1326 067C                                 l1350 06C6  
                               l1262 059E                                 l1254 0571  
                               l1270 0461                                 l1430 0749  
                               l1422 0728                                 l1414 0717  
                               l1406 06F6                                 l1184 04F0  
                               l1176 04E2                                 l1168 04C5  
                               l1192 0442                                 l1248 041F  
                               l1344 06B3                                 l1336 0690  
                               l1328 0685                                 l1360 0775  
                               l1352 075F                                 l1264 05A8  
                               l1256 0572                                 l1272 046B  
                               l1280 048D                                 l1432 0756  
                               l1424 072D                                 l1416 0724  
                               l1408 06FB                                 l1186 04F3  
                               l1178 04E3                                 l1194 0445  
                               l1346 06B9                                 l1338 069D  
                               l1370 07A3                                 l1362 0776  
                               l1354 0768                                 l1266 05AC  
                               l1258 0584                                 l1274 0471  
                               l1282 0493                                 l1426 0732  
                               l1196 0446                                 l1348 06BE  
                               l1292 05C4                                 l1284 05BA  
                               l1380 07CD                                 l1372 07A9  
                               l1364 077C                                 l1356 0771  
                               l1268 045E                                 l1276 0480  
                               l1428 0741                                 l1198 044A  
                               l1294 05D1                                 l1286 05C2  
                               l1382 07D7                                 l1374 07B3  
                               l1366 078B                                 l1358 0774  
                               l1278 0483                                 l1390 06D1  
                               l1296 05D7                                 l1384 07DF  
                               l1376 07BB                                 l1368 0794  
                               l1392 06D6                                 l1298 05E0  
                               l1386 07E9                                 l1378 07C5  
                               l1394 06DD                                 l1388 07F1  
                               l1396 06E3                                 l1398 06EC  
                               STR_1 0066                                 STR_2 0066  
                               STR_3 0066                                 STR_4 0066  
                               _T0CS 040D                                 _PEIE 005E  
                               _TMR0 0001                                 _main 06D1  
                       lcd_busy@busy 0071                                 btemp 007E  
                               start 0000                      ?_lcd_put_nibble 0070  
                     ??_lcd_put_byte 0074                                ?_main 0070  
                              main@i 0026                                pclath 000A  
                              status 0003                                wtemp0 007E  
                    __initialization 07FC                         __end_of_main 075F  
                      lcd_gotoxy@col 0077                        lcd_gotoxy@row 0076  
                 lcd_put_nibble@temp 0072                               ??_main 007E  
            ?_load_custom_characters 0076                               _TMR0IE 005D  
                             _TMR0IF 005A                               _TRISD1 0441  
                             _TRISD2 0442                               _TRISD3 0443  
                             _TRISD4 0444                               _TRISD5 0445  
                             _TRISD6 0446                               _TRISD7 0447  
                   __end_of_chop_tat 06D1    load_custom_characters@custom_data 0078  
                   __end_of_lcd_busy 04F5                     __end_of_lcd_init 07FC  
                   __end_of_lcd_putc 0656                     __end_of_lcd_puts 043C  
            load_custom_characters@i 0079                               _in_chu 05BA  
                      lcd_put_byte@b 0073       __end_of_load_custom_characters 05BA  
            __end_of__initialization 07FC                 __end_of_lcd_put_byte 052E  
                     __pcstackCOMMON 0070                   shift_left_screen@i 0079  
         __end_of_shift_right_screen 04A2  load_custom_characters@start_address 0076  
                  lcd_gotoxy@address 0078                           _delay100us 04A2  
                         _delay200ms 0413                     ??_lcd_put_nibble 0070  
                         __pmaintext 06D1                              ?_in_chu 0070  
              __end_of_lcd_ShiftLeft 040A                           _lcd_gotoxy 043C  
                          ?_chop_tat 007B                            ?_lcd_busy 0070  
                          ?_lcd_init 0070                            ?_lcd_putc 0070  
                          ?_lcd_puts 0070                           __stringtab 0003  
                  __end_of_dat_line1 0025                    __end_of_dat_line2 0017  
                  __end_of_cgram_dat 0066                              __ptext1 0480  
                            __ptext2 040A                              __ptext3 045E  
                            __ptext4 0401                              __ptext5 0570  
                            __ptext6 075F                              __ptext7 05BA  
                            __ptext8 0656                              __ptext9 041D  
                         ??_chop_tat 007D                          ?_delay200ms 0070  
                        ?_delay100us 0070                           ??_lcd_busy 0070  
                         ??_lcd_init 0076                              in_chu@j 007A  
                         ??_lcd_putc 0079                           ??_lcd_puts 007A  
               end_of_initialization 07FC                       lcd_put_byte@rs 0075  
            shift_right_screen@times 0076               shift_left_screen@times 0076  
                       _lcd_put_byte 04F5                          ?_lcd_gotoxy 0076  
                         in_chu@j_90 007C                       __end_of_in_chu 0606  
                start_initialization 07FC                   _shift_right_screen 0480  
                shift_right_screen@i 0079                  ?_shift_right_screen 0076  
                           ??_in_chu 007A                 ??_shift_right_screen 0078  
                          ___latbits 0002                        __pcstackBANK0 0020  
                     _lcd_ShiftRight 040A                    _shift_left_screen 045E  
                          _dat_line1 0017                            _dat_line2 0009  
                 ?_shift_left_screen 0076                            _cgram_dat 0025  
           ??_load_custom_characters 0077                  ??_shift_left_screen 0078  
                          __pstrings 0003               __end_of_lcd_ShiftRight 0413  
                       ??_delay200ms 0072                         ??_delay100us 0072  
          __end_of_shift_left_screen 0480                            chop_tat@i 0020  
                          chop_tat@j 0022                   __end_of_delay100us 04C5  
                 __end_of_delay200ms 041D                          __stringbase 0008  
                          main@i_109 0028                      ?_lcd_ShiftRight 0070  
                          lcd_putc@c 0079                            lcd_puts@s 007A  
                       ??_lcd_gotoxy 0077                          delay100us@n 0070  
                 __end_of_lcd_gotoxy 045E                        _lcd_ShiftLeft 0401  
                      chop_tat@times 007B                   __end_of__stringtab 0009  
                           _chop_tat 0656                             __ptext10 0606  
                           __ptext11 043C                             __ptext12 04F5  
                           __ptext13 052E                             __ptext14 04C5  
                           __ptext15 0413                             __ptext16 04A2  
                           _lcd_busy 04C5                             _lcd_init 075F  
                           _lcd_putc 0606                             _lcd_puts 041D  
                     ?_lcd_ShiftLeft 0070                      lcd_put_nibble@b 0071  
                       chop_tat@j_95 0024               _load_custom_characters 0570  
                          stringcode 0003                       _lcd_put_nibble 052E  
                           stringdir 0003                             stringtab 0003  
