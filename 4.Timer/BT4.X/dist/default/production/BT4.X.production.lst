

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Thu Sep 19 10:13:02 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	psect	text8,local,class=CODE,merge=1,delta=2
    17                           	psect	text9,local,class=CODE,merge=1,delta=2
    18                           	psect	text10,local,class=CODE,merge=1,delta=2
    19                           	psect	text11,local,class=CODE,merge=1,delta=2
    20                           	psect	text12,local,class=CODE,merge=1,delta=2
    21                           	psect	text13,local,class=CODE,merge=1,delta=2
    22                           	psect	text14,local,class=CODE,merge=1,delta=2
    23                           	psect	text15,local,class=CODE,merge=1,delta=2
    24                           	psect	text16,local,class=CODE,merge=1,delta=2
    25                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    26                           	dabs	1,0x7E,2
    27     0000                     
    28                           ; Generated 12/10/2023 GMT
    29                           ; 
    30                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    31                           ; All rights reserved.
    32                           ; 
    33                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    34                           ; 
    35                           ; Redistribution and use in source and binary forms, with or without modification, are
    36                           ; permitted provided that the following conditions are met:
    37                           ; 
    38                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    39                           ;        conditions and the following disclaimer.
    40                           ; 
    41                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    42                           ;        of conditions and the following disclaimer in the documentation and/or other
    43                           ;        materials provided with the distribution. Publication is not required when
    44                           ;        this file is used in an embedded application.
    45                           ; 
    46                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    47                           ;        software without specific prior written permission.
    48                           ; 
    49                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    50                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    51                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    52                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    53                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    54                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    55                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    56                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    57                           ; 
    58                           ; 
    59                           ; Code-generator required, PIC16F887 Definitions
    60                           ; 
    61                           ; SFR Addresses
    62     0000                     	;# 
    63     0001                     	;# 
    64     0002                     	;# 
    65     0003                     	;# 
    66     0004                     	;# 
    67     0005                     	;# 
    68     0006                     	;# 
    69     0007                     	;# 
    70     0008                     	;# 
    71     0009                     	;# 
    72     000A                     	;# 
    73     000B                     	;# 
    74     000C                     	;# 
    75     000D                     	;# 
    76     000E                     	;# 
    77     000E                     	;# 
    78     000F                     	;# 
    79     0010                     	;# 
    80     0011                     	;# 
    81     0012                     	;# 
    82     0013                     	;# 
    83     0014                     	;# 
    84     0015                     	;# 
    85     0015                     	;# 
    86     0016                     	;# 
    87     0017                     	;# 
    88     0018                     	;# 
    89     0019                     	;# 
    90     001A                     	;# 
    91     001B                     	;# 
    92     001B                     	;# 
    93     001C                     	;# 
    94     001D                     	;# 
    95     001E                     	;# 
    96     001F                     	;# 
    97     0081                     	;# 
    98     0085                     	;# 
    99     0086                     	;# 
   100     0087                     	;# 
   101     0088                     	;# 
   102     0089                     	;# 
   103     008C                     	;# 
   104     008D                     	;# 
   105     008E                     	;# 
   106     008F                     	;# 
   107     0090                     	;# 
   108     0091                     	;# 
   109     0092                     	;# 
   110     0093                     	;# 
   111     0093                     	;# 
   112     0093                     	;# 
   113     0094                     	;# 
   114     0095                     	;# 
   115     0096                     	;# 
   116     0097                     	;# 
   117     0098                     	;# 
   118     0099                     	;# 
   119     009A                     	;# 
   120     009B                     	;# 
   121     009C                     	;# 
   122     009D                     	;# 
   123     009E                     	;# 
   124     009F                     	;# 
   125     0105                     	;# 
   126     0107                     	;# 
   127     0108                     	;# 
   128     0109                     	;# 
   129     010C                     	;# 
   130     010C                     	;# 
   131     010D                     	;# 
   132     010E                     	;# 
   133     010F                     	;# 
   134     0185                     	;# 
   135     0187                     	;# 
   136     0188                     	;# 
   137     0189                     	;# 
   138     018C                     	;# 
   139     018D                     	;# 
   140     0000                     	;# 
   141     0001                     	;# 
   142     0002                     	;# 
   143     0003                     	;# 
   144     0004                     	;# 
   145     0005                     	;# 
   146     0006                     	;# 
   147     0007                     	;# 
   148     0008                     	;# 
   149     0009                     	;# 
   150     000A                     	;# 
   151     000B                     	;# 
   152     000C                     	;# 
   153     000D                     	;# 
   154     000E                     	;# 
   155     000E                     	;# 
   156     000F                     	;# 
   157     0010                     	;# 
   158     0011                     	;# 
   159     0012                     	;# 
   160     0013                     	;# 
   161     0014                     	;# 
   162     0015                     	;# 
   163     0015                     	;# 
   164     0016                     	;# 
   165     0017                     	;# 
   166     0018                     	;# 
   167     0019                     	;# 
   168     001A                     	;# 
   169     001B                     	;# 
   170     001B                     	;# 
   171     001C                     	;# 
   172     001D                     	;# 
   173     001E                     	;# 
   174     001F                     	;# 
   175     0081                     	;# 
   176     0085                     	;# 
   177     0086                     	;# 
   178     0087                     	;# 
   179     0088                     	;# 
   180     0089                     	;# 
   181     008C                     	;# 
   182     008D                     	;# 
   183     008E                     	;# 
   184     008F                     	;# 
   185     0090                     	;# 
   186     0091                     	;# 
   187     0092                     	;# 
   188     0093                     	;# 
   189     0093                     	;# 
   190     0093                     	;# 
   191     0094                     	;# 
   192     0095                     	;# 
   193     0096                     	;# 
   194     0097                     	;# 
   195     0098                     	;# 
   196     0099                     	;# 
   197     009A                     	;# 
   198     009B                     	;# 
   199     009C                     	;# 
   200     009D                     	;# 
   201     009E                     	;# 
   202     009F                     	;# 
   203     0105                     	;# 
   204     0107                     	;# 
   205     0108                     	;# 
   206     0109                     	;# 
   207     010C                     	;# 
   208     010C                     	;# 
   209     010D                     	;# 
   210     010E                     	;# 
   211     010F                     	;# 
   212     0185                     	;# 
   213     0187                     	;# 
   214     0188                     	;# 
   215     0189                     	;# 
   216     018C                     	;# 
   217     018D                     	;# 
   218     0000                     	;# 
   219     0001                     	;# 
   220     0002                     	;# 
   221     0003                     	;# 
   222     0004                     	;# 
   223     0005                     	;# 
   224     0006                     	;# 
   225     0007                     	;# 
   226     0008                     	;# 
   227     0009                     	;# 
   228     000A                     	;# 
   229     000B                     	;# 
   230     000C                     	;# 
   231     000D                     	;# 
   232     000E                     	;# 
   233     000E                     	;# 
   234     000F                     	;# 
   235     0010                     	;# 
   236     0011                     	;# 
   237     0012                     	;# 
   238     0013                     	;# 
   239     0014                     	;# 
   240     0015                     	;# 
   241     0015                     	;# 
   242     0016                     	;# 
   243     0017                     	;# 
   244     0018                     	;# 
   245     0019                     	;# 
   246     001A                     	;# 
   247     001B                     	;# 
   248     001B                     	;# 
   249     001C                     	;# 
   250     001D                     	;# 
   251     001E                     	;# 
   252     001F                     	;# 
   253     0081                     	;# 
   254     0085                     	;# 
   255     0086                     	;# 
   256     0087                     	;# 
   257     0088                     	;# 
   258     0089                     	;# 
   259     008C                     	;# 
   260     008D                     	;# 
   261     008E                     	;# 
   262     008F                     	;# 
   263     0090                     	;# 
   264     0091                     	;# 
   265     0092                     	;# 
   266     0093                     	;# 
   267     0093                     	;# 
   268     0093                     	;# 
   269     0094                     	;# 
   270     0095                     	;# 
   271     0096                     	;# 
   272     0097                     	;# 
   273     0098                     	;# 
   274     0099                     	;# 
   275     009A                     	;# 
   276     009B                     	;# 
   277     009C                     	;# 
   278     009D                     	;# 
   279     009E                     	;# 
   280     009F                     	;# 
   281     0105                     	;# 
   282     0107                     	;# 
   283     0108                     	;# 
   284     0109                     	;# 
   285     010C                     	;# 
   286     010C                     	;# 
   287     010D                     	;# 
   288     010E                     	;# 
   289     010F                     	;# 
   290     0185                     	;# 
   291     0187                     	;# 
   292     0188                     	;# 
   293     0189                     	;# 
   294     018C                     	;# 
   295     018D                     	;# 
   296                           
   297                           	psect	strings
   298     0003                     __pstrings:
   299     0003                     stringtab:
   300     0003                     __stringtab:
   301     0003                     stringcode:	
   302                           ;	String table - string pointers are 1 byte each
   303                           
   304     0003                     stringdir:
   305     0003  3000               	movlw	high stringdir
   306     0004  008A               	movwf	10
   307     0005  0804               	movf	4,w
   308     0006  0A84               	incf	4,f
   309     0007  0782               	addwf	2,f
   310     0008                     __stringbase:
   311     0008  3400               	retlw	0
   312     0009                     __end_of__stringtab:
   313     0009                     _dat_line2:
   314     0009  3442               	retlw	66
   315     000A  3406               	retlw	6
   316     000B  3469               	retlw	105
   317     000C  3420               	retlw	32
   318     000D  3454               	retlw	84
   319     000E  3407               	retlw	7
   320     000F  3470               	retlw	112
   321     0010  3420               	retlw	32
   322     0011  3454               	retlw	84
   323     0012  3469               	retlw	105
   324     0013  346D               	retlw	109
   325     0014  3465               	retlw	101
   326     0015  3472               	retlw	114
   327     0016  3431               	retlw	49
   328     0017                     __end_of_dat_line2:
   329     0017                     _dat_line1:
   330     0017  3454               	retlw	84
   331     0018  3400               	retlw	0
   332     0019  3401               	retlw	1
   333     001A  346E               	retlw	110
   334     001B  3420               	retlw	32
   335     001C  3402               	retlw	2
   336     001D  3403               	retlw	3
   337     001E  3463               	retlw	99
   338     001F  3420               	retlw	32
   339     0020  3454               	retlw	84
   340     0021  3468               	retlw	104
   341     0022  3404               	retlw	4
   342     0023  346E               	retlw	110
   343     0024  3468               	retlw	104
   344     0025                     __end_of_dat_line1:
   345     0025                     _cgram_dat:
   346     0025  3400               	retlw	0
   347     0026  3400               	retlw	0
   348     0027  3400               	retlw	0
   349     0028  3418               	retlw	24
   350     0029  3414               	retlw	20
   351     002A  3410               	retlw	16
   352     002B  3410               	retlw	16
   353     002C  3400               	retlw	0
   354     002D  3402               	retlw	2
   355     002E  3409               	retlw	9
   356     002F  3414               	retlw	20
   357     0030  3400               	retlw	0
   358     0031  341C               	retlw	28
   359     0032  3414               	retlw	20
   360     0033  341E               	retlw	30
   361     0034  3400               	retlw	0
   362     0035  340E               	retlw	14
   363     0036  3409               	retlw	9
   364     0037  3409               	retlw	9
   365     0038  341D               	retlw	29
   366     0039  3409               	retlw	9
   367     003A  3409               	retlw	9
   368     003B  340E               	retlw	14
   369     003C  3400               	retlw	0
   370     003D  3404               	retlw	4
   371     003E  3408               	retlw	8
   372     003F  3412               	retlw	18
   373     0040  3401               	retlw	1
   374     0041  3412               	retlw	18
   375     0042  3412               	retlw	18
   376     0043  341E               	retlw	30
   377     0044  3400               	retlw	0
   378     0045  3400               	retlw	0
   379     0046  3404               	retlw	4
   380     0047  3400               	retlw	0
   381     0048  340C               	retlw	12
   382     0049  3404               	retlw	4
   383     004A  3400               	retlw	0
   384     004B  3404               	retlw	4
   385     004C  3400               	retlw	0
   386     004D  3400               	retlw	0
   387     004E  340E               	retlw	14
   388     004F  3411               	retlw	17
   389     0050  3411               	retlw	17
   390     0051  3411               	retlw	17
   391     0052  340E               	retlw	14
   392     0053  3400               	retlw	0
   393     0054  3404               	retlw	4
   394     0055  3408               	retlw	8
   395     0056  3404               	retlw	4
   396     0057  3400               	retlw	0
   397     0058  340C               	retlw	12
   398     0059  3414               	retlw	20
   399     005A  3414               	retlw	20
   400     005B  341E               	retlw	30
   401     005C  3400               	retlw	0
   402     005D  3408               	retlw	8
   403     005E  3414               	retlw	20
   404     005F  3408               	retlw	8
   405     0060  3414               	retlw	20
   406     0061  341C               	retlw	28
   407     0062  3414               	retlw	20
   408     0063  3408               	retlw	8
   409     0064  3400               	retlw	0
   410     0065  3499               	retlw	153
   411     0066                     __end_of_cgram_dat:
   412     000E                     _TMR1	set	14
   413     000E                     _TMR1L	set	14
   414     000F                     _TMR1H	set	15
   415     0044                     _RD4	set	68
   416     0045                     _RD5	set	69
   417     0046                     _RD6	set	70
   418     0047                     _RD7	set	71
   419     0043                     _RD3	set	67
   420     0041                     _RD1	set	65
   421     0042                     _RD2	set	66
   422     0080                     _TMR1ON	set	128
   423     0082                     _T1SYNC	set	130
   424     0084                     _T1CKPS0	set	132
   425     0085                     _T1CKPS1	set	133
   426     005D                     _TMR0IE	set	93
   427     005E                     _PEIE	set	94
   428     005F                     _GIE	set	95
   429     0081                     _TMR1CS	set	129
   430     0060                     _TMR1IF	set	96
   431     0442                     _TRISD2	set	1090
   432     0441                     _TRISD1	set	1089
   433     0443                     _TRISD3	set	1091
   434     0447                     _TRISD7	set	1095
   435     0446                     _TRISD6	set	1094
   436     0445                     _TRISD5	set	1093
   437     0444                     _TRISD4	set	1092
   438     0066                     STR_1:
   439     0066  340C               	retlw	12
   440     0067  3400               	retlw	0
   441     0066                     
   442                           	psect	cinit
   443     07FC                     start_initialization:	
   444                           ; #config settings
   445                           
   446     07FC                     __initialization:
   447     07FC                     end_of_initialization:	
   448                           ;End of C runtime variable initialization code
   449                           
   450     07FC                     __end_of__initialization:
   451     07FC  0183               	clrf	3
   452     07FD  120A  118A  2ED1   	ljmp	_main	;jump to C main() function
   453                           
   454                           	psect	cstackCOMMON
   455     0070                     __pcstackCOMMON:
   456     0070                     ?_lcd_busy:
   457     0070                     ??_lcd_busy:	
   458                           ; 1 bytes @ 0x0
   459                           
   460     0070                     ?_lcd_ShiftLeft:	
   461                           ; 1 bytes @ 0x0
   462                           
   463     0070                     ?_lcd_ShiftRight:	
   464                           ; 1 bytes @ 0x0
   465                           
   466     0070                     ?_lcd_putc:	
   467                           ; 1 bytes @ 0x0
   468                           
   469     0070                     ?_lcd_puts:	
   470                           ; 1 bytes @ 0x0
   471                           
   472     0070                     ?_lcd_init:	
   473                           ; 1 bytes @ 0x0
   474                           
   475     0070                     ?_delay100us:	
   476                           ; 1 bytes @ 0x0
   477                           
   478     0070                     ?_delay200ms:	
   479                           ; 1 bytes @ 0x0
   480                           
   481     0070                     ?_in_chu:	
   482                           ; 1 bytes @ 0x0
   483                           
   484     0070                     ?_main:	
   485                           ; 1 bytes @ 0x0
   486                           
   487     0070                     ?_lcd_put_nibble:	
   488                           ; 1 bytes @ 0x0
   489                           
   490     0070                     ??_lcd_put_nibble:	
   491                           ; 1 bytes @ 0x0
   492                           
   493     0070                     delay100us@n:	
   494                           ; 1 bytes @ 0x0
   495                           
   496                           
   497                           ; 2 bytes @ 0x0
   498     0070                     	ds	1
   499     0071                     lcd_busy@busy:
   500     0071                     lcd_put_nibble@b:	
   501                           ; 1 bytes @ 0x1
   502                           
   503                           
   504                           ; 1 bytes @ 0x1
   505     0071                     	ds	1
   506     0072                     ??_delay100us:
   507     0072                     ??_delay200ms:	
   508                           ; 1 bytes @ 0x2
   509                           
   510     0072                     lcd_put_nibble@temp:	
   511                           ; 1 bytes @ 0x2
   512                           
   513                           
   514                           ; 1 bytes @ 0x2
   515     0072                     	ds	1
   516     0073                     ?_lcd_put_byte:
   517     0073                     lcd_put_byte@b:	
   518                           ; 1 bytes @ 0x3
   519                           
   520                           
   521                           ; 1 bytes @ 0x3
   522     0073                     	ds	1
   523     0074                     ??_lcd_put_byte:
   524                           
   525                           ; 1 bytes @ 0x4
   526     0074                     	ds	1
   527     0075                     lcd_put_byte@rs:
   528                           
   529                           ; 1 bytes @ 0x5
   530     0075                     	ds	1
   531     0076                     ??_lcd_ShiftLeft:
   532     0076                     ??_lcd_ShiftRight:	
   533                           ; 1 bytes @ 0x6
   534                           
   535     0076                     ?_lcd_gotoxy:	
   536                           ; 1 bytes @ 0x6
   537                           
   538     0076                     ??_lcd_init:	
   539                           ; 1 bytes @ 0x6
   540                           
   541     0076                     ?_load_custom_characters:	
   542                           ; 1 bytes @ 0x6
   543                           
   544     0076                     ?_shift_left_screen:	
   545                           ; 1 bytes @ 0x6
   546                           
   547     0076                     ?_shift_right_screen:	
   548                           ; 1 bytes @ 0x6
   549                           
   550     0076                     load_custom_characters@start_address:	
   551                           ; 1 bytes @ 0x6
   552                           
   553     0076                     lcd_gotoxy@row:	
   554                           ; 1 bytes @ 0x6
   555                           
   556     0076                     shift_left_screen@times:	
   557                           ; 1 bytes @ 0x6
   558                           
   559     0076                     shift_right_screen@times:	
   560                           ; 2 bytes @ 0x6
   561                           
   562                           
   563                           ; 2 bytes @ 0x6
   564     0076                     	ds	1
   565     0077                     ??_lcd_gotoxy:
   566     0077                     ??_load_custom_characters:	
   567                           ; 1 bytes @ 0x7
   568                           
   569     0077                     lcd_gotoxy@col:	
   570                           ; 1 bytes @ 0x7
   571                           
   572                           
   573                           ; 1 bytes @ 0x7
   574     0077                     	ds	1
   575     0078                     ??_shift_left_screen:
   576     0078                     ??_shift_right_screen:	
   577                           ; 1 bytes @ 0x8
   578                           
   579     0078                     load_custom_characters@custom_data:	
   580                           ; 1 bytes @ 0x8
   581                           
   582     0078                     lcd_gotoxy@address:	
   583                           ; 1 bytes @ 0x8
   584                           
   585                           
   586                           ; 1 bytes @ 0x8
   587     0078                     	ds	1
   588     0079                     ??_lcd_putc:
   589     0079                     load_custom_characters@i:	
   590                           ; 1 bytes @ 0x9
   591                           
   592     0079                     lcd_putc@c:	
   593                           ; 1 bytes @ 0x9
   594                           
   595     0079                     shift_left_screen@i:	
   596                           ; 1 bytes @ 0x9
   597                           
   598     0079                     shift_right_screen@i:	
   599                           ; 2 bytes @ 0x9
   600                           
   601                           
   602                           ; 2 bytes @ 0x9
   603     0079                     	ds	1
   604     007A                     ??_lcd_puts:
   605     007A                     ??_in_chu:	
   606                           ; 1 bytes @ 0xA
   607                           
   608     007A                     lcd_puts@s:	
   609                           ; 1 bytes @ 0xA
   610                           
   611     007A                     in_chu@j:	
   612                           ; 1 bytes @ 0xA
   613                           
   614                           
   615                           ; 2 bytes @ 0xA
   616     007A                     	ds	1
   617     007B                     ?_chop_tat:
   618     007B                     chop_tat@times:	
   619                           ; 1 bytes @ 0xB
   620                           
   621                           
   622                           ; 2 bytes @ 0xB
   623     007B                     	ds	1
   624     007C                     in_chu@j_92:
   625                           
   626                           ; 2 bytes @ 0xC
   627     007C                     	ds	1
   628     007D                     ??_chop_tat:
   629                           
   630                           ; 1 bytes @ 0xD
   631     007D                     	ds	1
   632     007E                     ??_main:
   633                           
   634                           	psect	cstackBANK0
   635     0020                     __pcstackBANK0:	
   636                           ; 1 bytes @ 0xE
   637                           
   638     0020                     chop_tat@i:
   639                           
   640                           ; 2 bytes @ 0x0
   641     0020                     	ds	2
   642     0022                     chop_tat@j:
   643                           
   644                           ; 2 bytes @ 0x2
   645     0022                     	ds	2
   646     0024                     chop_tat@j_97:
   647                           
   648                           ; 2 bytes @ 0x4
   649     0024                     	ds	2
   650     0026                     main@i:
   651                           
   652                           ; 2 bytes @ 0x6
   653     0026                     	ds	2
   654     0028                     main@i_111:
   655                           
   656                           ; 2 bytes @ 0x8
   657     0028                     	ds	2
   658                           
   659                           	psect	maintext
   660     06D1                     __pmaintext:	
   661 ;;
   662 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   663 ;;
   664 ;; *************** function _main *****************
   665 ;; Defined at:
   666 ;;		line 109 in file "BT4.c"
   667 ;; Parameters:    Size  Location     Type
   668 ;;		None
   669 ;; Auto vars:     Size  Location     Type
   670 ;;  i               2    8[BANK0 ] int 
   671 ;;  i               2    6[BANK0 ] int 
   672 ;; Return value:  Size  Location     Type
   673 ;;                  1    wreg      void 
   674 ;; Registers used:
   675 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   676 ;; Tracked objects:
   677 ;;		On entry : B00/0
   678 ;;		On exit  : 0/0
   679 ;;		Unchanged: 0/0
   680 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   681 ;;      Params:         0       0       0       0       0
   682 ;;      Locals:         0       4       0       0       0
   683 ;;      Temps:          0       0       0       0       0
   684 ;;      Totals:         0       4       0       0       0
   685 ;;Total ram usage:        4 bytes
   686 ;; Hardware stack levels required when called: 6
   687 ;; This function calls:
   688 ;;		_chop_tat
   689 ;;		_delay200ms
   690 ;;		_in_chu
   691 ;;		_lcd_init
   692 ;;		_lcd_putc
   693 ;;		_lcd_puts
   694 ;;		_load_custom_characters
   695 ;;		_shift_left_screen
   696 ;;		_shift_right_screen
   697 ;; This function is called by:
   698 ;;		Startup code after reset
   699 ;; This function uses a non-reentrant model
   700 ;;
   701                           
   702     06D1                     _main:	
   703                           ;psect for function _main
   704                           
   705     06D1                     l1398:	
   706                           ;incstack = 0
   707                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   708                           
   709                           
   710                           ;BT4.c: 111:     lcd_init();
   711     06D1  120A  118A  275F  120A  118A  	fcall	_lcd_init
   712     06D6                     l1400:
   713                           
   714                           ;BT4.c: 112:     load_custom_characters(cgram_dat, 0);
   715     06D6  01F6               	clrf	load_custom_characters@start_address
   716     06D7  301D               	movlw	(low ((_cgram_dat-__stringbase)| (0+32768)))& (0+255)
   717     06D8  120A  118A  2570  120A  118A  	fcall	_load_custom_characters
   718     06DD                     l1402:
   719                           
   720                           ;BT4.c: 113:     lcd_putc('\f');
   721     06DD  300C               	movlw	12
   722     06DE  120A  118A  2606  120A  118A  	fcall	_lcd_putc
   723     06E3                     l1404:
   724                           
   725                           ;BT4.c: 115:     chop_tat(3);
   726     06E3  3003               	movlw	3
   727     06E4  00FB               	movwf	chop_tat@times
   728     06E5  3000               	movlw	0
   729     06E6  00FC               	movwf	chop_tat@times+1
   730     06E7  120A  118A  2656  120A  118A  	fcall	_chop_tat
   731     06EC                     l1406:
   732                           
   733                           ;BT4.c: 116:     lcd_puts("\f");
   734     06EC  305E               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   735     06ED  120A  118A  2419  120A  118A  	fcall	_lcd_puts
   736     06F2                     l1408:
   737                           
   738                           ;BT4.c: 118:     for(int i = 0; i< 2; i++){
   739     06F2  1283               	bcf	3,5	;RP0=0, select bank0
   740     06F3  1303               	bcf	3,6	;RP1=0, select bank0
   741     06F4  01A6               	clrf	main@i
   742     06F5  01A7               	clrf	main@i+1
   743     06F6                     l1414:
   744                           
   745                           ;BT4.c: 119:         in_chu();
   746     06F6  120A  118A  25BA  120A  118A  	fcall	_in_chu
   747     06FB                     l1416:
   748                           
   749                           ;BT4.c: 120:         delay200ms();
   750     06FB  120A  118A  240F  120A  118A  	fcall	_delay200ms
   751     0700                     l1418:
   752                           
   753                           ;BT4.c: 121:         shift_left_screen(16);
   754     0700  3010               	movlw	16
   755     0701  00F6               	movwf	shift_left_screen@times
   756     0702  3000               	movlw	0
   757     0703  00F7               	movwf	shift_left_screen@times+1
   758     0704  120A  118A  245A  120A  118A  	fcall	_shift_left_screen
   759                           
   760                           ;BT4.c: 122:         lcd_puts("\f");
   761     0709  305E               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   762     070A  120A  118A  2419  120A  118A  	fcall	_lcd_puts
   763     070F                     l1420:
   764                           
   765                           ;BT4.c: 123:     }
   766     070F  3001               	movlw	1
   767     0710  1283               	bcf	3,5	;RP0=0, select bank0
   768     0711  1303               	bcf	3,6	;RP1=0, select bank0
   769     0712  07A6               	addwf	main@i,f
   770     0713  1803               	skipnc
   771     0714  0AA7               	incf	main@i+1,f
   772     0715  3000               	movlw	0
   773     0716  07A7               	addwf	main@i+1,f
   774     0717                     l1422:
   775     0717  0827               	movf	main@i+1,w
   776     0718  3A80               	xorlw	128
   777     0719  00FF               	movwf	btemp+1
   778     071A  3080               	movlw	128
   779     071B  027F               	subwf	btemp+1,w
   780     071C  1D03               	skipz
   781     071D  2F20               	goto	u835
   782     071E  3002               	movlw	2
   783     071F  0226               	subwf	main@i,w
   784     0720                     u835:
   785     0720  1C03               	skipc
   786     0721  2F23               	goto	u831
   787     0722  2F24               	goto	u830
   788     0723                     u831:
   789     0723  2EF6               	goto	l1414
   790     0724                     u830:
   791     0724                     l1424:
   792                           
   793                           ;BT4.c: 125:     for(int i = 0; i< 2; i++){
   794     0724  1283               	bcf	3,5	;RP0=0, select bank0
   795     0725  1303               	bcf	3,6	;RP1=0, select bank0
   796     0726  01A8               	clrf	main@i_111
   797     0727  01A9               	clrf	main@i_111+1
   798     0728                     l1430:
   799                           
   800                           ;BT4.c: 126:         in_chu();
   801     0728  120A  118A  25BA  120A  118A  	fcall	_in_chu
   802     072D                     l1432:
   803                           
   804                           ;BT4.c: 127:         delay200ms();
   805     072D  120A  118A  240F  120A  118A  	fcall	_delay200ms
   806     0732                     l1434:
   807                           
   808                           ;BT4.c: 128:         shift_right_screen(16);
   809     0732  3010               	movlw	16
   810     0733  00F6               	movwf	shift_right_screen@times
   811     0734  3000               	movlw	0
   812     0735  00F7               	movwf	shift_right_screen@times+1
   813     0736  120A  118A  247C  120A  118A  	fcall	_shift_right_screen
   814                           
   815                           ;BT4.c: 129:         lcd_puts("\f");
   816     073B  305E               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   817     073C  120A  118A  2419  120A  118A  	fcall	_lcd_puts
   818     0741                     l1436:
   819                           
   820                           ;BT4.c: 130:     }
   821     0741  3001               	movlw	1
   822     0742  1283               	bcf	3,5	;RP0=0, select bank0
   823     0743  1303               	bcf	3,6	;RP1=0, select bank0
   824     0744  07A8               	addwf	main@i_111,f
   825     0745  1803               	skipnc
   826     0746  0AA9               	incf	main@i_111+1,f
   827     0747  3000               	movlw	0
   828     0748  07A9               	addwf	main@i_111+1,f
   829     0749                     l1438:
   830     0749  0829               	movf	main@i_111+1,w
   831     074A  3A80               	xorlw	128
   832     074B  00FF               	movwf	btemp+1
   833     074C  3080               	movlw	128
   834     074D  027F               	subwf	btemp+1,w
   835     074E  1D03               	skipz
   836     074F  2F52               	goto	u845
   837     0750  3002               	movlw	2
   838     0751  0228               	subwf	main@i_111,w
   839     0752                     u845:
   840     0752  1C03               	skipc
   841     0753  2F55               	goto	u841
   842     0754  2F56               	goto	u840
   843     0755                     u841:
   844     0755  2F28               	goto	l1430
   845     0756                     u840:
   846     0756                     l1440:
   847                           
   848                           ;BT4.c: 132:     in_chu();
   849     0756  120A  118A  25BA  120A  118A  	fcall	_in_chu
   850     075B                     l108:	
   851                           ;BT4.c: 135:     while(1);
   852                           
   853     075B                     l109:
   854     075B  2F5B               	goto	l108
   855     075C  120A  118A  2800   	ljmp	start
   856     075F                     __end_of_main:
   857                           
   858                           	psect	text1
   859     047C                     __ptext1:	
   860 ;; *************** function _shift_right_screen *****************
   861 ;; Defined at:
   862 ;;		line 75 in file "BT4.c"
   863 ;; Parameters:    Size  Location     Type
   864 ;;  times           2    6[COMMON] int 
   865 ;; Auto vars:     Size  Location     Type
   866 ;;  i               2    9[COMMON] int 
   867 ;; Return value:  Size  Location     Type
   868 ;;                  1    wreg      void 
   869 ;; Registers used:
   870 ;;		wreg, status,2, status,0, pclath, cstack
   871 ;; Tracked objects:
   872 ;;		On entry : 0/0
   873 ;;		On exit  : 0/0
   874 ;;		Unchanged: 0/0
   875 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   876 ;;      Params:         2       0       0       0       0
   877 ;;      Locals:         2       0       0       0       0
   878 ;;      Temps:          1       0       0       0       0
   879 ;;      Totals:         5       0       0       0       0
   880 ;;Total ram usage:        5 bytes
   881 ;; Hardware stack levels used: 1
   882 ;; Hardware stack levels required when called: 3
   883 ;; This function calls:
   884 ;;		_delay200ms
   885 ;;		_lcd_ShiftRight
   886 ;; This function is called by:
   887 ;;		_main
   888 ;; This function uses a non-reentrant model
   889 ;;
   890                           
   891     047C                     _shift_right_screen:	
   892                           ;psect for function _shift_right_screen
   893                           
   894     047C                     l1284:	
   895                           ;incstack = 0
   896                           ; Regs used in _shift_right_screen: [wreg+status,2+status,0+pclath+cstack]
   897                           
   898                           
   899                           ;BT4.c: 75: void shift_right_screen(int times);BT4.c: 76: {;BT4.c: 77:     for(int i = 0
      +                          ; i < times; i++) {
   900     047C  01F9               	clrf	shift_right_screen@i
   901     047D  01FA               	clrf	shift_right_screen@i+1
   902     047E  2C8F               	goto	l1290
   903     047F                     l1286:
   904                           
   905                           ;BT4.c: 78:         lcd_ShiftRight();
   906     047F  120A  118A  2406  120A  118A  	fcall	_lcd_ShiftRight
   907                           
   908                           ;BT4.c: 79:         delay200ms();
   909     0484  120A  118A  240F  120A  118A  	fcall	_delay200ms
   910     0489                     l1288:
   911                           
   912                           ;BT4.c: 80:     }
   913     0489  3001               	movlw	1
   914     048A  07F9               	addwf	shift_right_screen@i,f
   915     048B  1803               	skipnc
   916     048C  0AFA               	incf	shift_right_screen@i+1,f
   917     048D  3000               	movlw	0
   918     048E  07FA               	addwf	shift_right_screen@i+1,f
   919     048F                     l1290:
   920     048F  087A               	movf	shift_right_screen@i+1,w
   921     0490  3A80               	xorlw	128
   922     0491  00F8               	movwf	??_shift_right_screen
   923     0492  0877               	movf	shift_right_screen@times+1,w
   924     0493  3A80               	xorlw	128
   925     0494  0278               	subwf	??_shift_right_screen,w
   926     0495  1D03               	skipz
   927     0496  2C99               	goto	u725
   928     0497  0876               	movf	shift_right_screen@times,w
   929     0498  0279               	subwf	shift_right_screen@i,w
   930     0499                     u725:
   931     0499  1C03               	skipc
   932     049A  2C9C               	goto	u721
   933     049B  2C9D               	goto	u720
   934     049C                     u721:
   935     049C  2C7F               	goto	l1286
   936     049D                     u720:
   937     049D                     l82:
   938     049D  0008               	return
   939     049E                     __end_of_shift_right_screen:
   940                           
   941                           	psect	text2
   942     0406                     __ptext2:	
   943 ;; *************** function _lcd_ShiftRight *****************
   944 ;; Defined at:
   945 ;;		line 304 in file "lcd.c"
   946 ;; Parameters:    Size  Location     Type
   947 ;;		None
   948 ;; Auto vars:     Size  Location     Type
   949 ;;		None
   950 ;; Return value:  Size  Location     Type
   951 ;;                  1    wreg      void 
   952 ;; Registers used:
   953 ;;		wreg, status,2, status,0, pclath, cstack
   954 ;; Tracked objects:
   955 ;;		On entry : 0/0
   956 ;;		On exit  : 0/0
   957 ;;		Unchanged: 0/0
   958 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   959 ;;      Params:         0       0       0       0       0
   960 ;;      Locals:         0       0       0       0       0
   961 ;;      Temps:          0       0       0       0       0
   962 ;;      Totals:         0       0       0       0       0
   963 ;;Total ram usage:        0 bytes
   964 ;; Hardware stack levels used: 1
   965 ;; Hardware stack levels required when called: 2
   966 ;; This function calls:
   967 ;;		_lcd_put_byte
   968 ;; This function is called by:
   969 ;;		_shift_right_screen
   970 ;;		_lcd_MoveRight
   971 ;; This function uses a non-reentrant model
   972 ;;
   973                           
   974     0406                     _lcd_ShiftRight:	
   975                           ;psect for function _lcd_ShiftRight
   976                           
   977     0406                     l1252:	
   978                           ;incstack = 0
   979                           ; Regs used in _lcd_ShiftRight: [wreg+status,2+status,0+pclath+cstack]
   980                           
   981                           
   982                           ;lcd.c: 309:      lcd_put_byte(0,0x1C);
   983     0406  301C               	movlw	28
   984     0407  00F3               	movwf	lcd_put_byte@b
   985     0408  3000               	movlw	0
   986     0409  120A  118A  24F5  120A  118A  	fcall	_lcd_put_byte
   987     040E                     l213:
   988     040E  0008               	return
   989     040F                     __end_of_lcd_ShiftRight:
   990                           
   991                           	psect	text3
   992     045A                     __ptext3:	
   993 ;; *************** function _shift_left_screen *****************
   994 ;; Defined at:
   995 ;;		line 68 in file "BT4.c"
   996 ;; Parameters:    Size  Location     Type
   997 ;;  times           2    6[COMMON] int 
   998 ;; Auto vars:     Size  Location     Type
   999 ;;  i               2    9[COMMON] int 
  1000 ;; Return value:  Size  Location     Type
  1001 ;;                  1    wreg      void 
  1002 ;; Registers used:
  1003 ;;		wreg, status,2, status,0, pclath, cstack
  1004 ;; Tracked objects:
  1005 ;;		On entry : 0/0
  1006 ;;		On exit  : 0/0
  1007 ;;		Unchanged: 0/0
  1008 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1009 ;;      Params:         2       0       0       0       0
  1010 ;;      Locals:         2       0       0       0       0
  1011 ;;      Temps:          1       0       0       0       0
  1012 ;;      Totals:         5       0       0       0       0
  1013 ;;Total ram usage:        5 bytes
  1014 ;; Hardware stack levels used: 1
  1015 ;; Hardware stack levels required when called: 3
  1016 ;; This function calls:
  1017 ;;		_delay200ms
  1018 ;;		_lcd_ShiftLeft
  1019 ;; This function is called by:
  1020 ;;		_main
  1021 ;; This function uses a non-reentrant model
  1022 ;;
  1023                           
  1024     045A                     _shift_left_screen:	
  1025                           ;psect for function _shift_left_screen
  1026                           
  1027     045A                     l1276:	
  1028                           ;incstack = 0
  1029                           ; Regs used in _shift_left_screen: [wreg+status,2+status,0+pclath+cstack]
  1030                           
  1031                           
  1032                           ;BT4.c: 68: void shift_left_screen(int times);BT4.c: 69: {;BT4.c: 70:     for(int i = 0;
      +                           i < times; i++) {
  1033     045A  01F9               	clrf	shift_left_screen@i
  1034     045B  01FA               	clrf	shift_left_screen@i+1
  1035     045C  2C6D               	goto	l1282
  1036     045D                     l1278:
  1037                           
  1038                           ;BT4.c: 71:         lcd_ShiftLeft();
  1039     045D  120A  118A  23FD  120A  118A  	fcall	_lcd_ShiftLeft
  1040                           
  1041                           ;BT4.c: 72:         delay200ms();
  1042     0462  120A  118A  240F  120A  118A  	fcall	_delay200ms
  1043     0467                     l1280:
  1044                           
  1045                           ;BT4.c: 73:     }
  1046     0467  3001               	movlw	1
  1047     0468  07F9               	addwf	shift_left_screen@i,f
  1048     0469  1803               	skipnc
  1049     046A  0AFA               	incf	shift_left_screen@i+1,f
  1050     046B  3000               	movlw	0
  1051     046C  07FA               	addwf	shift_left_screen@i+1,f
  1052     046D                     l1282:
  1053     046D  087A               	movf	shift_left_screen@i+1,w
  1054     046E  3A80               	xorlw	128
  1055     046F  00F8               	movwf	??_shift_left_screen
  1056     0470  0877               	movf	shift_left_screen@times+1,w
  1057     0471  3A80               	xorlw	128
  1058     0472  0278               	subwf	??_shift_left_screen,w
  1059     0473  1D03               	skipz
  1060     0474  2C77               	goto	u715
  1061     0475  0876               	movf	shift_left_screen@times,w
  1062     0476  0279               	subwf	shift_left_screen@i,w
  1063     0477                     u715:
  1064     0477  1C03               	skipc
  1065     0478  2C7A               	goto	u711
  1066     0479  2C7B               	goto	u710
  1067     047A                     u711:
  1068     047A  2C5D               	goto	l1278
  1069     047B                     u710:
  1070     047B                     l76:
  1071     047B  0008               	return
  1072     047C                     __end_of_shift_left_screen:
  1073                           
  1074                           	psect	text4
  1075     03FD                     __ptext4:	
  1076 ;; *************** function _lcd_ShiftLeft *****************
  1077 ;; Defined at:
  1078 ;;		line 290 in file "lcd.c"
  1079 ;; Parameters:    Size  Location     Type
  1080 ;;		None
  1081 ;; Auto vars:     Size  Location     Type
  1082 ;;		None
  1083 ;; Return value:  Size  Location     Type
  1084 ;;                  1    wreg      void 
  1085 ;; Registers used:
  1086 ;;		wreg, status,2, status,0, pclath, cstack
  1087 ;; Tracked objects:
  1088 ;;		On entry : 0/0
  1089 ;;		On exit  : 0/0
  1090 ;;		Unchanged: 0/0
  1091 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1092 ;;      Params:         0       0       0       0       0
  1093 ;;      Locals:         0       0       0       0       0
  1094 ;;      Temps:          0       0       0       0       0
  1095 ;;      Totals:         0       0       0       0       0
  1096 ;;Total ram usage:        0 bytes
  1097 ;; Hardware stack levels used: 1
  1098 ;; Hardware stack levels required when called: 2
  1099 ;; This function calls:
  1100 ;;		_lcd_put_byte
  1101 ;; This function is called by:
  1102 ;;		_shift_left_screen
  1103 ;;		_lcd_MoveLeft
  1104 ;; This function uses a non-reentrant model
  1105 ;;
  1106                           
  1107     03FD                     _lcd_ShiftLeft:	
  1108                           ;psect for function _lcd_ShiftLeft
  1109                           
  1110     03FD                     l1250:	
  1111                           ;incstack = 0
  1112                           ; Regs used in _lcd_ShiftLeft: [wreg+status,2+status,0+pclath+cstack]
  1113                           
  1114                           
  1115                           ;lcd.c: 295:      lcd_put_byte(0,0x18);
  1116     03FD  3018               	movlw	24
  1117     03FE  00F3               	movwf	lcd_put_byte@b
  1118     03FF  3000               	movlw	0
  1119     0400  120A  118A  24F5  120A  118A  	fcall	_lcd_put_byte
  1120     0405                     l210:
  1121     0405  0008               	return
  1122     0406                     __end_of_lcd_ShiftLeft:
  1123                           
  1124                           	psect	text5
  1125     0570                     __ptext5:	
  1126 ;; *************** function _load_custom_characters *****************
  1127 ;; Defined at:
  1128 ;;		line 41 in file "BT4.c"
  1129 ;; Parameters:    Size  Location     Type
  1130 ;;  custom_data     1    wreg     PTR const unsigned char 
  1131 ;;		 -> cgram_dat(65), 
  1132 ;;  start_addres    1    6[COMMON] unsigned char 
  1133 ;; Auto vars:     Size  Location     Type
  1134 ;;  custom_data     1    8[COMMON] PTR const unsigned char 
  1135 ;;		 -> cgram_dat(65), 
  1136 ;;  i               1    9[COMMON] unsigned char 
  1137 ;; Return value:  Size  Location     Type
  1138 ;;                  1    wreg      void 
  1139 ;; Registers used:
  1140 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1141 ;; Tracked objects:
  1142 ;;		On entry : 0/0
  1143 ;;		On exit  : 0/0
  1144 ;;		Unchanged: 0/0
  1145 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1146 ;;      Params:         1       0       0       0       0
  1147 ;;      Locals:         2       0       0       0       0
  1148 ;;      Temps:          1       0       0       0       0
  1149 ;;      Totals:         4       0       0       0       0
  1150 ;;Total ram usage:        4 bytes
  1151 ;; Hardware stack levels used: 1
  1152 ;; Hardware stack levels required when called: 2
  1153 ;; This function calls:
  1154 ;;		_lcd_busy
  1155 ;;		_lcd_put_byte
  1156 ;; This function is called by:
  1157 ;;		_main
  1158 ;; This function uses a non-reentrant model
  1159 ;;
  1160                           
  1161     0570                     _load_custom_characters:	
  1162                           ;psect for function _load_custom_characters
  1163                           
  1164                           
  1165                           ;incstack = 0
  1166                           ; Regs used in _load_custom_characters: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cst
      +                          ack]
  1167                           ;load_custom_characters@custom_data stored from wreg
  1168     0570  00F8               	movwf	load_custom_characters@custom_data
  1169     0571                     l1262:
  1170                           
  1171                           ;BT4.c: 42:     unsigned char i = 0;
  1172     0571  01F9               	clrf	load_custom_characters@i
  1173     0572                     l1264:
  1174                           
  1175                           ;BT4.c: 43:     lcd_put_byte(0, 0x40 + (start_address * 8));
  1176     0572  0876               	movf	load_custom_characters@start_address,w
  1177     0573  00F7               	movwf	??_load_custom_characters
  1178     0574  3002               	movlw	2
  1179     0575                     u675:
  1180     0575  1003               	clrc
  1181     0576  0DF7               	rlf	??_load_custom_characters,f
  1182     0577  3EFF               	addlw	-1
  1183     0578  1D03               	skipz
  1184     0579  2D75               	goto	u675
  1185     057A  1003               	clrc
  1186     057B  0D77               	rlf	??_load_custom_characters,w
  1187     057C  3E40               	addlw	64
  1188     057D  00F3               	movwf	lcd_put_byte@b
  1189     057E  3000               	movlw	0
  1190     057F  120A  118A  24F5  120A  118A  	fcall	_lcd_put_byte
  1191     0584                     l1266:	
  1192                           ;BT4.c: 44:     while(lcd_busy());
  1193                           
  1194     0584  120A  118A  24C5  120A  118A  	fcall	_lcd_busy
  1195     0589  3A00               	xorlw	0
  1196     058A  1D03               	skipz
  1197     058B  2D8D               	goto	u681
  1198     058C  2D8E               	goto	u680
  1199     058D                     u681:
  1200     058D  2D84               	goto	l1266
  1201     058E                     u680:
  1202     058E  2DAC               	goto	l1274
  1203     058F                     l1268:
  1204                           
  1205                           ;BT4.c: 46:         lcd_put_byte(1, custom_data[i]);
  1206     058F  0879               	movf	load_custom_characters@i,w
  1207     0590  0778               	addwf	load_custom_characters@custom_data,w
  1208     0591  0084               	movwf	4
  1209     0592  120A  118A  2003  120A  118A  	fcall	stringdir
  1210     0597  00F3               	movwf	lcd_put_byte@b
  1211     0598  3001               	movlw	1
  1212     0599  120A  118A  24F5  120A  118A  	fcall	_lcd_put_byte
  1213     059E                     l1270:	
  1214                           ;BT4.c: 47:         while(lcd_busy());
  1215                           
  1216     059E  120A  118A  24C5  120A  118A  	fcall	_lcd_busy
  1217     05A3  3A00               	xorlw	0
  1218     05A4  1D03               	skipz
  1219     05A5  2DA7               	goto	u691
  1220     05A6  2DA8               	goto	u690
  1221     05A7                     u691:
  1222     05A7  2D9E               	goto	l1270
  1223     05A8                     u690:
  1224     05A8                     l1272:
  1225                           
  1226                           ;BT4.c: 48:         i++;
  1227     05A8  3001               	movlw	1
  1228     05A9  00FF               	movwf	btemp+1
  1229     05AA  087F               	movf	btemp+1,w
  1230     05AB  07F9               	addwf	load_custom_characters@i,f
  1231     05AC                     l1274:
  1232                           
  1233                           ;BT4.c: 45:     while(custom_data[i] != 0x99) {
  1234     05AC  0879               	movf	load_custom_characters@i,w
  1235     05AD  0778               	addwf	load_custom_characters@custom_data,w
  1236     05AE  0084               	movwf	4
  1237     05AF  120A  118A  2003  120A  118A  	fcall	stringdir
  1238     05B4  3A99               	xorlw	153
  1239     05B5  1D03               	skipz
  1240     05B6  2DB8               	goto	u701
  1241     05B7  2DB9               	goto	u700
  1242     05B8                     u701:
  1243     05B8  2D8F               	goto	l1268
  1244     05B9                     u700:
  1245     05B9                     l58:
  1246     05B9  0008               	return
  1247     05BA                     __end_of_load_custom_characters:
  1248                           
  1249                           	psect	text6
  1250     075F                     __ptext6:	
  1251 ;; *************** function _lcd_init *****************
  1252 ;; Defined at:
  1253 ;;		line 241 in file "lcd.c"
  1254 ;; Parameters:    Size  Location     Type
  1255 ;;		None
  1256 ;; Auto vars:     Size  Location     Type
  1257 ;;  i               1    0        unsigned char 
  1258 ;; Return value:  Size  Location     Type
  1259 ;;                  1    wreg      void 
  1260 ;; Registers used:
  1261 ;;		wreg, status,2, status,0, pclath, cstack
  1262 ;; Tracked objects:
  1263 ;;		On entry : 0/0
  1264 ;;		On exit  : 0/0
  1265 ;;		Unchanged: 0/0
  1266 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1267 ;;      Params:         0       0       0       0       0
  1268 ;;      Locals:         0       0       0       0       0
  1269 ;;      Temps:          2       0       0       0       0
  1270 ;;      Totals:         2       0       0       0       0
  1271 ;;Total ram usage:        2 bytes
  1272 ;; Hardware stack levels used: 1
  1273 ;; Hardware stack levels required when called: 2
  1274 ;; This function calls:
  1275 ;;		_lcd_busy
  1276 ;;		_lcd_put_byte
  1277 ;;		_lcd_put_nibble
  1278 ;; This function is called by:
  1279 ;;		_main
  1280 ;; This function uses a non-reentrant model
  1281 ;;
  1282                           
  1283     075F                     _lcd_init:	
  1284                           ;psect for function _lcd_init
  1285                           
  1286     075F                     l1360:	
  1287                           ;incstack = 0
  1288                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  1289                           
  1290                           
  1291                           ;lcd.c: 244: unsigned char i;;lcd.c: 247:  TRISD3 = 0;
  1292     075F  1683               	bsf	3,5	;RP0=1, select bank1
  1293     0760  1303               	bcf	3,6	;RP1=0, select bank1
  1294     0761  1188               	bcf	8,3	;volatile
  1295                           
  1296                           ;lcd.c: 248:  TRISD1 = 0;
  1297     0762  1088               	bcf	8,1	;volatile
  1298                           
  1299                           ;lcd.c: 249:  TRISD2 = 0;
  1300     0763  1108               	bcf	8,2	;volatile
  1301                           
  1302                           ;lcd.c: 250:  TRISD4 = 0;
  1303     0764  1208               	bcf	8,4	;volatile
  1304                           
  1305                           ;lcd.c: 251:  TRISD5 = 0;
  1306     0765  1288               	bcf	8,5	;volatile
  1307                           
  1308                           ;lcd.c: 252:  TRISD6 = 0;
  1309     0766  1308               	bcf	8,6	;volatile
  1310                           
  1311                           ;lcd.c: 253:  TRISD7 = 0;
  1312     0767  1388               	bcf	8,7	;volatile
  1313     0768                     l1362:
  1314                           
  1315                           ;lcd.c: 255:  _delay((unsigned long)((15)*(4000000/4000.0)));
  1316     0768  3014               	movlw	20
  1317     0769  00F7               	movwf	??_lcd_init+1
  1318     076A  3079               	movlw	121
  1319     076B  00F6               	movwf	??_lcd_init
  1320     076C                     u887:
  1321     076C  0BF6               	decfsz	??_lcd_init,f
  1322     076D  2F6C               	goto	u887
  1323     076E  0BF7               	decfsz	??_lcd_init+1,f
  1324     076F  2F6C               	goto	u887
  1325     0770  2F71               	nop2
  1326     0771                     l1364:
  1327                           
  1328                           ;lcd.c: 257:  RD1 = 0;
  1329     0771  1283               	bcf	3,5	;RP0=0, select bank0
  1330     0772  1303               	bcf	3,6	;RP1=0, select bank0
  1331     0773  1088               	bcf	8,1	;volatile
  1332     0774                     l1366:
  1333                           
  1334                           ;lcd.c: 258:  RD2 = 0;
  1335     0774  1108               	bcf	8,2	;volatile
  1336     0775                     l1368:
  1337                           
  1338                           ;lcd.c: 259:  RD3 = 0;
  1339     0775  1188               	bcf	8,3	;volatile
  1340     0776                     l1370:
  1341                           
  1342                           ;lcd.c: 261:  lcd_put_nibble(3);
  1343     0776  3003               	movlw	3
  1344     0777  120A  118A  252E  120A  118A  	fcall	_lcd_put_nibble
  1345     077C                     l1372:
  1346                           
  1347                           ;lcd.c: 262:  _delay((unsigned long)((10)*(4000000/4000.0)));
  1348     077C  300D               	movlw	13
  1349     077D  00F7               	movwf	??_lcd_init+1
  1350     077E  30FB               	movlw	251
  1351     077F  00F6               	movwf	??_lcd_init
  1352     0780                     u897:
  1353     0780  0BF6               	decfsz	??_lcd_init,f
  1354     0781  2F80               	goto	u897
  1355     0782  0BF7               	decfsz	??_lcd_init+1,f
  1356     0783  2F80               	goto	u897
  1357     0784  2F85               	nop2
  1358                           
  1359                           ;lcd.c: 263:  lcd_put_nibble(3);
  1360     0785  3003               	movlw	3
  1361     0786  120A  118A  252E  120A  118A  	fcall	_lcd_put_nibble
  1362     078B                     l1374:
  1363                           
  1364                           ;lcd.c: 264:  _delay((unsigned long)((10)*(4000000/4000.0)));
  1365     078B  300D               	movlw	13
  1366     078C  00F7               	movwf	??_lcd_init+1
  1367     078D  30FB               	movlw	251
  1368     078E  00F6               	movwf	??_lcd_init
  1369     078F                     u907:
  1370     078F  0BF6               	decfsz	??_lcd_init,f
  1371     0790  2F8F               	goto	u907
  1372     0791  0BF7               	decfsz	??_lcd_init+1,f
  1373     0792  2F8F               	goto	u907
  1374     0793  2F94               	nop2
  1375     0794                     l1376:
  1376                           
  1377                           ;lcd.c: 265:  lcd_put_nibble(3);
  1378     0794  3003               	movlw	3
  1379     0795  120A  118A  252E  120A  118A  	fcall	_lcd_put_nibble
  1380                           
  1381                           ;lcd.c: 266:  _delay((unsigned long)((10)*(4000000/4000.0)));
  1382     079A  300D               	movlw	13
  1383     079B  00F7               	movwf	??_lcd_init+1
  1384     079C  30FB               	movlw	251
  1385     079D  00F6               	movwf	??_lcd_init
  1386     079E                     u917:
  1387     079E  0BF6               	decfsz	??_lcd_init,f
  1388     079F  2F9E               	goto	u917
  1389     07A0  0BF7               	decfsz	??_lcd_init+1,f
  1390     07A1  2F9E               	goto	u917
  1391     07A2  2FA3               	nop2
  1392     07A3                     l1378:
  1393                           
  1394                           ;lcd.c: 268:  lcd_put_nibble(2);
  1395     07A3  3002               	movlw	2
  1396     07A4  120A  118A  252E  120A  118A  	fcall	_lcd_put_nibble
  1397     07A9                     l1380:	
  1398                           ;lcd.c: 269:  while(lcd_busy());
  1399                           
  1400     07A9  120A  118A  24C5  120A  118A  	fcall	_lcd_busy
  1401     07AE  3A00               	xorlw	0
  1402     07AF  1D03               	skipz
  1403     07B0  2FB2               	goto	u781
  1404     07B1  2FB3               	goto	u780
  1405     07B2                     u781:
  1406     07B2  2FA9               	goto	l1380
  1407     07B3                     u780:
  1408     07B3                     l1382:
  1409                           
  1410                           ;lcd.c: 271:  lcd_put_byte(0,0b00101100 & 0b00111000);
  1411     07B3  3028               	movlw	40
  1412     07B4  00F3               	movwf	lcd_put_byte@b
  1413     07B5  3000               	movlw	0
  1414     07B6  120A  118A  24F5  120A  118A  	fcall	_lcd_put_byte
  1415     07BB                     l1384:	
  1416                           ;lcd.c: 272:  while(lcd_busy());
  1417                           
  1418     07BB  120A  118A  24C5  120A  118A  	fcall	_lcd_busy
  1419     07C0  3A00               	xorlw	0
  1420     07C1  1D03               	skipz
  1421     07C2  2FC4               	goto	u791
  1422     07C3  2FC5               	goto	u790
  1423     07C4                     u791:
  1424     07C4  2FBB               	goto	l1384
  1425     07C5                     u790:
  1426     07C5                     l1386:
  1427                           
  1428                           ;lcd.c: 274:  lcd_put_byte(0,0b00001111 & 0b00001101 & 0b00001110);
  1429     07C5  300C               	movlw	12
  1430     07C6  00F3               	movwf	lcd_put_byte@b
  1431     07C7  3000               	movlw	0
  1432     07C8  120A  118A  24F5  120A  118A  	fcall	_lcd_put_byte
  1433     07CD                     l1388:	
  1434                           ;lcd.c: 275:  while(lcd_busy());
  1435                           
  1436     07CD  120A  118A  24C5  120A  118A  	fcall	_lcd_busy
  1437     07D2  3A00               	xorlw	0
  1438     07D3  1D03               	skipz
  1439     07D4  2FD6               	goto	u801
  1440     07D5  2FD7               	goto	u800
  1441     07D6                     u801:
  1442     07D6  2FCD               	goto	l1388
  1443     07D7                     u800:
  1444     07D7                     l1390:
  1445                           
  1446                           ;lcd.c: 277:  lcd_put_byte(0,0x01);
  1447     07D7  01F3               	clrf	lcd_put_byte@b
  1448     07D8  0AF3               	incf	lcd_put_byte@b,f
  1449     07D9  3000               	movlw	0
  1450     07DA  120A  118A  24F5  120A  118A  	fcall	_lcd_put_byte
  1451     07DF                     l1392:	
  1452                           ;lcd.c: 278:  while(lcd_busy());
  1453                           
  1454     07DF  120A  118A  24C5  120A  118A  	fcall	_lcd_busy
  1455     07E4  3A00               	xorlw	0
  1456     07E5  1D03               	skipz
  1457     07E6  2FE8               	goto	u811
  1458     07E7  2FE9               	goto	u810
  1459     07E8                     u811:
  1460     07E8  2FDF               	goto	l1392
  1461     07E9                     u810:
  1462     07E9                     l1394:
  1463                           
  1464                           ;lcd.c: 280:  lcd_put_byte(0,0b00000110);
  1465     07E9  3006               	movlw	6
  1466     07EA  00F3               	movwf	lcd_put_byte@b
  1467     07EB  3000               	movlw	0
  1468     07EC  120A  118A  24F5  120A  118A  	fcall	_lcd_put_byte
  1469     07F1                     l1396:	
  1470                           ;lcd.c: 281:  while(lcd_busy());
  1471                           
  1472     07F1  120A  118A  24C5  120A  118A  	fcall	_lcd_busy
  1473     07F6  3A00               	xorlw	0
  1474     07F7  1D03               	skipz
  1475     07F8  2FFA               	goto	u821
  1476     07F9  2FFB               	goto	u820
  1477     07FA                     u821:
  1478     07FA  2FF1               	goto	l1396
  1479     07FB                     u820:
  1480     07FB                     l207:
  1481     07FB  0008               	return
  1482     07FC                     __end_of_lcd_init:
  1483                           
  1484                           	psect	text7
  1485     05BA                     __ptext7:	
  1486 ;; *************** function _in_chu *****************
  1487 ;; Defined at:
  1488 ;;		line 83 in file "BT4.c"
  1489 ;; Parameters:    Size  Location     Type
  1490 ;;		None
  1491 ;; Auto vars:     Size  Location     Type
  1492 ;;  j               2   12[COMMON] int 
  1493 ;;  j               2   10[COMMON] int 
  1494 ;; Return value:  Size  Location     Type
  1495 ;;                  1    wreg      void 
  1496 ;; Registers used:
  1497 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1498 ;; Tracked objects:
  1499 ;;		On entry : 0/0
  1500 ;;		On exit  : 0/0
  1501 ;;		Unchanged: 0/0
  1502 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1503 ;;      Params:         0       0       0       0       0
  1504 ;;      Locals:         4       0       0       0       0
  1505 ;;      Temps:          0       0       0       0       0
  1506 ;;      Totals:         4       0       0       0       0
  1507 ;;Total ram usage:        4 bytes
  1508 ;; Hardware stack levels used: 1
  1509 ;; Hardware stack levels required when called: 4
  1510 ;; This function calls:
  1511 ;;		_lcd_gotoxy
  1512 ;;		_lcd_putc
  1513 ;; This function is called by:
  1514 ;;		_main
  1515 ;; This function uses a non-reentrant model
  1516 ;;
  1517                           
  1518     05BA                     _in_chu:	
  1519                           ;psect for function _in_chu
  1520                           
  1521     05BA                     l1292:	
  1522                           ;incstack = 0
  1523                           ; Regs used in _in_chu: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1524                           
  1525                           
  1526                           ;BT4.c: 85:         lcd_gotoxy(0, 0);
  1527     05BA  01F6               	clrf	lcd_gotoxy@row
  1528     05BB  3000               	movlw	0
  1529     05BC  120A  118A  2438  120A  118A  	fcall	_lcd_gotoxy
  1530     05C1                     l1294:
  1531                           
  1532                           ;BT4.c: 86:         for(int j = 0; j <= sizeof(dat_line1)-1; j++)
  1533     05C1  01FA               	clrf	in_chu@j
  1534     05C2  01FB               	clrf	in_chu@j+1
  1535     05C3                     l1300:
  1536                           
  1537                           ;BT4.c: 87:             lcd_putc(dat_line1[j]);
  1538     05C3  087A               	movf	in_chu@j,w
  1539     05C4  3E0F               	addlw	low ((_dat_line1-__stringbase)| (0+32768))
  1540     05C5  0084               	movwf	4
  1541     05C6  120A  118A  2003  120A  118A  	fcall	stringdir
  1542     05CB  120A  118A  2606  120A  118A  	fcall	_lcd_putc
  1543     05D0                     l1302:
  1544     05D0  3001               	movlw	1
  1545     05D1  07FA               	addwf	in_chu@j,f
  1546     05D2  1803               	skipnc
  1547     05D3  0AFB               	incf	in_chu@j+1,f
  1548     05D4  3000               	movlw	0
  1549     05D5  07FB               	addwf	in_chu@j+1,f
  1550     05D6                     l1304:
  1551     05D6  3000               	movlw	0
  1552     05D7  027B               	subwf	in_chu@j+1,w
  1553     05D8  300E               	movlw	14
  1554     05D9  1903               	skipnz
  1555     05DA  027A               	subwf	in_chu@j,w
  1556     05DB  1C03               	skipc
  1557     05DC  2DDE               	goto	u731
  1558     05DD  2DDF               	goto	u730
  1559     05DE                     u731:
  1560     05DE  2DC3               	goto	l1300
  1561     05DF                     u730:
  1562     05DF                     l1306:
  1563                           
  1564                           ;BT4.c: 88:         lcd_gotoxy(0, 1);
  1565     05DF  01F6               	clrf	lcd_gotoxy@row
  1566     05E0  0AF6               	incf	lcd_gotoxy@row,f
  1567     05E1  3000               	movlw	0
  1568     05E2  120A  118A  2438  120A  118A  	fcall	_lcd_gotoxy
  1569     05E7                     l1308:
  1570                           
  1571                           ;BT4.c: 89:         for(int j = 0; j <= sizeof(dat_line2)-1; j++)
  1572     05E7  01FC               	clrf	in_chu@j_92
  1573     05E8  01FD               	clrf	in_chu@j_92+1
  1574     05E9                     l1314:
  1575                           
  1576                           ;BT4.c: 90:             lcd_putc(dat_line2[j]);
  1577     05E9  087C               	movf	in_chu@j_92,w
  1578     05EA  3E01               	addlw	low ((_dat_line2-__stringbase)| (0+32768))
  1579     05EB  0084               	movwf	4
  1580     05EC  120A  118A  2003  120A  118A  	fcall	stringdir
  1581     05F1  120A  118A  2606  120A  118A  	fcall	_lcd_putc
  1582     05F6                     l1316:
  1583     05F6  3001               	movlw	1
  1584     05F7  07FC               	addwf	in_chu@j_92,f
  1585     05F8  1803               	skipnc
  1586     05F9  0AFD               	incf	in_chu@j_92+1,f
  1587     05FA  3000               	movlw	0
  1588     05FB  07FD               	addwf	in_chu@j_92+1,f
  1589     05FC                     l1318:
  1590     05FC  3000               	movlw	0
  1591     05FD  027D               	subwf	in_chu@j_92+1,w
  1592     05FE  300E               	movlw	14
  1593     05FF  1903               	skipnz
  1594     0600  027C               	subwf	in_chu@j_92,w
  1595     0601  1C03               	skipc
  1596     0602  2E04               	goto	u741
  1597     0603  2E05               	goto	u740
  1598     0604                     u741:
  1599     0604  2DE9               	goto	l1314
  1600     0605                     u740:
  1601     0605                     l89:
  1602     0605  0008               	return
  1603     0606                     __end_of_in_chu:
  1604                           
  1605                           	psect	text8
  1606     0656                     __ptext8:	
  1607 ;; *************** function _chop_tat *****************
  1608 ;; Defined at:
  1609 ;;		line 94 in file "BT4.c"
  1610 ;; Parameters:    Size  Location     Type
  1611 ;;  times           2   11[COMMON] unsigned int 
  1612 ;; Auto vars:     Size  Location     Type
  1613 ;;  j               2    4[BANK0 ] int 
  1614 ;;  j               2    2[BANK0 ] int 
  1615 ;;  i               2    0[BANK0 ] int 
  1616 ;; Return value:  Size  Location     Type
  1617 ;;                  1    wreg      void 
  1618 ;; Registers used:
  1619 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1620 ;; Tracked objects:
  1621 ;;		On entry : 0/0
  1622 ;;		On exit  : 0/0
  1623 ;;		Unchanged: 0/0
  1624 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1625 ;;      Params:         2       0       0       0       0
  1626 ;;      Locals:         0       6       0       0       0
  1627 ;;      Temps:          0       0       0       0       0
  1628 ;;      Totals:         2       6       0       0       0
  1629 ;;Total ram usage:        8 bytes
  1630 ;; Hardware stack levels used: 1
  1631 ;; Hardware stack levels required when called: 5
  1632 ;; This function calls:
  1633 ;;		_delay200ms
  1634 ;;		_lcd_gotoxy
  1635 ;;		_lcd_putc
  1636 ;;		_lcd_puts
  1637 ;; This function is called by:
  1638 ;;		_main
  1639 ;; This function uses a non-reentrant model
  1640 ;;
  1641                           
  1642     0656                     _chop_tat:	
  1643                           ;psect for function _chop_tat
  1644                           
  1645     0656                     l1320:	
  1646                           ;incstack = 0
  1647                           ; Regs used in _chop_tat: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1648                           
  1649                           
  1650                           ;BT4.c: 94: void chop_tat(unsigned times);BT4.c: 95: {;BT4.c: 96:     for(int i = 0; i <
      +                           times; i++) {
  1651     0656  1283               	bcf	3,5	;RP0=0, select bank0
  1652     0657  1303               	bcf	3,6	;RP1=0, select bank0
  1653     0658  01A0               	clrf	chop_tat@i
  1654     0659  01A1               	clrf	chop_tat@i+1
  1655     065A  2EC6               	goto	l1358
  1656     065B                     l1322:
  1657                           
  1658                           ;BT4.c: 97:         lcd_gotoxy(0, 0);
  1659     065B  01F6               	clrf	lcd_gotoxy@row
  1660     065C  3000               	movlw	0
  1661     065D  120A  118A  2438  120A  118A  	fcall	_lcd_gotoxy
  1662     0662                     l1324:
  1663                           
  1664                           ;BT4.c: 98:         for(int j = 0; j <= sizeof(dat_line1)-1; j++)
  1665     0662  1283               	bcf	3,5	;RP0=0, select bank0
  1666     0663  1303               	bcf	3,6	;RP1=0, select bank0
  1667     0664  01A2               	clrf	chop_tat@j
  1668     0665  01A3               	clrf	chop_tat@j+1
  1669     0666                     l1330:
  1670                           
  1671                           ;BT4.c: 99:             lcd_putc(dat_line1[j]);
  1672     0666  0822               	movf	chop_tat@j,w
  1673     0667  3E0F               	addlw	low ((_dat_line1-__stringbase)| (0+32768))
  1674     0668  0084               	movwf	4
  1675     0669  120A  118A  2003  120A  118A  	fcall	stringdir
  1676     066E  120A  118A  2606  120A  118A  	fcall	_lcd_putc
  1677     0673                     l1332:
  1678     0673  3001               	movlw	1
  1679     0674  1283               	bcf	3,5	;RP0=0, select bank0
  1680     0675  1303               	bcf	3,6	;RP1=0, select bank0
  1681     0676  07A2               	addwf	chop_tat@j,f
  1682     0677  1803               	skipnc
  1683     0678  0AA3               	incf	chop_tat@j+1,f
  1684     0679  3000               	movlw	0
  1685     067A  07A3               	addwf	chop_tat@j+1,f
  1686     067B                     l1334:
  1687     067B  3000               	movlw	0
  1688     067C  0223               	subwf	chop_tat@j+1,w
  1689     067D  300E               	movlw	14
  1690     067E  1903               	skipnz
  1691     067F  0222               	subwf	chop_tat@j,w
  1692     0680  1C03               	skipc
  1693     0681  2E83               	goto	u751
  1694     0682  2E84               	goto	u750
  1695     0683                     u751:
  1696     0683  2E66               	goto	l1330
  1697     0684                     u750:
  1698     0684                     l1336:
  1699                           
  1700                           ;BT4.c: 100:         lcd_gotoxy(0, 1);
  1701     0684  01F6               	clrf	lcd_gotoxy@row
  1702     0685  0AF6               	incf	lcd_gotoxy@row,f
  1703     0686  3000               	movlw	0
  1704     0687  120A  118A  2438  120A  118A  	fcall	_lcd_gotoxy
  1705     068C                     l1338:
  1706                           
  1707                           ;BT4.c: 101:         for(int j = 0; j <= sizeof(dat_line2)-1; j++)
  1708     068C  1283               	bcf	3,5	;RP0=0, select bank0
  1709     068D  1303               	bcf	3,6	;RP1=0, select bank0
  1710     068E  01A4               	clrf	chop_tat@j_97
  1711     068F  01A5               	clrf	chop_tat@j_97+1
  1712     0690                     l1344:
  1713                           
  1714                           ;BT4.c: 102:             lcd_putc(dat_line2[j]);
  1715     0690  0824               	movf	chop_tat@j_97,w
  1716     0691  3E01               	addlw	low ((_dat_line2-__stringbase)| (0+32768))
  1717     0692  0084               	movwf	4
  1718     0693  120A  118A  2003  120A  118A  	fcall	stringdir
  1719     0698  120A  118A  2606  120A  118A  	fcall	_lcd_putc
  1720     069D                     l1346:
  1721     069D  3001               	movlw	1
  1722     069E  1283               	bcf	3,5	;RP0=0, select bank0
  1723     069F  1303               	bcf	3,6	;RP1=0, select bank0
  1724     06A0  07A4               	addwf	chop_tat@j_97,f
  1725     06A1  1803               	skipnc
  1726     06A2  0AA5               	incf	chop_tat@j_97+1,f
  1727     06A3  3000               	movlw	0
  1728     06A4  07A5               	addwf	chop_tat@j_97+1,f
  1729     06A5                     l1348:
  1730     06A5  3000               	movlw	0
  1731     06A6  0225               	subwf	chop_tat@j_97+1,w
  1732     06A7  300E               	movlw	14
  1733     06A8  1903               	skipnz
  1734     06A9  0224               	subwf	chop_tat@j_97,w
  1735     06AA  1C03               	skipc
  1736     06AB  2EAD               	goto	u761
  1737     06AC  2EAE               	goto	u760
  1738     06AD                     u761:
  1739     06AD  2E90               	goto	l1344
  1740     06AE                     u760:
  1741     06AE                     l1350:
  1742                           
  1743                           ;BT4.c: 103:         delay200ms();
  1744     06AE  120A  118A  240F  120A  118A  	fcall	_delay200ms
  1745     06B3                     l1352:
  1746                           
  1747                           ;BT4.c: 104:         lcd_puts("\f");
  1748     06B3  305E               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1749     06B4  120A  118A  2419  120A  118A  	fcall	_lcd_puts
  1750     06B9                     l1354:
  1751                           
  1752                           ;BT4.c: 105:         delay200ms();
  1753     06B9  120A  118A  240F  120A  118A  	fcall	_delay200ms
  1754     06BE                     l1356:
  1755                           
  1756                           ;BT4.c: 106:     }
  1757     06BE  3001               	movlw	1
  1758     06BF  1283               	bcf	3,5	;RP0=0, select bank0
  1759     06C0  1303               	bcf	3,6	;RP1=0, select bank0
  1760     06C1  07A0               	addwf	chop_tat@i,f
  1761     06C2  1803               	skipnc
  1762     06C3  0AA1               	incf	chop_tat@i+1,f
  1763     06C4  3000               	movlw	0
  1764     06C5  07A1               	addwf	chop_tat@i+1,f
  1765     06C6                     l1358:
  1766     06C6  087C               	movf	chop_tat@times+1,w
  1767     06C7  0221               	subwf	chop_tat@i+1,w
  1768     06C8  1D03               	skipz
  1769     06C9  2ECC               	goto	u775
  1770     06CA  087B               	movf	chop_tat@times,w
  1771     06CB  0220               	subwf	chop_tat@i,w
  1772     06CC                     u775:
  1773     06CC  1C03               	skipc
  1774     06CD  2ECF               	goto	u771
  1775     06CE  2ED0               	goto	u770
  1776     06CF                     u771:
  1777     06CF  2E5B               	goto	l1322
  1778     06D0                     u770:
  1779     06D0                     l99:
  1780     06D0  0008               	return
  1781     06D1                     __end_of_chop_tat:
  1782                           
  1783                           	psect	text9
  1784     0419                     __ptext9:	
  1785 ;; *************** function _lcd_puts *****************
  1786 ;; Defined at:
  1787 ;;		line 224 in file "lcd.c"
  1788 ;; Parameters:    Size  Location     Type
  1789 ;;  s               1    wreg     PTR const unsigned char 
  1790 ;;		 -> STR_4(2), STR_3(2), STR_2(2), STR_1(2), 
  1791 ;; Auto vars:     Size  Location     Type
  1792 ;;  s               1   10[COMMON] PTR const unsigned char 
  1793 ;;		 -> STR_4(2), STR_3(2), STR_2(2), STR_1(2), 
  1794 ;; Return value:  Size  Location     Type
  1795 ;;                  1    wreg      void 
  1796 ;; Registers used:
  1797 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1798 ;; Tracked objects:
  1799 ;;		On entry : 0/0
  1800 ;;		On exit  : 0/0
  1801 ;;		Unchanged: 0/0
  1802 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1803 ;;      Params:         0       0       0       0       0
  1804 ;;      Locals:         1       0       0       0       0
  1805 ;;      Temps:          0       0       0       0       0
  1806 ;;      Totals:         1       0       0       0       0
  1807 ;;Total ram usage:        1 bytes
  1808 ;; Hardware stack levels used: 1
  1809 ;; Hardware stack levels required when called: 4
  1810 ;; This function calls:
  1811 ;;		_lcd_putc
  1812 ;; This function is called by:
  1813 ;;		_chop_tat
  1814 ;;		_main
  1815 ;; This function uses a non-reentrant model
  1816 ;;
  1817                           
  1818     0419                     _lcd_puts:	
  1819                           ;psect for function _lcd_puts
  1820                           
  1821                           
  1822                           ;incstack = 0
  1823                           ; Regs used in _lcd_puts: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1824                           ;lcd_puts@s stored from wreg
  1825     0419  00FA               	movwf	lcd_puts@s
  1826     041A                     l1254:
  1827                           
  1828                           ;lcd.c: 224: void lcd_puts(const char* s);lcd.c: 225: {;lcd.c: 229:  while(*s)
  1829     041A  2C2B               	goto	l1260
  1830     041B                     l1256:
  1831                           
  1832                           ;lcd.c: 230:   {;lcd.c: 231:   lcd_putc(*s++);
  1833     041B  087A               	movf	lcd_puts@s,w
  1834     041C  0084               	movwf	4
  1835     041D  120A  118A  2003  120A  118A  	fcall	stringdir
  1836     0422  120A  118A  2606  120A  118A  	fcall	_lcd_putc
  1837     0427                     l1258:
  1838     0427  3001               	movlw	1
  1839     0428  00FF               	movwf	btemp+1
  1840     0429  087F               	movf	btemp+1,w
  1841     042A  07FA               	addwf	lcd_puts@s,f
  1842     042B                     l1260:
  1843                           
  1844                           ;lcd.c: 229:  while(*s)
  1845     042B  087A               	movf	lcd_puts@s,w
  1846     042C  0084               	movwf	4
  1847     042D  120A  118A  2003  120A  118A  	fcall	stringdir
  1848     0432  3A00               	xorlw	0
  1849     0433  1D03               	skipz
  1850     0434  2C36               	goto	u661
  1851     0435  2C37               	goto	u660
  1852     0436                     u661:
  1853     0436  2C1B               	goto	l1256
  1854     0437                     u660:
  1855     0437                     l189:
  1856     0437  0008               	return
  1857     0438                     __end_of_lcd_puts:
  1858                           
  1859                           	psect	text10
  1860     0606                     __ptext10:	
  1861 ;; *************** function _lcd_putc *****************
  1862 ;; Defined at:
  1863 ;;		line 190 in file "lcd.c"
  1864 ;; Parameters:    Size  Location     Type
  1865 ;;  c               1    wreg     unsigned char 
  1866 ;; Auto vars:     Size  Location     Type
  1867 ;;  c               1    9[COMMON] unsigned char 
  1868 ;; Return value:  Size  Location     Type
  1869 ;;                  1    wreg      void 
  1870 ;; Registers used:
  1871 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1872 ;; Tracked objects:
  1873 ;;		On entry : 0/0
  1874 ;;		On exit  : 0/0
  1875 ;;		Unchanged: 0/0
  1876 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1877 ;;      Params:         0       0       0       0       0
  1878 ;;      Locals:         1       0       0       0       0
  1879 ;;      Temps:          0       0       0       0       0
  1880 ;;      Totals:         1       0       0       0       0
  1881 ;;Total ram usage:        1 bytes
  1882 ;; Hardware stack levels used: 1
  1883 ;; Hardware stack levels required when called: 3
  1884 ;; This function calls:
  1885 ;;		_lcd_busy
  1886 ;;		_lcd_gotoxy
  1887 ;;		_lcd_put_byte
  1888 ;; This function is called by:
  1889 ;;		_in_chu
  1890 ;;		_chop_tat
  1891 ;;		_main
  1892 ;;		_lcd_puts
  1893 ;;		_lcd_String_Delay
  1894 ;;		_putch
  1895 ;; This function uses a non-reentrant model
  1896 ;;
  1897                           
  1898     0606                     _lcd_putc:	
  1899                           ;psect for function _lcd_putc
  1900                           
  1901                           
  1902                           ;incstack = 0
  1903                           ; Regs used in _lcd_putc: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1904                           ;lcd_putc@c stored from wreg
  1905     0606  00F9               	movwf	lcd_putc@c
  1906     0607                     l1230:
  1907                           
  1908                           ;lcd.c: 190: void lcd_putc(char c);lcd.c: 191: {;lcd.c: 195:  switch(c)
  1909     0607  2E4A               	goto	l1246
  1910     0608                     l1232:
  1911                           
  1912                           ;lcd.c: 198:    lcd_put_byte(0,1);
  1913     0608  01F3               	clrf	lcd_put_byte@b
  1914     0609  0AF3               	incf	lcd_put_byte@b,f
  1915     060A  3000               	movlw	0
  1916     060B  120A  118A  24F5  120A  118A  	fcall	_lcd_put_byte
  1917     0610                     l1234:	
  1918                           ;lcd.c: 199:    while(lcd_busy());
  1919                           
  1920     0610  120A  118A  24C5  120A  118A  	fcall	_lcd_busy
  1921     0615  3A00               	xorlw	0
  1922     0616  1D03               	skipz
  1923     0617  2E19               	goto	u631
  1924     0618  2E1A               	goto	u630
  1925     0619                     u631:
  1926     0619  2E10               	goto	l1234
  1927     061A                     u630:
  1928     061A  2E55               	goto	l183
  1929     061B                     l1236:
  1930                           
  1931                           ;lcd.c: 202:    lcd_gotoxy(0,1);
  1932     061B  01F6               	clrf	lcd_gotoxy@row
  1933     061C  0AF6               	incf	lcd_gotoxy@row,f
  1934     061D  3000               	movlw	0
  1935     061E  120A  118A  2438  120A  118A  	fcall	_lcd_gotoxy
  1936                           
  1937                           ;lcd.c: 203:    break;
  1938     0623  2E55               	goto	l183
  1939     0624                     l1238:
  1940                           
  1941                           ;lcd.c: 205:    lcd_put_byte(0,0x10);
  1942     0624  3010               	movlw	16
  1943     0625  00F3               	movwf	lcd_put_byte@b
  1944     0626  3000               	movlw	0
  1945     0627  120A  118A  24F5  120A  118A  	fcall	_lcd_put_byte
  1946     062C                     l1240:	
  1947                           ;lcd.c: 206:    while(lcd_busy());
  1948                           
  1949     062C  120A  118A  24C5  120A  118A  	fcall	_lcd_busy
  1950     0631  3A00               	xorlw	0
  1951     0632  1D03               	skipz
  1952     0633  2E35               	goto	u641
  1953     0634  2E36               	goto	u640
  1954     0635                     u641:
  1955     0635  2E2C               	goto	l1240
  1956     0636                     u640:
  1957     0636  2E55               	goto	l183
  1958     0637                     l1242:
  1959                           
  1960                           ;lcd.c: 210:     {;lcd.c: 211:     lcd_put_byte(1,c);
  1961     0637  0879               	movf	lcd_putc@c,w
  1962     0638  00F3               	movwf	lcd_put_byte@b
  1963     0639  3001               	movlw	1
  1964     063A  120A  118A  24F5  120A  118A  	fcall	_lcd_put_byte
  1965     063F                     l1244:	
  1966                           ;lcd.c: 212:     while(lcd_busy());
  1967                           
  1968     063F  120A  118A  24C5  120A  118A  	fcall	_lcd_busy
  1969     0644  3A00               	xorlw	0
  1970     0645  1D03               	skipz
  1971     0646  2E48               	goto	u651
  1972     0647  2E49               	goto	u650
  1973     0648                     u651:
  1974     0648  2E3F               	goto	l1244
  1975     0649                     u650:
  1976     0649  2E55               	goto	l183
  1977     064A                     l1246:
  1978     064A  0879               	movf	lcd_putc@c,w
  1979                           
  1980                           ; Switch size 1, requested type "simple"
  1981                           ; Number of cases is 3, Range of values is 8 to 12
  1982                           ; switch strategies available:
  1983                           ; Name         Instructions Cycles
  1984                           ; simple_byte           10     6 (average)
  1985                           ; direct_byte           26    11 (fixed)
  1986                           ; jumptable            263     9 (fixed)
  1987                           ;	Chosen strategy is simple_byte
  1988     064B  3A08               	xorlw	8	; case 8
  1989     064C  1903               	skipnz
  1990     064D  2E24               	goto	l1238
  1991     064E  3A02               	xorlw	2	; case 10
  1992     064F  1903               	skipnz
  1993     0650  2E1B               	goto	l1236
  1994     0651  3A06               	xorlw	6	; case 12
  1995     0652  1903               	skipnz
  1996     0653  2E08               	goto	l1232
  1997     0654  2E37               	goto	l1242
  1998     0655                     l183:
  1999     0655  0008               	return
  2000     0656                     __end_of_lcd_putc:
  2001                           
  2002                           	psect	text11
  2003     0438                     __ptext11:	
  2004 ;; *************** function _lcd_gotoxy *****************
  2005 ;; Defined at:
  2006 ;;		line 167 in file "lcd.c"
  2007 ;; Parameters:    Size  Location     Type
  2008 ;;  col             1    wreg     unsigned char 
  2009 ;;  row             1    6[COMMON] unsigned char 
  2010 ;; Auto vars:     Size  Location     Type
  2011 ;;  col             1    7[COMMON] unsigned char 
  2012 ;;  address         1    8[COMMON] unsigned char 
  2013 ;; Return value:  Size  Location     Type
  2014 ;;                  1    wreg      void 
  2015 ;; Registers used:
  2016 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2017 ;; Tracked objects:
  2018 ;;		On entry : 0/0
  2019 ;;		On exit  : 0/0
  2020 ;;		Unchanged: 0/0
  2021 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2022 ;;      Params:         1       0       0       0       0
  2023 ;;      Locals:         2       0       0       0       0
  2024 ;;      Temps:          0       0       0       0       0
  2025 ;;      Totals:         3       0       0       0       0
  2026 ;;Total ram usage:        3 bytes
  2027 ;; Hardware stack levels used: 1
  2028 ;; Hardware stack levels required when called: 2
  2029 ;; This function calls:
  2030 ;;		_lcd_busy
  2031 ;;		_lcd_put_byte
  2032 ;; This function is called by:
  2033 ;;		_in_chu
  2034 ;;		_chop_tat
  2035 ;;		_lcd_putc
  2036 ;; This function uses a non-reentrant model
  2037 ;;
  2038                           
  2039     0438                     _lcd_gotoxy:	
  2040                           ;psect for function _lcd_gotoxy
  2041                           
  2042                           
  2043                           ;incstack = 0
  2044                           ; Regs used in _lcd_gotoxy: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2045                           ;lcd_gotoxy@col stored from wreg
  2046     0438  00F7               	movwf	lcd_gotoxy@col
  2047     0439                     l1196:
  2048                           
  2049                           ;lcd.c: 167: void lcd_gotoxy(unsigned char col, unsigned char row);lcd.c: 168: {;lcd.c: 
      +                          170:  unsigned char address;;lcd.c: 173:  if(row!=0)
  2050     0439  0876               	movf	lcd_gotoxy@row,w
  2051     043A  1903               	btfsc	3,2
  2052     043B  2C3D               	goto	u591
  2053     043C  2C3E               	goto	u590
  2054     043D                     u591:
  2055     043D  2C41               	goto	l1200
  2056     043E                     u590:
  2057     043E                     l1198:
  2058                           
  2059                           ;lcd.c: 174:   address=0x40;
  2060     043E  3040               	movlw	64
  2061     043F  00F8               	movwf	lcd_gotoxy@address
  2062     0440  2C42               	goto	l1202
  2063     0441                     l1200:
  2064                           
  2065                           ;lcd.c: 176:   address=0;
  2066     0441  01F8               	clrf	lcd_gotoxy@address
  2067     0442                     l1202:
  2068                           
  2069                           ;lcd.c: 178:  address += col;
  2070     0442  0877               	movf	lcd_gotoxy@col,w
  2071     0443  00FF               	movwf	btemp+1
  2072     0444  087F               	movf	btemp+1,w
  2073     0445  07F8               	addwf	lcd_gotoxy@address,f
  2074     0446                     l1204:
  2075                           
  2076                           ;lcd.c: 180:  lcd_put_byte(0,0x80|address);
  2077     0446  0878               	movf	lcd_gotoxy@address,w
  2078     0447  3880               	iorlw	128
  2079     0448  00F3               	movwf	lcd_put_byte@b
  2080     0449  3000               	movlw	0
  2081     044A  120A  118A  24F5  120A  118A  	fcall	_lcd_put_byte
  2082     044F                     l1206:	
  2083                           ;lcd.c: 181:  while(lcd_busy());
  2084                           
  2085     044F  120A  118A  24C5  120A  118A  	fcall	_lcd_busy
  2086     0454  3A00               	xorlw	0
  2087     0455  1D03               	skipz
  2088     0456  2C58               	goto	u601
  2089     0457  2C59               	goto	u600
  2090     0458                     u601:
  2091     0458  2C4F               	goto	l1206
  2092     0459                     u600:
  2093     0459                     l165:
  2094     0459  0008               	return
  2095     045A                     __end_of_lcd_gotoxy:
  2096                           
  2097                           	psect	text12
  2098     04F5                     __ptext12:	
  2099 ;; *************** function _lcd_put_byte *****************
  2100 ;; Defined at:
  2101 ;;		line 134 in file "lcd.c"
  2102 ;; Parameters:    Size  Location     Type
  2103 ;;  rs              1    wreg     unsigned char 
  2104 ;;  b               1    3[COMMON] unsigned char 
  2105 ;; Auto vars:     Size  Location     Type
  2106 ;;  rs              1    5[COMMON] unsigned char 
  2107 ;; Return value:  Size  Location     Type
  2108 ;;                  1    wreg      void 
  2109 ;; Registers used:
  2110 ;;		wreg, status,2, status,0, pclath, cstack
  2111 ;; Tracked objects:
  2112 ;;		On entry : 0/0
  2113 ;;		On exit  : 0/0
  2114 ;;		Unchanged: 0/0
  2115 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2116 ;;      Params:         1       0       0       0       0
  2117 ;;      Locals:         1       0       0       0       0
  2118 ;;      Temps:          1       0       0       0       0
  2119 ;;      Totals:         3       0       0       0       0
  2120 ;;Total ram usage:        3 bytes
  2121 ;; Hardware stack levels used: 1
  2122 ;; Hardware stack levels required when called: 1
  2123 ;; This function calls:
  2124 ;;		_lcd_put_nibble
  2125 ;; This function is called by:
  2126 ;;		_load_custom_characters
  2127 ;;		_lcd_gotoxy
  2128 ;;		_lcd_putc
  2129 ;;		_lcd_init
  2130 ;;		_lcd_ShiftLeft
  2131 ;;		_lcd_ShiftRight
  2132 ;; This function uses a non-reentrant model
  2133 ;;
  2134                           
  2135     04F5                     _lcd_put_byte:	
  2136                           ;psect for function _lcd_put_byte
  2137                           
  2138                           
  2139                           ;incstack = 0
  2140                           ; Regs used in _lcd_put_byte: [wreg+status,2+status,0+pclath+cstack]
  2141                           ;lcd_put_byte@rs stored from wreg
  2142     04F5  00F5               	movwf	lcd_put_byte@rs
  2143     04F6                     l1158:
  2144                           
  2145                           ;lcd.c: 134: void lcd_put_byte(unsigned char rs, unsigned char b);lcd.c: 135: {;lcd.c: 1
      +                          39:  TRISD4 = 0;
  2146     04F6  1683               	bsf	3,5	;RP0=1, select bank1
  2147     04F7  1303               	bcf	3,6	;RP1=0, select bank1
  2148     04F8  1208               	bcf	8,4	;volatile
  2149                           
  2150                           ;lcd.c: 140:  TRISD5 = 0;
  2151     04F9  1288               	bcf	8,5	;volatile
  2152                           
  2153                           ;lcd.c: 141:  TRISD6 = 0;
  2154     04FA  1308               	bcf	8,6	;volatile
  2155                           
  2156                           ;lcd.c: 142:  TRISD7 = 0;
  2157     04FB  1388               	bcf	8,7	;volatile
  2158     04FC                     l1160:
  2159                           
  2160                           ;lcd.c: 144:  if(rs)
  2161     04FC  0875               	movf	lcd_put_byte@rs,w
  2162     04FD  1903               	btfsc	3,2
  2163     04FE  2D00               	goto	u571
  2164     04FF  2D01               	goto	u570
  2165     0500                     u571:
  2166     0500  2D05               	goto	l155
  2167     0501                     u570:
  2168     0501                     l1162:
  2169                           
  2170                           ;lcd.c: 145:   RD1 = 1;
  2171     0501  1283               	bcf	3,5	;RP0=0, select bank0
  2172     0502  1303               	bcf	3,6	;RP1=0, select bank0
  2173     0503  1488               	bsf	8,1	;volatile
  2174     0504  2D08               	goto	l1164
  2175     0505                     l155:	
  2176                           ;lcd.c: 146:  else
  2177                           
  2178                           
  2179                           ;lcd.c: 147:   RD1 = 0;
  2180     0505  1283               	bcf	3,5	;RP0=0, select bank0
  2181     0506  1303               	bcf	3,6	;RP1=0, select bank0
  2182     0507  1088               	bcf	8,1	;volatile
  2183     0508                     l1164:
  2184                           
  2185                           ;lcd.c: 148:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  2186     0508  3006               	movlw	6
  2187     0509  00F4               	movwf	??_lcd_put_byte
  2188     050A                     u927:
  2189     050A  0BF4               	decfsz	??_lcd_put_byte,f
  2190     050B  2D0A               	goto	u927
  2191     050C  0000               	nop
  2192     050D                     l1166:
  2193                           
  2194                           ;lcd.c: 150:  RD2 = 0;
  2195     050D  1283               	bcf	3,5	;RP0=0, select bank0
  2196     050E  1303               	bcf	3,6	;RP1=0, select bank0
  2197     050F  1108               	bcf	8,2	;volatile
  2198                           
  2199                           ;lcd.c: 151:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  2200     0510  3006               	movlw	6
  2201     0511  00F4               	movwf	??_lcd_put_byte
  2202     0512                     u937:
  2203     0512  0BF4               	decfsz	??_lcd_put_byte,f
  2204     0513  2D12               	goto	u937
  2205     0514  0000               	nop
  2206     0515                     l1168:
  2207                           
  2208                           ;lcd.c: 153:  RD3 = 0;
  2209     0515  1283               	bcf	3,5	;RP0=0, select bank0
  2210     0516  1303               	bcf	3,6	;RP1=0, select bank0
  2211     0517  1188               	bcf	8,3	;volatile
  2212     0518                     l1170:
  2213                           
  2214                           ;lcd.c: 155:  lcd_put_nibble(b >> 4);
  2215     0518  0873               	movf	lcd_put_byte@b,w
  2216     0519  00F4               	movwf	??_lcd_put_byte
  2217     051A  3004               	movlw	4
  2218     051B                     u585:
  2219     051B  1003               	clrc
  2220     051C  0CF4               	rrf	??_lcd_put_byte,f
  2221     051D  3EFF               	addlw	-1
  2222     051E  1D03               	skipz
  2223     051F  2D1B               	goto	u585
  2224     0520  0874               	movf	??_lcd_put_byte,w
  2225     0521  120A  118A  252E  120A  118A  	fcall	_lcd_put_nibble
  2226     0526                     l1172:
  2227                           
  2228                           ;lcd.c: 157:  lcd_put_nibble(b & 0xf);
  2229     0526  0873               	movf	lcd_put_byte@b,w
  2230     0527  390F               	andlw	15
  2231     0528  120A  118A  252E  120A  118A  	fcall	_lcd_put_nibble
  2232     052D                     l157:
  2233     052D  0008               	return
  2234     052E                     __end_of_lcd_put_byte:
  2235                           
  2236                           	psect	text13
  2237     052E                     __ptext13:	
  2238 ;; *************** function _lcd_put_nibble *****************
  2239 ;; Defined at:
  2240 ;;		line 103 in file "lcd.c"
  2241 ;; Parameters:    Size  Location     Type
  2242 ;;  b               1    wreg     unsigned char 
  2243 ;; Auto vars:     Size  Location     Type
  2244 ;;  b               1    1[COMMON] unsigned char 
  2245 ;;  temp            1    2[COMMON] struct _BYTE_VAL
  2246 ;; Return value:  Size  Location     Type
  2247 ;;                  1    wreg      void 
  2248 ;; Registers used:
  2249 ;;		wreg
  2250 ;; Tracked objects:
  2251 ;;		On entry : 0/0
  2252 ;;		On exit  : 0/0
  2253 ;;		Unchanged: 0/0
  2254 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2255 ;;      Params:         0       0       0       0       0
  2256 ;;      Locals:         2       0       0       0       0
  2257 ;;      Temps:          1       0       0       0       0
  2258 ;;      Totals:         3       0       0       0       0
  2259 ;;Total ram usage:        3 bytes
  2260 ;; Hardware stack levels used: 1
  2261 ;; This function calls:
  2262 ;;		Nothing
  2263 ;; This function is called by:
  2264 ;;		_lcd_put_byte
  2265 ;;		_lcd_init
  2266 ;; This function uses a non-reentrant model
  2267 ;;
  2268                           
  2269     052E                     _lcd_put_nibble:	
  2270                           ;psect for function _lcd_put_nibble
  2271                           
  2272                           
  2273                           ;incstack = 0
  2274                           ; Regs used in _lcd_put_nibble: [wreg]
  2275                           ;lcd_put_nibble@b stored from wreg
  2276     052E  00F1               	movwf	lcd_put_nibble@b
  2277     052F                     l1142:
  2278                           
  2279                           ;lcd.c: 103: void lcd_put_nibble(unsigned char b);lcd.c: 104: {;lcd.c: 106:  BYTE_VAL te
      +                          mp;;lcd.c: 109:  TRISD4 = 0;
  2280     052F  1683               	bsf	3,5	;RP0=1, select bank1
  2281     0530  1303               	bcf	3,6	;RP1=0, select bank1
  2282     0531  1208               	bcf	8,4	;volatile
  2283                           
  2284                           ;lcd.c: 110:  TRISD5 = 0;
  2285     0532  1288               	bcf	8,5	;volatile
  2286                           
  2287                           ;lcd.c: 111:  TRISD6 = 0;
  2288     0533  1308               	bcf	8,6	;volatile
  2289                           
  2290                           ;lcd.c: 112:  TRISD7 = 0;
  2291     0534  1388               	bcf	8,7	;volatile
  2292     0535                     l1144:
  2293                           
  2294                           ;lcd.c: 114:  temp.Val = b;
  2295     0535  0871               	movf	lcd_put_nibble@b,w
  2296     0536  00F2               	movwf	lcd_put_nibble@temp
  2297     0537                     l1146:
  2298                           
  2299                           ;lcd.c: 116:  RD4 = temp.bits.b0;
  2300     0537  1872               	btfsc	lcd_put_nibble@temp,0
  2301     0538  2D3A               	goto	u491
  2302     0539  2D3E               	goto	u490
  2303     053A                     u491:
  2304     053A  1283               	bcf	3,5	;RP0=0, select bank0
  2305     053B  1303               	bcf	3,6	;RP1=0, select bank0
  2306     053C  1608               	bsf	8,4	;volatile
  2307     053D  2D41               	goto	u504
  2308     053E                     u490:
  2309     053E  1283               	bcf	3,5	;RP0=0, select bank0
  2310     053F  1303               	bcf	3,6	;RP1=0, select bank0
  2311     0540  1208               	bcf	8,4	;volatile
  2312     0541                     u504:
  2313     0541                     l1148:
  2314                           
  2315                           ;lcd.c: 117:  RD5 = temp.bits.b1;
  2316     0541  18F2               	btfsc	lcd_put_nibble@temp,1
  2317     0542  2D44               	goto	u511
  2318     0543  2D48               	goto	u510
  2319     0544                     u511:
  2320     0544  1283               	bcf	3,5	;RP0=0, select bank0
  2321     0545  1303               	bcf	3,6	;RP1=0, select bank0
  2322     0546  1688               	bsf	8,5	;volatile
  2323     0547  2D4B               	goto	u524
  2324     0548                     u510:
  2325     0548  1283               	bcf	3,5	;RP0=0, select bank0
  2326     0549  1303               	bcf	3,6	;RP1=0, select bank0
  2327     054A  1288               	bcf	8,5	;volatile
  2328     054B                     u524:
  2329     054B                     l1150:
  2330                           
  2331                           ;lcd.c: 118:  RD6 = temp.bits.b2;
  2332     054B  1972               	btfsc	lcd_put_nibble@temp,2
  2333     054C  2D4E               	goto	u531
  2334     054D  2D52               	goto	u530
  2335     054E                     u531:
  2336     054E  1283               	bcf	3,5	;RP0=0, select bank0
  2337     054F  1303               	bcf	3,6	;RP1=0, select bank0
  2338     0550  1708               	bsf	8,6	;volatile
  2339     0551  2D55               	goto	u544
  2340     0552                     u530:
  2341     0552  1283               	bcf	3,5	;RP0=0, select bank0
  2342     0553  1303               	bcf	3,6	;RP1=0, select bank0
  2343     0554  1308               	bcf	8,6	;volatile
  2344     0555                     u544:
  2345     0555                     l1152:
  2346                           
  2347                           ;lcd.c: 119:  RD7 = temp.bits.b3;
  2348     0555  19F2               	btfsc	lcd_put_nibble@temp,3
  2349     0556  2D58               	goto	u551
  2350     0557  2D5C               	goto	u550
  2351     0558                     u551:
  2352     0558  1283               	bcf	3,5	;RP0=0, select bank0
  2353     0559  1303               	bcf	3,6	;RP1=0, select bank0
  2354     055A  1788               	bsf	8,7	;volatile
  2355     055B  2D5F               	goto	u564
  2356     055C                     u550:
  2357     055C  1283               	bcf	3,5	;RP0=0, select bank0
  2358     055D  1303               	bcf	3,6	;RP1=0, select bank0
  2359     055E  1388               	bcf	8,7	;volatile
  2360     055F                     u564:
  2361                           
  2362                           ;lcd.c: 121:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  2363     055F  3006               	movlw	6
  2364     0560  00F0               	movwf	??_lcd_put_nibble
  2365     0561                     u947:
  2366     0561  0BF0               	decfsz	??_lcd_put_nibble,f
  2367     0562  2D61               	goto	u947
  2368     0563  0000               	nop
  2369     0564                     l1154:
  2370                           
  2371                           ;lcd.c: 122:  RD3 = 1;
  2372     0564  1283               	bcf	3,5	;RP0=0, select bank0
  2373     0565  1303               	bcf	3,6	;RP1=0, select bank0
  2374     0566  1588               	bsf	8,3	;volatile
  2375                           
  2376                           ;lcd.c: 123:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  2377     0567  3006               	movlw	6
  2378     0568  00F0               	movwf	??_lcd_put_nibble
  2379     0569                     u957:
  2380     0569  0BF0               	decfsz	??_lcd_put_nibble,f
  2381     056A  2D69               	goto	u957
  2382     056B  0000               	nop
  2383     056C                     l1156:
  2384                           
  2385                           ;lcd.c: 124:  RD3 = 0;
  2386     056C  1283               	bcf	3,5	;RP0=0, select bank0
  2387     056D  1303               	bcf	3,6	;RP1=0, select bank0
  2388     056E  1188               	bcf	8,3	;volatile
  2389     056F                     l152:
  2390     056F  0008               	return
  2391     0570                     __end_of_lcd_put_nibble:
  2392                           
  2393                           	psect	text14
  2394     04C5                     __ptext14:	
  2395 ;; *************** function _lcd_busy *****************
  2396 ;; Defined at:
  2397 ;;		line 18 in file "lcd.c"
  2398 ;; Parameters:    Size  Location     Type
  2399 ;;		None
  2400 ;; Auto vars:     Size  Location     Type
  2401 ;;  busy            1    1[COMMON] unsigned char 
  2402 ;; Return value:  Size  Location     Type
  2403 ;;                  1    wreg      unsigned char 
  2404 ;; Registers used:
  2405 ;;		wreg, status,2
  2406 ;; Tracked objects:
  2407 ;;		On entry : 0/0
  2408 ;;		On exit  : 0/0
  2409 ;;		Unchanged: 0/0
  2410 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2411 ;;      Params:         0       0       0       0       0
  2412 ;;      Locals:         1       0       0       0       0
  2413 ;;      Temps:          1       0       0       0       0
  2414 ;;      Totals:         2       0       0       0       0
  2415 ;;Total ram usage:        2 bytes
  2416 ;; Hardware stack levels used: 1
  2417 ;; This function calls:
  2418 ;;		Nothing
  2419 ;; This function is called by:
  2420 ;;		_load_custom_characters
  2421 ;;		_lcd_gotoxy
  2422 ;;		_lcd_putc
  2423 ;;		_lcd_init
  2424 ;; This function uses a non-reentrant model
  2425 ;;
  2426                           
  2427     04C5                     _lcd_busy:	
  2428                           ;psect for function _lcd_busy
  2429                           
  2430     04C5                     l1174:	
  2431                           ;incstack = 0
  2432                           ; Regs used in _lcd_busy: [wreg+status,2]
  2433                           
  2434                           
  2435                           ;lcd.c: 21: unsigned char busy;;lcd.c: 24:  TRISD4 = 1;
  2436     04C5  1683               	bsf	3,5	;RP0=1, select bank1
  2437     04C6  1303               	bcf	3,6	;RP1=0, select bank1
  2438     04C7  1608               	bsf	8,4	;volatile
  2439                           
  2440                           ;lcd.c: 25:  TRISD5 = 1;
  2441     04C8  1688               	bsf	8,5	;volatile
  2442                           
  2443                           ;lcd.c: 26:  TRISD6 = 1;
  2444     04C9  1708               	bsf	8,6	;volatile
  2445                           
  2446                           ;lcd.c: 27:  TRISD7 = 1;
  2447     04CA  1788               	bsf	8,7	;volatile
  2448                           
  2449                           ;lcd.c: 29:  RD2 = 1;
  2450     04CB  1283               	bcf	3,5	;RP0=0, select bank0
  2451     04CC  1303               	bcf	3,6	;RP1=0, select bank0
  2452     04CD  1508               	bsf	8,2	;volatile
  2453                           
  2454                           ;lcd.c: 30:  RD1 = 0;
  2455     04CE  1088               	bcf	8,1	;volatile
  2456     04CF                     l1176:
  2457                           
  2458                           ;lcd.c: 31:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  2459     04CF  3006               	movlw	6
  2460     04D0  00F0               	movwf	??_lcd_busy
  2461     04D1                     u967:
  2462     04D1  0BF0               	decfsz	??_lcd_busy,f
  2463     04D2  2CD1               	goto	u967
  2464     04D3  0000               	nop
  2465     04D4                     l1178:
  2466                           
  2467                           ;lcd.c: 32:  RD3 = 1;
  2468     04D4  1283               	bcf	3,5	;RP0=0, select bank0
  2469     04D5  1303               	bcf	3,6	;RP1=0, select bank0
  2470     04D6  1588               	bsf	8,3	;volatile
  2471                           
  2472                           ;lcd.c: 33:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  2473     04D7  3006               	movlw	6
  2474     04D8  00F0               	movwf	??_lcd_busy
  2475     04D9                     u977:
  2476     04D9  0BF0               	decfsz	??_lcd_busy,f
  2477     04DA  2CD9               	goto	u977
  2478     04DB  0000               	nop
  2479     04DC                     l1180:
  2480                           
  2481                           ;lcd.c: 35:  busy = RD7;
  2482     04DC  3000               	movlw	0
  2483     04DD  1283               	bcf	3,5	;RP0=0, select bank0
  2484     04DE  1303               	bcf	3,6	;RP1=0, select bank0
  2485     04DF  1B88               	btfsc	8,7	;volatile
  2486     04E0  3001               	movlw	1
  2487     04E1  00F1               	movwf	lcd_busy@busy
  2488     04E2                     l1182:
  2489                           
  2490                           ;lcd.c: 37:  RD3 = 0;
  2491     04E2  1188               	bcf	8,3	;volatile
  2492     04E3                     l1184:
  2493                           
  2494                           ;lcd.c: 38:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  2495     04E3  3006               	movlw	6
  2496     04E4  00F0               	movwf	??_lcd_busy
  2497     04E5                     u987:
  2498     04E5  0BF0               	decfsz	??_lcd_busy,f
  2499     04E6  2CE5               	goto	u987
  2500     04E7  0000               	nop
  2501     04E8                     l1186:
  2502                           
  2503                           ;lcd.c: 39:  RD3 = 1;
  2504     04E8  1283               	bcf	3,5	;RP0=0, select bank0
  2505     04E9  1303               	bcf	3,6	;RP1=0, select bank0
  2506     04EA  1588               	bsf	8,3	;volatile
  2507     04EB                     l1188:
  2508                           
  2509                           ;lcd.c: 40:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  2510     04EB  3006               	movlw	6
  2511     04EC  00F0               	movwf	??_lcd_busy
  2512     04ED                     u997:
  2513     04ED  0BF0               	decfsz	??_lcd_busy,f
  2514     04EE  2CED               	goto	u997
  2515     04EF  0000               	nop
  2516     04F0                     l1190:
  2517                           
  2518                           ;lcd.c: 41:  RD3 = 0;
  2519     04F0  1283               	bcf	3,5	;RP0=0, select bank0
  2520     04F1  1303               	bcf	3,6	;RP1=0, select bank0
  2521     04F2  1188               	bcf	8,3	;volatile
  2522     04F3                     l1192:
  2523                           
  2524                           ;lcd.c: 43:  return busy;
  2525     04F3  0871               	movf	lcd_busy@busy,w
  2526     04F4                     l144:
  2527     04F4  0008               	return
  2528     04F5                     __end_of_lcd_busy:
  2529                           
  2530                           	psect	text15
  2531     040F                     __ptext15:	
  2532 ;; *************** function _delay200ms *****************
  2533 ;; Defined at:
  2534 ;;		line 64 in file "BT4.c"
  2535 ;; Parameters:    Size  Location     Type
  2536 ;;		None
  2537 ;; Auto vars:     Size  Location     Type
  2538 ;;		None
  2539 ;; Return value:  Size  Location     Type
  2540 ;;                  1    wreg      void 
  2541 ;; Registers used:
  2542 ;;		wreg, status,2, status,0, pclath, cstack
  2543 ;; Tracked objects:
  2544 ;;		On entry : 0/0
  2545 ;;		On exit  : 0/0
  2546 ;;		Unchanged: 0/0
  2547 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2548 ;;      Params:         0       0       0       0       0
  2549 ;;      Locals:         0       0       0       0       0
  2550 ;;      Temps:          0       0       0       0       0
  2551 ;;      Totals:         0       0       0       0       0
  2552 ;;Total ram usage:        0 bytes
  2553 ;; Hardware stack levels used: 1
  2554 ;; Hardware stack levels required when called: 1
  2555 ;; This function calls:
  2556 ;;		_delay100us
  2557 ;; This function is called by:
  2558 ;;		_shift_left_screen
  2559 ;;		_shift_right_screen
  2560 ;;		_chop_tat
  2561 ;;		_main
  2562 ;; This function uses a non-reentrant model
  2563 ;;
  2564                           
  2565     040F                     _delay200ms:	
  2566                           ;psect for function _delay200ms
  2567                           
  2568     040F                     l1248:	
  2569                           ;incstack = 0
  2570                           ; Regs used in _delay200ms: [wreg+status,2+status,0+pclath+cstack]
  2571                           
  2572                           
  2573                           ;BT4.c: 66: delay100us(2000);
  2574     040F  30D0               	movlw	208
  2575     0410  00F0               	movwf	delay100us@n
  2576     0411  3007               	movlw	7
  2577     0412  00F1               	movwf	delay100us@n+1
  2578     0413  120A  118A  249E  120A  118A  	fcall	_delay100us
  2579     0418                     l70:
  2580     0418  0008               	return
  2581     0419                     __end_of_delay200ms:
  2582                           
  2583                           	psect	text16
  2584     049E                     __ptext16:	
  2585 ;; *************** function _delay100us *****************
  2586 ;; Defined at:
  2587 ;;		line 51 in file "BT4.c"
  2588 ;; Parameters:    Size  Location     Type
  2589 ;;  n               2    0[COMMON] unsigned int 
  2590 ;; Auto vars:     Size  Location     Type
  2591 ;;		None
  2592 ;; Return value:  Size  Location     Type
  2593 ;;                  1    wreg      void 
  2594 ;; Registers used:
  2595 ;;		wreg, status,2, status,0
  2596 ;; Tracked objects:
  2597 ;;		On entry : 0/0
  2598 ;;		On exit  : 0/0
  2599 ;;		Unchanged: 0/0
  2600 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2601 ;;      Params:         2       0       0       0       0
  2602 ;;      Locals:         0       0       0       0       0
  2603 ;;      Temps:          0       0       0       0       0
  2604 ;;      Totals:         2       0       0       0       0
  2605 ;;Total ram usage:        2 bytes
  2606 ;; Hardware stack levels used: 1
  2607 ;; This function calls:
  2608 ;;		Nothing
  2609 ;; This function is called by:
  2610 ;;		_delay200ms
  2611 ;; This function uses a non-reentrant model
  2612 ;;
  2613                           
  2614     049E                     _delay100us:	
  2615                           ;psect for function _delay100us
  2616                           
  2617     049E                     l1208:	
  2618                           ;incstack = 0
  2619                           ; Regs used in _delay100us: [wreg+status,2+status,0]
  2620                           
  2621                           
  2622                           ;BT4.c: 51: void delay100us(unsigned int n);BT4.c: 52: { while(n--)
  2623     049E  2CB6               	goto	l1228
  2624     049F                     l62:
  2625                           
  2626                           ;BT4.c: 53: {;BT4.c: 54: TMR1 = 65511;
  2627     049F  30FF               	movlw	255
  2628     04A0  1283               	bcf	3,5	;RP0=0, select bank0
  2629     04A1  1303               	bcf	3,6	;RP1=0, select bank0
  2630     04A2  008F               	movwf	15	;volatile
  2631     04A3  30E7               	movlw	231
  2632     04A4  008E               	movwf	14	;volatile
  2633     04A5                     l1210:
  2634                           
  2635                           ;BT4.c: 55: TMR1H=TMR1/256; TMR1L=TMR1%256;
  2636     04A5  080F               	movf	15,w	;volatile
  2637     04A6  008F               	movwf	15	;volatile
  2638     04A7                     l1212:
  2639     04A7  080E               	movf	14,w	;volatile
  2640     04A8  008E               	movwf	14	;volatile
  2641     04A9                     l1214:
  2642                           
  2643                           ;BT4.c: 56: TMR1IF=0;
  2644     04A9  100C               	bcf	12,0	;volatile
  2645     04AA                     l1216:
  2646                           
  2647                           ;BT4.c: 57: TMR1CS=0;
  2648     04AA  1090               	bcf	16,1	;volatile
  2649     04AB                     l1218:
  2650                           
  2651                           ;BT4.c: 58: GIE=PEIE =TMR0IE = 0;
  2652     04AB  128B               	bcf	11,5	;volatile
  2653     04AC  130B               	bcf	11,6	;volatile
  2654     04AD  138B               	bcf	11,7	;volatile
  2655     04AE                     l1220:
  2656                           
  2657                           ;BT4.c: 59: T1CKPS1=1; T1CKPS0=0;
  2658     04AE  1690               	bsf	16,5	;volatile
  2659     04AF                     l1222:
  2660     04AF  1210               	bcf	16,4	;volatile
  2661     04B0                     l1224:
  2662                           
  2663                           ;BT4.c: 60: T1SYNC=0;
  2664     04B0  1110               	bcf	16,2	;volatile
  2665     04B1                     l1226:
  2666                           
  2667                           ;BT4.c: 61: TMR1ON=1;
  2668     04B1  1410               	bsf	16,0	;volatile
  2669     04B2                     l63:	
  2670                           ;BT4.c: 62: while(TMR1IF==0); } }
  2671                           
  2672     04B2  1C0C               	btfss	12,0	;volatile
  2673     04B3  2CB5               	goto	u611
  2674     04B4  2CB6               	goto	u610
  2675     04B5                     u611:
  2676     04B5  2CB2               	goto	l63
  2677     04B6                     u610:
  2678     04B6                     l1228:
  2679                           
  2680                           ;BT4.c: 52: { while(n--)
  2681     04B6  3001               	movlw	1
  2682     04B7  02F0               	subwf	delay100us@n,f
  2683     04B8  3000               	movlw	0
  2684     04B9  1C03               	skipc
  2685     04BA  03F1               	decf	delay100us@n+1,f
  2686     04BB  02F1               	subwf	delay100us@n+1,f
  2687     04BC  0A70               	incf	delay100us@n,w
  2688     04BD  1D03               	skipz
  2689     04BE  2CC3               	goto	u621
  2690     04BF  0A71               	incf	delay100us@n+1,w
  2691     04C0  1D03               	btfss	3,2
  2692     04C1  2CC3               	goto	u621
  2693     04C2  2CC4               	goto	u620
  2694     04C3                     u621:
  2695     04C3  2C9F               	goto	l62
  2696     04C4                     u620:
  2697     04C4                     l67:
  2698     04C4  0008               	return
  2699     04C5                     __end_of_delay100us:
  2700     007E                     btemp	set	126	;btemp
  2701     007E                     wtemp0	set	126
  2702                           
  2703                           	psect	config
  2704                           
  2705                           ;Config register CONFIG1 @ 0x2007
  2706                           ;	Oscillator Selection bits
  2707                           ;	FOSC = HS, HS oscillator: High-speed crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1
      +                          /CLKIN
  2708                           ;	Watchdog Timer Enable bit
  2709                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2710                           ;	Power-up Timer Enable bit
  2711                           ;	PWRTE = OFF, PWRT disabled
  2712                           ;	RE3/MCLR pin function select bit
  2713                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  2714                           ;	Code Protection bit
  2715                           ;	CP = OFF, Program memory code protection is disabled
  2716                           ;	Data Code Protection bit
  2717                           ;	CPD = OFF, Data memory code protection is disabled
  2718                           ;	Brown Out Reset Selection bits
  2719                           ;	BOREN = OFF, BOR disabled
  2720                           ;	Internal External Switchover bit
  2721                           ;	IESO = ON, Internal/External Switchover mode is enabled
  2722                           ;	Fail-Safe Clock Monitor Enabled bit
  2723                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2724                           ;	Low Voltage Programming Enable bit
  2725                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2726                           ;	In-Circuit Debugger Mode bit
  2727                           ;	DEBUG = 0x1, unprogrammed default
  2728     2007                     	org	8199
  2729     2007  24D2               	dw	9426
  2730                           
  2731                           ;Config register CONFIG2 @ 0x2008
  2732                           ;	Brown-out Reset Selection bit
  2733                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2734                           ;	Flash Program Memory Self Write Enable bits
  2735                           ;	WRT = OFF, Write protection off
  2736     2008                     	org	8200
  2737     2008  3FFF               	dw	16383

Data Sizes:
    Strings     2
    Constant    93
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     10      10
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    lcd_puts@s	PTR const unsigned char  size(1) Largest target is 2
		 -> STR_1(CODE[2]), STR_2(CODE[2]), STR_3(CODE[2]), STR_4(CODE[2]), 

    load_custom_characters@custom_data	PTR const unsigned char  size(1) Largest target is 65
		 -> cgram_dat(CODE[65]), 


Critical Paths under _main in COMMON

    _main->_in_chu
    _lcd_ShiftRight->_lcd_put_byte
    _lcd_ShiftLeft->_lcd_put_byte
    _load_custom_characters->_lcd_put_byte
    _lcd_init->_lcd_put_byte
    _in_chu->_lcd_putc
    _chop_tat->_lcd_puts
    _lcd_puts->_lcd_putc
    _lcd_putc->_lcd_gotoxy
    _lcd_gotoxy->_lcd_put_byte
    _lcd_put_byte->_lcd_put_nibble
    _delay200ms->_delay100us

Critical Paths under _main in BANK0

    _main->_chop_tat

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   22917
                                              6 BANK0      4     4      0
                           _chop_tat
                         _delay200ms
                             _in_chu
                           _lcd_init
                           _lcd_putc
                           _lcd_puts
             _load_custom_characters
                  _shift_left_screen
                 _shift_right_screen
 ---------------------------------------------------------------------------------
 (1) _shift_right_screen                                   5     3      2    1309
                                              6 COMMON     5     3      2
                         _delay200ms
                     _lcd_ShiftRight
 ---------------------------------------------------------------------------------
 (2) _lcd_ShiftRight                                       0     0      0    1089
                       _lcd_put_byte
 ---------------------------------------------------------------------------------
 (1) _shift_left_screen                                    5     3      2    1309
                                              6 COMMON     5     3      2
                         _delay200ms
                      _lcd_ShiftLeft
 ---------------------------------------------------------------------------------
 (2) _lcd_ShiftLeft                                        0     0      0    1089
                       _lcd_put_byte
 ---------------------------------------------------------------------------------
 (1) _load_custom_characters                               4     3      1    1333
                                              6 COMMON     4     3      1
                           _lcd_busy
                       _lcd_put_byte
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             3     3      0    1223
                                              6 COMMON     2     2      0
                           _lcd_busy
                       _lcd_put_byte
                     _lcd_put_nibble
 ---------------------------------------------------------------------------------
 (1) _in_chu                                               4     4      0    4414
                                             10 COMMON     4     4      0
                         _lcd_gotoxy
                           _lcd_putc
 ---------------------------------------------------------------------------------
 (1) _chop_tat                                             8     6      2    7528
                                             11 COMMON     2     0      2
                                              0 BANK0      6     6      0
                         _delay200ms
                         _lcd_gotoxy
                           _lcd_putc
                           _lcd_puts
 ---------------------------------------------------------------------------------
 (1) _lcd_puts                                             1     1      0    2894
                                             10 COMMON     1     1      0
                           _lcd_putc
 ---------------------------------------------------------------------------------
 (2) _lcd_putc                                             1     1      0    2717
                                              9 COMMON     1     1      0
                           _lcd_busy
                         _lcd_gotoxy
                       _lcd_put_byte
 ---------------------------------------------------------------------------------
 (3) _lcd_gotoxy                                           3     2      1    1561
                                              6 COMMON     3     2      1
                           _lcd_busy
                       _lcd_put_byte
 ---------------------------------------------------------------------------------
 (3) _lcd_put_byte                                         3     2      1    1089
                                              3 COMMON     3     2      1
                     _lcd_put_nibble
 ---------------------------------------------------------------------------------
 (4) _lcd_put_nibble                                       3     3      0     111
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _lcd_busy                                             2     2      0      23
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _delay200ms                                           0     0      0      98
                         _delay100us
 ---------------------------------------------------------------------------------
 (3) _delay100us                                           2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _chop_tat
     _delay200ms
       _delay100us
     _lcd_gotoxy
       _lcd_busy
       _lcd_put_byte
         _lcd_put_nibble
     _lcd_putc
       _lcd_busy
       _lcd_gotoxy
       _lcd_put_byte
     _lcd_puts
       _lcd_putc
   _delay200ms
   _in_chu
     _lcd_gotoxy
     _lcd_putc
   _lcd_init
     _lcd_busy
     _lcd_put_byte
     _lcd_put_nibble
   _lcd_putc
   _lcd_puts
   _load_custom_characters
     _lcd_busy
     _lcd_put_byte
   _shift_left_screen
     _delay200ms
     _lcd_ShiftLeft
       _lcd_put_byte
   _shift_right_screen
     _delay200ms
     _lcd_ShiftRight
       _lcd_put_byte

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      A       A       5       12.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Thu Sep 19 10:13:02 2024

                    ??_lcd_ShiftLeft 0076                                    pc 0002  
                                 l62 049F                                   l70 0418  
                                 l63 04B2                                   l58 05B9  
                                 l82 049D                                   l67 04C4  
                                 l76 047B                                   l89 0605  
                                 l99 06D0               __end_of_lcd_put_nibble 0570  
                   ??_lcd_ShiftRight 0076                                   fsr 0004  
                      ?_lcd_put_byte 0073                                  l210 0405  
                                l108 075B                                  l213 040E  
                                l109 075B                                  l207 07FB  
                                l144 04F4                                  l152 056F  
                                l155 0505                                  l157 052D  
                                l165 0459                                  l183 0655  
                                l189 0437                                  _GIE 005F  
                                _RD1 0041                                  _RD2 0042  
                                _RD3 0043                                  _RD4 0044  
                                _RD5 0045                                  _RD6 0046  
                                _RD7 0047                                  u510 0548  
                                u511 0544                                  u504 0541  
                                u600 0459                                  u601 0458  
                                u610 04B6                                  u530 0552  
                                u611 04B5                                  u531 054E  
                                u620 04C4                                  u524 054B  
                                u700 05B9                                  u621 04C3  
                                u701 05B8                                  u550 055C  
                                u630 061A                                  u710 047B  
                                u551 0558                                  u631 0619  
                                u711 047A                                  u544 0555  
                                u640 0636                                  u800 07D7  
                                u720 049D                                  u641 0635  
                                u801 07D6                                  u721 049C  
                                u490 053E                                  u570 0501  
                                u650 0649                                  u730 05DF  
                                u810 07E9                                  u491 053A  
                                u571 0500                                  u651 0648  
                                u731 05DE                                  u811 07E8  
                                u715 0477                                  u564 055F  
                                u660 0437                                  u740 0605  
                                u820 07FB                                  u661 0436  
                                u741 0604                                  u821 07FA  
                                u725 0499                                  u590 043E  
                                u750 0684                                  u830 0724  
                                u591 043D                                  u751 0683  
                                u831 0723                                  u760 06AE  
                                u680 058E                                  u840 0756  
                                u585 051B                                  u761 06AD  
                                u681 058D                                  u841 0755  
                                u770 06D0                                  u690 05A8  
                                u771 06CF                                  u907 078F  
                                u691 05A7                                  u675 0575  
                                u835 0720                                  u780 07B3  
                                u781 07B2                                  u917 079E  
                                u845 0752                                  u790 07C5  
                                u927 050A                                  u775 06CC  
                                u791 07C4                                  u937 0512  
                                u947 0561                                  u957 0569  
                                u967 04D1                                  u887 076C  
                                u977 04D9                                  u897 0780  
                                u987 04E5                                  u997 04ED  
                                fsr0 0004                                 l1200 0441  
                               l1210 04A5                                 l1202 0442  
                               l1220 04AE                                 l1212 04A7  
                               l1204 0446                                 l1300 05C3  
                               l1222 04AF                                 l1214 04A9  
                               l1150 054B                                 l1142 052F  
                               l1206 044F                                 l1230 0607  
                               l1302 05D0                                 l1224 04B0  
                               l1216 04AA                                 l1208 049E  
                               l1152 0555                                 l1144 0535  
                               l1160 04FC                                 l1240 062C  
                               l1232 0608                                 l1320 0656  
                               l1304 05D6                                 l1400 06D6  
                               l1226 04B1                                 l1218 04AB  
                               l1154 0564                                 l1146 0537  
                               l1170 0518                                 l1162 0501  
                               l1242 0637                                 l1234 0610  
                               l1330 0666                                 l1322 065B  
                               l1314 05E9                                 l1306 05DF  
                               l1250 03FD                                 l1402 06DD  
                               l1228 04B6                                 l1180 04DC  
                               l1156 056C                                 l1148 0541  
                               l1172 0526                                 l1164 0508  
                               l1244 063F                                 l1236 061B  
                               l1260 042B                                 l1332 0673  
                               l1324 0662                                 l1316 05F6  
                               l1308 05E7                                 l1252 0406  
                               l1420 070F                                 l1404 06E3  
                               l1190 04F0                                 l1182 04E2  
                               l1174 04C5                                 l1166 050D  
                               l1158 04F6                                 l1238 0624  
                               l1246 064A                                 l1254 041A  
                               l1350 06AE                                 l1334 067B  
                               l1318 05FC                                 l1270 059E  
                               l1262 0571                                 l1430 0728  
                               l1422 0717                                 l1414 06F6  
                               l1406 06EC                                 l1248 040F  
                               l1192 04F3                                 l1184 04E3  
                               l1176 04CF                                 l1168 0515  
                               l1256 041B                                 l1352 06B3  
                               l1344 0690                                 l1336 0684  
                               l1360 075F                                 l1272 05A8  
                               l1264 0572                                 l1280 0467  
                               l1440 0756                                 l1432 072D  
                               l1424 0724                                 l1416 06FB  
                               l1408 06F2                                 l1186 04E8  
                               l1178 04D4                                 l1258 0427  
                               l1354 06B9                                 l1346 069D  
                               l1338 068C                                 l1370 0776  
                               l1362 0768                                 l1274 05AC  
                               l1266 0584                                 l1282 046D  
                               l1290 048F                                 l1434 0732  
                               l1418 0700                                 l1188 04EB  
                               l1196 0439                                 l1356 06BE  
                               l1348 06A5                                 l1292 05BA  
                               l1380 07A9                                 l1372 077C  
                               l1364 0771                                 l1268 058F  
                               l1276 045A                                 l1284 047C  
                               l1436 0741                                 l1198 043E  
                               l1358 06C6                                 l1294 05C1  
                               l1390 07D7                                 l1382 07B3  
                               l1374 078B                                 l1366 0774  
                               l1278 045D                                 l1286 047F  
                               l1438 0749                                 l1392 07DF  
                               l1384 07BB                                 l1376 0794  
                               l1368 0775                                 l1288 0489  
                               l1394 07E9                                 l1386 07C5  
                               l1378 07A3                                 l1396 07F1  
                               l1388 07CD                                 l1398 06D1  
                               STR_1 0066                                 STR_2 0066  
                               STR_3 0066                                 STR_4 0066  
                               _PEIE 005E                                 _TMR1 000E  
                               _main 06D1                         lcd_busy@busy 0071  
                               btemp 007E                                 start 0000  
                    ?_lcd_put_nibble 0070                       ??_lcd_put_byte 0074  
                              ?_main 0070                                _TMR1H 000F  
                              _TMR1L 000E                                main@i 0026  
                              pclath 000A                                status 0003  
                              wtemp0 007E                      __initialization 07FC  
                       __end_of_main 075F                        lcd_gotoxy@col 0077  
                      lcd_gotoxy@row 0076                   lcd_put_nibble@temp 0072  
                             ??_main 007E              ?_load_custom_characters 0076  
                             _T1SYNC 0082                               _TMR0IE 005D  
                             _TMR1IF 0060                               _TMR1CS 0081  
                             _TMR1ON 0080                               _TRISD1 0441  
                             _TRISD2 0442                               _TRISD3 0443  
                             _TRISD4 0444                               _TRISD5 0445  
                             _TRISD6 0446                               _TRISD7 0447  
                   __end_of_chop_tat 06D1    load_custom_characters@custom_data 0078  
                   __end_of_lcd_busy 04F5                     __end_of_lcd_init 07FC  
                   __end_of_lcd_putc 0656                     __end_of_lcd_puts 0438  
            load_custom_characters@i 0079                               _in_chu 05BA  
                      lcd_put_byte@b 0073       __end_of_load_custom_characters 05BA  
            __end_of__initialization 07FC                 __end_of_lcd_put_byte 052E  
                     __pcstackCOMMON 0070                   shift_left_screen@i 0079  
         __end_of_shift_right_screen 049E  load_custom_characters@start_address 0076  
                  lcd_gotoxy@address 0078                           _delay100us 049E  
                         _delay200ms 040F                     ??_lcd_put_nibble 0070  
                         __pmaintext 06D1                              ?_in_chu 0070  
              __end_of_lcd_ShiftLeft 0406                              _T1CKPS0 0084  
                            _T1CKPS1 0085                           _lcd_gotoxy 0438  
                          ?_chop_tat 007B                            ?_lcd_busy 0070  
                          ?_lcd_init 0070                            ?_lcd_putc 0070  
                          ?_lcd_puts 0070                           __stringtab 0003  
                  __end_of_dat_line1 0025                    __end_of_dat_line2 0017  
                  __end_of_cgram_dat 0066                              __ptext1 047C  
                            __ptext2 0406                              __ptext3 045A  
                            __ptext4 03FD                              __ptext5 0570  
                            __ptext6 075F                              __ptext7 05BA  
                            __ptext8 0656                              __ptext9 0419  
                         ??_chop_tat 007D                          ?_delay200ms 0070  
                        ?_delay100us 0070                           ??_lcd_busy 0070  
                         ??_lcd_init 0076                              in_chu@j 007A  
                         ??_lcd_putc 0079                           ??_lcd_puts 007A  
               end_of_initialization 07FC                       lcd_put_byte@rs 0075  
            shift_right_screen@times 0076               shift_left_screen@times 0076  
                       _lcd_put_byte 04F5                          ?_lcd_gotoxy 0076  
                         in_chu@j_92 007C                       __end_of_in_chu 0606  
                start_initialization 07FC                   _shift_right_screen 047C  
                shift_right_screen@i 0079                  ?_shift_right_screen 0076  
                           ??_in_chu 007A                 ??_shift_right_screen 0078  
                          ___latbits 0002                        __pcstackBANK0 0020  
                     _lcd_ShiftRight 0406                    _shift_left_screen 045A  
                          _dat_line1 0017                            _dat_line2 0009  
                 ?_shift_left_screen 0076                            _cgram_dat 0025  
           ??_load_custom_characters 0077                  ??_shift_left_screen 0078  
                          __pstrings 0003               __end_of_lcd_ShiftRight 040F  
                       ??_delay200ms 0072                         ??_delay100us 0072  
          __end_of_shift_left_screen 047C                            chop_tat@i 0020  
                          chop_tat@j 0022                   __end_of_delay100us 04C5  
                 __end_of_delay200ms 0419                          __stringbase 0008  
                          main@i_111 0028                      ?_lcd_ShiftRight 0070  
                          lcd_putc@c 0079                            lcd_puts@s 007A  
                       ??_lcd_gotoxy 0077                          delay100us@n 0070  
                 __end_of_lcd_gotoxy 045A                        _lcd_ShiftLeft 03FD  
                      chop_tat@times 007B                   __end_of__stringtab 0009  
                           _chop_tat 0656                             __ptext10 0606  
                           __ptext11 0438                             __ptext12 04F5  
                           __ptext13 052E                             __ptext14 04C5  
                           __ptext15 040F                             __ptext16 049E  
                           _lcd_busy 04C5                             _lcd_init 075F  
                           _lcd_putc 0606                             _lcd_puts 0419  
                     ?_lcd_ShiftLeft 0070                      lcd_put_nibble@b 0071  
                       chop_tat@j_97 0024               _load_custom_characters 0570  
                          stringcode 0003                       _lcd_put_nibble 052E  
                           stringdir 0003                             stringtab 0003  
