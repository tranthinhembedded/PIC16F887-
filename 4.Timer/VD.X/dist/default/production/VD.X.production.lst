

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Thu Sep 19 01:33:50 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	psect	text8,local,class=CODE,merge=1,delta=2
    17                           	psect	text9,local,class=CODE,merge=1,delta=2
    18                           	psect	text10,local,class=CODE,merge=1,delta=2
    19                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    20                           	dabs	1,0x7E,2
    21     0000                     
    22                           ; Generated 12/10/2023 GMT
    23                           ; 
    24                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution. Publication is not required when
    38                           ;        this file is used in an embedded application.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC16F887 Definitions
    54                           ; 
    55                           ; SFR Addresses
    56     0000                     	;# 
    57     0001                     	;# 
    58     0002                     	;# 
    59     0003                     	;# 
    60     0004                     	;# 
    61     0005                     	;# 
    62     0006                     	;# 
    63     0007                     	;# 
    64     0008                     	;# 
    65     0009                     	;# 
    66     000A                     	;# 
    67     000B                     	;# 
    68     000C                     	;# 
    69     000D                     	;# 
    70     000E                     	;# 
    71     000E                     	;# 
    72     000F                     	;# 
    73     0010                     	;# 
    74     0011                     	;# 
    75     0012                     	;# 
    76     0013                     	;# 
    77     0014                     	;# 
    78     0015                     	;# 
    79     0015                     	;# 
    80     0016                     	;# 
    81     0017                     	;# 
    82     0018                     	;# 
    83     0019                     	;# 
    84     001A                     	;# 
    85     001B                     	;# 
    86     001B                     	;# 
    87     001C                     	;# 
    88     001D                     	;# 
    89     001E                     	;# 
    90     001F                     	;# 
    91     0081                     	;# 
    92     0085                     	;# 
    93     0086                     	;# 
    94     0087                     	;# 
    95     0088                     	;# 
    96     0089                     	;# 
    97     008C                     	;# 
    98     008D                     	;# 
    99     008E                     	;# 
   100     008F                     	;# 
   101     0090                     	;# 
   102     0091                     	;# 
   103     0092                     	;# 
   104     0093                     	;# 
   105     0093                     	;# 
   106     0093                     	;# 
   107     0094                     	;# 
   108     0095                     	;# 
   109     0096                     	;# 
   110     0097                     	;# 
   111     0098                     	;# 
   112     0099                     	;# 
   113     009A                     	;# 
   114     009B                     	;# 
   115     009C                     	;# 
   116     009D                     	;# 
   117     009E                     	;# 
   118     009F                     	;# 
   119     0105                     	;# 
   120     0107                     	;# 
   121     0108                     	;# 
   122     0109                     	;# 
   123     010C                     	;# 
   124     010C                     	;# 
   125     010D                     	;# 
   126     010E                     	;# 
   127     010F                     	;# 
   128     0185                     	;# 
   129     0187                     	;# 
   130     0188                     	;# 
   131     0189                     	;# 
   132     018C                     	;# 
   133     018D                     	;# 
   134     0000                     	;# 
   135     0001                     	;# 
   136     0002                     	;# 
   137     0003                     	;# 
   138     0004                     	;# 
   139     0005                     	;# 
   140     0006                     	;# 
   141     0007                     	;# 
   142     0008                     	;# 
   143     0009                     	;# 
   144     000A                     	;# 
   145     000B                     	;# 
   146     000C                     	;# 
   147     000D                     	;# 
   148     000E                     	;# 
   149     000E                     	;# 
   150     000F                     	;# 
   151     0010                     	;# 
   152     0011                     	;# 
   153     0012                     	;# 
   154     0013                     	;# 
   155     0014                     	;# 
   156     0015                     	;# 
   157     0015                     	;# 
   158     0016                     	;# 
   159     0017                     	;# 
   160     0018                     	;# 
   161     0019                     	;# 
   162     001A                     	;# 
   163     001B                     	;# 
   164     001B                     	;# 
   165     001C                     	;# 
   166     001D                     	;# 
   167     001E                     	;# 
   168     001F                     	;# 
   169     0081                     	;# 
   170     0085                     	;# 
   171     0086                     	;# 
   172     0087                     	;# 
   173     0088                     	;# 
   174     0089                     	;# 
   175     008C                     	;# 
   176     008D                     	;# 
   177     008E                     	;# 
   178     008F                     	;# 
   179     0090                     	;# 
   180     0091                     	;# 
   181     0092                     	;# 
   182     0093                     	;# 
   183     0093                     	;# 
   184     0093                     	;# 
   185     0094                     	;# 
   186     0095                     	;# 
   187     0096                     	;# 
   188     0097                     	;# 
   189     0098                     	;# 
   190     0099                     	;# 
   191     009A                     	;# 
   192     009B                     	;# 
   193     009C                     	;# 
   194     009D                     	;# 
   195     009E                     	;# 
   196     009F                     	;# 
   197     0105                     	;# 
   198     0107                     	;# 
   199     0108                     	;# 
   200     0109                     	;# 
   201     010C                     	;# 
   202     010C                     	;# 
   203     010D                     	;# 
   204     010E                     	;# 
   205     010F                     	;# 
   206     0185                     	;# 
   207     0187                     	;# 
   208     0188                     	;# 
   209     0189                     	;# 
   210     018C                     	;# 
   211     018D                     	;# 
   212     0000                     	;# 
   213     0001                     	;# 
   214     0002                     	;# 
   215     0003                     	;# 
   216     0004                     	;# 
   217     0005                     	;# 
   218     0006                     	;# 
   219     0007                     	;# 
   220     0008                     	;# 
   221     0009                     	;# 
   222     000A                     	;# 
   223     000B                     	;# 
   224     000C                     	;# 
   225     000D                     	;# 
   226     000E                     	;# 
   227     000E                     	;# 
   228     000F                     	;# 
   229     0010                     	;# 
   230     0011                     	;# 
   231     0012                     	;# 
   232     0013                     	;# 
   233     0014                     	;# 
   234     0015                     	;# 
   235     0015                     	;# 
   236     0016                     	;# 
   237     0017                     	;# 
   238     0018                     	;# 
   239     0019                     	;# 
   240     001A                     	;# 
   241     001B                     	;# 
   242     001B                     	;# 
   243     001C                     	;# 
   244     001D                     	;# 
   245     001E                     	;# 
   246     001F                     	;# 
   247     0081                     	;# 
   248     0085                     	;# 
   249     0086                     	;# 
   250     0087                     	;# 
   251     0088                     	;# 
   252     0089                     	;# 
   253     008C                     	;# 
   254     008D                     	;# 
   255     008E                     	;# 
   256     008F                     	;# 
   257     0090                     	;# 
   258     0091                     	;# 
   259     0092                     	;# 
   260     0093                     	;# 
   261     0093                     	;# 
   262     0093                     	;# 
   263     0094                     	;# 
   264     0095                     	;# 
   265     0096                     	;# 
   266     0097                     	;# 
   267     0098                     	;# 
   268     0099                     	;# 
   269     009A                     	;# 
   270     009B                     	;# 
   271     009C                     	;# 
   272     009D                     	;# 
   273     009E                     	;# 
   274     009F                     	;# 
   275     0105                     	;# 
   276     0107                     	;# 
   277     0108                     	;# 
   278     0109                     	;# 
   279     010C                     	;# 
   280     010C                     	;# 
   281     010D                     	;# 
   282     010E                     	;# 
   283     010F                     	;# 
   284     0185                     	;# 
   285     0187                     	;# 
   286     0188                     	;# 
   287     0189                     	;# 
   288     018C                     	;# 
   289     018D                     	;# 
   290                           
   291                           	psect	strings
   292     0003                     __pstrings:
   293     0003                     stringtab:
   294     0003                     __stringtab:
   295     0003                     stringcode:	
   296                           ;	String table - string pointers are 1 byte each
   297                           
   298     0003                     stringdir:
   299     0003  3000               	movlw	high stringdir
   300     0004  008A               	movwf	10
   301     0005  0804               	movf	4,w
   302     0006  0A84               	incf	4,f
   303     0007  0782               	addwf	2,f
   304     0008                     __stringbase:
   305     0008  3400               	retlw	0
   306     0009                     __end_of__stringtab:
   307     0009                     _dat_line4:
   308     0009  344E               	retlw	78
   309     000A  3407               	retlw	7
   310     000B  3469               	retlw	105
   311     000C  3420               	retlw	32
   312     000D  3453               	retlw	83
   313     000E  3469               	retlw	105
   314     000F  346E               	retlw	110
   315     0010  3468               	retlw	104
   316     0011  343A               	retlw	58
   317     0012  344B               	retlw	75
   318     0013  3469               	retlw	105
   319     0014  3401               	retlw	1
   320     0015  346E               	retlw	110
   321     0016  3447               	retlw	71
   322     0017  3469               	retlw	105
   323     0018  3461               	retlw	97
   324     0019                     __end_of_dat_line4:
   325     0019                     _dat_line2:
   326     0019  344D               	retlw	77
   327     001A  3453               	retlw	83
   328     001B  3453               	retlw	83
   329     001C  3456               	retlw	86
   330     001D  343A               	retlw	58
   331     001E  3420               	retlw	32
   332     001F  3432               	retlw	50
   333     0020  3431               	retlw	49
   334     0021  3431               	retlw	49
   335     0022  3432               	retlw	50
   336     0023  3432               	retlw	50
   337     0024  3430               	retlw	48
   338     0025  3439               	retlw	57
   339     0026  3431               	retlw	49
   340     0027  3400               	retlw	0
   341     0028                     __end_of_dat_line2:
   342     0028                     _dat_line5:
   343     0028  3448               	retlw	72
   344     0029  344B               	retlw	75
   345     002A  3454               	retlw	84
   346     002B  3454               	retlw	84
   347     002C  343A               	retlw	58
   348     002D  3448               	retlw	72
   349     002E  3407               	retlw	7
   350     002F  346E               	retlw	110
   351     0030  3420               	retlw	32
   352     0031  3402               	retlw	2
   353     0032  3406               	retlw	6
   354     0033  3474               	retlw	116
   355     0034                     __end_of_dat_line5:
   356     0034                     _dat_line6:
   357     0034  344C               	retlw	76
   358     0035  3404               	retlw	4
   359     0036  3470               	retlw	112
   360     0037  343A               	retlw	58
   361     0038  3402               	retlw	2
   362     0039  3448               	retlw	72
   363     003A  3456               	retlw	86
   364     003B  3454               	retlw	84
   365     003C  3431               	retlw	49
   366     003D  3435               	retlw	53
   367     003E  3441               	retlw	65
   368     003F                     __end_of_dat_line6:
   369     003F                     _cgram_dat:
   370     003F  3400               	retlw	0
   371     0040  3400               	retlw	0
   372     0041  3400               	retlw	0
   373     0042  3418               	retlw	24
   374     0043  3414               	retlw	20
   375     0044  3410               	retlw	16
   376     0045  3410               	retlw	16
   377     0046  3400               	retlw	0
   378     0047  3402               	retlw	2
   379     0048  3409               	retlw	9
   380     0049  3414               	retlw	20
   381     004A  3400               	retlw	0
   382     004B  341C               	retlw	28
   383     004C  3414               	retlw	20
   384     004D  341E               	retlw	30
   385     004E  3400               	retlw	0
   386     004F  340E               	retlw	14
   387     0050  3409               	retlw	9
   388     0051  3409               	retlw	9
   389     0052  341D               	retlw	29
   390     0053  3409               	retlw	9
   391     0054  3409               	retlw	9
   392     0055  340E               	retlw	14
   393     0056  3400               	retlw	0
   394     0057  3404               	retlw	4
   395     0058  3408               	retlw	8
   396     0059  3412               	retlw	18
   397     005A  3401               	retlw	1
   398     005B  3412               	retlw	18
   399     005C  3412               	retlw	18
   400     005D  341E               	retlw	30
   401     005E  3400               	retlw	0
   402     005F  3400               	retlw	0
   403     0060  3404               	retlw	4
   404     0061  3400               	retlw	0
   405     0062  340C               	retlw	12
   406     0063  3404               	retlw	4
   407     0064  3400               	retlw	0
   408     0065  3404               	retlw	4
   409     0066  3400               	retlw	0
   410     0067  3400               	retlw	0
   411     0068  340E               	retlw	14
   412     0069  3411               	retlw	17
   413     006A  3411               	retlw	17
   414     006B  3411               	retlw	17
   415     006C  340E               	retlw	14
   416     006D  3400               	retlw	0
   417     006E  3404               	retlw	4
   418     006F  3408               	retlw	8
   419     0070  3404               	retlw	4
   420     0071  3400               	retlw	0
   421     0072  340C               	retlw	12
   422     0073  3414               	retlw	20
   423     0074  3414               	retlw	20
   424     0075  341E               	retlw	30
   425     0076  3400               	retlw	0
   426     0077  3400               	retlw	0
   427     0078  3400               	retlw	0
   428     0079  3406               	retlw	6
   429     007A  3402               	retlw	2
   430     007B  341C               	retlw	28
   431     007C  3414               	retlw	20
   432     007D  341C               	retlw	28
   433     007E  3400               	retlw	0
   434     007F  3499               	retlw	153
   435     0080                     __end_of_cgram_dat:
   436     0080                     _dat_line3:
   437     0080  344E               	retlw	78
   438     0081  3467               	retlw	103
   439     0082  3406               	retlw	6
   440     0083  3479               	retlw	121
   441     0084  3420               	retlw	32
   442     0085  3453               	retlw	83
   443     0086  3469               	retlw	105
   444     0087  346E               	retlw	110
   445     0088  3468               	retlw	104
   446     0089  343A               	retlw	58
   447     008A  3431               	retlw	49
   448     008B  3430               	retlw	48
   449     008C  342F               	retlw	47
   450     008D  3430               	retlw	48
   451     008E  3433               	retlw	51
   452     008F                     __end_of_dat_line3:
   453     008F                     _dat_line1:
   454     008F  3454               	retlw	84
   455     0090  3400               	retlw	0
   456     0091  3401               	retlw	1
   457     0092  346E               	retlw	110
   458     0093  3420               	retlw	32
   459     0094  3402               	retlw	2
   460     0095  3403               	retlw	3
   461     0096  3463               	retlw	99
   462     0097  3420               	retlw	32
   463     0098  3454               	retlw	84
   464     0099  3468               	retlw	104
   465     009A  3404               	retlw	4
   466     009B  346E               	retlw	110
   467     009C  3468               	retlw	104
   468     009D                     __end_of_dat_line1:
   469     0044                     _RD4	set	68
   470     0045                     _RD5	set	69
   471     0046                     _RD6	set	70
   472     0047                     _RD7	set	71
   473     0043                     _RD3	set	67
   474     0041                     _RD1	set	65
   475     0042                     _RD2	set	66
   476     0442                     _TRISD2	set	1090
   477     0441                     _TRISD1	set	1089
   478     0443                     _TRISD3	set	1091
   479     0447                     _TRISD7	set	1095
   480     0446                     _TRISD6	set	1094
   481     0445                     _TRISD5	set	1093
   482     0444                     _TRISD4	set	1092
   483                           
   484                           	psect	cinit
   485     07FC                     start_initialization:	
   486                           ; #config settings
   487                           
   488     07FC                     __initialization:
   489     07FC                     end_of_initialization:	
   490                           ;End of C runtime variable initialization code
   491                           
   492     07FC                     __end_of__initialization:
   493     07FC  0183               	clrf	3
   494     07FD  120A  118A  2E39   	ljmp	_main	;jump to C main() function
   495                           
   496                           	psect	cstackCOMMON
   497     0070                     __pcstackCOMMON:
   498     0070                     ?_lcd_busy:
   499     0070                     ??_lcd_busy:	
   500                           ; 1 bytes @ 0x0
   501                           
   502     0070                     ?_lcd_ShiftLeft:	
   503                           ; 1 bytes @ 0x0
   504                           
   505     0070                     ?_lcd_putc:	
   506                           ; 1 bytes @ 0x0
   507                           
   508     0070                     ?_lcd_init:	
   509                           ; 1 bytes @ 0x0
   510                           
   511     0070                     ?_main:	
   512                           ; 1 bytes @ 0x0
   513                           
   514     0070                     ?_lcd_put_nibble:	
   515                           ; 1 bytes @ 0x0
   516                           
   517     0070                     ??_lcd_put_nibble:	
   518                           ; 1 bytes @ 0x0
   519                           
   520                           
   521                           ; 1 bytes @ 0x0
   522     0070                     	ds	1
   523     0071                     lcd_busy@busy:
   524     0071                     lcd_put_nibble@b:	
   525                           ; 1 bytes @ 0x1
   526                           
   527                           
   528                           ; 1 bytes @ 0x1
   529     0071                     	ds	1
   530     0072                     lcd_put_nibble@temp:
   531                           
   532                           ; 1 bytes @ 0x2
   533     0072                     	ds	1
   534     0073                     ?_lcd_put_byte:
   535     0073                     lcd_put_byte@b:	
   536                           ; 1 bytes @ 0x3
   537                           
   538                           
   539                           ; 1 bytes @ 0x3
   540     0073                     	ds	1
   541     0074                     ??_lcd_put_byte:
   542                           
   543                           ; 1 bytes @ 0x4
   544     0074                     	ds	1
   545     0075                     lcd_put_byte@rs:
   546                           
   547                           ; 1 bytes @ 0x5
   548     0075                     	ds	1
   549     0076                     ??_lcd_ShiftLeft:
   550     0076                     ?_lcd_gotoxy:	
   551                           ; 1 bytes @ 0x6
   552                           
   553     0076                     ??_lcd_init:	
   554                           ; 1 bytes @ 0x6
   555                           
   556     0076                     ?_load_custom_characters:	
   557                           ; 1 bytes @ 0x6
   558                           
   559     0076                     ?_shift_left_screen:	
   560                           ; 1 bytes @ 0x6
   561                           
   562     0076                     load_custom_characters@start_address:	
   563                           ; 1 bytes @ 0x6
   564                           
   565     0076                     lcd_gotoxy@row:	
   566                           ; 1 bytes @ 0x6
   567                           
   568     0076                     shift_left_screen@times:	
   569                           ; 1 bytes @ 0x6
   570                           
   571                           
   572                           ; 2 bytes @ 0x6
   573     0076                     	ds	1
   574     0077                     ??_lcd_gotoxy:
   575     0077                     ??_load_custom_characters:	
   576                           ; 1 bytes @ 0x7
   577                           
   578     0077                     lcd_gotoxy@col:	
   579                           ; 1 bytes @ 0x7
   580                           
   581                           
   582                           ; 1 bytes @ 0x7
   583     0077                     	ds	1
   584     0078                     ??_shift_left_screen:
   585     0078                     load_custom_characters@custom_data:	
   586                           ; 1 bytes @ 0x8
   587                           
   588     0078                     lcd_gotoxy@address:	
   589                           ; 1 bytes @ 0x8
   590                           
   591                           
   592                           ; 1 bytes @ 0x8
   593     0078                     	ds	1
   594     0079                     ??_lcd_putc:
   595     0079                     load_custom_characters@i:	
   596                           ; 1 bytes @ 0x9
   597                           
   598     0079                     lcd_putc@c:	
   599                           ; 1 bytes @ 0x9
   600                           
   601                           
   602                           ; 1 bytes @ 0x9
   603     0079                     	ds	1
   604     007A                     ??_chaychu_2line:
   605                           
   606                           ; 1 bytes @ 0xA
   607     007A                     	ds	1
   608     007B                     shift_left_screen@i:
   609                           
   610                           ; 2 bytes @ 0xB
   611     007B                     	ds	3
   612     007E                     ??_main:
   613                           
   614                           	psect	cstackBANK0
   615     0020                     __pcstackBANK0:	
   616                           ; 1 bytes @ 0xE
   617                           
   618     0020                     ?_chaychu_2line:
   619     0020                     chaychu_2line@line_data2:	
   620                           ; 1 bytes @ 0x0
   621                           
   622                           
   623                           ; 1 bytes @ 0x0
   624     0020                     	ds	1
   625     0021                     chaychu_2line@line_size1:
   626                           
   627                           ; 2 bytes @ 0x1
   628     0021                     	ds	2
   629     0023                     chaychu_2line@line_size2:
   630                           
   631                           ; 2 bytes @ 0x3
   632     0023                     	ds	2
   633     0025                     chaychu_2line@line_number1:
   634                           
   635                           ; 2 bytes @ 0x5
   636     0025                     	ds	2
   637     0027                     chaychu_2line@line_number2:
   638                           
   639                           ; 2 bytes @ 0x7
   640     0027                     	ds	2
   641     0029                     chaychu_2line@line_data1:
   642                           
   643                           ; 1 bytes @ 0x9
   644     0029                     	ds	1
   645     002A                     chaychu_2line@j:
   646                           
   647                           ; 2 bytes @ 0xA
   648     002A                     	ds	2
   649     002C                     chaychu_2line@j_86:
   650                           
   651                           ; 2 bytes @ 0xC
   652     002C                     	ds	2
   653     002E                     chaychu_2line@k:
   654                           
   655                           ; 2 bytes @ 0xE
   656     002E                     	ds	2
   657     0030                     main@size_line1:
   658                           
   659                           ; 2 bytes @ 0x10
   660     0030                     	ds	2
   661     0032                     main@size_line3:
   662                           
   663                           ; 2 bytes @ 0x12
   664     0032                     	ds	2
   665     0034                     main@repeat:
   666                           
   667                           ; 2 bytes @ 0x14
   668     0034                     	ds	2
   669                           
   670                           	psect	maintext
   671     0639                     __pmaintext:	
   672 ;;
   673 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   674 ;;
   675 ;; *************** function _main *****************
   676 ;; Defined at:
   677 ;;		line 109 in file "BT1.c"
   678 ;; Parameters:    Size  Location     Type
   679 ;;		None
   680 ;; Auto vars:     Size  Location     Type
   681 ;;  repeat          2   20[BANK0 ] int 
   682 ;;  size_line3      2   18[BANK0 ] int 
   683 ;;  size_line1      2   16[BANK0 ] int 
   684 ;;  j               1    0        unsigned char 
   685 ;; Return value:  Size  Location     Type
   686 ;;                  1    wreg      void 
   687 ;; Registers used:
   688 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   689 ;; Tracked objects:
   690 ;;		On entry : B00/0
   691 ;;		On exit  : 0/0
   692 ;;		Unchanged: 0/0
   693 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   694 ;;      Params:         0       0       0       0       0
   695 ;;      Locals:         0       6       0       0       0
   696 ;;      Temps:          0       0       0       0       0
   697 ;;      Totals:         0       6       0       0       0
   698 ;;Total ram usage:        6 bytes
   699 ;; Hardware stack levels required when called: 5
   700 ;; This function calls:
   701 ;;		_chaychu_2line
   702 ;;		_lcd_init
   703 ;;		_lcd_putc
   704 ;;		_load_custom_characters
   705 ;;		_shift_left_screen
   706 ;; This function is called by:
   707 ;;		Startup code after reset
   708 ;; This function uses a non-reentrant model
   709 ;;
   710                           
   711     0639                     _main:	
   712                           ;psect for function _main
   713                           
   714     0639                     l1262:	
   715                           ;incstack = 0
   716                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   717                           
   718                           
   719                           ;BT1.c: 111:     unsigned char j;;BT1.c: 112:     lcd_init();
   720     0639  120A  118A  2698  120A  118A  	fcall	_lcd_init
   721     063E                     l1264:
   722                           
   723                           ;BT1.c: 113:     load_custom_characters(cgram_dat, 0);
   724     063E  01F6               	clrf	load_custom_characters@start_address
   725     063F  3037               	movlw	(low ((_cgram_dat-__stringbase)| (0+32768)))& (0+255)
   726     0640  120A  118A  259F  120A  118A  	fcall	_load_custom_characters
   727     0645                     l1266:
   728                           
   729                           ;BT1.c: 114:     lcd_putc('\f');
   730     0645  300C               	movlw	12
   731     0646  120A  118A  25E9  120A  118A  	fcall	_lcd_putc
   732     064B                     l1268:
   733                           
   734                           ;BT1.c: 116:     int size_line1 = (sizeof(dat_line1) / sizeof(dat_line1[0]));
   735     064B  300E               	movlw	14
   736     064C  1283               	bcf	3,5	;RP0=0, select bank0
   737     064D  1303               	bcf	3,6	;RP1=0, select bank0
   738     064E  00B0               	movwf	main@size_line1
   739     064F  3000               	movlw	0
   740     0650  00B1               	movwf	main@size_line1+1
   741     0651                     l1270:
   742                           
   743                           ;BT1.c: 117:     int size_line3 = (sizeof(dat_line3) / sizeof(dat_line3[0]));
   744     0651  300F               	movlw	15
   745     0652  00B2               	movwf	main@size_line3
   746     0653  3000               	movlw	0
   747     0654  00B3               	movwf	main@size_line3+1
   748     0655                     l1272:
   749                           
   750                           ;BT1.c: 120:     for (int repeat = 0; repeat < 2; repeat++) {
   751     0655  01B4               	clrf	main@repeat
   752     0656  01B5               	clrf	main@repeat+1
   753     0657                     l1278:
   754                           
   755                           ;BT1.c: 121:         chaychu_2line(dat_line1, dat_line3, size_line1, size_line3, 0, 1);
   756     0657  3078               	movlw	(low ((_dat_line3-__stringbase)| (0+32768)))& (0+255)
   757     0658  1283               	bcf	3,5	;RP0=0, select bank0
   758     0659  1303               	bcf	3,6	;RP1=0, select bank0
   759     065A  00A0               	movwf	chaychu_2line@line_data2
   760     065B  0831               	movf	main@size_line1+1,w
   761     065C  00A2               	movwf	chaychu_2line@line_size1+1
   762     065D  0830               	movf	main@size_line1,w
   763     065E  00A1               	movwf	chaychu_2line@line_size1
   764     065F  0833               	movf	main@size_line3+1,w
   765     0660  00A4               	movwf	chaychu_2line@line_size2+1
   766     0661  0832               	movf	main@size_line3,w
   767     0662  00A3               	movwf	chaychu_2line@line_size2
   768     0663  3000               	movlw	0
   769     0664  00A5               	movwf	chaychu_2line@line_number1
   770     0665  00A6               	movwf	chaychu_2line@line_number1+1
   771     0666  3001               	movlw	1
   772     0667  00A7               	movwf	chaychu_2line@line_number2
   773     0668  3000               	movlw	0
   774     0669  00A8               	movwf	chaychu_2line@line_number2+1
   775     066A  3087               	movlw	(low ((_dat_line1-__stringbase)| (0+32768)))& (0+255)
   776     066B  120A  118A  2735  120A  118A  	fcall	_chaychu_2line
   777     0670                     l1280:
   778                           
   779                           ;BT1.c: 122:         shift_left_screen(16);
   780     0670  3010               	movlw	16
   781     0671  00F6               	movwf	shift_left_screen@times
   782     0672  3000               	movlw	0
   783     0673  00F7               	movwf	shift_left_screen@times+1
   784     0674  120A  118A  24CA  120A  118A  	fcall	_shift_left_screen
   785     0679                     l1282:
   786                           
   787                           ;BT1.c: 123:         lcd_putc('\f');
   788     0679  300C               	movlw	12
   789     067A  120A  118A  25E9  120A  118A  	fcall	_lcd_putc
   790     067F                     l1284:
   791                           
   792                           ;BT1.c: 124:     }
   793     067F  3001               	movlw	1
   794     0680  1283               	bcf	3,5	;RP0=0, select bank0
   795     0681  1303               	bcf	3,6	;RP1=0, select bank0
   796     0682  07B4               	addwf	main@repeat,f
   797     0683  1803               	skipnc
   798     0684  0AB5               	incf	main@repeat+1,f
   799     0685  3000               	movlw	0
   800     0686  07B5               	addwf	main@repeat+1,f
   801     0687                     l1286:
   802     0687  0835               	movf	main@repeat+1,w
   803     0688  3A80               	xorlw	128
   804     0689  00FF               	movwf	btemp+1
   805     068A  3080               	movlw	128
   806     068B  027F               	subwf	btemp+1,w
   807     068C  1D03               	skipz
   808     068D  2E90               	goto	u815
   809     068E  3002               	movlw	2
   810     068F  0234               	subwf	main@repeat,w
   811     0690                     u815:
   812     0690  1C03               	skipc
   813     0691  2E93               	goto	u811
   814     0692  2E94               	goto	u810
   815     0693                     u811:
   816     0693  2E57               	goto	l1278
   817     0694                     u810:
   818     0694                     l78:	
   819                           ;BT1.c: 126:     while(1);
   820                           
   821     0694  2E94               	goto	l78
   822     0695  120A  118A  2800   	ljmp	start
   823     0698                     __end_of_main:
   824                           
   825                           	psect	text1
   826     04CA                     __ptext1:	
   827 ;; *************** function _shift_left_screen *****************
   828 ;; Defined at:
   829 ;;		line 58 in file "BT1.c"
   830 ;; Parameters:    Size  Location     Type
   831 ;;  times           2    6[COMMON] int 
   832 ;; Auto vars:     Size  Location     Type
   833 ;;  i               2   11[COMMON] int 
   834 ;; Return value:  Size  Location     Type
   835 ;;                  1    wreg      void 
   836 ;; Registers used:
   837 ;;		wreg, status,2, status,0, pclath, cstack
   838 ;; Tracked objects:
   839 ;;		On entry : 0/0
   840 ;;		On exit  : 0/0
   841 ;;		Unchanged: 0/0
   842 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   843 ;;      Params:         2       0       0       0       0
   844 ;;      Locals:         2       0       0       0       0
   845 ;;      Temps:          3       0       0       0       0
   846 ;;      Totals:         7       0       0       0       0
   847 ;;Total ram usage:        7 bytes
   848 ;; Hardware stack levels used: 1
   849 ;; Hardware stack levels required when called: 3
   850 ;; This function calls:
   851 ;;		_lcd_ShiftLeft
   852 ;; This function is called by:
   853 ;;		_main
   854 ;; This function uses a non-reentrant model
   855 ;;
   856                           
   857     04CA                     _shift_left_screen:	
   858                           ;psect for function _shift_left_screen
   859                           
   860     04CA                     l1154:	
   861                           ;incstack = 0
   862                           ; Regs used in _shift_left_screen: [wreg+status,2+status,0+pclath+cstack]
   863                           
   864                           
   865                           ;BT1.c: 58: void shift_left_screen(int times);BT1.c: 59: {;BT1.c: 60:     for(int i = 0;
      +                           i < times; i++) {
   866     04CA  01FB               	clrf	shift_left_screen@i
   867     04CB  01FC               	clrf	shift_left_screen@i+1
   868     04CC  2CE5               	goto	l1162
   869     04CD                     l1156:
   870                           
   871                           ;BT1.c: 61:         lcd_ShiftLeft();
   872     04CD  120A  118A  249F  120A  118A  	fcall	_lcd_ShiftLeft
   873     04D2                     l1158:
   874                           
   875                           ;BT1.c: 62:         _delay((unsigned long)((200)*(4000000/4000.0)));
   876     04D2  3002               	movlw	2
   877     04D3  00FA               	movwf	??_shift_left_screen+2
   878     04D4  3004               	movlw	4
   879     04D5  00F9               	movwf	??_shift_left_screen+1
   880     04D6  30BA               	movlw	186
   881     04D7  00F8               	movwf	??_shift_left_screen
   882     04D8                     u867:
   883     04D8  0BF8               	decfsz	??_shift_left_screen,f
   884     04D9  2CD8               	goto	u867
   885     04DA  0BF9               	decfsz	??_shift_left_screen+1,f
   886     04DB  2CD8               	goto	u867
   887     04DC  0BFA               	decfsz	??_shift_left_screen+2,f
   888     04DD  2CD8               	goto	u867
   889     04DE  0000               	nop
   890     04DF                     l1160:
   891                           
   892                           ;BT1.c: 63:     }
   893     04DF  3001               	movlw	1
   894     04E0  07FB               	addwf	shift_left_screen@i,f
   895     04E1  1803               	skipnc
   896     04E2  0AFC               	incf	shift_left_screen@i+1,f
   897     04E3  3000               	movlw	0
   898     04E4  07FC               	addwf	shift_left_screen@i+1,f
   899     04E5                     l1162:
   900     04E5  087C               	movf	shift_left_screen@i+1,w
   901     04E6  3A80               	xorlw	128
   902     04E7  00F8               	movwf	??_shift_left_screen
   903     04E8  0877               	movf	shift_left_screen@times+1,w
   904     04E9  3A80               	xorlw	128
   905     04EA  0278               	subwf	??_shift_left_screen,w
   906     04EB  1D03               	skipz
   907     04EC  2CEF               	goto	u675
   908     04ED  0876               	movf	shift_left_screen@times,w
   909     04EE  027B               	subwf	shift_left_screen@i,w
   910     04EF                     u675:
   911     04EF  1C03               	skipc
   912     04F0  2CF2               	goto	u671
   913     04F1  2CF3               	goto	u670
   914     04F2                     u671:
   915     04F2  2CCD               	goto	l1156
   916     04F3                     u670:
   917     04F3                     l46:
   918     04F3  0008               	return
   919     04F4                     __end_of_shift_left_screen:
   920                           
   921                           	psect	text2
   922     049F                     __ptext2:	
   923 ;; *************** function _lcd_ShiftLeft *****************
   924 ;; Defined at:
   925 ;;		line 290 in file "lcd.c"
   926 ;; Parameters:    Size  Location     Type
   927 ;;		None
   928 ;; Auto vars:     Size  Location     Type
   929 ;;		None
   930 ;; Return value:  Size  Location     Type
   931 ;;                  1    wreg      void 
   932 ;; Registers used:
   933 ;;		wreg, status,2, status,0, pclath, cstack
   934 ;; Tracked objects:
   935 ;;		On entry : 0/0
   936 ;;		On exit  : 0/0
   937 ;;		Unchanged: 0/0
   938 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   939 ;;      Params:         0       0       0       0       0
   940 ;;      Locals:         0       0       0       0       0
   941 ;;      Temps:          0       0       0       0       0
   942 ;;      Totals:         0       0       0       0       0
   943 ;;Total ram usage:        0 bytes
   944 ;; Hardware stack levels used: 1
   945 ;; Hardware stack levels required when called: 2
   946 ;; This function calls:
   947 ;;		_lcd_put_byte
   948 ;; This function is called by:
   949 ;;		_shift_left_screen
   950 ;;		_lcd_MoveLeft
   951 ;; This function uses a non-reentrant model
   952 ;;
   953                           
   954     049F                     _lcd_ShiftLeft:	
   955                           ;psect for function _lcd_ShiftLeft
   956                           
   957     049F                     l1120:	
   958                           ;incstack = 0
   959                           ; Regs used in _lcd_ShiftLeft: [wreg+status,2+status,0+pclath+cstack]
   960                           
   961                           
   962                           ;lcd.c: 295:      lcd_put_byte(0,0x18);
   963     049F  3018               	movlw	24
   964     04A0  00F3               	movwf	lcd_put_byte@b
   965     04A1  3000               	movlw	0
   966     04A2  120A  118A  2524  120A  118A  	fcall	_lcd_put_byte
   967     04A7                     l180:
   968     04A7  0008               	return
   969     04A8                     __end_of_lcd_ShiftLeft:
   970                           
   971                           	psect	text3
   972     059F                     __ptext3:	
   973 ;; *************** function _load_custom_characters *****************
   974 ;; Defined at:
   975 ;;		line 48 in file "BT1.c"
   976 ;; Parameters:    Size  Location     Type
   977 ;;  custom_data     1    wreg     PTR const unsigned char 
   978 ;;		 -> cgram_dat(65), 
   979 ;;  start_addres    1    6[COMMON] unsigned char 
   980 ;; Auto vars:     Size  Location     Type
   981 ;;  custom_data     1    8[COMMON] PTR const unsigned char 
   982 ;;		 -> cgram_dat(65), 
   983 ;;  i               1    9[COMMON] unsigned char 
   984 ;; Return value:  Size  Location     Type
   985 ;;                  1    wreg      void 
   986 ;; Registers used:
   987 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   988 ;; Tracked objects:
   989 ;;		On entry : 0/0
   990 ;;		On exit  : 0/0
   991 ;;		Unchanged: 0/0
   992 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   993 ;;      Params:         1       0       0       0       0
   994 ;;      Locals:         2       0       0       0       0
   995 ;;      Temps:          1       0       0       0       0
   996 ;;      Totals:         4       0       0       0       0
   997 ;;Total ram usage:        4 bytes
   998 ;; Hardware stack levels used: 1
   999 ;; Hardware stack levels required when called: 2
  1000 ;; This function calls:
  1001 ;;		_lcd_busy
  1002 ;;		_lcd_put_byte
  1003 ;; This function is called by:
  1004 ;;		_main
  1005 ;; This function uses a non-reentrant model
  1006 ;;
  1007                           
  1008     059F                     _load_custom_characters:	
  1009                           ;psect for function _load_custom_characters
  1010                           
  1011                           
  1012                           ;incstack = 0
  1013                           ; Regs used in _load_custom_characters: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cst
      +                          ack]
  1014                           ;load_custom_characters@custom_data stored from wreg
  1015     059F  00F8               	movwf	load_custom_characters@custom_data
  1016     05A0                     l1140:
  1017                           
  1018                           ;BT1.c: 49:     unsigned char i = 0;
  1019     05A0  01F9               	clrf	load_custom_characters@i
  1020     05A1                     l1142:
  1021                           
  1022                           ;BT1.c: 50:     lcd_put_byte(0, 0x40 + (start_address * 8));
  1023     05A1  0876               	movf	load_custom_characters@start_address,w
  1024     05A2  00F7               	movwf	??_load_custom_characters
  1025     05A3  3002               	movlw	2
  1026     05A4                     u635:
  1027     05A4  1003               	clrc
  1028     05A5  0DF7               	rlf	??_load_custom_characters,f
  1029     05A6  3EFF               	addlw	-1
  1030     05A7  1D03               	skipz
  1031     05A8  2DA4               	goto	u635
  1032     05A9  1003               	clrc
  1033     05AA  0D77               	rlf	??_load_custom_characters,w
  1034     05AB  3E40               	addlw	64
  1035     05AC  00F3               	movwf	lcd_put_byte@b
  1036     05AD  3000               	movlw	0
  1037     05AE  120A  118A  2524  120A  118A  	fcall	_lcd_put_byte
  1038     05B3                     l1144:	
  1039                           ;BT1.c: 51:     while(lcd_busy());
  1040                           
  1041     05B3  120A  118A  24F4  120A  118A  	fcall	_lcd_busy
  1042     05B8  3A00               	xorlw	0
  1043     05B9  1D03               	skipz
  1044     05BA  2DBC               	goto	u641
  1045     05BB  2DBD               	goto	u640
  1046     05BC                     u641:
  1047     05BC  2DB3               	goto	l1144
  1048     05BD                     u640:
  1049     05BD  2DDB               	goto	l1152
  1050     05BE                     l1146:
  1051                           
  1052                           ;BT1.c: 53:         lcd_put_byte(1, custom_data[i]);
  1053     05BE  0879               	movf	load_custom_characters@i,w
  1054     05BF  0778               	addwf	load_custom_characters@custom_data,w
  1055     05C0  0084               	movwf	4
  1056     05C1  120A  118A  2003  120A  118A  	fcall	stringdir
  1057     05C6  00F3               	movwf	lcd_put_byte@b
  1058     05C7  3001               	movlw	1
  1059     05C8  120A  118A  2524  120A  118A  	fcall	_lcd_put_byte
  1060     05CD                     l1148:	
  1061                           ;BT1.c: 54:         while(lcd_busy());
  1062                           
  1063     05CD  120A  118A  24F4  120A  118A  	fcall	_lcd_busy
  1064     05D2  3A00               	xorlw	0
  1065     05D3  1D03               	skipz
  1066     05D4  2DD6               	goto	u651
  1067     05D5  2DD7               	goto	u650
  1068     05D6                     u651:
  1069     05D6  2DCD               	goto	l1148
  1070     05D7                     u650:
  1071     05D7                     l1150:
  1072                           
  1073                           ;BT1.c: 55:         i++;
  1074     05D7  3001               	movlw	1
  1075     05D8  00FF               	movwf	btemp+1
  1076     05D9  087F               	movf	btemp+1,w
  1077     05DA  07F9               	addwf	load_custom_characters@i,f
  1078     05DB                     l1152:
  1079                           
  1080                           ;BT1.c: 52:     while(custom_data[i] != 0x99) {
  1081     05DB  0879               	movf	load_custom_characters@i,w
  1082     05DC  0778               	addwf	load_custom_characters@custom_data,w
  1083     05DD  0084               	movwf	4
  1084     05DE  120A  118A  2003  120A  118A  	fcall	stringdir
  1085     05E3  3A99               	xorlw	153
  1086     05E4  1D03               	skipz
  1087     05E5  2DE7               	goto	u661
  1088     05E6  2DE8               	goto	u660
  1089     05E7                     u661:
  1090     05E7  2DBE               	goto	l1146
  1091     05E8                     u660:
  1092     05E8                     l40:
  1093     05E8  0008               	return
  1094     05E9                     __end_of_load_custom_characters:
  1095                           
  1096                           	psect	text4
  1097     0698                     __ptext4:	
  1098 ;; *************** function _lcd_init *****************
  1099 ;; Defined at:
  1100 ;;		line 241 in file "lcd.c"
  1101 ;; Parameters:    Size  Location     Type
  1102 ;;		None
  1103 ;; Auto vars:     Size  Location     Type
  1104 ;;  i               1    0        unsigned char 
  1105 ;; Return value:  Size  Location     Type
  1106 ;;                  1    wreg      void 
  1107 ;; Registers used:
  1108 ;;		wreg, status,2, status,0, pclath, cstack
  1109 ;; Tracked objects:
  1110 ;;		On entry : 0/0
  1111 ;;		On exit  : 0/0
  1112 ;;		Unchanged: 0/0
  1113 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1114 ;;      Params:         0       0       0       0       0
  1115 ;;      Locals:         0       0       0       0       0
  1116 ;;      Temps:          2       0       0       0       0
  1117 ;;      Totals:         2       0       0       0       0
  1118 ;;Total ram usage:        2 bytes
  1119 ;; Hardware stack levels used: 1
  1120 ;; Hardware stack levels required when called: 2
  1121 ;; This function calls:
  1122 ;;		_lcd_busy
  1123 ;;		_lcd_put_byte
  1124 ;;		_lcd_put_nibble
  1125 ;; This function is called by:
  1126 ;;		_main
  1127 ;; This function uses a non-reentrant model
  1128 ;;
  1129                           
  1130     0698                     _lcd_init:	
  1131                           ;psect for function _lcd_init
  1132                           
  1133     0698                     l1200:	
  1134                           ;incstack = 0
  1135                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  1136                           
  1137                           
  1138                           ;lcd.c: 244: unsigned char i;;lcd.c: 247:  TRISD3 = 0;
  1139     0698  1683               	bsf	3,5	;RP0=1, select bank1
  1140     0699  1303               	bcf	3,6	;RP1=0, select bank1
  1141     069A  1188               	bcf	8,3	;volatile
  1142                           
  1143                           ;lcd.c: 248:  TRISD1 = 0;
  1144     069B  1088               	bcf	8,1	;volatile
  1145                           
  1146                           ;lcd.c: 249:  TRISD2 = 0;
  1147     069C  1108               	bcf	8,2	;volatile
  1148                           
  1149                           ;lcd.c: 250:  TRISD4 = 0;
  1150     069D  1208               	bcf	8,4	;volatile
  1151                           
  1152                           ;lcd.c: 251:  TRISD5 = 0;
  1153     069E  1288               	bcf	8,5	;volatile
  1154                           
  1155                           ;lcd.c: 252:  TRISD6 = 0;
  1156     069F  1308               	bcf	8,6	;volatile
  1157                           
  1158                           ;lcd.c: 253:  TRISD7 = 0;
  1159     06A0  1388               	bcf	8,7	;volatile
  1160     06A1                     l1202:
  1161                           
  1162                           ;lcd.c: 255:  _delay((unsigned long)((15)*(4000000/4000.0)));
  1163     06A1  3014               	movlw	20
  1164     06A2  00F7               	movwf	??_lcd_init+1
  1165     06A3  3079               	movlw	121
  1166     06A4  00F6               	movwf	??_lcd_init
  1167     06A5                     u877:
  1168     06A5  0BF6               	decfsz	??_lcd_init,f
  1169     06A6  2EA5               	goto	u877
  1170     06A7  0BF7               	decfsz	??_lcd_init+1,f
  1171     06A8  2EA5               	goto	u877
  1172     06A9  2EAA               	nop2
  1173     06AA                     l1204:
  1174                           
  1175                           ;lcd.c: 257:  RD1 = 0;
  1176     06AA  1283               	bcf	3,5	;RP0=0, select bank0
  1177     06AB  1303               	bcf	3,6	;RP1=0, select bank0
  1178     06AC  1088               	bcf	8,1	;volatile
  1179     06AD                     l1206:
  1180                           
  1181                           ;lcd.c: 258:  RD2 = 0;
  1182     06AD  1108               	bcf	8,2	;volatile
  1183     06AE                     l1208:
  1184                           
  1185                           ;lcd.c: 259:  RD3 = 0;
  1186     06AE  1188               	bcf	8,3	;volatile
  1187     06AF                     l1210:
  1188                           
  1189                           ;lcd.c: 261:  lcd_put_nibble(3);
  1190     06AF  3003               	movlw	3
  1191     06B0  120A  118A  255D  120A  118A  	fcall	_lcd_put_nibble
  1192     06B5                     l1212:
  1193                           
  1194                           ;lcd.c: 262:  _delay((unsigned long)((10)*(4000000/4000.0)));
  1195     06B5  300D               	movlw	13
  1196     06B6  00F7               	movwf	??_lcd_init+1
  1197     06B7  30FB               	movlw	251
  1198     06B8  00F6               	movwf	??_lcd_init
  1199     06B9                     u887:
  1200     06B9  0BF6               	decfsz	??_lcd_init,f
  1201     06BA  2EB9               	goto	u887
  1202     06BB  0BF7               	decfsz	??_lcd_init+1,f
  1203     06BC  2EB9               	goto	u887
  1204     06BD  2EBE               	nop2
  1205                           
  1206                           ;lcd.c: 263:  lcd_put_nibble(3);
  1207     06BE  3003               	movlw	3
  1208     06BF  120A  118A  255D  120A  118A  	fcall	_lcd_put_nibble
  1209     06C4                     l1214:
  1210                           
  1211                           ;lcd.c: 264:  _delay((unsigned long)((10)*(4000000/4000.0)));
  1212     06C4  300D               	movlw	13
  1213     06C5  00F7               	movwf	??_lcd_init+1
  1214     06C6  30FB               	movlw	251
  1215     06C7  00F6               	movwf	??_lcd_init
  1216     06C8                     u897:
  1217     06C8  0BF6               	decfsz	??_lcd_init,f
  1218     06C9  2EC8               	goto	u897
  1219     06CA  0BF7               	decfsz	??_lcd_init+1,f
  1220     06CB  2EC8               	goto	u897
  1221     06CC  2ECD               	nop2
  1222     06CD                     l1216:
  1223                           
  1224                           ;lcd.c: 265:  lcd_put_nibble(3);
  1225     06CD  3003               	movlw	3
  1226     06CE  120A  118A  255D  120A  118A  	fcall	_lcd_put_nibble
  1227                           
  1228                           ;lcd.c: 266:  _delay((unsigned long)((10)*(4000000/4000.0)));
  1229     06D3  300D               	movlw	13
  1230     06D4  00F7               	movwf	??_lcd_init+1
  1231     06D5  30FB               	movlw	251
  1232     06D6  00F6               	movwf	??_lcd_init
  1233     06D7                     u907:
  1234     06D7  0BF6               	decfsz	??_lcd_init,f
  1235     06D8  2ED7               	goto	u907
  1236     06D9  0BF7               	decfsz	??_lcd_init+1,f
  1237     06DA  2ED7               	goto	u907
  1238     06DB  2EDC               	nop2
  1239     06DC                     l1218:
  1240                           
  1241                           ;lcd.c: 268:  lcd_put_nibble(2);
  1242     06DC  3002               	movlw	2
  1243     06DD  120A  118A  255D  120A  118A  	fcall	_lcd_put_nibble
  1244     06E2                     l1220:	
  1245                           ;lcd.c: 269:  while(lcd_busy());
  1246                           
  1247     06E2  120A  118A  24F4  120A  118A  	fcall	_lcd_busy
  1248     06E7  3A00               	xorlw	0
  1249     06E8  1D03               	skipz
  1250     06E9  2EEB               	goto	u731
  1251     06EA  2EEC               	goto	u730
  1252     06EB                     u731:
  1253     06EB  2EE2               	goto	l1220
  1254     06EC                     u730:
  1255     06EC                     l1222:
  1256                           
  1257                           ;lcd.c: 271:  lcd_put_byte(0,0b00101100 & 0b00111000);
  1258     06EC  3028               	movlw	40
  1259     06ED  00F3               	movwf	lcd_put_byte@b
  1260     06EE  3000               	movlw	0
  1261     06EF  120A  118A  2524  120A  118A  	fcall	_lcd_put_byte
  1262     06F4                     l1224:	
  1263                           ;lcd.c: 272:  while(lcd_busy());
  1264                           
  1265     06F4  120A  118A  24F4  120A  118A  	fcall	_lcd_busy
  1266     06F9  3A00               	xorlw	0
  1267     06FA  1D03               	skipz
  1268     06FB  2EFD               	goto	u741
  1269     06FC  2EFE               	goto	u740
  1270     06FD                     u741:
  1271     06FD  2EF4               	goto	l1224
  1272     06FE                     u740:
  1273     06FE                     l1226:
  1274                           
  1275                           ;lcd.c: 274:  lcd_put_byte(0,0b00001111 & 0b00001101 & 0b00001110);
  1276     06FE  300C               	movlw	12
  1277     06FF  00F3               	movwf	lcd_put_byte@b
  1278     0700  3000               	movlw	0
  1279     0701  120A  118A  2524  120A  118A  	fcall	_lcd_put_byte
  1280     0706                     l1228:	
  1281                           ;lcd.c: 275:  while(lcd_busy());
  1282                           
  1283     0706  120A  118A  24F4  120A  118A  	fcall	_lcd_busy
  1284     070B  3A00               	xorlw	0
  1285     070C  1D03               	skipz
  1286     070D  2F0F               	goto	u751
  1287     070E  2F10               	goto	u750
  1288     070F                     u751:
  1289     070F  2F06               	goto	l1228
  1290     0710                     u750:
  1291     0710                     l1230:
  1292                           
  1293                           ;lcd.c: 277:  lcd_put_byte(0,0x01);
  1294     0710  01F3               	clrf	lcd_put_byte@b
  1295     0711  0AF3               	incf	lcd_put_byte@b,f
  1296     0712  3000               	movlw	0
  1297     0713  120A  118A  2524  120A  118A  	fcall	_lcd_put_byte
  1298     0718                     l1232:	
  1299                           ;lcd.c: 278:  while(lcd_busy());
  1300                           
  1301     0718  120A  118A  24F4  120A  118A  	fcall	_lcd_busy
  1302     071D  3A00               	xorlw	0
  1303     071E  1D03               	skipz
  1304     071F  2F21               	goto	u761
  1305     0720  2F22               	goto	u760
  1306     0721                     u761:
  1307     0721  2F18               	goto	l1232
  1308     0722                     u760:
  1309     0722                     l1234:
  1310                           
  1311                           ;lcd.c: 280:  lcd_put_byte(0,0b00000110);
  1312     0722  3006               	movlw	6
  1313     0723  00F3               	movwf	lcd_put_byte@b
  1314     0724  3000               	movlw	0
  1315     0725  120A  118A  2524  120A  118A  	fcall	_lcd_put_byte
  1316     072A                     l1236:	
  1317                           ;lcd.c: 281:  while(lcd_busy());
  1318                           
  1319     072A  120A  118A  24F4  120A  118A  	fcall	_lcd_busy
  1320     072F  3A00               	xorlw	0
  1321     0730  1D03               	skipz
  1322     0731  2F33               	goto	u771
  1323     0732  2F34               	goto	u770
  1324     0733                     u771:
  1325     0733  2F2A               	goto	l1236
  1326     0734                     u770:
  1327     0734                     l177:
  1328     0734  0008               	return
  1329     0735                     __end_of_lcd_init:
  1330                           
  1331                           	psect	text5
  1332     0735                     __ptext5:	
  1333 ;; *************** function _chaychu_2line *****************
  1334 ;; Defined at:
  1335 ;;		line 82 in file "BT1.c"
  1336 ;; Parameters:    Size  Location     Type
  1337 ;;  line_data1      1    wreg     PTR const unsigned char 
  1338 ;;		 -> dat_line1(14), 
  1339 ;;  line_data2      1    0[BANK0 ] PTR const unsigned char 
  1340 ;;		 -> dat_line3(15), 
  1341 ;;  line_size1      2    1[BANK0 ] int 
  1342 ;;  line_size2      2    3[BANK0 ] int 
  1343 ;;  line_number1    2    5[BANK0 ] int 
  1344 ;;  line_number2    2    7[BANK0 ] int 
  1345 ;; Auto vars:     Size  Location     Type
  1346 ;;  line_data1      1    9[BANK0 ] PTR const unsigned char 
  1347 ;;		 -> dat_line1(14), 
  1348 ;;  j               2   12[BANK0 ] int 
  1349 ;;  j               2   10[BANK0 ] int 
  1350 ;;  k               2   14[BANK0 ] int 
  1351 ;; Return value:  Size  Location     Type
  1352 ;;                  1    wreg      void 
  1353 ;; Registers used:
  1354 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1355 ;; Tracked objects:
  1356 ;;		On entry : 0/0
  1357 ;;		On exit  : 0/0
  1358 ;;		Unchanged: 0/0
  1359 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1360 ;;      Params:         0       9       0       0       0
  1361 ;;      Locals:         0       7       0       0       0
  1362 ;;      Temps:          4       0       0       0       0
  1363 ;;      Totals:         4      16       0       0       0
  1364 ;;Total ram usage:       20 bytes
  1365 ;; Hardware stack levels used: 1
  1366 ;; Hardware stack levels required when called: 4
  1367 ;; This function calls:
  1368 ;;		_lcd_gotoxy
  1369 ;;		_lcd_putc
  1370 ;; This function is called by:
  1371 ;;		_main
  1372 ;; This function uses a non-reentrant model
  1373 ;;
  1374                           
  1375     0735                     _chaychu_2line:	
  1376                           ;psect for function _chaychu_2line
  1377                           
  1378                           
  1379                           ;incstack = 0
  1380                           ; Regs used in _chaychu_2line: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1381                           ;chaychu_2line@line_data1 stored from wreg
  1382     0735  1283               	bcf	3,5	;RP0=0, select bank0
  1383     0736  1303               	bcf	3,6	;RP1=0, select bank0
  1384     0737  00A9               	movwf	chaychu_2line@line_data1
  1385     0738                     l1164:
  1386                           
  1387                           ;BT1.c: 82: void chaychu_2line(const char *line_data1, const char *line_data2, int line_
      +                          size1, int line_size2, int line_number1, int line_number2);BT1.c: 83: {;BT1.c: 84:     f
      +                          or(int k = 15; k >= 0; k--) {
  1388     0738  300F               	movlw	15
  1389     0739  00AE               	movwf	chaychu_2line@k
  1390     073A  3000               	movlw	0
  1391     073B  00AF               	movwf	chaychu_2line@k+1
  1392     073C                     l1168:
  1393                           
  1394                           ;BT1.c: 85:         lcd_gotoxy(k, line_number1);
  1395     073C  0825               	movf	chaychu_2line@line_number1,w
  1396     073D  00F6               	movwf	lcd_gotoxy@row
  1397     073E  082E               	movf	chaychu_2line@k,w
  1398     073F  120A  118A  24A8  120A  118A  	fcall	_lcd_gotoxy
  1399     0744                     l1170:
  1400                           
  1401                           ;BT1.c: 87:         for(int j = 0; j <= 15 - k; j++) {
  1402     0744  1283               	bcf	3,5	;RP0=0, select bank0
  1403     0745  1303               	bcf	3,6	;RP1=0, select bank0
  1404     0746  01AA               	clrf	chaychu_2line@j
  1405     0747  01AB               	clrf	chaychu_2line@j+1
  1406     0748  2F77               	goto	l1180
  1407     0749                     l1172:
  1408                           
  1409                           ;BT1.c: 88:             if(j < line_size1) {
  1410     0749  1283               	bcf	3,5	;RP0=0, select bank0
  1411     074A  1303               	bcf	3,6	;RP1=0, select bank0
  1412     074B  082B               	movf	chaychu_2line@j+1,w
  1413     074C  3A80               	xorlw	128
  1414     074D  00FA               	movwf	??_chaychu_2line
  1415     074E  0822               	movf	chaychu_2line@line_size1+1,w
  1416     074F  3A80               	xorlw	128
  1417     0750  027A               	subwf	??_chaychu_2line,w
  1418     0751  1D03               	skipz
  1419     0752  2F55               	goto	u685
  1420     0753  0821               	movf	chaychu_2line@line_size1,w
  1421     0754  022A               	subwf	chaychu_2line@j,w
  1422     0755                     u685:
  1423     0755  1803               	skipnc
  1424     0756  2F58               	goto	u681
  1425     0757  2F59               	goto	u680
  1426     0758                     u681:
  1427     0758  2F69               	goto	l1176
  1428     0759                     u680:
  1429     0759                     l1174:
  1430                           
  1431                           ;BT1.c: 89:                 lcd_putc(line_data1[j]);
  1432     0759  1283               	bcf	3,5	;RP0=0, select bank0
  1433     075A  1303               	bcf	3,6	;RP1=0, select bank0
  1434     075B  082A               	movf	chaychu_2line@j,w
  1435     075C  0729               	addwf	chaychu_2line@line_data1,w
  1436     075D  0084               	movwf	4
  1437     075E  120A  118A  2003  120A  118A  	fcall	stringdir
  1438     0763  120A  118A  25E9  120A  118A  	fcall	_lcd_putc
  1439                           
  1440                           ;BT1.c: 90:             } else {
  1441     0768  2F6F               	goto	l1178
  1442     0769                     l1176:
  1443                           
  1444                           ;BT1.c: 91:                 lcd_putc(' ');
  1445     0769  3020               	movlw	32
  1446     076A  120A  118A  25E9  120A  118A  	fcall	_lcd_putc
  1447     076F                     l1178:
  1448                           
  1449                           ;BT1.c: 93:         }
  1450     076F  3001               	movlw	1
  1451     0770  1283               	bcf	3,5	;RP0=0, select bank0
  1452     0771  1303               	bcf	3,6	;RP1=0, select bank0
  1453     0772  07AA               	addwf	chaychu_2line@j,f
  1454     0773  1803               	skipnc
  1455     0774  0AAB               	incf	chaychu_2line@j+1,f
  1456     0775  3000               	movlw	0
  1457     0776  07AB               	addwf	chaychu_2line@j+1,f
  1458     0777                     l1180:
  1459     0777  300F               	movlw	15
  1460     0778  00FA               	movwf	??_chaychu_2line
  1461     0779  082E               	movf	chaychu_2line@k,w
  1462     077A  027A               	subwf	??_chaychu_2line,w
  1463     077B  00FB               	movwf	??_chaychu_2line+1
  1464     077C  092F               	comf	chaychu_2line@k+1,w
  1465     077D  1803               	skipnc
  1466     077E  3E01               	addlw	1
  1467     077F  00FC               	movwf	??_chaychu_2line+2
  1468     0780  087C               	movf	??_chaychu_2line+2,w
  1469     0781  3A80               	xorlw	128
  1470     0782  00FD               	movwf	??_chaychu_2line+3
  1471     0783  082B               	movf	chaychu_2line@j+1,w
  1472     0784  3A80               	xorlw	128
  1473     0785  027D               	subwf	??_chaychu_2line+3,w
  1474     0786  1D03               	skipz
  1475     0787  2F8A               	goto	u695
  1476     0788  082A               	movf	chaychu_2line@j,w
  1477     0789  027B               	subwf	??_chaychu_2line+1,w
  1478     078A                     u695:
  1479     078A  1803               	skipnc
  1480     078B  2F8D               	goto	u691
  1481     078C  2F8E               	goto	u690
  1482     078D                     u691:
  1483     078D  2F49               	goto	l1172
  1484     078E                     u690:
  1485     078E                     l1182:
  1486                           
  1487                           ;BT1.c: 95:         lcd_gotoxy(k, line_number2);
  1488     078E  1283               	bcf	3,5	;RP0=0, select bank0
  1489     078F  1303               	bcf	3,6	;RP1=0, select bank0
  1490     0790  0827               	movf	chaychu_2line@line_number2,w
  1491     0791  00F6               	movwf	lcd_gotoxy@row
  1492     0792  082E               	movf	chaychu_2line@k,w
  1493     0793  120A  118A  24A8  120A  118A  	fcall	_lcd_gotoxy
  1494     0798                     l1184:
  1495                           
  1496                           ;BT1.c: 97:         for(int j = 0; j <= 15 - k; j++) {
  1497     0798  1283               	bcf	3,5	;RP0=0, select bank0
  1498     0799  1303               	bcf	3,6	;RP1=0, select bank0
  1499     079A  01AC               	clrf	chaychu_2line@j_86
  1500     079B  01AD               	clrf	chaychu_2line@j_86+1
  1501     079C  2FCB               	goto	l1194
  1502     079D                     l1186:
  1503                           
  1504                           ;BT1.c: 98:             if(j < line_size2) {
  1505     079D  1283               	bcf	3,5	;RP0=0, select bank0
  1506     079E  1303               	bcf	3,6	;RP1=0, select bank0
  1507     079F  082D               	movf	chaychu_2line@j_86+1,w
  1508     07A0  3A80               	xorlw	128
  1509     07A1  00FA               	movwf	??_chaychu_2line
  1510     07A2  0824               	movf	chaychu_2line@line_size2+1,w
  1511     07A3  3A80               	xorlw	128
  1512     07A4  027A               	subwf	??_chaychu_2line,w
  1513     07A5  1D03               	skipz
  1514     07A6  2FA9               	goto	u705
  1515     07A7  0823               	movf	chaychu_2line@line_size2,w
  1516     07A8  022C               	subwf	chaychu_2line@j_86,w
  1517     07A9                     u705:
  1518     07A9  1803               	skipnc
  1519     07AA  2FAC               	goto	u701
  1520     07AB  2FAD               	goto	u700
  1521     07AC                     u701:
  1522     07AC  2FBD               	goto	l1190
  1523     07AD                     u700:
  1524     07AD                     l1188:
  1525                           
  1526                           ;BT1.c: 99:                 lcd_putc(line_data2[j]);
  1527     07AD  1283               	bcf	3,5	;RP0=0, select bank0
  1528     07AE  1303               	bcf	3,6	;RP1=0, select bank0
  1529     07AF  082C               	movf	chaychu_2line@j_86,w
  1530     07B0  0720               	addwf	chaychu_2line@line_data2,w
  1531     07B1  0084               	movwf	4
  1532     07B2  120A  118A  2003  120A  118A  	fcall	stringdir
  1533     07B7  120A  118A  25E9  120A  118A  	fcall	_lcd_putc
  1534                           
  1535                           ;BT1.c: 100:             } else {
  1536     07BC  2FC3               	goto	l1192
  1537     07BD                     l1190:
  1538                           
  1539                           ;BT1.c: 101:                 lcd_putc(' ');
  1540     07BD  3020               	movlw	32
  1541     07BE  120A  118A  25E9  120A  118A  	fcall	_lcd_putc
  1542     07C3                     l1192:
  1543                           
  1544                           ;BT1.c: 103:         }
  1545     07C3  3001               	movlw	1
  1546     07C4  1283               	bcf	3,5	;RP0=0, select bank0
  1547     07C5  1303               	bcf	3,6	;RP1=0, select bank0
  1548     07C6  07AC               	addwf	chaychu_2line@j_86,f
  1549     07C7  1803               	skipnc
  1550     07C8  0AAD               	incf	chaychu_2line@j_86+1,f
  1551     07C9  3000               	movlw	0
  1552     07CA  07AD               	addwf	chaychu_2line@j_86+1,f
  1553     07CB                     l1194:
  1554     07CB  300F               	movlw	15
  1555     07CC  00FA               	movwf	??_chaychu_2line
  1556     07CD  082E               	movf	chaychu_2line@k,w
  1557     07CE  027A               	subwf	??_chaychu_2line,w
  1558     07CF  00FB               	movwf	??_chaychu_2line+1
  1559     07D0  092F               	comf	chaychu_2line@k+1,w
  1560     07D1  1803               	skipnc
  1561     07D2  3E01               	addlw	1
  1562     07D3  00FC               	movwf	??_chaychu_2line+2
  1563     07D4  087C               	movf	??_chaychu_2line+2,w
  1564     07D5  3A80               	xorlw	128
  1565     07D6  00FD               	movwf	??_chaychu_2line+3
  1566     07D7  082D               	movf	chaychu_2line@j_86+1,w
  1567     07D8  3A80               	xorlw	128
  1568     07D9  027D               	subwf	??_chaychu_2line+3,w
  1569     07DA  1D03               	skipz
  1570     07DB  2FDE               	goto	u715
  1571     07DC  082C               	movf	chaychu_2line@j_86,w
  1572     07DD  027B               	subwf	??_chaychu_2line+1,w
  1573     07DE                     u715:
  1574     07DE  1803               	skipnc
  1575     07DF  2FE1               	goto	u711
  1576     07E0  2FE2               	goto	u710
  1577     07E1                     u711:
  1578     07E1  2F9D               	goto	l1186
  1579     07E2                     u710:
  1580     07E2                     l1196:
  1581                           
  1582                           ;BT1.c: 104:         _delay((unsigned long)((200)*(4000000/4000.0)));
  1583     07E2  3002               	movlw	2
  1584     07E3  00FC               	movwf	??_chaychu_2line+2
  1585     07E4  3004               	movlw	4
  1586     07E5  00FB               	movwf	??_chaychu_2line+1
  1587     07E6  30BA               	movlw	186
  1588     07E7  00FA               	movwf	??_chaychu_2line
  1589     07E8                     u917:
  1590     07E8  0BFA               	decfsz	??_chaychu_2line,f
  1591     07E9  2FE8               	goto	u917
  1592     07EA  0BFB               	decfsz	??_chaychu_2line+1,f
  1593     07EB  2FE8               	goto	u917
  1594     07EC  0BFC               	decfsz	??_chaychu_2line+2,f
  1595     07ED  2FE8               	goto	u917
  1596     07EE  0000               	nop
  1597                           
  1598                           ;BT1.c: 105:     }
  1599     07EF  30FF               	movlw	255
  1600     07F0  1283               	bcf	3,5	;RP0=0, select bank0
  1601     07F1  1303               	bcf	3,6	;RP1=0, select bank0
  1602     07F2  07AE               	addwf	chaychu_2line@k,f
  1603     07F3  1803               	skipnc
  1604     07F4  0AAF               	incf	chaychu_2line@k+1,f
  1605     07F5  30FF               	movlw	255
  1606     07F6  07AF               	addwf	chaychu_2line@k+1,f
  1607     07F7                     l1198:
  1608     07F7  1FAF               	btfss	chaychu_2line@k+1,7
  1609     07F8  2FFA               	goto	u721
  1610     07F9  2FFB               	goto	u720
  1611     07FA                     u721:
  1612     07FA  2F3C               	goto	l1168
  1613     07FB                     u720:
  1614     07FB                     l71:
  1615     07FB  0008               	return
  1616     07FC                     __end_of_chaychu_2line:
  1617                           
  1618                           	psect	text6
  1619     05E9                     __ptext6:	
  1620 ;; *************** function _lcd_putc *****************
  1621 ;; Defined at:
  1622 ;;		line 190 in file "lcd.c"
  1623 ;; Parameters:    Size  Location     Type
  1624 ;;  c               1    wreg     unsigned char 
  1625 ;; Auto vars:     Size  Location     Type
  1626 ;;  c               1    9[COMMON] unsigned char 
  1627 ;; Return value:  Size  Location     Type
  1628 ;;                  1    wreg      void 
  1629 ;; Registers used:
  1630 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1631 ;; Tracked objects:
  1632 ;;		On entry : 0/0
  1633 ;;		On exit  : 0/0
  1634 ;;		Unchanged: 0/0
  1635 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1636 ;;      Params:         0       0       0       0       0
  1637 ;;      Locals:         1       0       0       0       0
  1638 ;;      Temps:          0       0       0       0       0
  1639 ;;      Totals:         1       0       0       0       0
  1640 ;;Total ram usage:        1 bytes
  1641 ;; Hardware stack levels used: 1
  1642 ;; Hardware stack levels required when called: 3
  1643 ;; This function calls:
  1644 ;;		_lcd_busy
  1645 ;;		_lcd_gotoxy
  1646 ;;		_lcd_put_byte
  1647 ;; This function is called by:
  1648 ;;		_chaychu_2line
  1649 ;;		_main
  1650 ;;		_chaychu_1line
  1651 ;;		_lcd_puts
  1652 ;;		_lcd_String_Delay
  1653 ;;		_putch
  1654 ;; This function uses a non-reentrant model
  1655 ;;
  1656                           
  1657     05E9                     _lcd_putc:	
  1658                           ;psect for function _lcd_putc
  1659                           
  1660                           
  1661                           ;incstack = 0
  1662                           ; Regs used in _lcd_putc: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1663                           ;lcd_putc@c stored from wreg
  1664     05E9  00F9               	movwf	lcd_putc@c
  1665     05EA                     l1122:
  1666                           
  1667                           ;lcd.c: 190: void lcd_putc(char c);lcd.c: 191: {;lcd.c: 195:  switch(c)
  1668     05EA  2E2D               	goto	l1138
  1669     05EB                     l1124:
  1670                           
  1671                           ;lcd.c: 198:    lcd_put_byte(0,1);
  1672     05EB  01F3               	clrf	lcd_put_byte@b
  1673     05EC  0AF3               	incf	lcd_put_byte@b,f
  1674     05ED  3000               	movlw	0
  1675     05EE  120A  118A  2524  120A  118A  	fcall	_lcd_put_byte
  1676     05F3                     l1126:	
  1677                           ;lcd.c: 199:    while(lcd_busy());
  1678                           
  1679     05F3  120A  118A  24F4  120A  118A  	fcall	_lcd_busy
  1680     05F8  3A00               	xorlw	0
  1681     05F9  1D03               	skipz
  1682     05FA  2DFC               	goto	u601
  1683     05FB  2DFD               	goto	u600
  1684     05FC                     u601:
  1685     05FC  2DF3               	goto	l1126
  1686     05FD                     u600:
  1687     05FD  2E38               	goto	l153
  1688     05FE                     l1128:
  1689                           
  1690                           ;lcd.c: 202:    lcd_gotoxy(0,1);
  1691     05FE  01F6               	clrf	lcd_gotoxy@row
  1692     05FF  0AF6               	incf	lcd_gotoxy@row,f
  1693     0600  3000               	movlw	0
  1694     0601  120A  118A  24A8  120A  118A  	fcall	_lcd_gotoxy
  1695                           
  1696                           ;lcd.c: 203:    break;
  1697     0606  2E38               	goto	l153
  1698     0607                     l1130:
  1699                           
  1700                           ;lcd.c: 205:    lcd_put_byte(0,0x10);
  1701     0607  3010               	movlw	16
  1702     0608  00F3               	movwf	lcd_put_byte@b
  1703     0609  3000               	movlw	0
  1704     060A  120A  118A  2524  120A  118A  	fcall	_lcd_put_byte
  1705     060F                     l1132:	
  1706                           ;lcd.c: 206:    while(lcd_busy());
  1707                           
  1708     060F  120A  118A  24F4  120A  118A  	fcall	_lcd_busy
  1709     0614  3A00               	xorlw	0
  1710     0615  1D03               	skipz
  1711     0616  2E18               	goto	u611
  1712     0617  2E19               	goto	u610
  1713     0618                     u611:
  1714     0618  2E0F               	goto	l1132
  1715     0619                     u610:
  1716     0619  2E38               	goto	l153
  1717     061A                     l1134:
  1718                           
  1719                           ;lcd.c: 210:     {;lcd.c: 211:     lcd_put_byte(1,c);
  1720     061A  0879               	movf	lcd_putc@c,w
  1721     061B  00F3               	movwf	lcd_put_byte@b
  1722     061C  3001               	movlw	1
  1723     061D  120A  118A  2524  120A  118A  	fcall	_lcd_put_byte
  1724     0622                     l1136:	
  1725                           ;lcd.c: 212:     while(lcd_busy());
  1726                           
  1727     0622  120A  118A  24F4  120A  118A  	fcall	_lcd_busy
  1728     0627  3A00               	xorlw	0
  1729     0628  1D03               	skipz
  1730     0629  2E2B               	goto	u621
  1731     062A  2E2C               	goto	u620
  1732     062B                     u621:
  1733     062B  2E22               	goto	l1136
  1734     062C                     u620:
  1735     062C  2E38               	goto	l153
  1736     062D                     l1138:
  1737     062D  0879               	movf	lcd_putc@c,w
  1738                           
  1739                           ; Switch size 1, requested type "simple"
  1740                           ; Number of cases is 3, Range of values is 8 to 12
  1741                           ; switch strategies available:
  1742                           ; Name         Instructions Cycles
  1743                           ; simple_byte           10     6 (average)
  1744                           ; direct_byte           26    11 (fixed)
  1745                           ; jumptable            263     9 (fixed)
  1746                           ;	Chosen strategy is simple_byte
  1747     062E  3A08               	xorlw	8	; case 8
  1748     062F  1903               	skipnz
  1749     0630  2E07               	goto	l1130
  1750     0631  3A02               	xorlw	2	; case 10
  1751     0632  1903               	skipnz
  1752     0633  2DFE               	goto	l1128
  1753     0634  3A06               	xorlw	6	; case 12
  1754     0635  1903               	skipnz
  1755     0636  2DEB               	goto	l1124
  1756     0637  2E1A               	goto	l1134
  1757     0638                     l153:
  1758     0638  0008               	return
  1759     0639                     __end_of_lcd_putc:
  1760                           
  1761                           	psect	text7
  1762     04A8                     __ptext7:	
  1763 ;; *************** function _lcd_gotoxy *****************
  1764 ;; Defined at:
  1765 ;;		line 167 in file "lcd.c"
  1766 ;; Parameters:    Size  Location     Type
  1767 ;;  col             1    wreg     unsigned char 
  1768 ;;  row             1    6[COMMON] unsigned char 
  1769 ;; Auto vars:     Size  Location     Type
  1770 ;;  col             1    7[COMMON] unsigned char 
  1771 ;;  address         1    8[COMMON] unsigned char 
  1772 ;; Return value:  Size  Location     Type
  1773 ;;                  1    wreg      void 
  1774 ;; Registers used:
  1775 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1776 ;; Tracked objects:
  1777 ;;		On entry : 0/0
  1778 ;;		On exit  : 0/0
  1779 ;;		Unchanged: 0/0
  1780 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1781 ;;      Params:         1       0       0       0       0
  1782 ;;      Locals:         2       0       0       0       0
  1783 ;;      Temps:          0       0       0       0       0
  1784 ;;      Totals:         3       0       0       0       0
  1785 ;;Total ram usage:        3 bytes
  1786 ;; Hardware stack levels used: 1
  1787 ;; Hardware stack levels required when called: 2
  1788 ;; This function calls:
  1789 ;;		_lcd_busy
  1790 ;;		_lcd_put_byte
  1791 ;; This function is called by:
  1792 ;;		_chaychu_2line
  1793 ;;		_lcd_putc
  1794 ;;		_chaychu_1line
  1795 ;; This function uses a non-reentrant model
  1796 ;;
  1797                           
  1798     04A8                     _lcd_gotoxy:	
  1799                           ;psect for function _lcd_gotoxy
  1800                           
  1801                           
  1802                           ;incstack = 0
  1803                           ; Regs used in _lcd_gotoxy: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1804                           ;lcd_gotoxy@col stored from wreg
  1805     04A8  00F7               	movwf	lcd_gotoxy@col
  1806     04A9                     l1108:
  1807                           
  1808                           ;lcd.c: 167: void lcd_gotoxy(unsigned char col, unsigned char row);lcd.c: 168: {;lcd.c: 
      +                          170:  unsigned char address;;lcd.c: 173:  if(row!=0)
  1809     04A9  0876               	movf	lcd_gotoxy@row,w
  1810     04AA  1903               	btfsc	3,2
  1811     04AB  2CAD               	goto	u581
  1812     04AC  2CAE               	goto	u580
  1813     04AD                     u581:
  1814     04AD  2CB1               	goto	l1112
  1815     04AE                     u580:
  1816     04AE                     l1110:
  1817                           
  1818                           ;lcd.c: 174:   address=0x40;
  1819     04AE  3040               	movlw	64
  1820     04AF  00F8               	movwf	lcd_gotoxy@address
  1821     04B0  2CB2               	goto	l1114
  1822     04B1                     l1112:
  1823                           
  1824                           ;lcd.c: 176:   address=0;
  1825     04B1  01F8               	clrf	lcd_gotoxy@address
  1826     04B2                     l1114:
  1827                           
  1828                           ;lcd.c: 178:  address += col;
  1829     04B2  0877               	movf	lcd_gotoxy@col,w
  1830     04B3  00FF               	movwf	btemp+1
  1831     04B4  087F               	movf	btemp+1,w
  1832     04B5  07F8               	addwf	lcd_gotoxy@address,f
  1833     04B6                     l1116:
  1834                           
  1835                           ;lcd.c: 180:  lcd_put_byte(0,0x80|address);
  1836     04B6  0878               	movf	lcd_gotoxy@address,w
  1837     04B7  3880               	iorlw	128
  1838     04B8  00F3               	movwf	lcd_put_byte@b
  1839     04B9  3000               	movlw	0
  1840     04BA  120A  118A  2524  120A  118A  	fcall	_lcd_put_byte
  1841     04BF                     l1118:	
  1842                           ;lcd.c: 181:  while(lcd_busy());
  1843                           
  1844     04BF  120A  118A  24F4  120A  118A  	fcall	_lcd_busy
  1845     04C4  3A00               	xorlw	0
  1846     04C5  1D03               	skipz
  1847     04C6  2CC8               	goto	u591
  1848     04C7  2CC9               	goto	u590
  1849     04C8                     u591:
  1850     04C8  2CBF               	goto	l1118
  1851     04C9                     u590:
  1852     04C9                     l135:
  1853     04C9  0008               	return
  1854     04CA                     __end_of_lcd_gotoxy:
  1855                           
  1856                           	psect	text8
  1857     0524                     __ptext8:	
  1858 ;; *************** function _lcd_put_byte *****************
  1859 ;; Defined at:
  1860 ;;		line 134 in file "lcd.c"
  1861 ;; Parameters:    Size  Location     Type
  1862 ;;  rs              1    wreg     unsigned char 
  1863 ;;  b               1    3[COMMON] unsigned char 
  1864 ;; Auto vars:     Size  Location     Type
  1865 ;;  rs              1    5[COMMON] unsigned char 
  1866 ;; Return value:  Size  Location     Type
  1867 ;;                  1    wreg      void 
  1868 ;; Registers used:
  1869 ;;		wreg, status,2, status,0, pclath, cstack
  1870 ;; Tracked objects:
  1871 ;;		On entry : 0/0
  1872 ;;		On exit  : 0/0
  1873 ;;		Unchanged: 0/0
  1874 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1875 ;;      Params:         1       0       0       0       0
  1876 ;;      Locals:         1       0       0       0       0
  1877 ;;      Temps:          1       0       0       0       0
  1878 ;;      Totals:         3       0       0       0       0
  1879 ;;Total ram usage:        3 bytes
  1880 ;; Hardware stack levels used: 1
  1881 ;; Hardware stack levels required when called: 1
  1882 ;; This function calls:
  1883 ;;		_lcd_put_nibble
  1884 ;; This function is called by:
  1885 ;;		_load_custom_characters
  1886 ;;		_lcd_gotoxy
  1887 ;;		_lcd_putc
  1888 ;;		_lcd_init
  1889 ;;		_lcd_ShiftLeft
  1890 ;;		_lcd_ShiftRight
  1891 ;; This function uses a non-reentrant model
  1892 ;;
  1893                           
  1894     0524                     _lcd_put_byte:	
  1895                           ;psect for function _lcd_put_byte
  1896                           
  1897                           
  1898                           ;incstack = 0
  1899                           ; Regs used in _lcd_put_byte: [wreg+status,2+status,0+pclath+cstack]
  1900                           ;lcd_put_byte@rs stored from wreg
  1901     0524  00F5               	movwf	lcd_put_byte@rs
  1902     0525                     l1070:
  1903                           
  1904                           ;lcd.c: 134: void lcd_put_byte(unsigned char rs, unsigned char b);lcd.c: 135: {;lcd.c: 1
      +                          39:  TRISD4 = 0;
  1905     0525  1683               	bsf	3,5	;RP0=1, select bank1
  1906     0526  1303               	bcf	3,6	;RP1=0, select bank1
  1907     0527  1208               	bcf	8,4	;volatile
  1908                           
  1909                           ;lcd.c: 140:  TRISD5 = 0;
  1910     0528  1288               	bcf	8,5	;volatile
  1911                           
  1912                           ;lcd.c: 141:  TRISD6 = 0;
  1913     0529  1308               	bcf	8,6	;volatile
  1914                           
  1915                           ;lcd.c: 142:  TRISD7 = 0;
  1916     052A  1388               	bcf	8,7	;volatile
  1917     052B                     l1072:
  1918                           
  1919                           ;lcd.c: 144:  if(rs)
  1920     052B  0875               	movf	lcd_put_byte@rs,w
  1921     052C  1903               	btfsc	3,2
  1922     052D  2D2F               	goto	u561
  1923     052E  2D30               	goto	u560
  1924     052F                     u561:
  1925     052F  2D34               	goto	l125
  1926     0530                     u560:
  1927     0530                     l1074:
  1928                           
  1929                           ;lcd.c: 145:   RD1 = 1;
  1930     0530  1283               	bcf	3,5	;RP0=0, select bank0
  1931     0531  1303               	bcf	3,6	;RP1=0, select bank0
  1932     0532  1488               	bsf	8,1	;volatile
  1933     0533  2D37               	goto	l1076
  1934     0534                     l125:	
  1935                           ;lcd.c: 146:  else
  1936                           
  1937                           
  1938                           ;lcd.c: 147:   RD1 = 0;
  1939     0534  1283               	bcf	3,5	;RP0=0, select bank0
  1940     0535  1303               	bcf	3,6	;RP1=0, select bank0
  1941     0536  1088               	bcf	8,1	;volatile
  1942     0537                     l1076:
  1943                           
  1944                           ;lcd.c: 148:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  1945     0537  3006               	movlw	6
  1946     0538  00F4               	movwf	??_lcd_put_byte
  1947     0539                     u927:
  1948     0539  0BF4               	decfsz	??_lcd_put_byte,f
  1949     053A  2D39               	goto	u927
  1950     053B  0000               	nop
  1951     053C                     l1078:
  1952                           
  1953                           ;lcd.c: 150:  RD2 = 0;
  1954     053C  1283               	bcf	3,5	;RP0=0, select bank0
  1955     053D  1303               	bcf	3,6	;RP1=0, select bank0
  1956     053E  1108               	bcf	8,2	;volatile
  1957                           
  1958                           ;lcd.c: 151:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  1959     053F  3006               	movlw	6
  1960     0540  00F4               	movwf	??_lcd_put_byte
  1961     0541                     u937:
  1962     0541  0BF4               	decfsz	??_lcd_put_byte,f
  1963     0542  2D41               	goto	u937
  1964     0543  0000               	nop
  1965     0544                     l1080:
  1966                           
  1967                           ;lcd.c: 153:  RD3 = 0;
  1968     0544  1283               	bcf	3,5	;RP0=0, select bank0
  1969     0545  1303               	bcf	3,6	;RP1=0, select bank0
  1970     0546  1188               	bcf	8,3	;volatile
  1971     0547                     l1082:
  1972                           
  1973                           ;lcd.c: 155:  lcd_put_nibble(b >> 4);
  1974     0547  0873               	movf	lcd_put_byte@b,w
  1975     0548  00F4               	movwf	??_lcd_put_byte
  1976     0549  3004               	movlw	4
  1977     054A                     u575:
  1978     054A  1003               	clrc
  1979     054B  0CF4               	rrf	??_lcd_put_byte,f
  1980     054C  3EFF               	addlw	-1
  1981     054D  1D03               	skipz
  1982     054E  2D4A               	goto	u575
  1983     054F  0874               	movf	??_lcd_put_byte,w
  1984     0550  120A  118A  255D  120A  118A  	fcall	_lcd_put_nibble
  1985     0555                     l1084:
  1986                           
  1987                           ;lcd.c: 157:  lcd_put_nibble(b & 0xf);
  1988     0555  0873               	movf	lcd_put_byte@b,w
  1989     0556  390F               	andlw	15
  1990     0557  120A  118A  255D  120A  118A  	fcall	_lcd_put_nibble
  1991     055C                     l127:
  1992     055C  0008               	return
  1993     055D                     __end_of_lcd_put_byte:
  1994                           
  1995                           	psect	text9
  1996     055D                     __ptext9:	
  1997 ;; *************** function _lcd_put_nibble *****************
  1998 ;; Defined at:
  1999 ;;		line 103 in file "lcd.c"
  2000 ;; Parameters:    Size  Location     Type
  2001 ;;  b               1    wreg     unsigned char 
  2002 ;; Auto vars:     Size  Location     Type
  2003 ;;  b               1    1[COMMON] unsigned char 
  2004 ;;  temp            1    2[COMMON] struct _BYTE_VAL
  2005 ;; Return value:  Size  Location     Type
  2006 ;;                  1    wreg      void 
  2007 ;; Registers used:
  2008 ;;		wreg
  2009 ;; Tracked objects:
  2010 ;;		On entry : 0/0
  2011 ;;		On exit  : 0/0
  2012 ;;		Unchanged: 0/0
  2013 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2014 ;;      Params:         0       0       0       0       0
  2015 ;;      Locals:         2       0       0       0       0
  2016 ;;      Temps:          1       0       0       0       0
  2017 ;;      Totals:         3       0       0       0       0
  2018 ;;Total ram usage:        3 bytes
  2019 ;; Hardware stack levels used: 1
  2020 ;; This function calls:
  2021 ;;		Nothing
  2022 ;; This function is called by:
  2023 ;;		_lcd_put_byte
  2024 ;;		_lcd_init
  2025 ;; This function uses a non-reentrant model
  2026 ;;
  2027                           
  2028     055D                     _lcd_put_nibble:	
  2029                           ;psect for function _lcd_put_nibble
  2030                           
  2031                           
  2032                           ;incstack = 0
  2033                           ; Regs used in _lcd_put_nibble: [wreg]
  2034                           ;lcd_put_nibble@b stored from wreg
  2035     055D  00F1               	movwf	lcd_put_nibble@b
  2036     055E                     l1054:
  2037                           
  2038                           ;lcd.c: 103: void lcd_put_nibble(unsigned char b);lcd.c: 104: {;lcd.c: 106:  BYTE_VAL te
      +                          mp;;lcd.c: 109:  TRISD4 = 0;
  2039     055E  1683               	bsf	3,5	;RP0=1, select bank1
  2040     055F  1303               	bcf	3,6	;RP1=0, select bank1
  2041     0560  1208               	bcf	8,4	;volatile
  2042                           
  2043                           ;lcd.c: 110:  TRISD5 = 0;
  2044     0561  1288               	bcf	8,5	;volatile
  2045                           
  2046                           ;lcd.c: 111:  TRISD6 = 0;
  2047     0562  1308               	bcf	8,6	;volatile
  2048                           
  2049                           ;lcd.c: 112:  TRISD7 = 0;
  2050     0563  1388               	bcf	8,7	;volatile
  2051     0564                     l1056:
  2052                           
  2053                           ;lcd.c: 114:  temp.Val = b;
  2054     0564  0871               	movf	lcd_put_nibble@b,w
  2055     0565  00F2               	movwf	lcd_put_nibble@temp
  2056     0566                     l1058:
  2057                           
  2058                           ;lcd.c: 116:  RD4 = temp.bits.b0;
  2059     0566  1872               	btfsc	lcd_put_nibble@temp,0
  2060     0567  2D69               	goto	u481
  2061     0568  2D6D               	goto	u480
  2062     0569                     u481:
  2063     0569  1283               	bcf	3,5	;RP0=0, select bank0
  2064     056A  1303               	bcf	3,6	;RP1=0, select bank0
  2065     056B  1608               	bsf	8,4	;volatile
  2066     056C  2D70               	goto	u494
  2067     056D                     u480:
  2068     056D  1283               	bcf	3,5	;RP0=0, select bank0
  2069     056E  1303               	bcf	3,6	;RP1=0, select bank0
  2070     056F  1208               	bcf	8,4	;volatile
  2071     0570                     u494:
  2072     0570                     l1060:
  2073                           
  2074                           ;lcd.c: 117:  RD5 = temp.bits.b1;
  2075     0570  18F2               	btfsc	lcd_put_nibble@temp,1
  2076     0571  2D73               	goto	u501
  2077     0572  2D77               	goto	u500
  2078     0573                     u501:
  2079     0573  1283               	bcf	3,5	;RP0=0, select bank0
  2080     0574  1303               	bcf	3,6	;RP1=0, select bank0
  2081     0575  1688               	bsf	8,5	;volatile
  2082     0576  2D7A               	goto	u514
  2083     0577                     u500:
  2084     0577  1283               	bcf	3,5	;RP0=0, select bank0
  2085     0578  1303               	bcf	3,6	;RP1=0, select bank0
  2086     0579  1288               	bcf	8,5	;volatile
  2087     057A                     u514:
  2088     057A                     l1062:
  2089                           
  2090                           ;lcd.c: 118:  RD6 = temp.bits.b2;
  2091     057A  1972               	btfsc	lcd_put_nibble@temp,2
  2092     057B  2D7D               	goto	u521
  2093     057C  2D81               	goto	u520
  2094     057D                     u521:
  2095     057D  1283               	bcf	3,5	;RP0=0, select bank0
  2096     057E  1303               	bcf	3,6	;RP1=0, select bank0
  2097     057F  1708               	bsf	8,6	;volatile
  2098     0580  2D84               	goto	u534
  2099     0581                     u520:
  2100     0581  1283               	bcf	3,5	;RP0=0, select bank0
  2101     0582  1303               	bcf	3,6	;RP1=0, select bank0
  2102     0583  1308               	bcf	8,6	;volatile
  2103     0584                     u534:
  2104     0584                     l1064:
  2105                           
  2106                           ;lcd.c: 119:  RD7 = temp.bits.b3;
  2107     0584  19F2               	btfsc	lcd_put_nibble@temp,3
  2108     0585  2D87               	goto	u541
  2109     0586  2D8B               	goto	u540
  2110     0587                     u541:
  2111     0587  1283               	bcf	3,5	;RP0=0, select bank0
  2112     0588  1303               	bcf	3,6	;RP1=0, select bank0
  2113     0589  1788               	bsf	8,7	;volatile
  2114     058A  2D8E               	goto	u554
  2115     058B                     u540:
  2116     058B  1283               	bcf	3,5	;RP0=0, select bank0
  2117     058C  1303               	bcf	3,6	;RP1=0, select bank0
  2118     058D  1388               	bcf	8,7	;volatile
  2119     058E                     u554:
  2120                           
  2121                           ;lcd.c: 121:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  2122     058E  3006               	movlw	6
  2123     058F  00F0               	movwf	??_lcd_put_nibble
  2124     0590                     u947:
  2125     0590  0BF0               	decfsz	??_lcd_put_nibble,f
  2126     0591  2D90               	goto	u947
  2127     0592  0000               	nop
  2128     0593                     l1066:
  2129                           
  2130                           ;lcd.c: 122:  RD3 = 1;
  2131     0593  1283               	bcf	3,5	;RP0=0, select bank0
  2132     0594  1303               	bcf	3,6	;RP1=0, select bank0
  2133     0595  1588               	bsf	8,3	;volatile
  2134                           
  2135                           ;lcd.c: 123:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  2136     0596  3006               	movlw	6
  2137     0597  00F0               	movwf	??_lcd_put_nibble
  2138     0598                     u957:
  2139     0598  0BF0               	decfsz	??_lcd_put_nibble,f
  2140     0599  2D98               	goto	u957
  2141     059A  0000               	nop
  2142     059B                     l1068:
  2143                           
  2144                           ;lcd.c: 124:  RD3 = 0;
  2145     059B  1283               	bcf	3,5	;RP0=0, select bank0
  2146     059C  1303               	bcf	3,6	;RP1=0, select bank0
  2147     059D  1188               	bcf	8,3	;volatile
  2148     059E                     l122:
  2149     059E  0008               	return
  2150     059F                     __end_of_lcd_put_nibble:
  2151                           
  2152                           	psect	text10
  2153     04F4                     __ptext10:	
  2154 ;; *************** function _lcd_busy *****************
  2155 ;; Defined at:
  2156 ;;		line 18 in file "lcd.c"
  2157 ;; Parameters:    Size  Location     Type
  2158 ;;		None
  2159 ;; Auto vars:     Size  Location     Type
  2160 ;;  busy            1    1[COMMON] unsigned char 
  2161 ;; Return value:  Size  Location     Type
  2162 ;;                  1    wreg      unsigned char 
  2163 ;; Registers used:
  2164 ;;		wreg, status,2
  2165 ;; Tracked objects:
  2166 ;;		On entry : 0/0
  2167 ;;		On exit  : 0/0
  2168 ;;		Unchanged: 0/0
  2169 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2170 ;;      Params:         0       0       0       0       0
  2171 ;;      Locals:         1       0       0       0       0
  2172 ;;      Temps:          1       0       0       0       0
  2173 ;;      Totals:         2       0       0       0       0
  2174 ;;Total ram usage:        2 bytes
  2175 ;; Hardware stack levels used: 1
  2176 ;; This function calls:
  2177 ;;		Nothing
  2178 ;; This function is called by:
  2179 ;;		_load_custom_characters
  2180 ;;		_lcd_gotoxy
  2181 ;;		_lcd_putc
  2182 ;;		_lcd_init
  2183 ;; This function uses a non-reentrant model
  2184 ;;
  2185                           
  2186     04F4                     _lcd_busy:	
  2187                           ;psect for function _lcd_busy
  2188                           
  2189     04F4                     l1086:	
  2190                           ;incstack = 0
  2191                           ; Regs used in _lcd_busy: [wreg+status,2]
  2192                           
  2193                           
  2194                           ;lcd.c: 21: unsigned char busy;;lcd.c: 24:  TRISD4 = 1;
  2195     04F4  1683               	bsf	3,5	;RP0=1, select bank1
  2196     04F5  1303               	bcf	3,6	;RP1=0, select bank1
  2197     04F6  1608               	bsf	8,4	;volatile
  2198                           
  2199                           ;lcd.c: 25:  TRISD5 = 1;
  2200     04F7  1688               	bsf	8,5	;volatile
  2201                           
  2202                           ;lcd.c: 26:  TRISD6 = 1;
  2203     04F8  1708               	bsf	8,6	;volatile
  2204                           
  2205                           ;lcd.c: 27:  TRISD7 = 1;
  2206     04F9  1788               	bsf	8,7	;volatile
  2207                           
  2208                           ;lcd.c: 29:  RD2 = 1;
  2209     04FA  1283               	bcf	3,5	;RP0=0, select bank0
  2210     04FB  1303               	bcf	3,6	;RP1=0, select bank0
  2211     04FC  1508               	bsf	8,2	;volatile
  2212                           
  2213                           ;lcd.c: 30:  RD1 = 0;
  2214     04FD  1088               	bcf	8,1	;volatile
  2215     04FE                     l1088:
  2216                           
  2217                           ;lcd.c: 31:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  2218     04FE  3006               	movlw	6
  2219     04FF  00F0               	movwf	??_lcd_busy
  2220     0500                     u967:
  2221     0500  0BF0               	decfsz	??_lcd_busy,f
  2222     0501  2D00               	goto	u967
  2223     0502  0000               	nop
  2224     0503                     l1090:
  2225                           
  2226                           ;lcd.c: 32:  RD3 = 1;
  2227     0503  1283               	bcf	3,5	;RP0=0, select bank0
  2228     0504  1303               	bcf	3,6	;RP1=0, select bank0
  2229     0505  1588               	bsf	8,3	;volatile
  2230                           
  2231                           ;lcd.c: 33:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  2232     0506  3006               	movlw	6
  2233     0507  00F0               	movwf	??_lcd_busy
  2234     0508                     u977:
  2235     0508  0BF0               	decfsz	??_lcd_busy,f
  2236     0509  2D08               	goto	u977
  2237     050A  0000               	nop
  2238     050B                     l1092:
  2239                           
  2240                           ;lcd.c: 35:  busy = RD7;
  2241     050B  3000               	movlw	0
  2242     050C  1283               	bcf	3,5	;RP0=0, select bank0
  2243     050D  1303               	bcf	3,6	;RP1=0, select bank0
  2244     050E  1B88               	btfsc	8,7	;volatile
  2245     050F  3001               	movlw	1
  2246     0510  00F1               	movwf	lcd_busy@busy
  2247     0511                     l1094:
  2248                           
  2249                           ;lcd.c: 37:  RD3 = 0;
  2250     0511  1188               	bcf	8,3	;volatile
  2251     0512                     l1096:
  2252                           
  2253                           ;lcd.c: 38:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  2254     0512  3006               	movlw	6
  2255     0513  00F0               	movwf	??_lcd_busy
  2256     0514                     u987:
  2257     0514  0BF0               	decfsz	??_lcd_busy,f
  2258     0515  2D14               	goto	u987
  2259     0516  0000               	nop
  2260     0517                     l1098:
  2261                           
  2262                           ;lcd.c: 39:  RD3 = 1;
  2263     0517  1283               	bcf	3,5	;RP0=0, select bank0
  2264     0518  1303               	bcf	3,6	;RP1=0, select bank0
  2265     0519  1588               	bsf	8,3	;volatile
  2266     051A                     l1100:
  2267                           
  2268                           ;lcd.c: 40:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  2269     051A  3006               	movlw	6
  2270     051B  00F0               	movwf	??_lcd_busy
  2271     051C                     u997:
  2272     051C  0BF0               	decfsz	??_lcd_busy,f
  2273     051D  2D1C               	goto	u997
  2274     051E  0000               	nop
  2275     051F                     l1102:
  2276                           
  2277                           ;lcd.c: 41:  RD3 = 0;
  2278     051F  1283               	bcf	3,5	;RP0=0, select bank0
  2279     0520  1303               	bcf	3,6	;RP1=0, select bank0
  2280     0521  1188               	bcf	8,3	;volatile
  2281     0522                     l1104:
  2282                           
  2283                           ;lcd.c: 43:  return busy;
  2284     0522  0871               	movf	lcd_busy@busy,w
  2285     0523                     l114:
  2286     0523  0008               	return
  2287     0524                     __end_of_lcd_busy:
  2288     007E                     btemp	set	126	;btemp
  2289     007E                     wtemp0	set	126
  2290                           
  2291                           	psect	config
  2292                           
  2293                           ;Config register CONFIG1 @ 0x2007
  2294                           ;	Oscillator Selection bits
  2295                           ;	FOSC = HS, HS oscillator: High-speed crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1
      +                          /CLKIN
  2296                           ;	Watchdog Timer Enable bit
  2297                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2298                           ;	Power-up Timer Enable bit
  2299                           ;	PWRTE = OFF, PWRT disabled
  2300                           ;	RE3/MCLR pin function select bit
  2301                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  2302                           ;	Code Protection bit
  2303                           ;	CP = OFF, Program memory code protection is disabled
  2304                           ;	Data Code Protection bit
  2305                           ;	CPD = OFF, Data memory code protection is disabled
  2306                           ;	Brown Out Reset Selection bits
  2307                           ;	BOREN = OFF, BOR disabled
  2308                           ;	Internal External Switchover bit
  2309                           ;	IESO = ON, Internal/External Switchover mode is enabled
  2310                           ;	Fail-Safe Clock Monitor Enabled bit
  2311                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2312                           ;	Low Voltage Programming Enable bit
  2313                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2314                           ;	In-Circuit Debugger Mode bit
  2315                           ;	DEBUG = 0x1, unprogrammed default
  2316     2007                     	org	8199
  2317     2007  24D2               	dw	9426
  2318                           
  2319                           ;Config register CONFIG2 @ 0x2008
  2320                           ;	Brown-out Reset Selection bit
  2321                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2322                           ;	Flash Program Memory Self Write Enable bits
  2323                           ;	WRT = OFF, Write protection off
  2324     2008                     	org	8200
  2325     2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    148
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     22      22
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    chaychu_2line@line_data1	PTR const unsigned char  size(1) Largest target is 14
		 -> dat_line1(CODE[14]), 

    chaychu_2line@line_data2	PTR const unsigned char  size(1) Largest target is 15
		 -> dat_line3(CODE[15]), 

    load_custom_characters@custom_data	PTR const unsigned char  size(1) Largest target is 65
		 -> cgram_dat(CODE[65]), 


Critical Paths under _main in COMMON

    _main->_chaychu_2line
    _lcd_ShiftLeft->_lcd_put_byte
    _load_custom_characters->_lcd_put_byte
    _lcd_init->_lcd_put_byte
    _chaychu_2line->_lcd_putc
    _lcd_putc->_lcd_gotoxy
    _lcd_gotoxy->_lcd_put_byte
    _lcd_put_byte->_lcd_put_nibble

Critical Paths under _main in BANK0

    _main->_chaychu_2line

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 7     7      0   11441
                                             16 BANK0      6     6      0
                      _chaychu_2line
                           _lcd_init
                           _lcd_putc
             _load_custom_characters
                  _shift_left_screen
 ---------------------------------------------------------------------------------
 (1) _shift_left_screen                                    7     5      2    1211
                                              6 COMMON     7     5      2
                      _lcd_ShiftLeft
 ---------------------------------------------------------------------------------
 (2) _lcd_ShiftLeft                                        0     0      0    1089
                       _lcd_put_byte
 ---------------------------------------------------------------------------------
 (1) _load_custom_characters                               4     3      1    1333
                                              6 COMMON     4     3      1
                           _lcd_busy
                       _lcd_put_byte
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             3     3      0    1223
                                              6 COMMON     2     2      0
                           _lcd_busy
                       _lcd_put_byte
                     _lcd_put_nibble
 ---------------------------------------------------------------------------------
 (1) _chaychu_2line                                       20    11      9    4941
                                             10 COMMON     4     4      0
                                              0 BANK0     16     7      9
                         _lcd_gotoxy
                           _lcd_putc
 ---------------------------------------------------------------------------------
 (1) _lcd_putc                                             1     1      0    2641
                                              9 COMMON     1     1      0
                           _lcd_busy
                         _lcd_gotoxy
                       _lcd_put_byte
 ---------------------------------------------------------------------------------
 (2) _lcd_gotoxy                                           3     2      1    1485
                                              6 COMMON     3     2      1
                           _lcd_busy
                       _lcd_put_byte
 ---------------------------------------------------------------------------------
 (3) _lcd_put_byte                                         3     2      1    1089
                                              3 COMMON     3     2      1
                     _lcd_put_nibble
 ---------------------------------------------------------------------------------
 (4) _lcd_put_nibble                                       3     3      0     111
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _lcd_busy                                             2     2      0      23
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _chaychu_2line
     _lcd_gotoxy
       _lcd_busy
       _lcd_put_byte
         _lcd_put_nibble
     _lcd_putc
       _lcd_busy
       _lcd_gotoxy
       _lcd_put_byte
   _lcd_init
     _lcd_busy
     _lcd_put_byte
     _lcd_put_nibble
   _lcd_putc
   _load_custom_characters
     _lcd_busy
     _lcd_put_byte
   _shift_left_screen
     _lcd_ShiftLeft
       _lcd_put_byte

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     16      16       5       27.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Thu Sep 19 01:33:50 2024

                    ??_lcd_ShiftLeft 0076                                    pc 0002  
                                 l40 05E8                                   l46 04F3  
                                 l71 07FB                                   l78 0694  
             __end_of_lcd_put_nibble 059F                                   fsr 0004  
                      ?_lcd_put_byte 0073                                  l114 0523  
                                l122 059E                                  l125 0534  
                                l127 055C                                  l135 04C9  
                                l153 0638                                  l180 04A7  
                                l177 0734                                  _RD1 0041  
                                _RD2 0042                                  _RD3 0043  
                                _RD4 0044                                  _RD5 0045  
                                _RD6 0046                                  _RD7 0047  
                                u500 0577                                  u501 0573  
                                u520 0581                                  u600 05FD  
                                u521 057D                                  u601 05FC  
                                u514 057A                                  u610 0619  
                                u611 0618                                  u540 058B  
                                u620 062C                                  u700 07AD  
                                u541 0587                                  u621 062B  
                                u701 07AC                                  u534 0584  
                                u710 07E2                                  u711 07E1  
                                u480 056D                                  u560 0530  
                                u720 07FB                                  u640 05BD  
                                u481 0569                                  u561 052F  
                                u721 07FA                                  u705 07A9  
                                u641 05BC                                  u554 058E  
                                u730 06EC                                  u650 05D7  
                                u810 0694                                  u715 07DE  
                                u731 06EB                                  u651 05D6  
                                u635 05A4                                  u811 0693  
                                u580 04AE                                  u740 06FE  
                                u660 05E8                                  u581 04AD  
                                u741 06FD                                  u661 05E7  
                                u494 0570                                  u590 04C9  
                                u750 0710                                  u670 04F3  
                                u575 054A                                  u591 04C8  
                                u751 070F                                  u671 04F2  
                                u815 0690                                  u680 0759  
                                u760 0722                                  u681 0758  
                                u761 0721                                  u690 078E  
                                u770 0734                                  u691 078D  
                                u771 0733                                  u907 06D7  
                                u675 04EF                                  u917 07E8  
                                u685 0755                                  u927 0539  
                                u695 078A                                  u937 0541  
                                u947 0590                                  u867 04D8  
                                u957 0598                                  u877 06A5  
                                u967 0500                                  u887 06B9  
                                u977 0508                                  u897 06C8  
                                u987 0514                                  u997 051C  
                                fsr0 0004                                 l1100 051A  
                               l1102 051F                                 l1110 04AE  
                               l1104 0522                                 l1112 04B1  
                               l1200 0698                                 l1120 049F  
                               l1114 04B2                                 l1130 0607  
                               l1122 05EA                                 l1210 06AF  
                               l1202 06A1                                 l1060 0570  
                               l1116 04B6                                 l1108 04A9  
                               l1132 060F                                 l1124 05EB  
                               l1220 06E2                                 l1212 06B5  
                               l1204 06AA                                 l1140 05A0  
                               l1062 057A                                 l1054 055E  
                               l1070 0525                                 l1118 04BF  
                               l1134 061A                                 l1126 05F3  
                               l1230 0710                                 l1222 06EC  
                               l1214 06C4                                 l1206 06AD  
                               l1150 05D7                                 l1142 05A1  
                               l1064 0584                                 l1056 0564  
                               l1080 0544                                 l1072 052B  
                               l1136 0622                                 l1128 05FE  
                               l1232 0718                                 l1224 06F4  
                               l1216 06CD                                 l1208 06AE  
                               l1152 05DB                                 l1144 05B3  
                               l1160 04DF                                 l1090 0503  
                               l1066 0593                                 l1058 0566  
                               l1082 0547                                 l1074 0530  
                               l1138 062D                                 l1170 0744  
                               l1234 0722                                 l1226 06FE  
                               l1218 06DC                                 l1146 05BE  
                               l1162 04E5                                 l1154 04CA  
                               l1092 050B                                 l1068 059B  
                               l1084 0555                                 l1076 0537  
                               l1172 0749                                 l1180 0777  
                               l1164 0738                                 l1236 072A  
                               l1228 0706                                 l1148 05CD  
                               l1156 04CD                                 l1094 0511  
                               l1086 04F4                                 l1078 053C  
                               l1190 07BD                                 l1182 078E  
                               l1174 0759                                 l1158 04D2  
                               l1270 0651                                 l1262 0639  
                               l1096 0512                                 l1088 04FE  
                               l1192 07C3                                 l1184 0798  
                               l1176 0769                                 l1168 073C  
                               l1280 0670                                 l1272 0655  
                               l1264 063E                                 l1098 0517  
                               l1186 079D                                 l1194 07CB  
                               l1178 076F                                 l1282 0679  
                               l1266 0645                                 l1196 07E2  
                               l1188 07AD                                 l1284 067F  
                               l1268 064B                                 l1198 07F7  
                               l1286 0687                                 l1278 0657  
                               _main 0639                         lcd_busy@busy 0071  
                               btemp 007E                                 start 0000  
                    ?_lcd_put_nibble 0070                       ??_lcd_put_byte 0074  
                              ?_main 0070                                pclath 000A  
                              status 0003            chaychu_2line@line_number1 0025  
          chaychu_2line@line_number2 0027                                wtemp0 007E  
                    __initialization 07FC                         __end_of_main 0698  
              __end_of_chaychu_2line 07FC                        lcd_gotoxy@col 0077  
                      lcd_gotoxy@row 0076                   lcd_put_nibble@temp 0072  
                             ??_main 007E              ?_load_custom_characters 0076  
                             _TRISD1 0441                               _TRISD2 0442  
                             _TRISD3 0443                               _TRISD4 0444  
                             _TRISD5 0445                               _TRISD6 0446  
                             _TRISD7 0447    load_custom_characters@custom_data 0078  
                   __end_of_lcd_busy 0524                     __end_of_lcd_init 0735  
                   __end_of_lcd_putc 0639              load_custom_characters@i 0079  
                      lcd_put_byte@b 0073       __end_of_load_custom_characters 05E9  
            __end_of__initialization 07FC                 __end_of_lcd_put_byte 055D  
                     __pcstackCOMMON 0070                   shift_left_screen@i 007B  
load_custom_characters@start_address 0076                    lcd_gotoxy@address 0078  
                   ??_lcd_put_nibble 0070                           __pmaintext 0639  
              __end_of_lcd_ShiftLeft 04A8                           _lcd_gotoxy 04A8  
                          ?_lcd_busy 0070                            ?_lcd_init 0070  
                          ?_lcd_putc 0070                           __stringtab 0003  
                  __end_of_dat_line1 009D                    __end_of_dat_line2 0028  
                  __end_of_dat_line3 008F                    __end_of_dat_line4 0019  
                  __end_of_dat_line5 0034                    __end_of_dat_line6 003F  
                  __end_of_cgram_dat 0080                              __ptext1 04CA  
                            __ptext2 049F                              __ptext3 059F  
                            __ptext4 0698                              __ptext5 0735  
                            __ptext6 05E9                              __ptext7 04A8  
                            __ptext8 0524                              __ptext9 055D  
                         ??_lcd_busy 0070                           ??_lcd_init 0076  
                         ??_lcd_putc 0079                 end_of_initialization 07FC  
                     lcd_put_byte@rs 0075                       main@size_line1 0030  
                     main@size_line3 0032               shift_left_screen@times 0076  
                       _lcd_put_byte 0524                          ?_lcd_gotoxy 0076  
                         main@repeat 0034                  start_initialization 07FC  
                      _chaychu_2line 0735                            ___latbits 0002  
                      __pcstackBANK0 0020                    _shift_left_screen 04CA  
                          _dat_line1 008F                            _dat_line2 0019  
                          _dat_line3 0080                            _dat_line4 0009  
                          _dat_line5 0028                            _dat_line6 0034  
                 ?_shift_left_screen 0076                            _cgram_dat 003F  
                     ?_chaychu_2line 0020             ??_load_custom_characters 0077  
                ??_shift_left_screen 0078                            __pstrings 0003  
          __end_of_shift_left_screen 04F4                          __stringbase 0008  
                          lcd_putc@c 0079                         ??_lcd_gotoxy 0077  
                    ??_chaychu_2line 007A                   __end_of_lcd_gotoxy 04CA  
                      _lcd_ShiftLeft 049F                   __end_of__stringtab 0009  
                  chaychu_2line@j_86 002C                             __ptext10 04F4  
                           _lcd_busy 04F4                             _lcd_init 0698  
                           _lcd_putc 05E9              chaychu_2line@line_data1 0029  
            chaychu_2line@line_data2 0020                       ?_lcd_ShiftLeft 0070  
            chaychu_2line@line_size1 0021              chaychu_2line@line_size2 0023  
                    lcd_put_nibble@b 0071               _load_custom_characters 059F  
                          stringcode 0003                       _lcd_put_nibble 055D  
                           stringdir 0003                             stringtab 0003  
                     chaychu_2line@j 002A                       chaychu_2line@k 002E  
