

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Thu Sep 19 08:37:26 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2,group=3
    13                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text8,local,class=CODE,merge=1,delta=2,group=3
    20                           	psect	text9,local,class=CODE,merge=1,delta=2,group=3
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2,group=3
    23                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2
    29                           	psect	text18,local,class=CODE,merge=1,delta=2
    30                           	psect	text19,local,class=CODE,merge=1,delta=2
    31                           	psect	text20,local,class=CODE,merge=1,delta=2
    32                           	psect	text21,local,class=CODE,merge=1,delta=2
    33                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    34                           	dabs	1,0x7E,2
    35     0000                     
    36                           ; Generated 12/10/2023 GMT
    37                           ; 
    38                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    39                           ; All rights reserved.
    40                           ; 
    41                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    42                           ; 
    43                           ; Redistribution and use in source and binary forms, with or without modification, are
    44                           ; permitted provided that the following conditions are met:
    45                           ; 
    46                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    47                           ;        conditions and the following disclaimer.
    48                           ; 
    49                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    50                           ;        of conditions and the following disclaimer in the documentation and/or other
    51                           ;        materials provided with the distribution. Publication is not required when
    52                           ;        this file is used in an embedded application.
    53                           ; 
    54                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    55                           ;        software without specific prior written permission.
    56                           ; 
    57                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    58                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    59                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    60                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    61                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    62                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    63                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    64                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    65                           ; 
    66                           ; 
    67                           ; Code-generator required, PIC16F887 Definitions
    68                           ; 
    69                           ; SFR Addresses
    70     0000                     	;# 
    71     0001                     	;# 
    72     0002                     	;# 
    73     0003                     	;# 
    74     0004                     	;# 
    75     0005                     	;# 
    76     0006                     	;# 
    77     0007                     	;# 
    78     0008                     	;# 
    79     0009                     	;# 
    80     000A                     	;# 
    81     000B                     	;# 
    82     000C                     	;# 
    83     000D                     	;# 
    84     000E                     	;# 
    85     000E                     	;# 
    86     000F                     	;# 
    87     0010                     	;# 
    88     0011                     	;# 
    89     0012                     	;# 
    90     0013                     	;# 
    91     0014                     	;# 
    92     0015                     	;# 
    93     0015                     	;# 
    94     0016                     	;# 
    95     0017                     	;# 
    96     0018                     	;# 
    97     0019                     	;# 
    98     001A                     	;# 
    99     001B                     	;# 
   100     001B                     	;# 
   101     001C                     	;# 
   102     001D                     	;# 
   103     001E                     	;# 
   104     001F                     	;# 
   105     0081                     	;# 
   106     0085                     	;# 
   107     0086                     	;# 
   108     0087                     	;# 
   109     0088                     	;# 
   110     0089                     	;# 
   111     008C                     	;# 
   112     008D                     	;# 
   113     008E                     	;# 
   114     008F                     	;# 
   115     0090                     	;# 
   116     0091                     	;# 
   117     0092                     	;# 
   118     0093                     	;# 
   119     0093                     	;# 
   120     0093                     	;# 
   121     0094                     	;# 
   122     0095                     	;# 
   123     0096                     	;# 
   124     0097                     	;# 
   125     0098                     	;# 
   126     0099                     	;# 
   127     009A                     	;# 
   128     009B                     	;# 
   129     009C                     	;# 
   130     009D                     	;# 
   131     009E                     	;# 
   132     009F                     	;# 
   133     0105                     	;# 
   134     0107                     	;# 
   135     0108                     	;# 
   136     0109                     	;# 
   137     010C                     	;# 
   138     010C                     	;# 
   139     010D                     	;# 
   140     010E                     	;# 
   141     010F                     	;# 
   142     0185                     	;# 
   143     0187                     	;# 
   144     0188                     	;# 
   145     0189                     	;# 
   146     018C                     	;# 
   147     018D                     	;# 
   148     0000                     	;# 
   149     0001                     	;# 
   150     0002                     	;# 
   151     0003                     	;# 
   152     0004                     	;# 
   153     0005                     	;# 
   154     0006                     	;# 
   155     0007                     	;# 
   156     0008                     	;# 
   157     0009                     	;# 
   158     000A                     	;# 
   159     000B                     	;# 
   160     000C                     	;# 
   161     000D                     	;# 
   162     000E                     	;# 
   163     000E                     	;# 
   164     000F                     	;# 
   165     0010                     	;# 
   166     0011                     	;# 
   167     0012                     	;# 
   168     0013                     	;# 
   169     0014                     	;# 
   170     0015                     	;# 
   171     0015                     	;# 
   172     0016                     	;# 
   173     0017                     	;# 
   174     0018                     	;# 
   175     0019                     	;# 
   176     001A                     	;# 
   177     001B                     	;# 
   178     001B                     	;# 
   179     001C                     	;# 
   180     001D                     	;# 
   181     001E                     	;# 
   182     001F                     	;# 
   183     0081                     	;# 
   184     0085                     	;# 
   185     0086                     	;# 
   186     0087                     	;# 
   187     0088                     	;# 
   188     0089                     	;# 
   189     008C                     	;# 
   190     008D                     	;# 
   191     008E                     	;# 
   192     008F                     	;# 
   193     0090                     	;# 
   194     0091                     	;# 
   195     0092                     	;# 
   196     0093                     	;# 
   197     0093                     	;# 
   198     0093                     	;# 
   199     0094                     	;# 
   200     0095                     	;# 
   201     0096                     	;# 
   202     0097                     	;# 
   203     0098                     	;# 
   204     0099                     	;# 
   205     009A                     	;# 
   206     009B                     	;# 
   207     009C                     	;# 
   208     009D                     	;# 
   209     009E                     	;# 
   210     009F                     	;# 
   211     0105                     	;# 
   212     0107                     	;# 
   213     0108                     	;# 
   214     0109                     	;# 
   215     010C                     	;# 
   216     010C                     	;# 
   217     010D                     	;# 
   218     010E                     	;# 
   219     010F                     	;# 
   220     0185                     	;# 
   221     0187                     	;# 
   222     0188                     	;# 
   223     0189                     	;# 
   224     018C                     	;# 
   225     018D                     	;# 
   226     0000                     	;# 
   227     0001                     	;# 
   228     0002                     	;# 
   229     0003                     	;# 
   230     0004                     	;# 
   231     0005                     	;# 
   232     0006                     	;# 
   233     0007                     	;# 
   234     0008                     	;# 
   235     0009                     	;# 
   236     000A                     	;# 
   237     000B                     	;# 
   238     000C                     	;# 
   239     000D                     	;# 
   240     000E                     	;# 
   241     000E                     	;# 
   242     000F                     	;# 
   243     0010                     	;# 
   244     0011                     	;# 
   245     0012                     	;# 
   246     0013                     	;# 
   247     0014                     	;# 
   248     0015                     	;# 
   249     0015                     	;# 
   250     0016                     	;# 
   251     0017                     	;# 
   252     0018                     	;# 
   253     0019                     	;# 
   254     001A                     	;# 
   255     001B                     	;# 
   256     001B                     	;# 
   257     001C                     	;# 
   258     001D                     	;# 
   259     001E                     	;# 
   260     001F                     	;# 
   261     0081                     	;# 
   262     0085                     	;# 
   263     0086                     	;# 
   264     0087                     	;# 
   265     0088                     	;# 
   266     0089                     	;# 
   267     008C                     	;# 
   268     008D                     	;# 
   269     008E                     	;# 
   270     008F                     	;# 
   271     0090                     	;# 
   272     0091                     	;# 
   273     0092                     	;# 
   274     0093                     	;# 
   275     0093                     	;# 
   276     0093                     	;# 
   277     0094                     	;# 
   278     0095                     	;# 
   279     0096                     	;# 
   280     0097                     	;# 
   281     0098                     	;# 
   282     0099                     	;# 
   283     009A                     	;# 
   284     009B                     	;# 
   285     009C                     	;# 
   286     009D                     	;# 
   287     009E                     	;# 
   288     009F                     	;# 
   289     0105                     	;# 
   290     0107                     	;# 
   291     0108                     	;# 
   292     0109                     	;# 
   293     010C                     	;# 
   294     010C                     	;# 
   295     010D                     	;# 
   296     010E                     	;# 
   297     010F                     	;# 
   298     0185                     	;# 
   299     0187                     	;# 
   300     0188                     	;# 
   301     0189                     	;# 
   302     018C                     	;# 
   303     018D                     	;# 
   304                           
   305                           	psect	strings
   306     0003                     __pstrings:
   307     0003                     stringtab:
   308     0003                     __stringtab:
   309                           
   310                           ;	String table - string pointers are 1 byte each
   311     0003  1BFF               	btfsc	btemp+1,7
   312     0004  280D               	ljmp	stringcode
   313     0005  1383               	bcf	3,7
   314     0006  187F               	btfsc	btemp+1,0
   315     0007  1783               	bsf	3,7
   316     0008  0800               	movf	0,w
   317     0009  0A84               	incf	4,f
   318     000A  1903               	skipnz
   319     000B  0AFF               	incf	btemp+1,f
   320     000C  0008               	return
   321     000D                     stringcode:
   322     000D                     stringdir:
   323     000D  3000               	movlw	high stringdir
   324     000E  008A               	movwf	10
   325     000F  0804               	movf	4,w
   326     0010  0A84               	incf	4,f
   327     0011  0782               	addwf	2,f
   328     0012                     __stringbase:
   329     0012  3400               	retlw	0
   330     0013                     __end_of__stringtab:
   331     0013                     _dat_line1:
   332     0013  3454               	retlw	84
   333     0014  3468               	retlw	104
   334     0015  3404               	retlw	4
   335     0016  346E               	retlw	110
   336     0017  3468               	retlw	104
   337     0018  3420               	retlw	32
   338     0019  3443               	retlw	67
   339     001A  346F               	retlw	111
   340     001B  3475               	retlw	117
   341     001C  346E               	retlw	110
   342     001D  3474               	retlw	116
   343     001E  3465               	retlw	101
   344     001F  3472               	retlw	114
   345     0020  3420               	retlw	32
   346     0021  3431               	retlw	49
   347     0022                     __end_of_dat_line1:
   348     0022                     _cgram_dat:
   349     0022  3400               	retlw	0
   350     0023  3400               	retlw	0
   351     0024  3400               	retlw	0
   352     0025  3418               	retlw	24
   353     0026  3414               	retlw	20
   354     0027  3410               	retlw	16
   355     0028  3410               	retlw	16
   356     0029  3400               	retlw	0
   357     002A  3402               	retlw	2
   358     002B  3409               	retlw	9
   359     002C  3414               	retlw	20
   360     002D  3400               	retlw	0
   361     002E  341C               	retlw	28
   362     002F  3414               	retlw	20
   363     0030  341E               	retlw	30
   364     0031  3400               	retlw	0
   365     0032  340E               	retlw	14
   366     0033  3409               	retlw	9
   367     0034  3409               	retlw	9
   368     0035  341D               	retlw	29
   369     0036  3409               	retlw	9
   370     0037  3409               	retlw	9
   371     0038  340E               	retlw	14
   372     0039  3400               	retlw	0
   373     003A  3404               	retlw	4
   374     003B  3408               	retlw	8
   375     003C  3412               	retlw	18
   376     003D  3401               	retlw	1
   377     003E  3412               	retlw	18
   378     003F  3412               	retlw	18
   379     0040  341E               	retlw	30
   380     0041  3400               	retlw	0
   381     0042  3400               	retlw	0
   382     0043  3404               	retlw	4
   383     0044  3400               	retlw	0
   384     0045  340C               	retlw	12
   385     0046  3404               	retlw	4
   386     0047  3400               	retlw	0
   387     0048  3404               	retlw	4
   388     0049  3400               	retlw	0
   389     004A  3400               	retlw	0
   390     004B  340E               	retlw	14
   391     004C  3411               	retlw	17
   392     004D  3411               	retlw	17
   393     004E  3411               	retlw	17
   394     004F  340E               	retlw	14
   395     0050  3400               	retlw	0
   396     0051  3404               	retlw	4
   397     0052  3408               	retlw	8
   398     0053  3404               	retlw	4
   399     0054  3400               	retlw	0
   400     0055  340C               	retlw	12
   401     0056  3414               	retlw	20
   402     0057  3414               	retlw	20
   403     0058  341E               	retlw	30
   404     0059  3400               	retlw	0
   405     005A  3400               	retlw	0
   406     005B  3400               	retlw	0
   407     005C  3406               	retlw	6
   408     005D  3402               	retlw	2
   409     005E  341C               	retlw	28
   410     005F  3414               	retlw	20
   411     0060  341C               	retlw	28
   412     0061  3400               	retlw	0
   413     0062  3499               	retlw	153
   414     0063                     __end_of_cgram_dat:
   415     000E                     _TMR1	set	14
   416     0044                     _RD4	set	68
   417     0045                     _RD5	set	69
   418     0046                     _RD6	set	70
   419     0047                     _RD7	set	71
   420     0043                     _RD3	set	67
   421     0041                     _RD1	set	65
   422     0042                     _RD2	set	66
   423     0080                     _TMR1ON	set	128
   424     0082                     _T1SYNC	set	130
   425     0084                     _T1CKPS0	set	132
   426     0085                     _T1CKPS1	set	133
   427     005E                     _PEIE	set	94
   428     005F                     _GIE	set	95
   429     0083                     _T1OSCEN	set	131
   430     0081                     _TMR1CS	set	129
   431     0060                     _TMR1IF	set	96
   432     0442                     _TRISD2	set	1090
   433     0441                     _TRISD1	set	1089
   434     0443                     _TRISD3	set	1091
   435     0447                     _TRISD7	set	1095
   436     0446                     _TRISD6	set	1094
   437     0445                     _TRISD5	set	1093
   438     0444                     _TRISD4	set	1092
   439     0460                     _TMR1IE	set	1120
   440     0438                     _TRISC0	set	1080
   441     0189                     _ANSELH	set	393
   442     0188                     _ANSEL	set	392
   443     0063                     STR_2:
   444     0063  3425               	retlw	37	;'%'
   445     0064  342E               	retlw	46	;'.'
   446     0065  3432               	retlw	50	;'2'
   447     0066  3464               	retlw	100	;'d'
   448     0067  3400               	retlw	0
   449     0068                     STR_1:
   450     0068  3430               	retlw	48	;'0'
   451     0069  3430               	retlw	48	;'0'
   452     006A  3400               	retlw	0
   453                           
   454                           	psect	cinit
   455     07EC                     start_initialization:	
   456                           ; #config settings
   457                           
   458     07EC                     __initialization:
   459                           
   460                           ; Clear objects allocated to BANK0
   461     07EC  1283               	bcf	3,5	;RP0=0, select bank0
   462     07ED  1303               	bcf	3,6	;RP1=0, select bank0
   463     07EE  01E4               	clrf	__pbssBANK0& (0+127)
   464     07EF  01E5               	clrf	(__pbssBANK0+1)& (0+127)
   465     07F0  01E6               	clrf	(__pbssBANK0+2)& (0+127)
   466     07F1  01E7               	clrf	(__pbssBANK0+3)& (0+127)
   467     07F2  01E8               	clrf	(__pbssBANK0+4)& (0+127)
   468                           
   469                           ; Clear objects allocated to BANK1
   470     07F3  1383               	bcf	3,7	;select IRP bank0
   471     07F4  30A0               	movlw	low __pbssBANK1
   472     07F5  0084               	movwf	4
   473     07F6  30C0               	movlw	low (__pbssBANK1+32)
   474     07F7  120A  118A  2172  120A  118A  	fcall	clear_ram0
   475     07FC                     end_of_initialization:	
   476                           ;End of C runtime variable initialization code
   477                           
   478     07FC                     __end_of__initialization:
   479     07FC  0183               	clrf	3
   480     07FD  120A  118A  2D53   	ljmp	_main	;jump to C main() function
   481                           
   482                           	psect	bssBANK0
   483     0064                     __pbssBANK0:
   484     0064                     _width:
   485     0064                     	ds	2
   486     0066                     _prec:
   487     0066                     	ds	2
   488     0068                     _flags:
   489     0068                     	ds	1
   490                           
   491                           	psect	bssBANK1
   492     00A0                     __pbssBANK1:
   493     00A0                     _dbuf:
   494     00A0                     	ds	32
   495                           
   496                           	psect	clrtext
   497     0172                     clear_ram0:	
   498                           ;	Called with FSR containing the base address, and
   499                           ;	W with the last address+1
   500                           
   501     0172  0064               	clrwdt	;clear the watchdog before getting into this loop
   502     0173                     clrloop0:
   503     0173  0180               	clrf	0	;clear RAM location pointed to by FSR
   504     0174  0A84               	incf	4,f	;increment pointer
   505     0175  0604               	xorwf	4,w	;XOR with final address
   506     0176  1903               	btfsc	3,2	;have we reached the end yet?
   507     0177  3400               	retlw	0	;all done for this memory range, return
   508     0178  0604               	xorwf	4,w	;XOR again to restore value
   509     0179  2973               	goto	clrloop0	;do the next byte
   510                           
   511                           	psect	cstackCOMMON
   512     0070                     __pcstackCOMMON:
   513     0070                     ?_lcd_busy:
   514     0070                     ??_lcd_busy:	
   515                           ; 1 bytes @ 0x0
   516                           
   517     0070                     ?_lcd_init:	
   518                           ; 1 bytes @ 0x0
   519                           
   520     0070                     ?_lcd_putc:	
   521                           ; 1 bytes @ 0x0
   522                           
   523     0070                     ?_main:	
   524                           ; 1 bytes @ 0x0
   525                           
   526     0070                     ?_lcd_put_nibble:	
   527                           ; 1 bytes @ 0x0
   528                           
   529     0070                     ??_lcd_put_nibble:	
   530                           ; 1 bytes @ 0x0
   531                           
   532     0070                     ?_putch:	
   533                           ; 1 bytes @ 0x0
   534                           
   535     0070                     ?___wmul:	
   536                           ; 1 bytes @ 0x0
   537                           
   538     0070                     ?___awdiv:	
   539                           ; 2 bytes @ 0x0
   540                           
   541     0070                     ?___awmod:	
   542                           ; 2 bytes @ 0x0
   543                           
   544     0070                     ___wmul@multiplier:	
   545                           ; 2 bytes @ 0x0
   546                           
   547     0070                     ___awdiv@divisor:	
   548                           ; 2 bytes @ 0x0
   549                           
   550     0070                     ___awmod@divisor:	
   551                           ; 2 bytes @ 0x0
   552                           
   553                           
   554                           ; 2 bytes @ 0x0
   555     0070                     	ds	1
   556     0071                     lcd_busy@busy:
   557     0071                     lcd_put_nibble@b:	
   558                           ; 1 bytes @ 0x1
   559                           
   560                           
   561                           ; 1 bytes @ 0x1
   562     0071                     	ds	1
   563     0072                     lcd_put_nibble@temp:
   564     0072                     ___wmul@multiplicand:	
   565                           ; 1 bytes @ 0x2
   566                           
   567     0072                     ___awdiv@dividend:	
   568                           ; 2 bytes @ 0x2
   569                           
   570     0072                     ___awmod@dividend:	
   571                           ; 2 bytes @ 0x2
   572                           
   573                           
   574                           ; 2 bytes @ 0x2
   575     0072                     	ds	1
   576     0073                     ?_lcd_put_byte:
   577     0073                     lcd_put_byte@b:	
   578                           ; 1 bytes @ 0x3
   579                           
   580                           
   581                           ; 1 bytes @ 0x3
   582     0073                     	ds	1
   583     0074                     ??_lcd_put_byte:
   584     0074                     ??___wmul:	
   585                           ; 1 bytes @ 0x4
   586                           
   587     0074                     ??___awdiv:	
   588                           ; 1 bytes @ 0x4
   589                           
   590     0074                     ??___awmod:	
   591                           ; 1 bytes @ 0x4
   592                           
   593     0074                     ___awdiv@counter:	
   594                           ; 1 bytes @ 0x4
   595                           
   596     0074                     ___awmod@counter:	
   597                           ; 1 bytes @ 0x4
   598                           
   599     0074                     ___wmul@product:	
   600                           ; 1 bytes @ 0x4
   601                           
   602                           
   603                           ; 2 bytes @ 0x4
   604     0074                     	ds	1
   605     0075                     lcd_put_byte@rs:
   606     0075                     ___awdiv@sign:	
   607                           ; 1 bytes @ 0x5
   608                           
   609     0075                     ___awmod@sign:	
   610                           ; 1 bytes @ 0x5
   611                           
   612                           
   613                           ; 1 bytes @ 0x5
   614     0075                     	ds	1
   615     0076                     ??_lcd_init:
   616     0076                     ?_lcd_gotoxy:	
   617                           ; 1 bytes @ 0x6
   618                           
   619     0076                     ?_load_custom_characters:	
   620                           ; 1 bytes @ 0x6
   621                           
   622     0076                     ?_abs:	
   623                           ; 1 bytes @ 0x6
   624                           
   625     0076                     ?_read_prec_or_width:	
   626                           ; 2 bytes @ 0x6
   627                           
   628     0076                     load_custom_characters@start_address:	
   629                           ; 2 bytes @ 0x6
   630                           
   631     0076                     lcd_gotoxy@row:	
   632                           ; 1 bytes @ 0x6
   633                           
   634     0076                     read_prec_or_width@ap:	
   635                           ; 1 bytes @ 0x6
   636                           
   637     0076                     ___awdiv@quotient:	
   638                           ; 1 bytes @ 0x6
   639                           
   640     0076                     abs@a:	
   641                           ; 2 bytes @ 0x6
   642                           
   643                           
   644                           ; 2 bytes @ 0x6
   645     0076                     	ds	1
   646     0077                     ??_lcd_gotoxy:
   647     0077                     ??_load_custom_characters:	
   648                           ; 1 bytes @ 0x7
   649                           
   650     0077                     lcd_gotoxy@col:	
   651                           ; 1 bytes @ 0x7
   652                           
   653                           
   654                           ; 1 bytes @ 0x7
   655     0077                     	ds	1
   656     0078                     ??_abs:
   657     0078                     ??_read_prec_or_width:	
   658                           ; 1 bytes @ 0x8
   659                           
   660     0078                     load_custom_characters@custom_data:	
   661                           ; 1 bytes @ 0x8
   662                           
   663     0078                     lcd_gotoxy@address:	
   664                           ; 1 bytes @ 0x8
   665                           
   666     0078                     read_prec_or_width@c:	
   667                           ; 1 bytes @ 0x8
   668                           
   669                           
   670                           ; 1 bytes @ 0x8
   671     0078                     	ds	1
   672     0079                     ??_lcd_putc:
   673     0079                     load_custom_characters@i:	
   674                           ; 1 bytes @ 0x9
   675                           
   676     0079                     lcd_putc@c:	
   677                           ; 1 bytes @ 0x9
   678                           
   679     0079                     read_prec_or_width@n:	
   680                           ; 1 bytes @ 0x9
   681                           
   682                           
   683                           ; 2 bytes @ 0x9
   684     0079                     	ds	1
   685     007A                     ?_lcd_puts:
   686     007A                     ??_putch:	
   687                           ; 1 bytes @ 0xA
   688                           
   689     007A                     putch@c:	
   690                           ; 1 bytes @ 0xA
   691                           
   692     007A                     lcd_puts@s:	
   693                           ; 1 bytes @ 0xA
   694                           
   695                           
   696                           ; 2 bytes @ 0xA
   697     007A                     	ds	1
   698     007B                     ?_fputc:
   699     007B                     read_prec_or_width@fmt:	
   700                           ; 2 bytes @ 0xB
   701                           
   702     007B                     fputc@c:	
   703                           ; 1 bytes @ 0xB
   704                           
   705                           
   706                           ; 2 bytes @ 0xB
   707     007B                     	ds	1
   708     007C                     ??_lcd_puts:
   709                           
   710                           ; 1 bytes @ 0xC
   711     007C                     	ds	1
   712     007D                     fputc@fp:
   713                           
   714                           ; 1 bytes @ 0xD
   715     007D                     	ds	1
   716     007E                     ??_vfprintf:
   717     007E                     ??_main:	
   718                           ; 1 bytes @ 0xE
   719                           
   720     007E                     ??_dtoa:	
   721                           ; 1 bytes @ 0xE
   722                           
   723                           
   724                           	psect	cstackBANK0
   725     0020                     __pcstackBANK0:	
   726                           ; 1 bytes @ 0xE
   727                           
   728     0020                     ??_fputc:
   729                           
   730                           ; 1 bytes @ 0x0
   731     0020                     	ds	5
   732     0025                     ?_fputs:
   733     0025                     fputs@fp:	
   734                           ; 2 bytes @ 0x5
   735                           
   736                           
   737                           ; 1 bytes @ 0x5
   738     0025                     	ds	1
   739     0026                     ??_fputs:
   740                           
   741                           ; 1 bytes @ 0x6
   742     0026                     	ds	2
   743     0028                     fputs@c:
   744                           
   745                           ; 1 bytes @ 0x8
   746     0028                     	ds	1
   747     0029                     fputs@i:
   748                           
   749                           ; 2 bytes @ 0x9
   750     0029                     	ds	2
   751     002B                     fputs@s:
   752                           
   753                           ; 1 bytes @ 0xB
   754     002B                     	ds	1
   755     002C                     ?_pad:
   756     002C                     pad@buf:	
   757                           ; 1 bytes @ 0xC
   758                           
   759                           
   760                           ; 1 bytes @ 0xC
   761     002C                     	ds	1
   762     002D                     pad@p:
   763                           
   764                           ; 2 bytes @ 0xD
   765     002D                     	ds	2
   766     002F                     ??_pad:
   767                           
   768                           ; 1 bytes @ 0xF
   769     002F                     	ds	1
   770     0030                     pad@i:
   771                           
   772                           ; 2 bytes @ 0x10
   773     0030                     	ds	2
   774     0032                     pad@fp:
   775                           
   776                           ; 1 bytes @ 0x12
   777     0032                     	ds	1
   778     0033                     ?_dtoa:
   779     0033                     dtoa@d:	
   780                           ; 1 bytes @ 0x13
   781                           
   782                           
   783                           ; 2 bytes @ 0x13
   784     0033                     	ds	2
   785     0035                     _dtoa$713:
   786                           
   787                           ; 2 bytes @ 0x15
   788     0035                     	ds	2
   789     0037                     dtoa@fp:
   790                           
   791                           ; 1 bytes @ 0x17
   792     0037                     	ds	1
   793     0038                     dtoa@w:
   794                           
   795                           ; 2 bytes @ 0x18
   796     0038                     	ds	2
   797     003A                     dtoa@p:
   798                           
   799                           ; 2 bytes @ 0x1A
   800     003A                     	ds	2
   801     003C                     dtoa@s:
   802                           
   803                           ; 1 bytes @ 0x1C
   804     003C                     	ds	1
   805     003D                     dtoa@i:
   806                           
   807                           ; 2 bytes @ 0x1D
   808     003D                     	ds	2
   809     003F                     ?_vfpfcnvrt:
   810     003F                     vfpfcnvrt@fmt:	
   811                           ; 1 bytes @ 0x1F
   812                           
   813                           
   814                           ; 1 bytes @ 0x1F
   815     003F                     	ds	1
   816     0040                     vfpfcnvrt@ap:
   817                           
   818                           ; 1 bytes @ 0x20
   819     0040                     	ds	1
   820     0041                     ??_vfpfcnvrt:
   821                           
   822                           ; 1 bytes @ 0x21
   823     0041                     	ds	2
   824     0043                     vfpfcnvrt@convarg:
   825                           
   826                           ; 4 bytes @ 0x23
   827     0043                     	ds	4
   828     0047                     vfpfcnvrt@fp:
   829                           
   830                           ; 1 bytes @ 0x27
   831     0047                     	ds	1
   832     0048                     vfpfcnvrt@cp:
   833                           
   834                           ; 1 bytes @ 0x28
   835     0048                     	ds	1
   836     0049                     ?_vfprintf:
   837     0049                     vfprintf@fmt:	
   838                           ; 2 bytes @ 0x29
   839                           
   840                           
   841                           ; 1 bytes @ 0x29
   842     0049                     	ds	1
   843     004A                     vfprintf@ap:
   844                           
   845                           ; 1 bytes @ 0x2A
   846     004A                     	ds	1
   847     004B                     vfprintf@fp:
   848                           
   849                           ; 1 bytes @ 0x2B
   850     004B                     	ds	1
   851     004C                     vfprintf@cfmt:
   852                           
   853                           ; 1 bytes @ 0x2C
   854     004C                     	ds	1
   855     004D                     ?_sprintf:
   856     004D                     sprintf@fmt:	
   857                           ; 2 bytes @ 0x2D
   858                           
   859                           
   860                           ; 1 bytes @ 0x2D
   861     004D                     	ds	3
   862     0050                     ??_sprintf:
   863                           
   864                           ; 1 bytes @ 0x30
   865     0050                     	ds	1
   866     0051                     sprintf@ap:
   867                           
   868                           ; 1 bytes @ 0x31
   869     0051                     	ds	1
   870     0052                     sprintf@s:
   871                           
   872                           ; 1 bytes @ 0x32
   873     0052                     	ds	1
   874     0053                     sprintf@f:
   875                           
   876                           ; 11 bytes @ 0x33
   877     0053                     	ds	11
   878     005E                     main@data:
   879                           
   880                           ; 4 bytes @ 0x3E
   881     005E                     	ds	4
   882     0062                     main@i:
   883                           
   884                           ; 2 bytes @ 0x42
   885     0062                     	ds	2
   886                           
   887                           	psect	maintext
   888     0553                     __pmaintext:	
   889 ;;
   890 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   891 ;;
   892 ;; *************** function _main *****************
   893 ;; Defined at:
   894 ;;		line 55 in file "BT2.c"
   895 ;; Parameters:    Size  Location     Type
   896 ;;		None
   897 ;; Auto vars:     Size  Location     Type
   898 ;;  i               2   66[BANK0 ] int 
   899 ;;  data            4   62[BANK0 ] unsigned char [4]
   900 ;; Return value:  Size  Location     Type
   901 ;;                  1    wreg      void 
   902 ;; Registers used:
   903 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   904 ;; Tracked objects:
   905 ;;		On entry : B00/0
   906 ;;		On exit  : 0/0
   907 ;;		Unchanged: 0/0
   908 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   909 ;;      Params:         0       0       0       0       0
   910 ;;      Locals:         0       6       0       0       0
   911 ;;      Temps:          0       0       0       0       0
   912 ;;      Totals:         0       6       0       0       0
   913 ;;Total ram usage:        6 bytes
   914 ;; Hardware stack levels required when called: 12
   915 ;; This function calls:
   916 ;;		_lcd_gotoxy
   917 ;;		_lcd_init
   918 ;;		_lcd_putc
   919 ;;		_lcd_puts
   920 ;;		_load_custom_characters
   921 ;;		_sprintf
   922 ;; This function is called by:
   923 ;;		Startup code after reset
   924 ;; This function uses a non-reentrant model
   925 ;;
   926                           
   927     0553                     _main:	
   928                           ;psect for function _main
   929                           
   930     0553                     l1769:	
   931                           ;incstack = 0
   932 ;; hardware stack exceeded
   933                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   934                           
   935                           
   936                           ;BT2.c: 57:     ANSEL = ANSELH = 0x00;
   937     0553  1683               	bsf	3,5	;RP0=1, select bank3
   938     0554  1703               	bsf	3,6	;RP1=1, select bank3
   939     0555  0189               	clrf	9	;volatile
   940     0556  0188               	clrf	8	;volatile
   941     0557                     l1771:
   942                           
   943                           ;BT2.c: 59:     TRISC0 = 1;
   944     0557  1683               	bsf	3,5	;RP0=1, select bank1
   945     0558  1303               	bcf	3,6	;RP1=0, select bank1
   946     0559  1407               	bsf	7,0	;volatile
   947                           
   948                           ;BT2.c: 60:     char data[4];;BT2.c: 61:     TMR1=0;
   949     055A  1283               	bcf	3,5	;RP0=0, select bank0
   950     055B  1303               	bcf	3,6	;RP1=0, select bank0
   951     055C  018E               	clrf	14	;volatile
   952     055D  018F               	clrf	15	;volatile
   953     055E                     l1773:
   954                           
   955                           ;BT2.c: 62:     TMR1IF=0;
   956     055E  100C               	bcf	12,0	;volatile
   957     055F                     l1775:
   958                           
   959                           ;BT2.c: 63:     TMR1CS=1;
   960     055F  1490               	bsf	16,1	;volatile
   961     0560                     l1777:
   962                           
   963                           ;BT2.c: 64:     T1OSCEN=0;
   964     0560  1190               	bcf	16,3	;volatile
   965     0561                     l1779:
   966                           
   967                           ;BT2.c: 65:     GIE=PEIE=TMR1IE=0;
   968     0561  1683               	bsf	3,5	;RP0=1, select bank1
   969     0562  1303               	bcf	3,6	;RP1=0, select bank1
   970     0563  100C               	bcf	12,0	;volatile
   971     0564  130B               	bcf	11,6	;volatile
   972     0565  138B               	bcf	11,7	;volatile
   973     0566                     l1781:
   974                           
   975                           ;BT2.c: 66:     T1CKPS1=0; T1CKPS0=0;
   976     0566  1283               	bcf	3,5	;RP0=0, select bank0
   977     0567  1303               	bcf	3,6	;RP1=0, select bank0
   978     0568  1290               	bcf	16,5	;volatile
   979     0569                     l1783:
   980     0569  1210               	bcf	16,4	;volatile
   981     056A                     l1785:
   982                           
   983                           ;BT2.c: 67:     T1SYNC=0;
   984     056A  1110               	bcf	16,2	;volatile
   985     056B                     l1787:
   986                           
   987                           ;BT2.c: 68:     TMR1ON=1;
   988     056B  1410               	bsf	16,0	;volatile
   989     056C                     l1789:
   990                           
   991                           ;BT2.c: 72:     lcd_init();
   992     056C  120A  118A  25E6  120A  118A  	fcall	_lcd_init
   993     0571                     l1791:
   994                           
   995                           ;BT2.c: 73:     load_custom_characters(cgram_dat, 0);
   996     0571  01F6               	clrf	load_custom_characters@start_address
   997     0572  3010               	movlw	(low ((_cgram_dat-__stringbase)| (0+32768)))& (0+255)
   998     0573  120A  118A  2347  120A  118A  	fcall	_load_custom_characters
   999     0578                     l1793:
  1000                           
  1001                           ;BT2.c: 74:     lcd_putc('\f');
  1002     0578  300C               	movlw	12
  1003     0579  120A  118A  2391  120A  118A  	fcall	_lcd_putc
  1004     057E                     l1795:
  1005                           
  1006                           ;BT2.c: 75:     lcd_gotoxy(0, 0);
  1007     057E  01F6               	clrf	lcd_gotoxy@row
  1008     057F  3000               	movlw	0
  1009     0580  120A  118A  21CB  120A  118A  	fcall	_lcd_gotoxy
  1010     0585                     l1797:
  1011                           
  1012                           ;BT2.c: 76:     for(int i = 0 ;i <= sizeof(dat_line1)-1; i++)
  1013     0585  1283               	bcf	3,5	;RP0=0, select bank0
  1014     0586  1303               	bcf	3,6	;RP1=0, select bank0
  1015     0587  01E2               	clrf	main@i
  1016     0588  01E3               	clrf	main@i+1
  1017     0589                     l1803:
  1018                           
  1019                           ;BT2.c: 77:     {;BT2.c: 78:         lcd_putc(dat_line1[i]);
  1020     0589  0862               	movf	main@i,w
  1021     058A  3E01               	addlw	low ((_dat_line1-__stringbase)| (0+32768))
  1022     058B  0084               	movwf	4
  1023     058C  120A  118A  200D  120A  118A  	fcall	stringdir
  1024     0591  120A  118A  2391  120A  118A  	fcall	_lcd_putc
  1025     0596                     l1805:
  1026                           
  1027                           ;BT2.c: 79:     }
  1028     0596  3001               	movlw	1
  1029     0597  1283               	bcf	3,5	;RP0=0, select bank0
  1030     0598  1303               	bcf	3,6	;RP1=0, select bank0
  1031     0599  07E2               	addwf	main@i,f
  1032     059A  1803               	skipnc
  1033     059B  0AE3               	incf	main@i+1,f
  1034     059C  3000               	movlw	0
  1035     059D  07E3               	addwf	main@i+1,f
  1036     059E                     l1807:
  1037     059E  3000               	movlw	0
  1038     059F  0263               	subwf	main@i+1,w
  1039     05A0  300F               	movlw	15
  1040     05A1  1903               	skipnz
  1041     05A2  0262               	subwf	main@i,w
  1042     05A3  1C03               	skipc
  1043     05A4  2DA6               	goto	u1591
  1044     05A5  2DA7               	goto	u1590
  1045     05A6                     u1591:
  1046     05A6  2D89               	goto	l1803
  1047     05A7                     u1590:
  1048     05A7                     l1809:
  1049                           
  1050                           ;BT2.c: 80:     lcd_gotoxy(8, 1);
  1051     05A7  01F6               	clrf	lcd_gotoxy@row
  1052     05A8  0AF6               	incf	lcd_gotoxy@row,f
  1053     05A9  3008               	movlw	8
  1054     05AA  120A  118A  21CB  120A  118A  	fcall	_lcd_gotoxy
  1055     05AF                     l1811:
  1056                           
  1057                           ;BT2.c: 81:     lcd_puts("00");
  1058     05AF  3056               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1059     05B0  00FA               	movwf	lcd_puts@s
  1060     05B1  3080               	movlw	128
  1061     05B2  00FB               	movwf	lcd_puts@s+1
  1062     05B3  120A  118A  2212  120A  118A  	fcall	_lcd_puts
  1063     05B8                     l1813:
  1064                           
  1065                           ;BT2.c: 83:         if(TMR1 > 30) TMR1 = 0;
  1066     05B8  3000               	movlw	0
  1067     05B9  1283               	bcf	3,5	;RP0=0, select bank0
  1068     05BA  1303               	bcf	3,6	;RP1=0, select bank0
  1069     05BB  020F               	subwf	15,w	;volatile
  1070     05BC  301F               	movlw	31
  1071     05BD  1903               	skipnz
  1072     05BE  020E               	subwf	14,w	;volatile
  1073     05BF  1C03               	skipc
  1074     05C0  2DC2               	goto	u1601
  1075     05C1  2DC3               	goto	u1600
  1076     05C2                     u1601:
  1077     05C2  2DC5               	goto	l1817
  1078     05C3                     u1600:
  1079     05C3                     l1815:
  1080     05C3  018E               	clrf	14	;volatile
  1081     05C4  018F               	clrf	15	;volatile
  1082     05C5                     l1817:
  1083                           
  1084                           ;BT2.c: 84:         sprintf(data, "%.2d", TMR1);
  1085     05C5  3051               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1086     05C6  00CD               	movwf	sprintf@fmt
  1087     05C7  080F               	movf	15,w	;volatile
  1088     05C8  00CF               	movwf	?_sprintf+2
  1089     05C9  080E               	movf	14,w	;volatile
  1090     05CA  00CE               	movwf	?_sprintf+1
  1091     05CB  305E               	movlw	(low (main@data| 0))& (0+255)
  1092     05CC  120A  118A  218B  120A  118A  	fcall	_sprintf
  1093     05D1                     l1819:
  1094                           
  1095                           ;BT2.c: 85:         lcd_gotoxy(8, 1);
  1096     05D1  01F6               	clrf	lcd_gotoxy@row
  1097     05D2  0AF6               	incf	lcd_gotoxy@row,f
  1098     05D3  3008               	movlw	8
  1099     05D4  120A  118A  21CB  120A  118A  	fcall	_lcd_gotoxy
  1100     05D9                     l1821:
  1101                           
  1102                           ;BT2.c: 86:         lcd_puts(data);
  1103     05D9  305E               	movlw	(low (main@data| 0))& (0+255)
  1104     05DA  00FA               	movwf	lcd_puts@s
  1105     05DB  3000               	movlw	0
  1106     05DC  00FB               	movwf	lcd_puts@s+1
  1107     05DD  120A  118A  2212  120A  118A  	fcall	_lcd_puts
  1108     05E2  2DB8               	goto	l1813
  1109     05E3  120A  118A  2800   	ljmp	start
  1110     05E6                     __end_of_main:
  1111                           
  1112                           	psect	text1
  1113     018B                     __ptext1:	
  1114 ;; *************** function _sprintf *****************
  1115 ;; Defined at:
  1116 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\nf_sprintf.c"
  1117 ;; Parameters:    Size  Location     Type
  1118 ;;  s               1    wreg     PTR unsigned char 
  1119 ;;		 -> main@data(4), 
  1120 ;;  fmt             1   45[BANK0 ] PTR const unsigned char 
  1121 ;;		 -> STR_2(5), 
  1122 ;; Auto vars:     Size  Location     Type
  1123 ;;  s               1   50[BANK0 ] PTR unsigned char 
  1124 ;;		 -> main@data(4), 
  1125 ;;  f              11   51[BANK0 ] struct _IO_FILE
  1126 ;;  ret             2    0        int 
  1127 ;;  ap              1   49[BANK0 ] PTR void [1]
  1128 ;;		 -> ?_sprintf(2), 
  1129 ;; Return value:  Size  Location     Type
  1130 ;;                  2   45[BANK0 ] int 
  1131 ;; Registers used:
  1132 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1133 ;; Tracked objects:
  1134 ;;		On entry : 0/0
  1135 ;;		On exit  : 0/0
  1136 ;;		Unchanged: 0/0
  1137 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1138 ;;      Params:         0       3       0       0       0
  1139 ;;      Locals:         0      13       0       0       0
  1140 ;;      Temps:          0       1       0       0       0
  1141 ;;      Totals:         0      17       0       0       0
  1142 ;;Total ram usage:       17 bytes
  1143 ;; Hardware stack levels used: 1
  1144 ;; Hardware stack levels required when called: 11
  1145 ;; This function calls:
  1146 ;;		_vfprintf
  1147 ;; This function is called by:
  1148 ;;		_main
  1149 ;; This function uses a non-reentrant model
  1150 ;;
  1151                           
  1152     018B                     _sprintf:	
  1153                           ;psect for function _sprintf
  1154                           
  1155                           
  1156                           ;incstack = 0
  1157 ;; hardware stack exceeded
  1158                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1159                           ;sprintf@s stored from wreg
  1160     018B  1283               	bcf	3,5	;RP0=0, select bank0
  1161     018C  1303               	bcf	3,6	;RP1=0, select bank0
  1162     018D  00D2               	movwf	sprintf@s
  1163     018E                     l1753:
  1164     018E  304E               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1165     018F  00D1               	movwf	sprintf@ap
  1166     0190  0852               	movf	sprintf@s,w
  1167     0191  00D3               	movwf	sprintf@f
  1168     0192                     l1755:
  1169     0192  01D5               	clrf	sprintf@f+2
  1170     0193  01D6               	clrf	sprintf@f+3
  1171     0194                     l1757:
  1172     0194  01DC               	clrf	sprintf@f+9
  1173     0195  01DD               	clrf	sprintf@f+10
  1174     0196                     l1759:
  1175     0196  084D               	movf	sprintf@fmt,w
  1176     0197  00C9               	movwf	vfprintf@fmt
  1177     0198  3051               	movlw	(low (sprintf@ap| 0))& (0+255)
  1178     0199  00CA               	movwf	vfprintf@ap
  1179     019A  3053               	movlw	(low (sprintf@f| 0))& (0+255)
  1180     019B  120A  118A  21AA  120A  118A  	fcall	_vfprintf
  1181     01A0                     l1761:
  1182     01A0  1283               	bcf	3,5	;RP0=0, select bank0
  1183     01A1  1303               	bcf	3,6	;RP1=0, select bank0
  1184     01A2  0855               	movf	sprintf@f+2,w
  1185     01A3  0752               	addwf	sprintf@s,w
  1186     01A4  00D0               	movwf	??_sprintf
  1187     01A5  0850               	movf	??_sprintf,w
  1188     01A6  0084               	movwf	4
  1189     01A7  1383               	bcf	3,7	;select IRP bank0
  1190     01A8  0180               	clrf	0
  1191     01A9                     l741:
  1192     01A9  0008               	return
  1193     01AA                     __end_of_sprintf:
  1194                           
  1195                           	psect	text2
  1196     01AA                     __ptext2:	
  1197 ;; *************** function _vfprintf *****************
  1198 ;; Defined at:
  1199 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  1200 ;; Parameters:    Size  Location     Type
  1201 ;;  fp              1    wreg     PTR struct _IO_FILE
  1202 ;;		 -> sprintf@f(11), 
  1203 ;;  fmt             1   41[BANK0 ] PTR const unsigned char 
  1204 ;;		 -> STR_2(5), 
  1205 ;;  ap              1   42[BANK0 ] PTR PTR void 
  1206 ;;		 -> sprintf@ap(1), 
  1207 ;; Auto vars:     Size  Location     Type
  1208 ;;  fp              1   43[BANK0 ] PTR struct _IO_FILE
  1209 ;;		 -> sprintf@f(11), 
  1210 ;;  cfmt            1   44[BANK0 ] PTR unsigned char 
  1211 ;;		 -> STR_2(5), 
  1212 ;; Return value:  Size  Location     Type
  1213 ;;                  2   41[BANK0 ] int 
  1214 ;; Registers used:
  1215 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1216 ;; Tracked objects:
  1217 ;;		On entry : 0/0
  1218 ;;		On exit  : 0/0
  1219 ;;		Unchanged: 0/0
  1220 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1221 ;;      Params:         0       2       0       0       0
  1222 ;;      Locals:         0       2       0       0       0
  1223 ;;      Temps:          0       0       0       0       0
  1224 ;;      Totals:         0       4       0       0       0
  1225 ;;Total ram usage:        4 bytes
  1226 ;; Hardware stack levels used: 1
  1227 ;; Hardware stack levels required when called: 10
  1228 ;; This function calls:
  1229 ;;		_vfpfcnvrt
  1230 ;; This function is called by:
  1231 ;;		_sprintf
  1232 ;; This function uses a non-reentrant model
  1233 ;;
  1234                           
  1235     01AA                     _vfprintf:	
  1236                           ;psect for function _vfprintf
  1237                           
  1238                           
  1239                           ;incstack = 0
  1240 ;; hardware stack exceeded
  1241                           ; Regs used in _vfprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1242                           ;vfprintf@fp stored from wreg
  1243     01AA  1283               	bcf	3,5	;RP0=0, select bank0
  1244     01AB  1303               	bcf	3,6	;RP1=0, select bank0
  1245     01AC  00CB               	movwf	vfprintf@fp
  1246     01AD                     l1683:
  1247                           
  1248                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.46\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  1249     01AD  0849               	movf	vfprintf@fmt,w
  1250     01AE  00CC               	movwf	vfprintf@cfmt
  1251                           
  1252                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1253     01AF  29BA               	goto	l1687
  1254     01B0                     l1685:
  1255                           
  1256                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  1257     01B0  304C               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  1258     01B1  00BF               	movwf	vfpfcnvrt@fmt
  1259     01B2  084A               	movf	vfprintf@ap,w
  1260     01B3  00C0               	movwf	vfpfcnvrt@ap
  1261     01B4  084B               	movf	vfprintf@fp,w
  1262     01B5  120A  118A  2683  120A  118A  	fcall	_vfpfcnvrt
  1263     01BA                     l1687:
  1264                           
  1265                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1266     01BA  1283               	bcf	3,5	;RP0=0, select bank0
  1267     01BB  1303               	bcf	3,6	;RP1=0, select bank0
  1268     01BC  084C               	movf	vfprintf@cfmt,w
  1269     01BD  0084               	movwf	4
  1270     01BE  120A  118A  200D  120A  118A  	fcall	stringdir
  1271     01C3  3A00               	xorlw	0
  1272     01C4  1D03               	skipz
  1273     01C5  29C7               	goto	u1481
  1274     01C6  29C8               	goto	u1480
  1275     01C7                     u1481:
  1276     01C7  29B0               	goto	l1685
  1277     01C8                     u1480:
  1278     01C8                     l1689:
  1279                           
  1280                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  1281     01C8  01C9               	clrf	?_vfprintf
  1282     01C9  01CA               	clrf	?_vfprintf+1
  1283     01CA                     l804:
  1284     01CA  0008               	return
  1285     01CB                     __end_of_vfprintf:
  1286                           
  1287                           	psect	text3
  1288     0683                     __ptext3:	
  1289 ;; *************** function _vfpfcnvrt *****************
  1290 ;; Defined at:
  1291 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  1292 ;; Parameters:    Size  Location     Type
  1293 ;;  fp              1    wreg     PTR struct _IO_FILE
  1294 ;;		 -> sprintf@f(11), 
  1295 ;;  fmt             1   31[BANK0 ] PTR PTR unsigned char 
  1296 ;;		 -> vfprintf@cfmt(1), 
  1297 ;;  ap              1   32[BANK0 ] PTR PTR void 
  1298 ;;		 -> sprintf@ap(1), 
  1299 ;; Auto vars:     Size  Location     Type
  1300 ;;  fp              1   39[BANK0 ] PTR struct _IO_FILE
  1301 ;;		 -> sprintf@f(11), 
  1302 ;;  convarg         4   35[BANK0 ] struct .
  1303 ;;  cp              1   40[BANK0 ] PTR unsigned char 
  1304 ;;		 -> STR_2(5), 
  1305 ;;  done            1    0        _Bool 
  1306 ;;  c               1    0        unsigned char 
  1307 ;; Return value:  Size  Location     Type
  1308 ;;                  1    wreg      void 
  1309 ;; Registers used:
  1310 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1311 ;; Tracked objects:
  1312 ;;		On entry : 0/0
  1313 ;;		On exit  : 0/0
  1314 ;;		Unchanged: 0/0
  1315 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1316 ;;      Params:         0       2       0       0       0
  1317 ;;      Locals:         0       6       0       0       0
  1318 ;;      Temps:          0       2       0       0       0
  1319 ;;      Totals:         0      10       0       0       0
  1320 ;;Total ram usage:       10 bytes
  1321 ;; Hardware stack levels used: 1
  1322 ;; Hardware stack levels required when called: 9
  1323 ;; This function calls:
  1324 ;;		_dtoa
  1325 ;;		_fputc
  1326 ;;		_read_prec_or_width
  1327 ;; This function is called by:
  1328 ;;		_vfprintf
  1329 ;; This function uses a non-reentrant model
  1330 ;;
  1331                           
  1332     0683                     _vfpfcnvrt:	
  1333                           ;psect for function _vfpfcnvrt
  1334                           
  1335                           
  1336                           ;incstack = 0
  1337 ;; hardware stack exceeded
  1338                           ; Regs used in _vfpfcnvrt: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1339                           ;vfpfcnvrt@fp stored from wreg
  1340     0683  1283               	bcf	3,5	;RP0=0, select bank0
  1341     0684  1303               	bcf	3,6	;RP1=0, select bank0
  1342     0685  00C7               	movwf	vfpfcnvrt@fp
  1343     0686                     l1645:
  1344                           
  1345                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  1346     0686  083F               	movf	vfpfcnvrt@fmt,w
  1347     0687  0084               	movwf	4
  1348     0688  1383               	bcf	3,7	;select IRP bank0
  1349     0689  0800               	movf	0,w
  1350     068A  0084               	movwf	4
  1351     068B  120A  118A  200D  120A  118A  	fcall	stringdir
  1352     0690  3A25               	xorlw	37
  1353     0691  1D03               	skipz
  1354     0692  2E94               	goto	u1441
  1355     0693  2E95               	goto	u1440
  1356     0694                     u1441:
  1357     0694  2F0C               	goto	l1677
  1358     0695                     u1440:
  1359     0695                     l1647:
  1360                           
  1361                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  1362     0695  3001               	movlw	1
  1363     0696  00FF               	movwf	btemp+1
  1364     0697  083F               	movf	vfpfcnvrt@fmt,w
  1365     0698  0084               	movwf	4
  1366     0699  087F               	movf	btemp+1,w
  1367     069A  0780               	addwf	0,f
  1368     069B                     l1649:
  1369                           
  1370                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  1371     069B  01E4               	clrf	_width
  1372     069C  01E5               	clrf	_width+1
  1373     069D  1003               	clrc
  1374     069E  3000               	movlw	0
  1375     069F  1803               	btfsc	3,0
  1376     06A0  3001               	movlw	1
  1377     06A1  00E8               	movwf	_flags
  1378     06A2                     l1651:
  1379                           
  1380                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  1381     06A2  30FF               	movlw	255
  1382     06A3  00E6               	movwf	_prec
  1383     06A4  30FF               	movlw	255
  1384     06A5  00E7               	movwf	_prec+1
  1385     06A6                     l1653:
  1386                           
  1387                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1265:         if 
      +                          ((*fmt)[0] == '.') {
  1388     06A6  083F               	movf	vfpfcnvrt@fmt,w
  1389     06A7  0084               	movwf	4
  1390     06A8  0800               	movf	0,w
  1391     06A9  0084               	movwf	4
  1392     06AA  120A  118A  200D  120A  118A  	fcall	stringdir
  1393     06AF  3A2E               	xorlw	46
  1394     06B0  1D03               	skipz
  1395     06B1  2EB3               	goto	u1451
  1396     06B2  2EB4               	goto	u1450
  1397     06B3                     u1451:
  1398     06B3  2EC8               	goto	l1659
  1399     06B4                     u1450:
  1400     06B4                     l1655:
  1401                           
  1402                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1266:            
      +                           ++*fmt;
  1403     06B4  3001               	movlw	1
  1404     06B5  00FF               	movwf	btemp+1
  1405     06B6  083F               	movf	vfpfcnvrt@fmt,w
  1406     06B7  0084               	movwf	4
  1407     06B8  087F               	movf	btemp+1,w
  1408     06B9  0780               	addwf	0,f
  1409     06BA                     l1657:
  1410                           
  1411                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1267:    prec = r
      +                          ead_prec_or_width(fmt, ap);
  1412     06BA  0840               	movf	vfpfcnvrt@ap,w
  1413     06BB  00F6               	movwf	read_prec_or_width@ap
  1414     06BC  083F               	movf	vfpfcnvrt@fmt,w
  1415     06BD  120A  118A  23E1  120A  118A  	fcall	_read_prec_or_width
  1416     06C2  0877               	movf	?_read_prec_or_width+1,w
  1417     06C3  1283               	bcf	3,5	;RP0=0, select bank0
  1418     06C4  1303               	bcf	3,6	;RP1=0, select bank0
  1419     06C5  00E7               	movwf	_prec+1
  1420     06C6  0876               	movf	?_read_prec_or_width,w
  1421     06C7  00E6               	movwf	_prec
  1422     06C8                     l1659:
  1423                           
  1424                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  1425     06C8  083F               	movf	vfpfcnvrt@fmt,w
  1426     06C9  0084               	movwf	4
  1427     06CA  1383               	bcf	3,7	;select IRP bank0
  1428     06CB  0800               	movf	0,w
  1429     06CC  00C8               	movwf	vfpfcnvrt@cp
  1430     06CD                     l1661:
  1431                           
  1432                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  1433     06CD  0848               	movf	vfpfcnvrt@cp,w
  1434     06CE  0084               	movwf	4
  1435     06CF  120A  118A  200D  120A  118A  	fcall	stringdir
  1436     06D4  3A64               	xorlw	100
  1437     06D5  1903               	skipnz
  1438     06D6  2ED8               	goto	u1461
  1439     06D7  2ED9               	goto	u1460
  1440     06D8                     u1461:
  1441     06D8  2EE5               	goto	l1665
  1442     06D9                     u1460:
  1443     06D9                     l1663:
  1444     06D9  0848               	movf	vfpfcnvrt@cp,w
  1445     06DA  0084               	movwf	4
  1446     06DB  120A  118A  200D  120A  118A  	fcall	stringdir
  1447     06E0  3A69               	xorlw	105
  1448     06E1  1D03               	skipz
  1449     06E2  2EE4               	goto	u1471
  1450     06E3  2EE5               	goto	u1470
  1451     06E4                     u1471:
  1452     06E4  2F02               	goto	l1673
  1453     06E5                     u1470:
  1454     06E5                     l1665:
  1455                           
  1456                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  1457     06E5  0840               	movf	vfpfcnvrt@ap,w
  1458     06E6  0084               	movwf	4
  1459     06E7  0800               	movf	0,w
  1460     06E8  00FF               	movwf	btemp+1
  1461     06E9  3002               	movlw	2
  1462     06EA  0780               	addwf	0,f
  1463     06EB  087F               	movf	btemp+1,w
  1464     06EC  0084               	movwf	4
  1465     06ED  0800               	movf	0,w
  1466     06EE  00C3               	movwf	vfpfcnvrt@convarg
  1467     06EF  0A84               	incf	4,f
  1468     06F0  0800               	movf	0,w
  1469     06F1  00C4               	movwf	vfpfcnvrt@convarg+1
  1470     06F2                     l1667:
  1471                           
  1472                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  1473     06F2  083F               	movf	vfpfcnvrt@fmt,w
  1474     06F3  0084               	movwf	4
  1475     06F4  0848               	movf	vfpfcnvrt@cp,w
  1476     06F5  3E01               	addlw	1
  1477     06F6  0080               	movwf	0
  1478     06F7                     l1669:
  1479                           
  1480                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1432:    return (
      +                          void) dtoa(fp, convarg.sint);;	Return value of _vfpfcnvrt is never used
  1481     06F7  0844               	movf	vfpfcnvrt@convarg+1,w
  1482     06F8  00B4               	movwf	dtoa@d+1
  1483     06F9  0843               	movf	vfpfcnvrt@convarg,w
  1484     06FA  00B3               	movwf	dtoa@d
  1485     06FB  0847               	movf	vfpfcnvrt@fp,w
  1486     06FC  120A  118A  2724  120A  118A  	fcall	_dtoa
  1487     0701  2F23               	goto	l798
  1488     0702                     l1673:
  1489                           
  1490                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  1491     0702  3001               	movlw	1
  1492     0703  00FF               	movwf	btemp+1
  1493     0704  1283               	bcf	3,5	;RP0=0, select bank0
  1494     0705  1303               	bcf	3,6	;RP1=0, select bank0
  1495     0706  083F               	movf	vfpfcnvrt@fmt,w
  1496     0707  0084               	movwf	4
  1497     0708  087F               	movf	btemp+1,w
  1498     0709  1383               	bcf	3,7	;select IRP bank0
  1499     070A  0780               	addwf	0,f
  1500     070B  2F23               	goto	l798
  1501     070C                     l1677:
  1502                           
  1503                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  1504     070C  083F               	movf	vfpfcnvrt@fmt,w
  1505     070D  0084               	movwf	4
  1506     070E  0800               	movf	0,w
  1507     070F  0084               	movwf	4
  1508     0710  120A  118A  200D  120A  118A  	fcall	stringdir
  1509     0715  00C1               	movwf	??_vfpfcnvrt
  1510     0716  01C2               	clrf	??_vfpfcnvrt+1
  1511     0717  0841               	movf	??_vfpfcnvrt,w
  1512     0718  00FB               	movwf	fputc@c
  1513     0719  0842               	movf	??_vfpfcnvrt+1,w
  1514     071A  00FC               	movwf	fputc@c+1
  1515     071B  0847               	movf	vfpfcnvrt@fp,w
  1516     071C  00FD               	movwf	fputc@fp
  1517     071D  120A  118A  2492  120A  118A  	fcall	_fputc
  1518     0722  2F02               	goto	l1673
  1519     0723                     l798:
  1520     0723  0008               	return
  1521     0724                     __end_of_vfpfcnvrt:
  1522                           
  1523                           	psect	text4
  1524     03E1                     __ptext4:	
  1525 ;; *************** function _read_prec_or_width *****************
  1526 ;; Defined at:
  1527 ;;		line 1158 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  1528 ;; Parameters:    Size  Location     Type
  1529 ;;  fmt             1    wreg     PTR PTR const unsigned c
  1530 ;;		 -> vfprintf@cfmt(1), 
  1531 ;;  ap              1    6[COMMON] PTR PTR void [1]
  1532 ;;		 -> sprintf@ap(1), 
  1533 ;; Auto vars:     Size  Location     Type
  1534 ;;  fmt             1   11[COMMON] PTR PTR const unsigned c
  1535 ;;		 -> vfprintf@cfmt(1), 
  1536 ;;  c               1    8[COMMON] unsigned char 
  1537 ;;  n               2    9[COMMON] int 
  1538 ;; Return value:  Size  Location     Type
  1539 ;;                  2    6[COMMON] int 
  1540 ;; Registers used:
  1541 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1542 ;; Tracked objects:
  1543 ;;		On entry : 0/0
  1544 ;;		On exit  : 0/0
  1545 ;;		Unchanged: 0/0
  1546 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1547 ;;      Params:         2       0       0       0       0
  1548 ;;      Locals:         4       0       0       0       0
  1549 ;;      Temps:          0       0       0       0       0
  1550 ;;      Totals:         6       0       0       0       0
  1551 ;;Total ram usage:        6 bytes
  1552 ;; Hardware stack levels used: 1
  1553 ;; Hardware stack levels required when called: 1
  1554 ;; This function calls:
  1555 ;;		___wmul
  1556 ;; This function is called by:
  1557 ;;		_vfpfcnvrt
  1558 ;; This function uses a non-reentrant model
  1559 ;;
  1560                           
  1561     03E1                     _read_prec_or_width:	
  1562                           ;psect for function _read_prec_or_width
  1563                           
  1564                           
  1565                           ;incstack = 0
  1566                           ; Regs used in _read_prec_or_width: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1567                           ;read_prec_or_width@fmt stored from wreg
  1568     03E1  00FB               	movwf	read_prec_or_width@fmt
  1569     03E2                     l1629:
  1570                           
  1571                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1159:     int n =
      +                           0;
  1572     03E2  01F9               	clrf	read_prec_or_width@n
  1573     03E3  01FA               	clrf	read_prec_or_width@n+1
  1574     03E4                     l1631:
  1575                           
  1576                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1160:     if ((*f
      +                          mt)[0] == '*') {
  1577     03E4  087B               	movf	read_prec_or_width@fmt,w
  1578     03E5  0084               	movwf	4
  1579     03E6  1383               	bcf	3,7	;select IRP bank0
  1580     03E7  0800               	movf	0,w
  1581     03E8  0084               	movwf	4
  1582     03E9  120A  118A  200D  120A  118A  	fcall	stringdir
  1583     03EE  3A2A               	xorlw	42
  1584     03EF  1D03               	skipz
  1585     03F0  2BF2               	goto	u1421
  1586     03F1  2BF3               	goto	u1420
  1587     03F2                     u1421:
  1588     03F2  2C23               	goto	l1639
  1589     03F3                     u1420:
  1590     03F3                     l1633:
  1591                           
  1592                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1161:         ++*
      +                          fmt;
  1593     03F3  3001               	movlw	1
  1594     03F4  00FF               	movwf	btemp+1
  1595     03F5  087B               	movf	read_prec_or_width@fmt,w
  1596     03F6  0084               	movwf	4
  1597     03F7  087F               	movf	btemp+1,w
  1598     03F8  0780               	addwf	0,f
  1599                           
  1600                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1162:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
  1601     03F9  0876               	movf	read_prec_or_width@ap,w
  1602     03FA  0084               	movwf	4
  1603     03FB  0800               	movf	0,w
  1604     03FC  00FF               	movwf	btemp+1
  1605     03FD  3002               	movlw	2
  1606     03FE  0780               	addwf	0,f
  1607     03FF  087F               	movf	btemp+1,w
  1608     0400  0084               	movwf	4
  1609     0401  0800               	movf	0,w
  1610     0402  00F9               	movwf	read_prec_or_width@n
  1611     0403  0A84               	incf	4,f
  1612     0404  0800               	movf	0,w
  1613     0405  00FA               	movwf	read_prec_or_width@n+1
  1614                           
  1615                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1163:     } else 
      +                          {
  1616     0406  2C34               	goto	l1641
  1617     0407                     l1635:
  1618                           
  1619                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1166:            
      +                           n = n * 10 + c;
  1620     0407  087A               	movf	read_prec_or_width@n+1,w
  1621     0408  00F1               	movwf	___wmul@multiplier+1
  1622     0409  0879               	movf	read_prec_or_width@n,w
  1623     040A  00F0               	movwf	___wmul@multiplier
  1624     040B  300A               	movlw	10
  1625     040C  00F2               	movwf	___wmul@multiplicand
  1626     040D  3000               	movlw	0
  1627     040E  00F3               	movwf	___wmul@multiplicand+1
  1628     040F  120A  118A  21ED  120A  118A  	fcall	___wmul
  1629     0414  0878               	movf	read_prec_or_width@c,w
  1630     0415  0770               	addwf	?___wmul,w
  1631     0416  00F9               	movwf	read_prec_or_width@n
  1632     0417  3000               	movlw	0
  1633     0418  1803               	skipnc
  1634     0419  3001               	movlw	1
  1635     041A  0771               	addwf	?___wmul+1,w
  1636     041B  00FA               	movwf	read_prec_or_width@n+1
  1637     041C                     l1637:
  1638                           
  1639                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1167:            
      +                           ++*fmt;
  1640     041C  3001               	movlw	1
  1641     041D  00FF               	movwf	btemp+1
  1642     041E  087B               	movf	read_prec_or_width@fmt,w
  1643     041F  0084               	movwf	4
  1644     0420  087F               	movf	btemp+1,w
  1645     0421  1383               	bcf	3,7	;select IRP bank0
  1646     0422  0780               	addwf	0,f
  1647     0423                     l1639:
  1648                           
  1649                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1165:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
  1650     0423  087B               	movf	read_prec_or_width@fmt,w
  1651     0424  0084               	movwf	4
  1652     0425  0800               	movf	0,w
  1653     0426  0084               	movwf	4
  1654     0427  120A  118A  200D  120A  118A  	fcall	stringdir
  1655     042C  3ED0               	addlw	208
  1656     042D  00F8               	movwf	read_prec_or_width@c
  1657     042E  300A               	movlw	10
  1658     042F  0278               	subwf	read_prec_or_width@c,w
  1659     0430  1C03               	skipc
  1660     0431  2C33               	goto	u1431
  1661     0432  2C34               	goto	u1430
  1662     0433                     u1431:
  1663     0433  2C07               	goto	l1635
  1664     0434                     u1430:
  1665     0434                     l1641:
  1666                           
  1667                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1170:     return 
      +                          n;
  1668     0434  087A               	movf	read_prec_or_width@n+1,w
  1669     0435  00F7               	movwf	?_read_prec_or_width+1
  1670     0436  0879               	movf	read_prec_or_width@n,w
  1671     0437  00F6               	movwf	?_read_prec_or_width
  1672     0438                     l790:
  1673     0438  0008               	return
  1674     0439                     __end_of_read_prec_or_width:
  1675                           
  1676                           	psect	text5
  1677     01ED                     __ptext5:	
  1678 ;; *************** function ___wmul *****************
  1679 ;; Defined at:
  1680 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\Umul16.c"
  1681 ;; Parameters:    Size  Location     Type
  1682 ;;  multiplier      2    0[COMMON] unsigned int 
  1683 ;;  multiplicand    2    2[COMMON] unsigned int 
  1684 ;; Auto vars:     Size  Location     Type
  1685 ;;  product         2    4[COMMON] unsigned int 
  1686 ;; Return value:  Size  Location     Type
  1687 ;;                  2    0[COMMON] unsigned int 
  1688 ;; Registers used:
  1689 ;;		wreg, status,2, status,0
  1690 ;; Tracked objects:
  1691 ;;		On entry : 0/0
  1692 ;;		On exit  : 0/0
  1693 ;;		Unchanged: 0/0
  1694 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1695 ;;      Params:         4       0       0       0       0
  1696 ;;      Locals:         2       0       0       0       0
  1697 ;;      Temps:          0       0       0       0       0
  1698 ;;      Totals:         6       0       0       0       0
  1699 ;;Total ram usage:        6 bytes
  1700 ;; Hardware stack levels used: 1
  1701 ;; This function calls:
  1702 ;;		Nothing
  1703 ;; This function is called by:
  1704 ;;		_read_prec_or_width
  1705 ;; This function uses a non-reentrant model
  1706 ;;
  1707                           
  1708     01ED                     ___wmul:	
  1709                           ;psect for function ___wmul
  1710                           
  1711     01ED                     l1467:	
  1712                           ;incstack = 0
  1713                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  1714                           
  1715     01ED  01F4               	clrf	___wmul@product
  1716     01EE  01F5               	clrf	___wmul@product+1
  1717     01EF                     l1469:
  1718     01EF  1C70               	btfss	___wmul@multiplier,0
  1719     01F0  29F2               	goto	u1071
  1720     01F1  29F3               	goto	u1070
  1721     01F2                     u1071:
  1722     01F2  29F9               	goto	l278
  1723     01F3                     u1070:
  1724     01F3                     l1471:
  1725     01F3  0872               	movf	___wmul@multiplicand,w
  1726     01F4  07F4               	addwf	___wmul@product,f
  1727     01F5  1803               	skipnc
  1728     01F6  0AF5               	incf	___wmul@product+1,f
  1729     01F7  0873               	movf	___wmul@multiplicand+1,w
  1730     01F8  07F5               	addwf	___wmul@product+1,f
  1731     01F9                     l278:
  1732     01F9  3001               	movlw	1
  1733     01FA                     u1085:
  1734     01FA  1003               	clrc
  1735     01FB  0DF2               	rlf	___wmul@multiplicand,f
  1736     01FC  0DF3               	rlf	___wmul@multiplicand+1,f
  1737     01FD  3EFF               	addlw	-1
  1738     01FE  1D03               	skipz
  1739     01FF  29FA               	goto	u1085
  1740     0200                     l1473:
  1741     0200  3001               	movlw	1
  1742     0201                     u1095:
  1743     0201  1003               	clrc
  1744     0202  0CF1               	rrf	___wmul@multiplier+1,f
  1745     0203  0CF0               	rrf	___wmul@multiplier,f
  1746     0204  3EFF               	addlw	-1
  1747     0205  1D03               	skipz
  1748     0206  2A01               	goto	u1095
  1749     0207                     l1475:
  1750     0207  0870               	movf	___wmul@multiplier,w
  1751     0208  0471               	iorwf	___wmul@multiplier+1,w
  1752     0209  1D03               	btfss	3,2
  1753     020A  2A0C               	goto	u1101
  1754     020B  2A0D               	goto	u1100
  1755     020C                     u1101:
  1756     020C  29EF               	goto	l1469
  1757     020D                     u1100:
  1758     020D                     l1477:
  1759     020D  0875               	movf	___wmul@product+1,w
  1760     020E  00F1               	movwf	?___wmul+1
  1761     020F  0874               	movf	___wmul@product,w
  1762     0210  00F0               	movwf	?___wmul
  1763     0211                     l280:
  1764     0211  0008               	return
  1765     0212                     __end_of___wmul:
  1766                           
  1767                           	psect	text6
  1768     0724                     __ptext6:	
  1769 ;; *************** function _dtoa *****************
  1770 ;; Defined at:
  1771 ;;		line 513 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  1772 ;; Parameters:    Size  Location     Type
  1773 ;;  fp              1    wreg     PTR struct _IO_FILE
  1774 ;;		 -> sprintf@f(11), 
  1775 ;;  d               2   19[BANK0 ] int 
  1776 ;; Auto vars:     Size  Location     Type
  1777 ;;  fp              1   23[BANK0 ] PTR struct _IO_FILE
  1778 ;;		 -> sprintf@f(11), 
  1779 ;;  i               2   29[BANK0 ] int 
  1780 ;;  p               2   26[BANK0 ] int 
  1781 ;;  w               2   24[BANK0 ] int 
  1782 ;;  s               1   28[BANK0 ] unsigned char 
  1783 ;; Return value:  Size  Location     Type
  1784 ;;                  1    wreg      void 
  1785 ;; Registers used:
  1786 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1787 ;; Tracked objects:
  1788 ;;		On entry : 0/0
  1789 ;;		On exit  : 0/0
  1790 ;;		Unchanged: 0/0
  1791 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1792 ;;      Params:         0       2       0       0       0
  1793 ;;      Locals:         0      10       0       0       0
  1794 ;;      Temps:          0       0       0       0       0
  1795 ;;      Totals:         0      12       0       0       0
  1796 ;;Total ram usage:       12 bytes
  1797 ;; Hardware stack levels used: 1
  1798 ;; Hardware stack levels required when called: 8
  1799 ;; This function calls:
  1800 ;;		___awdiv
  1801 ;;		___awmod
  1802 ;;		_abs
  1803 ;;		_pad
  1804 ;; This function is called by:
  1805 ;;		_vfpfcnvrt
  1806 ;; This function uses a non-reentrant model
  1807 ;;
  1808                           
  1809     0724                     _dtoa:	
  1810                           ;psect for function _dtoa
  1811                           
  1812                           
  1813                           ;incstack = 0
  1814 ;; hardware stack exceeded
  1815                           ; Regs used in _dtoa: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1816                           ;dtoa@fp stored from wreg
  1817     0724  1283               	bcf	3,5	;RP0=0, select bank0
  1818     0725  1303               	bcf	3,6	;RP1=0, select bank0
  1819     0726  00B7               	movwf	dtoa@fp
  1820     0727                     l1583:
  1821                           
  1822                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 513: static void 
      +                          dtoa(FILE *fp, vfpf_sint_t d);C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\commo
      +                          n\doprnt.c: 514: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c:
      +                           515:  char s;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 516
      +                          :     int i, w;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 51
      +                          8:  int p;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 524:   
      +                            s = d < 0 ? 1 : 0;
  1823     0727  1BB4               	btfsc	dtoa@d+1,7
  1824     0728  2F2A               	goto	u1331
  1825     0729  2F2C               	goto	u1330
  1826     072A                     u1331:
  1827     072A  3001               	movlw	1
  1828     072B  2F2D               	goto	u1340
  1829     072C                     u1330:
  1830     072C  3000               	movlw	0
  1831     072D                     u1340:
  1832     072D  00BC               	movwf	dtoa@s
  1833     072E                     l1585:
  1834                           
  1835                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 533:     p = (0 <
      +                          = prec) ? prec : 1;
  1836     072E  1FE7               	btfss	_prec+1,7
  1837     072F  2F31               	goto	u1351
  1838     0730  2F32               	goto	u1350
  1839     0731                     u1351:
  1840     0731  2F37               	goto	l1589
  1841     0732                     u1350:
  1842     0732                     l1587:
  1843     0732  3001               	movlw	1
  1844     0733  00BA               	movwf	dtoa@p
  1845     0734  3000               	movlw	0
  1846     0735  00BB               	movwf	dtoa@p+1
  1847     0736  2F3B               	goto	l770
  1848     0737                     l1589:
  1849     0737  0867               	movf	_prec+1,w
  1850     0738  00BB               	movwf	dtoa@p+1
  1851     0739  0866               	movf	_prec,w
  1852     073A  00BA               	movwf	dtoa@p
  1853     073B                     l770:
  1854                           
  1855                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 535:     w = widt
      +                          h;
  1856     073B  0865               	movf	_width+1,w
  1857     073C  00B9               	movwf	dtoa@w+1
  1858     073D  0864               	movf	_width,w
  1859     073E  00B8               	movwf	dtoa@w
  1860     073F                     l1591:
  1861                           
  1862                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 536:     if (s
  1863     073F  083C               	movf	dtoa@s,w
  1864     0740  1903               	btfsc	3,2
  1865     0741  2F43               	goto	u1361
  1866     0742  2F44               	goto	u1360
  1867     0743                     u1361:
  1868     0743  2F5A               	goto	l771
  1869     0744                     u1360:
  1870     0744                     l1593:
  1871                           
  1872                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 540:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 541:         --w;
  1873     0744  30FF               	movlw	255
  1874     0745  07B8               	addwf	dtoa@w,f
  1875     0746  1803               	skipnc
  1876     0747  0AB9               	incf	dtoa@w+1,f
  1877     0748  30FF               	movlw	255
  1878     0749  07B9               	addwf	dtoa@w+1,f
  1879     074A                     l1595:
  1880                           
  1881                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 542:   s = s ? '-
      +                          ' : '+';
  1882     074A  083C               	movf	dtoa@s,w
  1883     074B  1D03               	btfss	3,2
  1884     074C  2F4E               	goto	u1371
  1885     074D  2F4F               	goto	u1370
  1886     074E                     u1371:
  1887     074E  2F54               	goto	l1599
  1888     074F                     u1370:
  1889     074F                     l1597:
  1890     074F  302B               	movlw	43
  1891     0750  00B5               	movwf	_dtoa$713
  1892     0751  3000               	movlw	0
  1893     0752  00B6               	movwf	_dtoa$713+1
  1894     0753  2F58               	goto	l775
  1895     0754                     l1599:
  1896     0754  302D               	movlw	45
  1897     0755  00B5               	movwf	_dtoa$713
  1898     0756  3000               	movlw	0
  1899     0757  00B6               	movwf	_dtoa$713+1
  1900     0758                     l775:
  1901     0758  0835               	movf	_dtoa$713,w
  1902     0759  00BC               	movwf	dtoa@s
  1903     075A                     l771:	
  1904                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 543:     }
  1905                           
  1906                           
  1907                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 552:     i = size
      +                          of(dbuf) - 1;
  1908     075A  301F               	movlw	31
  1909     075B  00BD               	movwf	dtoa@i
  1910     075C  3000               	movlw	0
  1911     075D  00BE               	movwf	dtoa@i+1
  1912     075E                     l1601:
  1913                           
  1914                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 553:     dbuf[i] 
      +                          = '\0';
  1915     075E  1683               	bsf	3,5	;RP0=1, select bank1
  1916     075F  1303               	bcf	3,6	;RP1=0, select bank1
  1917     0760  01BF               	clrf	(_dbuf^(0+128)+31)
  1918                           
  1919                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
  1920     0761  2FA8               	goto	l1613
  1921     0762                     l1603:
  1922                           
  1923                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 563:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 564:         --i;
  1924     0762  30FF               	movlw	255
  1925     0763  1283               	bcf	3,5	;RP0=0, select bank0
  1926     0764  1303               	bcf	3,6	;RP1=0, select bank0
  1927     0765  07BD               	addwf	dtoa@i,f
  1928     0766  1803               	skipnc
  1929     0767  0ABE               	incf	dtoa@i+1,f
  1930     0768  30FF               	movlw	255
  1931     0769  07BE               	addwf	dtoa@i+1,f
  1932     076A                     l1605:
  1933                           
  1934                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 565:         dbuf
      +                          [i] = (char)((int)'0' + abs(d % 10));
  1935     076A  083D               	movf	dtoa@i,w
  1936     076B  3EA0               	addlw	(low (_dbuf| 0))& (0+255)
  1937     076C  0084               	movwf	4
  1938     076D  300A               	movlw	10
  1939     076E  00F0               	movwf	___awmod@divisor
  1940     076F  3000               	movlw	0
  1941     0770  00F1               	movwf	___awmod@divisor+1
  1942     0771  0834               	movf	dtoa@d+1,w
  1943     0772  00F3               	movwf	___awmod@dividend+1
  1944     0773  0833               	movf	dtoa@d,w
  1945     0774  00F2               	movwf	___awmod@dividend
  1946     0775  120A  118A  2439  120A  118A  	fcall	___awmod
  1947     077A  0871               	movf	?___awmod+1,w
  1948     077B  00F7               	movwf	abs@a+1
  1949     077C  0870               	movf	?___awmod,w
  1950     077D  00F6               	movwf	abs@a
  1951     077E  120A  118A  217A  120A  118A  	fcall	_abs
  1952     0783  0876               	movf	?_abs,w
  1953     0784  3E30               	addlw	48
  1954     0785  1383               	bcf	3,7	;select IRP bank1
  1955     0786  0080               	movwf	0
  1956     0787                     l1607:
  1957                           
  1958                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 567:         --p;
  1959     0787  30FF               	movlw	255
  1960     0788  1283               	bcf	3,5	;RP0=0, select bank0
  1961     0789  1303               	bcf	3,6	;RP1=0, select bank0
  1962     078A  07BA               	addwf	dtoa@p,f
  1963     078B  1803               	skipnc
  1964     078C  0ABB               	incf	dtoa@p+1,f
  1965     078D  30FF               	movlw	255
  1966     078E  07BB               	addwf	dtoa@p+1,f
  1967     078F                     l1609:
  1968                           
  1969                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 571:         --w;
  1970     078F  30FF               	movlw	255
  1971     0790  07B8               	addwf	dtoa@w,f
  1972     0791  1803               	skipnc
  1973     0792  0AB9               	incf	dtoa@w+1,f
  1974     0793  30FF               	movlw	255
  1975     0794  07B9               	addwf	dtoa@w+1,f
  1976     0795                     l1611:
  1977                           
  1978                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 572:         d = 
      +                          d / 10;
  1979     0795  300A               	movlw	10
  1980     0796  00F0               	movwf	___awdiv@divisor
  1981     0797  3000               	movlw	0
  1982     0798  00F1               	movwf	___awdiv@divisor+1
  1983     0799  0834               	movf	dtoa@d+1,w
  1984     079A  00F3               	movwf	___awdiv@dividend+1
  1985     079B  0833               	movf	dtoa@d,w
  1986     079C  00F2               	movwf	___awdiv@dividend
  1987     079D  120A  118A  24EC  120A  118A  	fcall	___awdiv
  1988     07A2  0871               	movf	?___awdiv+1,w
  1989     07A3  1283               	bcf	3,5	;RP0=0, select bank0
  1990     07A4  1303               	bcf	3,6	;RP1=0, select bank0
  1991     07A5  00B4               	movwf	dtoa@d+1
  1992     07A6  0870               	movf	?___awdiv,w
  1993     07A7  00B3               	movwf	dtoa@d
  1994     07A8                     l1613:
  1995                           
  1996                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
  1997     07A8  1283               	bcf	3,5	;RP0=0, select bank0
  1998     07A9  083E               	movf	dtoa@i+1,w
  1999     07AA  3A80               	xorlw	128
  2000     07AB  00FF               	movwf	btemp+1
  2001     07AC  3080               	movlw	128
  2002     07AD  027F               	subwf	btemp+1,w
  2003     07AE  1D03               	skipz
  2004     07AF  2FB2               	goto	u1385
  2005     07B0  3001               	movlw	1
  2006     07B1  023D               	subwf	dtoa@i,w
  2007     07B2                     u1385:
  2008     07B2  1C03               	skipc
  2009     07B3  2FB5               	goto	u1381
  2010     07B4  2FB6               	goto	u1380
  2011     07B5                     u1381:
  2012     07B5  2FCB               	goto	l1619
  2013     07B6                     u1380:
  2014     07B6                     l1615:
  2015     07B6  1283               	bcf	3,5	;RP0=0, select bank0
  2016     07B7  1303               	bcf	3,6	;RP1=0, select bank0
  2017     07B8  0833               	movf	dtoa@d,w
  2018     07B9  0434               	iorwf	dtoa@d+1,w
  2019     07BA  1D03               	btfss	3,2
  2020     07BB  2FBD               	goto	u1391
  2021     07BC  2FBE               	goto	u1390
  2022     07BD                     u1391:
  2023     07BD  2F62               	goto	l1603
  2024     07BE                     u1390:
  2025     07BE                     l1617:
  2026     07BE  083B               	movf	dtoa@p+1,w
  2027     07BF  3A80               	xorlw	128
  2028     07C0  00FF               	movwf	btemp+1
  2029     07C1  3080               	movlw	128
  2030     07C2  027F               	subwf	btemp+1,w
  2031     07C3  1D03               	skipz
  2032     07C4  2FC7               	goto	u1405
  2033     07C5  3001               	movlw	1
  2034     07C6  023A               	subwf	dtoa@p,w
  2035     07C7                     u1405:
  2036     07C7  1803               	skipnc
  2037     07C8  2FCA               	goto	u1401
  2038     07C9  2FCB               	goto	u1400
  2039     07CA                     u1401:
  2040     07CA  2F62               	goto	l1603
  2041     07CB                     u1400:
  2042     07CB                     l1619:
  2043                           
  2044                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 576:     if (s !=
      +                           0) {
  2045     07CB  1283               	bcf	3,5	;RP0=0, select bank0
  2046     07CC  1303               	bcf	3,6	;RP1=0, select bank0
  2047     07CD  083C               	movf	dtoa@s,w
  2048     07CE  1903               	btfsc	3,2
  2049     07CF  2FD1               	goto	u1411
  2050     07D0  2FD2               	goto	u1410
  2051     07D1                     u1411:
  2052     07D1  2FDE               	goto	l1625
  2053     07D2                     u1410:
  2054     07D2                     l1621:
  2055                           
  2056                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 577:         --i;
  2057     07D2  30FF               	movlw	255
  2058     07D3  07BD               	addwf	dtoa@i,f
  2059     07D4  1803               	skipnc
  2060     07D5  0ABE               	incf	dtoa@i+1,f
  2061     07D6  30FF               	movlw	255
  2062     07D7  07BE               	addwf	dtoa@i+1,f
  2063     07D8                     l1623:
  2064                           
  2065                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 578:         dbuf
      +                          [i] = s;
  2066     07D8  083D               	movf	dtoa@i,w
  2067     07D9  3EA0               	addlw	(low (_dbuf| 0))& (0+255)
  2068     07DA  0084               	movwf	4
  2069     07DB  083C               	movf	dtoa@s,w
  2070     07DC  1383               	bcf	3,7	;select IRP bank1
  2071     07DD  0080               	movwf	0
  2072     07DE                     l1625:
  2073                           
  2074                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 582:     return (
      +                          void) pad(fp, &dbuf[i], w);
  2075     07DE  083D               	movf	dtoa@i,w
  2076     07DF  3EA0               	addlw	(low (_dbuf| 0))& (0+255)
  2077     07E0  00AC               	movwf	pad@buf
  2078     07E1  0839               	movf	dtoa@w+1,w
  2079     07E2  00AE               	movwf	pad@p+1
  2080     07E3  0838               	movf	dtoa@w,w
  2081     07E4  00AD               	movwf	pad@p
  2082     07E5  0837               	movf	dtoa@fp,w
  2083     07E6  120A  118A  22CB  120A  118A  	fcall	_pad
  2084     07EB                     l782:
  2085     07EB  0008               	return
  2086     07EC                     __end_of_dtoa:
  2087                           
  2088                           	psect	text7
  2089     02CB                     __ptext7:	
  2090 ;; *************** function _pad *****************
  2091 ;; Defined at:
  2092 ;;		line 193 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  2093 ;; Parameters:    Size  Location     Type
  2094 ;;  fp              1    wreg     PTR struct _IO_FILE
  2095 ;;		 -> sprintf@f(11), 
  2096 ;;  buf             1   12[BANK0 ] PTR unsigned char 
  2097 ;;		 -> dbuf(32), 
  2098 ;;  p               2   13[BANK0 ] int 
  2099 ;; Auto vars:     Size  Location     Type
  2100 ;;  fp              1   18[BANK0 ] PTR struct _IO_FILE
  2101 ;;		 -> sprintf@f(11), 
  2102 ;;  i               2   16[BANK0 ] int 
  2103 ;; Return value:  Size  Location     Type
  2104 ;;                  1    wreg      void 
  2105 ;; Registers used:
  2106 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2107 ;; Tracked objects:
  2108 ;;		On entry : 0/0
  2109 ;;		On exit  : 0/0
  2110 ;;		Unchanged: 0/0
  2111 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2112 ;;      Params:         0       3       0       0       0
  2113 ;;      Locals:         0       3       0       0       0
  2114 ;;      Temps:          0       1       0       0       0
  2115 ;;      Totals:         0       7       0       0       0
  2116 ;;Total ram usage:        7 bytes
  2117 ;; Hardware stack levels used: 1
  2118 ;; Hardware stack levels required when called: 7
  2119 ;; This function calls:
  2120 ;;		_fputc
  2121 ;;		_fputs
  2122 ;; This function is called by:
  2123 ;;		_dtoa
  2124 ;; This function uses a non-reentrant model
  2125 ;;
  2126                           
  2127     02CB                     _pad:	
  2128                           ;psect for function _pad
  2129                           
  2130                           
  2131                           ;incstack = 0
  2132 ;; hardware stack exceeded
  2133                           ; Regs used in _pad: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2134                           ;pad@fp stored from wreg
  2135     02CB  1283               	bcf	3,5	;RP0=0, select bank0
  2136     02CC  1303               	bcf	3,6	;RP1=0, select bank0
  2137     02CD  00B2               	movwf	pad@fp
  2138     02CE                     l1563:
  2139                           
  2140                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 193: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\com
      +                          mon\doprnt.c: 194: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.
      +                          c: 195:     int i;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c:
      +                           205:  if (p < 0) {
  2141     02CE  1FAE               	btfss	pad@p+1,7
  2142     02CF  2AD1               	goto	u1301
  2143     02D0  2AD2               	goto	u1300
  2144     02D1                     u1301:
  2145     02D1  2AD4               	goto	l760
  2146     02D2                     u1300:
  2147     02D2                     l1565:
  2148                           
  2149                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 206:   p = 0;
  2150     02D2  01AD               	clrf	pad@p
  2151     02D3  01AE               	clrf	pad@p+1
  2152     02D4                     l760:	
  2153                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 207:  }
  2154                           
  2155                           
  2156                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 208:     i = 0;
  2157     02D4  01B0               	clrf	pad@i
  2158     02D5  01B1               	clrf	pad@i+1
  2159                           
  2160                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  2161     02D6  2AEC               	goto	l1571
  2162     02D7                     l1567:
  2163                           
  2164                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 210:         fput
      +                          c(' ', fp);
  2165     02D7  3020               	movlw	32
  2166     02D8  00FB               	movwf	fputc@c
  2167     02D9  3000               	movlw	0
  2168     02DA  00FC               	movwf	fputc@c+1
  2169     02DB  1283               	bcf	3,5	;RP0=0, select bank0
  2170     02DC  1303               	bcf	3,6	;RP1=0, select bank0
  2171     02DD  0832               	movf	pad@fp,w
  2172     02DE  00FD               	movwf	fputc@fp
  2173     02DF  120A  118A  2492  120A  118A  	fcall	_fputc
  2174     02E4                     l1569:
  2175                           
  2176                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 211:         ++i;
  2177     02E4  3001               	movlw	1
  2178     02E5  1283               	bcf	3,5	;RP0=0, select bank0
  2179     02E6  1303               	bcf	3,6	;RP1=0, select bank0
  2180     02E7  07B0               	addwf	pad@i,f
  2181     02E8  1803               	skipnc
  2182     02E9  0AB1               	incf	pad@i+1,f
  2183     02EA  3000               	movlw	0
  2184     02EB  07B1               	addwf	pad@i+1,f
  2185     02EC                     l1571:
  2186                           
  2187                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  2188     02EC  0831               	movf	pad@i+1,w
  2189     02ED  3A80               	xorlw	128
  2190     02EE  00AF               	movwf	??_pad
  2191     02EF  082E               	movf	pad@p+1,w
  2192     02F0  3A80               	xorlw	128
  2193     02F1  022F               	subwf	??_pad,w
  2194     02F2  1D03               	skipz
  2195     02F3  2AF6               	goto	u1315
  2196     02F4  082D               	movf	pad@p,w
  2197     02F5  0230               	subwf	pad@i,w
  2198     02F6                     u1315:
  2199     02F6  1C03               	skipc
  2200     02F7  2AF9               	goto	u1311
  2201     02F8  2AFA               	goto	u1310
  2202     02F9                     u1311:
  2203     02F9  2AD7               	goto	l1567
  2204     02FA                     u1310:
  2205     02FA                     l1573:
  2206                           
  2207                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 218:         fput
      +                          s((const char *)buf, fp);
  2208     02FA  1283               	bcf	3,5	;RP0=0, select bank0
  2209     02FB  1303               	bcf	3,6	;RP1=0, select bank0
  2210     02FC  0832               	movf	pad@fp,w
  2211     02FD  00A5               	movwf	fputs@fp
  2212     02FE  082C               	movf	pad@buf,w
  2213     02FF  120A  118A  2238  120A  118A  	fcall	_fputs
  2214     0304                     l764:
  2215     0304  0008               	return
  2216     0305                     __end_of_pad:
  2217                           
  2218                           	psect	text8
  2219     0238                     __ptext8:	
  2220 ;; *************** function _fputs *****************
  2221 ;; Defined at:
  2222 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\nf_fputs.c"
  2223 ;; Parameters:    Size  Location     Type
  2224 ;;  s               1    wreg     PTR const unsigned char 
  2225 ;;		 -> dbuf(32), 
  2226 ;;  fp              1    5[BANK0 ] PTR struct _IO_FILE
  2227 ;;		 -> sprintf@f(11), 
  2228 ;; Auto vars:     Size  Location     Type
  2229 ;;  s               1   11[BANK0 ] PTR const unsigned char 
  2230 ;;		 -> dbuf(32), 
  2231 ;;  i               2    9[BANK0 ] int 
  2232 ;;  c               1    8[BANK0 ] unsigned char 
  2233 ;; Return value:  Size  Location     Type
  2234 ;;                  2    5[BANK0 ] int 
  2235 ;; Registers used:
  2236 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2237 ;; Tracked objects:
  2238 ;;		On entry : 0/0
  2239 ;;		On exit  : 0/0
  2240 ;;		Unchanged: 0/0
  2241 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2242 ;;      Params:         0       1       0       0       0
  2243 ;;      Locals:         0       4       0       0       0
  2244 ;;      Temps:          0       2       0       0       0
  2245 ;;      Totals:         0       7       0       0       0
  2246 ;;Total ram usage:        7 bytes
  2247 ;; Hardware stack levels used: 1
  2248 ;; Hardware stack levels required when called: 6
  2249 ;; This function calls:
  2250 ;;		_fputc
  2251 ;; This function is called by:
  2252 ;;		_pad
  2253 ;; This function uses a non-reentrant model
  2254 ;;
  2255                           
  2256     0238                     _fputs:	
  2257                           ;psect for function _fputs
  2258                           
  2259                           
  2260                           ;incstack = 0
  2261 ;; hardware stack exceeded
  2262                           ; Regs used in _fputs: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2263                           ;fputs@s stored from wreg
  2264     0238  1283               	bcf	3,5	;RP0=0, select bank0
  2265     0239  1303               	bcf	3,6	;RP1=0, select bank0
  2266     023A  00AB               	movwf	fputs@s
  2267     023B                     l1459:
  2268     023B  01A9               	clrf	fputs@i
  2269     023C  01AA               	clrf	fputs@i+1
  2270     023D  2A54               	goto	l1465
  2271     023E                     l1461:
  2272     023E  0828               	movf	fputs@c,w
  2273     023F  00A6               	movwf	??_fputs
  2274     0240  01A7               	clrf	??_fputs+1
  2275     0241  0826               	movf	??_fputs,w
  2276     0242  00FB               	movwf	fputc@c
  2277     0243  0827               	movf	??_fputs+1,w
  2278     0244  00FC               	movwf	fputc@c+1
  2279     0245  0825               	movf	fputs@fp,w
  2280     0246  00FD               	movwf	fputc@fp
  2281     0247  120A  118A  2492  120A  118A  	fcall	_fputc
  2282     024C                     l1463:
  2283     024C  3001               	movlw	1
  2284     024D  1283               	bcf	3,5	;RP0=0, select bank0
  2285     024E  1303               	bcf	3,6	;RP1=0, select bank0
  2286     024F  07A9               	addwf	fputs@i,f
  2287     0250  1803               	skipnc
  2288     0251  0AAA               	incf	fputs@i+1,f
  2289     0252  3000               	movlw	0
  2290     0253  07AA               	addwf	fputs@i+1,f
  2291     0254                     l1465:
  2292     0254  0829               	movf	fputs@i,w
  2293     0255  072B               	addwf	fputs@s,w
  2294     0256  00A6               	movwf	??_fputs
  2295     0257  0826               	movf	??_fputs,w
  2296     0258  0084               	movwf	4
  2297     0259  1383               	bcf	3,7	;select IRP bank0
  2298     025A  0800               	movf	0,w
  2299     025B  00A8               	movwf	fputs@c
  2300     025C  0828               	movf	fputs@c,w
  2301     025D  1D03               	btfss	3,2
  2302     025E  2A60               	goto	u1061
  2303     025F  2A61               	goto	u1060
  2304     0260                     u1061:
  2305     0260  2A3E               	goto	l1461
  2306     0261                     u1060:
  2307     0261                     l831:
  2308     0261  0008               	return
  2309     0262                     __end_of_fputs:
  2310                           
  2311                           	psect	text9
  2312     0492                     __ptext9:	
  2313 ;; *************** function _fputc *****************
  2314 ;; Defined at:
  2315 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\nf_fputc.c"
  2316 ;; Parameters:    Size  Location     Type
  2317 ;;  c               2   11[COMMON] int 
  2318 ;;  fp              1   13[COMMON] PTR struct _IO_FILE
  2319 ;;		 -> sprintf@f(11), 
  2320 ;; Auto vars:     Size  Location     Type
  2321 ;;		None
  2322 ;; Return value:  Size  Location     Type
  2323 ;;                  2   11[COMMON] int 
  2324 ;; Registers used:
  2325 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2326 ;; Tracked objects:
  2327 ;;		On entry : 0/0
  2328 ;;		On exit  : 0/0
  2329 ;;		Unchanged: 0/0
  2330 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2331 ;;      Params:         3       0       0       0       0
  2332 ;;      Locals:         0       0       0       0       0
  2333 ;;      Temps:          0       5       0       0       0
  2334 ;;      Totals:         3       5       0       0       0
  2335 ;;Total ram usage:        8 bytes
  2336 ;; Hardware stack levels used: 1
  2337 ;; Hardware stack levels required when called: 5
  2338 ;; This function calls:
  2339 ;;		_putch
  2340 ;; This function is called by:
  2341 ;;		_pad
  2342 ;;		_vfpfcnvrt
  2343 ;;		_fputs
  2344 ;; This function uses a non-reentrant model
  2345 ;;
  2346                           
  2347     0492                     _fputc:	
  2348                           ;psect for function _fputc
  2349                           
  2350     0492                     l1445:	
  2351                           ;incstack = 0
  2352 ;; hardware stack exceeded
  2353                           ; Regs used in _fputc: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2354                           
  2355     0492  087D               	movf	fputc@fp,w
  2356     0493  1903               	btfsc	3,2
  2357     0494  2C96               	goto	u1021
  2358     0495  2C97               	goto	u1020
  2359     0496                     u1021:
  2360     0496  2C9C               	goto	l1449
  2361     0497                     u1020:
  2362     0497                     l1447:
  2363     0497  087D               	movf	fputc@fp,w
  2364     0498  1D03               	btfss	3,2
  2365     0499  2C9B               	goto	u1031
  2366     049A  2C9C               	goto	u1030
  2367     049B                     u1031:
  2368     049B  2CA3               	goto	l1451
  2369     049C                     u1030:
  2370     049C                     l1449:
  2371     049C  087B               	movf	fputc@c,w
  2372     049D  120A  118A  216A  120A  118A  	fcall	_putch
  2373     04A2  2CEB               	goto	l823
  2374     04A3                     l1451:
  2375     04A3  087D               	movf	fputc@fp,w
  2376     04A4  3E09               	addlw	9
  2377     04A5  0084               	movwf	4
  2378     04A6  1383               	bcf	3,7	;select IRP bank0
  2379     04A7  0800               	movf	0,w
  2380     04A8  1283               	bcf	3,5	;RP0=0, select bank0
  2381     04A9  1303               	bcf	3,6	;RP1=0, select bank0
  2382     04AA  00A0               	movwf	??_fputc
  2383     04AB  0A84               	incf	4,f
  2384     04AC  0800               	movf	0,w
  2385     04AD  00A1               	movwf	??_fputc+1
  2386     04AE  0820               	movf	??_fputc,w
  2387     04AF  0421               	iorwf	??_fputc+1,w
  2388     04B0  1903               	btfsc	3,2
  2389     04B1  2CB3               	goto	u1041
  2390     04B2  2CB4               	goto	u1040
  2391     04B3                     u1041:
  2392     04B3  2CD2               	goto	l1455
  2393     04B4                     u1040:
  2394     04B4                     l1453:
  2395     04B4  087D               	movf	fputc@fp,w
  2396     04B5  3E09               	addlw	9
  2397     04B6  0084               	movwf	4
  2398     04B7  0800               	movf	0,w
  2399     04B8  00A0               	movwf	??_fputc
  2400     04B9  0A84               	incf	4,f
  2401     04BA  0800               	movf	0,w
  2402     04BB  00A1               	movwf	??_fputc+1
  2403     04BC  087D               	movf	fputc@fp,w
  2404     04BD  3E02               	addlw	2
  2405     04BE  0084               	movwf	4
  2406     04BF  0800               	movf	0,w
  2407     04C0  00A2               	movwf	??_fputc+2
  2408     04C1  0A84               	incf	4,f
  2409     04C2  0800               	movf	0,w
  2410     04C3  00A3               	movwf	??_fputc+3
  2411     04C4  0823               	movf	??_fputc+3,w
  2412     04C5  3A80               	xorlw	128
  2413     04C6  00A4               	movwf	??_fputc+4
  2414     04C7  0821               	movf	??_fputc+1,w
  2415     04C8  3A80               	xorlw	128
  2416     04C9  0224               	subwf	??_fputc+4,w
  2417     04CA  1D03               	skipz
  2418     04CB  2CCE               	goto	u1055
  2419     04CC  0820               	movf	??_fputc,w
  2420     04CD  0222               	subwf	??_fputc+2,w
  2421     04CE                     u1055:
  2422     04CE  1803               	skipnc
  2423     04CF  2CD1               	goto	u1051
  2424     04D0  2CD2               	goto	u1050
  2425     04D1                     u1051:
  2426     04D1  2CEB               	goto	l823
  2427     04D2                     u1050:
  2428     04D2                     l1455:
  2429     04D2  087D               	movf	fputc@fp,w
  2430     04D3  3E02               	addlw	2
  2431     04D4  0084               	movwf	4
  2432     04D5  1383               	bcf	3,7	;select IRP bank0
  2433     04D6  0800               	movf	0,w
  2434     04D7  1283               	bcf	3,5	;RP0=0, select bank0
  2435     04D8  1303               	bcf	3,6	;RP1=0, select bank0
  2436     04D9  00A0               	movwf	??_fputc
  2437     04DA  087D               	movf	fputc@fp,w
  2438     04DB  0084               	movwf	4
  2439     04DC  0800               	movf	0,w
  2440     04DD  0720               	addwf	??_fputc,w
  2441     04DE  00A1               	movwf	??_fputc+1
  2442     04DF  0821               	movf	??_fputc+1,w
  2443     04E0  0084               	movwf	4
  2444     04E1  087B               	movf	fputc@c,w
  2445     04E2  0080               	movwf	0
  2446     04E3  087D               	movf	fputc@fp,w
  2447     04E4  3E02               	addlw	2
  2448     04E5  0084               	movwf	4
  2449     04E6  3001               	movlw	1
  2450     04E7  0780               	addwf	0,f
  2451     04E8  0A84               	incf	4,f
  2452     04E9  1803               	skipnc
  2453     04EA  0A80               	incf	0,f
  2454     04EB                     l823:
  2455     04EB  0008               	return
  2456     04EC                     __end_of_fputc:
  2457                           
  2458                           	psect	text10
  2459     016A                     __ptext10:	
  2460 ;; *************** function _putch *****************
  2461 ;; Defined at:
  2462 ;;		line 368 in file "../BT4.X/lcd.c"
  2463 ;; Parameters:    Size  Location     Type
  2464 ;;  c               1    wreg     unsigned char 
  2465 ;; Auto vars:     Size  Location     Type
  2466 ;;  c               1   10[COMMON] unsigned char 
  2467 ;; Return value:  Size  Location     Type
  2468 ;;                  1    wreg      void 
  2469 ;; Registers used:
  2470 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2471 ;; Tracked objects:
  2472 ;;		On entry : 0/0
  2473 ;;		On exit  : 0/0
  2474 ;;		Unchanged: 0/0
  2475 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2476 ;;      Params:         0       0       0       0       0
  2477 ;;      Locals:         1       0       0       0       0
  2478 ;;      Temps:          0       0       0       0       0
  2479 ;;      Totals:         1       0       0       0       0
  2480 ;;Total ram usage:        1 bytes
  2481 ;; Hardware stack levels used: 1
  2482 ;; Hardware stack levels required when called: 4
  2483 ;; This function calls:
  2484 ;;		_lcd_putc
  2485 ;; This function is called by:
  2486 ;;		_fputc
  2487 ;; This function uses a non-reentrant model
  2488 ;;
  2489                           
  2490     016A                     _putch:	
  2491                           ;psect for function _putch
  2492                           
  2493                           
  2494                           ;incstack = 0
  2495 ;; hardware stack exceeded
  2496                           ; Regs used in _putch: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2497                           ;putch@c stored from wreg
  2498     016A  00FA               	movwf	putch@c
  2499     016B                     l1443:
  2500                           
  2501                           ;../BT4.X/lcd.c: 368: void putch(char c);../BT4.X/lcd.c: 369: {;../BT4.X/lcd.c: 370:    
      +                           lcd_putc(c);
  2502     016B  087A               	movf	putch@c,w
  2503     016C  120A  118A  2391  120A  118A  	fcall	_lcd_putc
  2504     0171                     l192:
  2505     0171  0008               	return
  2506     0172                     __end_of_putch:
  2507                           
  2508                           	psect	text11
  2509     017A                     __ptext11:	
  2510 ;; *************** function _abs *****************
  2511 ;; Defined at:
  2512 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\abs.c"
  2513 ;; Parameters:    Size  Location     Type
  2514 ;;  a               2    6[COMMON] int 
  2515 ;; Auto vars:     Size  Location     Type
  2516 ;;		None
  2517 ;; Return value:  Size  Location     Type
  2518 ;;                  2    6[COMMON] int 
  2519 ;; Registers used:
  2520 ;;		wreg, status,2, status,0
  2521 ;; Tracked objects:
  2522 ;;		On entry : 0/0
  2523 ;;		On exit  : 0/0
  2524 ;;		Unchanged: 0/0
  2525 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2526 ;;      Params:         2       0       0       0       0
  2527 ;;      Locals:         0       0       0       0       0
  2528 ;;      Temps:          2       0       0       0       0
  2529 ;;      Totals:         4       0       0       0       0
  2530 ;;Total ram usage:        4 bytes
  2531 ;; Hardware stack levels used: 1
  2532 ;; This function calls:
  2533 ;;		Nothing
  2534 ;; This function is called by:
  2535 ;;		_dtoa
  2536 ;; This function uses a non-reentrant model
  2537 ;;
  2538                           
  2539     017A                     _abs:	
  2540                           ;psect for function _abs
  2541                           
  2542     017A                     l1575:	
  2543                           ;incstack = 0
  2544                           ; Regs used in _abs: [wreg+status,2+status,0]
  2545                           
  2546     017A  1BF7               	btfsc	abs@a+1,7
  2547     017B  297D               	goto	u1321
  2548     017C  297E               	goto	u1320
  2549     017D                     u1321:
  2550     017D  297F               	goto	l1579
  2551     017E                     u1320:
  2552     017E                     l1577:
  2553     017E  298A               	goto	l811
  2554     017F                     l1579:
  2555     017F  0976               	comf	abs@a,w
  2556     0180  00F8               	movwf	??_abs
  2557     0181  0977               	comf	abs@a+1,w
  2558     0182  00F9               	movwf	??_abs+1
  2559     0183  0AF8               	incf	??_abs,f
  2560     0184  1903               	skipnz
  2561     0185  0AF9               	incf	??_abs+1,f
  2562     0186  0878               	movf	??_abs,w
  2563     0187  00F6               	movwf	?_abs
  2564     0188  0879               	movf	??_abs+1,w
  2565     0189  00F7               	movwf	?_abs+1
  2566     018A                     l811:
  2567     018A  0008               	return
  2568     018B                     __end_of_abs:
  2569                           
  2570                           	psect	text12
  2571     0439                     __ptext12:	
  2572 ;; *************** function ___awmod *****************
  2573 ;; Defined at:
  2574 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awmod.c"
  2575 ;; Parameters:    Size  Location     Type
  2576 ;;  divisor         2    0[COMMON] int 
  2577 ;;  dividend        2    2[COMMON] int 
  2578 ;; Auto vars:     Size  Location     Type
  2579 ;;  sign            1    5[COMMON] unsigned char 
  2580 ;;  counter         1    4[COMMON] unsigned char 
  2581 ;; Return value:  Size  Location     Type
  2582 ;;                  2    0[COMMON] int 
  2583 ;; Registers used:
  2584 ;;		wreg, status,2, status,0, btemp+1
  2585 ;; Tracked objects:
  2586 ;;		On entry : 0/0
  2587 ;;		On exit  : 0/0
  2588 ;;		Unchanged: 0/0
  2589 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2590 ;;      Params:         4       0       0       0       0
  2591 ;;      Locals:         2       0       0       0       0
  2592 ;;      Temps:          0       0       0       0       0
  2593 ;;      Totals:         6       0       0       0       0
  2594 ;;Total ram usage:        6 bytes
  2595 ;; Hardware stack levels used: 1
  2596 ;; This function calls:
  2597 ;;		Nothing
  2598 ;; This function is called by:
  2599 ;;		_dtoa
  2600 ;; This function uses a non-reentrant model
  2601 ;;
  2602                           
  2603     0439                     ___awmod:	
  2604                           ;psect for function ___awmod
  2605                           
  2606     0439                     l1525:	
  2607                           ;incstack = 0
  2608                           ; Regs used in ___awmod: [wreg+status,2+status,0+btemp+1]
  2609                           
  2610     0439  01F5               	clrf	___awmod@sign
  2611     043A                     l1527:
  2612     043A  1FF3               	btfss	___awmod@dividend+1,7
  2613     043B  2C3D               	goto	u1211
  2614     043C  2C3E               	goto	u1210
  2615     043D                     u1211:
  2616     043D  2C45               	goto	l1533
  2617     043E                     u1210:
  2618     043E                     l1529:
  2619     043E  09F2               	comf	___awmod@dividend,f
  2620     043F  09F3               	comf	___awmod@dividend+1,f
  2621     0440  0AF2               	incf	___awmod@dividend,f
  2622     0441  1903               	skipnz
  2623     0442  0AF3               	incf	___awmod@dividend+1,f
  2624     0443                     l1531:
  2625     0443  01F5               	clrf	___awmod@sign
  2626     0444  0AF5               	incf	___awmod@sign,f
  2627     0445                     l1533:
  2628     0445  1FF1               	btfss	___awmod@divisor+1,7
  2629     0446  2C48               	goto	u1221
  2630     0447  2C49               	goto	u1220
  2631     0448                     u1221:
  2632     0448  2C4E               	goto	l1537
  2633     0449                     u1220:
  2634     0449                     l1535:
  2635     0449  09F0               	comf	___awmod@divisor,f
  2636     044A  09F1               	comf	___awmod@divisor+1,f
  2637     044B  0AF0               	incf	___awmod@divisor,f
  2638     044C  1903               	skipnz
  2639     044D  0AF1               	incf	___awmod@divisor+1,f
  2640     044E                     l1537:
  2641     044E  0870               	movf	___awmod@divisor,w
  2642     044F  0471               	iorwf	___awmod@divisor+1,w
  2643     0450  1903               	btfsc	3,2
  2644     0451  2C53               	goto	u1231
  2645     0452  2C54               	goto	u1230
  2646     0453                     u1231:
  2647     0453  2C83               	goto	l1555
  2648     0454                     u1230:
  2649     0454                     l1539:
  2650     0454  01F4               	clrf	___awmod@counter
  2651     0455  0AF4               	incf	___awmod@counter,f
  2652     0456  2C62               	goto	l1545
  2653     0457                     l1541:
  2654     0457  3001               	movlw	1
  2655     0458                     u1245:
  2656     0458  1003               	clrc
  2657     0459  0DF0               	rlf	___awmod@divisor,f
  2658     045A  0DF1               	rlf	___awmod@divisor+1,f
  2659     045B  3EFF               	addlw	-1
  2660     045C  1D03               	skipz
  2661     045D  2C58               	goto	u1245
  2662     045E                     l1543:
  2663     045E  3001               	movlw	1
  2664     045F  00FF               	movwf	btemp+1
  2665     0460  087F               	movf	btemp+1,w
  2666     0461  07F4               	addwf	___awmod@counter,f
  2667     0462                     l1545:
  2668     0462  1FF1               	btfss	___awmod@divisor+1,7
  2669     0463  2C65               	goto	u1251
  2670     0464  2C66               	goto	u1250
  2671     0465                     u1251:
  2672     0465  2C57               	goto	l1541
  2673     0466                     u1250:
  2674     0466                     l1547:
  2675     0466  0871               	movf	___awmod@divisor+1,w
  2676     0467  0273               	subwf	___awmod@dividend+1,w
  2677     0468  1D03               	skipz
  2678     0469  2C6C               	goto	u1265
  2679     046A  0870               	movf	___awmod@divisor,w
  2680     046B  0272               	subwf	___awmod@dividend,w
  2681     046C                     u1265:
  2682     046C  1C03               	skipc
  2683     046D  2C6F               	goto	u1261
  2684     046E  2C70               	goto	u1260
  2685     046F                     u1261:
  2686     046F  2C76               	goto	l1551
  2687     0470                     u1260:
  2688     0470                     l1549:
  2689     0470  0870               	movf	___awmod@divisor,w
  2690     0471  02F2               	subwf	___awmod@dividend,f
  2691     0472  0871               	movf	___awmod@divisor+1,w
  2692     0473  1C03               	skipc
  2693     0474  03F3               	decf	___awmod@dividend+1,f
  2694     0475  02F3               	subwf	___awmod@dividend+1,f
  2695     0476                     l1551:
  2696     0476  3001               	movlw	1
  2697     0477                     u1275:
  2698     0477  1003               	clrc
  2699     0478  0CF1               	rrf	___awmod@divisor+1,f
  2700     0479  0CF0               	rrf	___awmod@divisor,f
  2701     047A  3EFF               	addlw	-1
  2702     047B  1D03               	skipz
  2703     047C  2C77               	goto	u1275
  2704     047D                     l1553:
  2705     047D  3001               	movlw	1
  2706     047E  02F4               	subwf	___awmod@counter,f
  2707     047F  1D03               	btfss	3,2
  2708     0480  2C82               	goto	u1281
  2709     0481  2C83               	goto	u1280
  2710     0482                     u1281:
  2711     0482  2C66               	goto	l1547
  2712     0483                     u1280:
  2713     0483                     l1555:
  2714     0483  0875               	movf	___awmod@sign,w
  2715     0484  1903               	btfsc	3,2
  2716     0485  2C87               	goto	u1291
  2717     0486  2C88               	goto	u1290
  2718     0487                     u1291:
  2719     0487  2C8D               	goto	l1559
  2720     0488                     u1290:
  2721     0488                     l1557:
  2722     0488  09F2               	comf	___awmod@dividend,f
  2723     0489  09F3               	comf	___awmod@dividend+1,f
  2724     048A  0AF2               	incf	___awmod@dividend,f
  2725     048B  1903               	skipnz
  2726     048C  0AF3               	incf	___awmod@dividend+1,f
  2727     048D                     l1559:
  2728     048D  0873               	movf	___awmod@dividend+1,w
  2729     048E  00F1               	movwf	?___awmod+1
  2730     048F  0872               	movf	___awmod@dividend,w
  2731     0490  00F0               	movwf	?___awmod
  2732     0491                     l444:
  2733     0491  0008               	return
  2734     0492                     __end_of___awmod:
  2735                           
  2736                           	psect	text13
  2737     04EC                     __ptext13:	
  2738 ;; *************** function ___awdiv *****************
  2739 ;; Defined at:
  2740 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awdiv.c"
  2741 ;; Parameters:    Size  Location     Type
  2742 ;;  divisor         2    0[COMMON] int 
  2743 ;;  dividend        2    2[COMMON] int 
  2744 ;; Auto vars:     Size  Location     Type
  2745 ;;  quotient        2    6[COMMON] int 
  2746 ;;  sign            1    5[COMMON] unsigned char 
  2747 ;;  counter         1    4[COMMON] unsigned char 
  2748 ;; Return value:  Size  Location     Type
  2749 ;;                  2    0[COMMON] int 
  2750 ;; Registers used:
  2751 ;;		wreg, status,2, status,0, btemp+1
  2752 ;; Tracked objects:
  2753 ;;		On entry : 0/0
  2754 ;;		On exit  : 0/0
  2755 ;;		Unchanged: 0/0
  2756 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2757 ;;      Params:         4       0       0       0       0
  2758 ;;      Locals:         4       0       0       0       0
  2759 ;;      Temps:          0       0       0       0       0
  2760 ;;      Totals:         8       0       0       0       0
  2761 ;;Total ram usage:        8 bytes
  2762 ;; Hardware stack levels used: 1
  2763 ;; This function calls:
  2764 ;;		Nothing
  2765 ;; This function is called by:
  2766 ;;		_dtoa
  2767 ;; This function uses a non-reentrant model
  2768 ;;
  2769                           
  2770     04EC                     ___awdiv:	
  2771                           ;psect for function ___awdiv
  2772                           
  2773     04EC                     l1481:	
  2774                           ;incstack = 0
  2775                           ; Regs used in ___awdiv: [wreg+status,2+status,0+btemp+1]
  2776                           
  2777     04EC  01F5               	clrf	___awdiv@sign
  2778     04ED                     l1483:
  2779     04ED  1FF1               	btfss	___awdiv@divisor+1,7
  2780     04EE  2CF0               	goto	u1111
  2781     04EF  2CF1               	goto	u1110
  2782     04F0                     u1111:
  2783     04F0  2CF8               	goto	l1489
  2784     04F1                     u1110:
  2785     04F1                     l1485:
  2786     04F1  09F0               	comf	___awdiv@divisor,f
  2787     04F2  09F1               	comf	___awdiv@divisor+1,f
  2788     04F3  0AF0               	incf	___awdiv@divisor,f
  2789     04F4  1903               	skipnz
  2790     04F5  0AF1               	incf	___awdiv@divisor+1,f
  2791     04F6                     l1487:
  2792     04F6  01F5               	clrf	___awdiv@sign
  2793     04F7  0AF5               	incf	___awdiv@sign,f
  2794     04F8                     l1489:
  2795     04F8  1FF3               	btfss	___awdiv@dividend+1,7
  2796     04F9  2CFB               	goto	u1121
  2797     04FA  2CFC               	goto	u1120
  2798     04FB                     u1121:
  2799     04FB  2D05               	goto	l1495
  2800     04FC                     u1120:
  2801     04FC                     l1491:
  2802     04FC  09F2               	comf	___awdiv@dividend,f
  2803     04FD  09F3               	comf	___awdiv@dividend+1,f
  2804     04FE  0AF2               	incf	___awdiv@dividend,f
  2805     04FF  1903               	skipnz
  2806     0500  0AF3               	incf	___awdiv@dividend+1,f
  2807     0501                     l1493:
  2808     0501  3001               	movlw	1
  2809     0502  00FF               	movwf	btemp+1
  2810     0503  087F               	movf	btemp+1,w
  2811     0504  06F5               	xorwf	___awdiv@sign,f
  2812     0505                     l1495:
  2813     0505  01F6               	clrf	___awdiv@quotient
  2814     0506  01F7               	clrf	___awdiv@quotient+1
  2815     0507                     l1497:
  2816     0507  0870               	movf	___awdiv@divisor,w
  2817     0508  0471               	iorwf	___awdiv@divisor+1,w
  2818     0509  1903               	btfsc	3,2
  2819     050A  2D0C               	goto	u1131
  2820     050B  2D0D               	goto	u1130
  2821     050C                     u1131:
  2822     050C  2D44               	goto	l1517
  2823     050D                     u1130:
  2824     050D                     l1499:
  2825     050D  01F4               	clrf	___awdiv@counter
  2826     050E  0AF4               	incf	___awdiv@counter,f
  2827     050F  2D1B               	goto	l1505
  2828     0510                     l1501:
  2829     0510  3001               	movlw	1
  2830     0511                     u1145:
  2831     0511  1003               	clrc
  2832     0512  0DF0               	rlf	___awdiv@divisor,f
  2833     0513  0DF1               	rlf	___awdiv@divisor+1,f
  2834     0514  3EFF               	addlw	-1
  2835     0515  1D03               	skipz
  2836     0516  2D11               	goto	u1145
  2837     0517                     l1503:
  2838     0517  3001               	movlw	1
  2839     0518  00FF               	movwf	btemp+1
  2840     0519  087F               	movf	btemp+1,w
  2841     051A  07F4               	addwf	___awdiv@counter,f
  2842     051B                     l1505:
  2843     051B  1FF1               	btfss	___awdiv@divisor+1,7
  2844     051C  2D1E               	goto	u1151
  2845     051D  2D1F               	goto	u1150
  2846     051E                     u1151:
  2847     051E  2D10               	goto	l1501
  2848     051F                     u1150:
  2849     051F                     l1507:
  2850     051F  3001               	movlw	1
  2851     0520                     u1165:
  2852     0520  1003               	clrc
  2853     0521  0DF6               	rlf	___awdiv@quotient,f
  2854     0522  0DF7               	rlf	___awdiv@quotient+1,f
  2855     0523  3EFF               	addlw	-1
  2856     0524  1D03               	skipz
  2857     0525  2D20               	goto	u1165
  2858     0526  0871               	movf	___awdiv@divisor+1,w
  2859     0527  0273               	subwf	___awdiv@dividend+1,w
  2860     0528  1D03               	skipz
  2861     0529  2D2C               	goto	u1175
  2862     052A  0870               	movf	___awdiv@divisor,w
  2863     052B  0272               	subwf	___awdiv@dividend,w
  2864     052C                     u1175:
  2865     052C  1C03               	skipc
  2866     052D  2D2F               	goto	u1171
  2867     052E  2D30               	goto	u1170
  2868     052F                     u1171:
  2869     052F  2D37               	goto	l1513
  2870     0530                     u1170:
  2871     0530                     l1509:
  2872     0530  0870               	movf	___awdiv@divisor,w
  2873     0531  02F2               	subwf	___awdiv@dividend,f
  2874     0532  0871               	movf	___awdiv@divisor+1,w
  2875     0533  1C03               	skipc
  2876     0534  03F3               	decf	___awdiv@dividend+1,f
  2877     0535  02F3               	subwf	___awdiv@dividend+1,f
  2878     0536                     l1511:
  2879     0536  1476               	bsf	___awdiv@quotient,0
  2880     0537                     l1513:
  2881     0537  3001               	movlw	1
  2882     0538                     u1185:
  2883     0538  1003               	clrc
  2884     0539  0CF1               	rrf	___awdiv@divisor+1,f
  2885     053A  0CF0               	rrf	___awdiv@divisor,f
  2886     053B  3EFF               	addlw	-1
  2887     053C  1D03               	skipz
  2888     053D  2D38               	goto	u1185
  2889     053E                     l1515:
  2890     053E  3001               	movlw	1
  2891     053F  02F4               	subwf	___awdiv@counter,f
  2892     0540  1D03               	btfss	3,2
  2893     0541  2D43               	goto	u1191
  2894     0542  2D44               	goto	u1190
  2895     0543                     u1191:
  2896     0543  2D1F               	goto	l1507
  2897     0544                     u1190:
  2898     0544                     l1517:
  2899     0544  0875               	movf	___awdiv@sign,w
  2900     0545  1903               	btfsc	3,2
  2901     0546  2D48               	goto	u1201
  2902     0547  2D49               	goto	u1200
  2903     0548                     u1201:
  2904     0548  2D4E               	goto	l1521
  2905     0549                     u1200:
  2906     0549                     l1519:
  2907     0549  09F6               	comf	___awdiv@quotient,f
  2908     054A  09F7               	comf	___awdiv@quotient+1,f
  2909     054B  0AF6               	incf	___awdiv@quotient,f
  2910     054C  1903               	skipnz
  2911     054D  0AF7               	incf	___awdiv@quotient+1,f
  2912     054E                     l1521:
  2913     054E  0877               	movf	___awdiv@quotient+1,w
  2914     054F  00F1               	movwf	?___awdiv+1
  2915     0550  0876               	movf	___awdiv@quotient,w
  2916     0551  00F0               	movwf	?___awdiv
  2917     0552                     l431:
  2918     0552  0008               	return
  2919     0553                     __end_of___awdiv:
  2920                           
  2921                           	psect	text14
  2922     0347                     __ptext14:	
  2923 ;; *************** function _load_custom_characters *****************
  2924 ;; Defined at:
  2925 ;;		line 44 in file "BT2.c"
  2926 ;; Parameters:    Size  Location     Type
  2927 ;;  custom_data     1    wreg     PTR const unsigned char 
  2928 ;;		 -> cgram_dat(65), 
  2929 ;;  start_addres    1    6[COMMON] unsigned char 
  2930 ;; Auto vars:     Size  Location     Type
  2931 ;;  custom_data     1    8[COMMON] PTR const unsigned char 
  2932 ;;		 -> cgram_dat(65), 
  2933 ;;  i               1    9[COMMON] unsigned char 
  2934 ;; Return value:  Size  Location     Type
  2935 ;;                  1    wreg      void 
  2936 ;; Registers used:
  2937 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2938 ;; Tracked objects:
  2939 ;;		On entry : 0/0
  2940 ;;		On exit  : 0/0
  2941 ;;		Unchanged: 0/0
  2942 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2943 ;;      Params:         1       0       0       0       0
  2944 ;;      Locals:         2       0       0       0       0
  2945 ;;      Temps:          1       0       0       0       0
  2946 ;;      Totals:         4       0       0       0       0
  2947 ;;Total ram usage:        4 bytes
  2948 ;; Hardware stack levels used: 1
  2949 ;; Hardware stack levels required when called: 2
  2950 ;; This function calls:
  2951 ;;		_lcd_busy
  2952 ;;		_lcd_put_byte
  2953 ;; This function is called by:
  2954 ;;		_main
  2955 ;; This function uses a non-reentrant model
  2956 ;;
  2957                           
  2958     0347                     _load_custom_characters:	
  2959                           ;psect for function _load_custom_characters
  2960                           
  2961                           
  2962                           ;incstack = 0
  2963                           ; Regs used in _load_custom_characters: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cst
      +                          ack]
  2964                           ;load_custom_characters@custom_data stored from wreg
  2965     0347  00F8               	movwf	load_custom_characters@custom_data
  2966     0348                     l1693:
  2967                           
  2968                           ;BT2.c: 45:     unsigned char i = 0;
  2969     0348  01F9               	clrf	load_custom_characters@i
  2970     0349                     l1695:
  2971                           
  2972                           ;BT2.c: 46:     lcd_put_byte(0, 0x40 + (start_address * 8));
  2973     0349  0876               	movf	load_custom_characters@start_address,w
  2974     034A  00F7               	movwf	??_load_custom_characters
  2975     034B  3002               	movlw	2
  2976     034C                     u1495:
  2977     034C  1003               	clrc
  2978     034D  0DF7               	rlf	??_load_custom_characters,f
  2979     034E  3EFF               	addlw	-1
  2980     034F  1D03               	skipz
  2981     0350  2B4C               	goto	u1495
  2982     0351  1003               	clrc
  2983     0352  0D77               	rlf	??_load_custom_characters,w
  2984     0353  3E40               	addlw	64
  2985     0354  00F3               	movwf	lcd_put_byte@b
  2986     0355  3000               	movlw	0
  2987     0356  120A  118A  2292  120A  118A  	fcall	_lcd_put_byte
  2988     035B                     l1697:	
  2989                           ;BT2.c: 47:     while(lcd_busy());
  2990                           
  2991     035B  120A  118A  2262  120A  118A  	fcall	_lcd_busy
  2992     0360  3A00               	xorlw	0
  2993     0361  1D03               	skipz
  2994     0362  2B64               	goto	u1501
  2995     0363  2B65               	goto	u1500
  2996     0364                     u1501:
  2997     0364  2B5B               	goto	l1697
  2998     0365                     u1500:
  2999     0365  2B83               	goto	l1705
  3000     0366                     l1699:
  3001                           
  3002                           ;BT2.c: 49:         lcd_put_byte(1, custom_data[i]);
  3003     0366  0879               	movf	load_custom_characters@i,w
  3004     0367  0778               	addwf	load_custom_characters@custom_data,w
  3005     0368  0084               	movwf	4
  3006     0369  120A  118A  200D  120A  118A  	fcall	stringdir
  3007     036E  00F3               	movwf	lcd_put_byte@b
  3008     036F  3001               	movlw	1
  3009     0370  120A  118A  2292  120A  118A  	fcall	_lcd_put_byte
  3010     0375                     l1701:	
  3011                           ;BT2.c: 50:         while(lcd_busy());
  3012                           
  3013     0375  120A  118A  2262  120A  118A  	fcall	_lcd_busy
  3014     037A  3A00               	xorlw	0
  3015     037B  1D03               	skipz
  3016     037C  2B7E               	goto	u1511
  3017     037D  2B7F               	goto	u1510
  3018     037E                     u1511:
  3019     037E  2B75               	goto	l1701
  3020     037F                     u1510:
  3021     037F                     l1703:
  3022                           
  3023                           ;BT2.c: 51:         i++;
  3024     037F  3001               	movlw	1
  3025     0380  00FF               	movwf	btemp+1
  3026     0381  087F               	movf	btemp+1,w
  3027     0382  07F9               	addwf	load_custom_characters@i,f
  3028     0383                     l1705:
  3029                           
  3030                           ;BT2.c: 48:     while(custom_data[i] != 0x99) {
  3031     0383  0879               	movf	load_custom_characters@i,w
  3032     0384  0778               	addwf	load_custom_characters@custom_data,w
  3033     0385  0084               	movwf	4
  3034     0386  120A  118A  200D  120A  118A  	fcall	stringdir
  3035     038B  3A99               	xorlw	153
  3036     038C  1D03               	skipz
  3037     038D  2B8F               	goto	u1521
  3038     038E  2B90               	goto	u1520
  3039     038F                     u1521:
  3040     038F  2B66               	goto	l1699
  3041     0390                     u1520:
  3042     0390                     l58:
  3043     0390  0008               	return
  3044     0391                     __end_of_load_custom_characters:
  3045                           
  3046                           	psect	text15
  3047     0212                     __ptext15:	
  3048 ;; *************** function _lcd_puts *****************
  3049 ;; Defined at:
  3050 ;;		line 224 in file "../BT4.X/lcd.c"
  3051 ;; Parameters:    Size  Location     Type
  3052 ;;  s               2   10[COMMON] PTR const unsigned char 
  3053 ;;		 -> main@data(4), STR_1(3), 
  3054 ;; Auto vars:     Size  Location     Type
  3055 ;;		None
  3056 ;; Return value:  Size  Location     Type
  3057 ;;                  1    wreg      void 
  3058 ;; Registers used:
  3059 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3060 ;; Tracked objects:
  3061 ;;		On entry : 0/0
  3062 ;;		On exit  : 0/0
  3063 ;;		Unchanged: 0/0
  3064 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3065 ;;      Params:         2       0       0       0       0
  3066 ;;      Locals:         0       0       0       0       0
  3067 ;;      Temps:          0       0       0       0       0
  3068 ;;      Totals:         2       0       0       0       0
  3069 ;;Total ram usage:        2 bytes
  3070 ;; Hardware stack levels used: 1
  3071 ;; Hardware stack levels required when called: 4
  3072 ;; This function calls:
  3073 ;;		_lcd_putc
  3074 ;; This function is called by:
  3075 ;;		_main
  3076 ;; This function uses a non-reentrant model
  3077 ;;
  3078                           
  3079     0212                     _lcd_puts:	
  3080                           ;psect for function _lcd_puts
  3081                           
  3082     0212                     l1745:	
  3083                           ;incstack = 0
  3084                           ; Regs used in _lcd_puts: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3085                           
  3086                           
  3087                           ;../BT4.X/lcd.c: 224: void lcd_puts(const char* s);../BT4.X/lcd.c: 225: {;../BT4.X/lcd.c
      +                          : 229:  while(*s)
  3088     0212  2A27               	goto	l1751
  3089     0213                     l1747:
  3090                           
  3091                           ;../BT4.X/lcd.c: 230:   {;../BT4.X/lcd.c: 231:   lcd_putc(*s++);
  3092     0213  087B               	movf	lcd_puts@s+1,w
  3093     0214  00FF               	movwf	btemp+1
  3094     0215  087A               	movf	lcd_puts@s,w
  3095     0216  0084               	movwf	4
  3096     0217  120A  118A  2003  120A  118A  	fcall	stringtab
  3097     021C  120A  118A  2391  120A  118A  	fcall	_lcd_putc
  3098     0221                     l1749:
  3099     0221  3001               	movlw	1
  3100     0222  07FA               	addwf	lcd_puts@s,f
  3101     0223  1803               	skipnc
  3102     0224  0AFB               	incf	lcd_puts@s+1,f
  3103     0225  3000               	movlw	0
  3104     0226  07FB               	addwf	lcd_puts@s+1,f
  3105     0227                     l1751:
  3106                           
  3107                           ;../BT4.X/lcd.c: 229:  while(*s)
  3108     0227  087B               	movf	lcd_puts@s+1,w
  3109     0228  1283               	bcf	3,5	;RP0=0, select bank0
  3110     0229  1303               	bcf	3,6	;RP1=0, select bank0
  3111     022A  00FF               	movwf	btemp+1
  3112     022B  087A               	movf	lcd_puts@s,w
  3113     022C  0084               	movwf	4
  3114     022D  120A  118A  2003  120A  118A  	fcall	stringtab
  3115     0232  3A00               	xorlw	0
  3116     0233  1D03               	skipz
  3117     0234  2A36               	goto	u1581
  3118     0235  2A37               	goto	u1580
  3119     0236                     u1581:
  3120     0236  2A13               	goto	l1747
  3121     0237                     u1580:
  3122     0237                     l147:
  3123     0237  0008               	return
  3124     0238                     __end_of_lcd_puts:
  3125                           
  3126                           	psect	text16
  3127     0391                     __ptext16:	
  3128 ;; *************** function _lcd_putc *****************
  3129 ;; Defined at:
  3130 ;;		line 190 in file "../BT4.X/lcd.c"
  3131 ;; Parameters:    Size  Location     Type
  3132 ;;  c               1    wreg     unsigned char 
  3133 ;; Auto vars:     Size  Location     Type
  3134 ;;  c               1    9[COMMON] unsigned char 
  3135 ;; Return value:  Size  Location     Type
  3136 ;;                  1    wreg      void 
  3137 ;; Registers used:
  3138 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3139 ;; Tracked objects:
  3140 ;;		On entry : 0/0
  3141 ;;		On exit  : 0/0
  3142 ;;		Unchanged: 0/0
  3143 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3144 ;;      Params:         0       0       0       0       0
  3145 ;;      Locals:         1       0       0       0       0
  3146 ;;      Temps:          0       0       0       0       0
  3147 ;;      Totals:         1       0       0       0       0
  3148 ;;Total ram usage:        1 bytes
  3149 ;; Hardware stack levels used: 1
  3150 ;; Hardware stack levels required when called: 3
  3151 ;; This function calls:
  3152 ;;		_lcd_busy
  3153 ;;		_lcd_gotoxy
  3154 ;;		_lcd_put_byte
  3155 ;; This function is called by:
  3156 ;;		_main
  3157 ;;		_lcd_puts
  3158 ;;		_putch
  3159 ;;		_lcd_String_Delay
  3160 ;; This function uses a non-reentrant model
  3161 ;;
  3162                           
  3163     0391                     _lcd_putc:	
  3164                           ;psect for function _lcd_putc
  3165                           
  3166                           
  3167                           ;incstack = 0
  3168 ;; hardware stack exceeded
  3169                           ; Regs used in _lcd_putc: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3170                           ;lcd_putc@c stored from wreg
  3171     0391  00F9               	movwf	lcd_putc@c
  3172     0392                     l1425:
  3173                           
  3174                           ;../BT4.X/lcd.c: 190: void lcd_putc(char c);../BT4.X/lcd.c: 191: {;../BT4.X/lcd.c: 195: 
      +                           switch(c)
  3175     0392  2BD5               	goto	l1441
  3176     0393                     l1427:
  3177                           
  3178                           ;../BT4.X/lcd.c: 198:    lcd_put_byte(0,1);
  3179     0393  01F3               	clrf	lcd_put_byte@b
  3180     0394  0AF3               	incf	lcd_put_byte@b,f
  3181     0395  3000               	movlw	0
  3182     0396  120A  118A  2292  120A  118A  	fcall	_lcd_put_byte
  3183     039B                     l1429:	
  3184                           ;../BT4.X/lcd.c: 199:    while(lcd_busy());
  3185                           
  3186     039B  120A  118A  2262  120A  118A  	fcall	_lcd_busy
  3187     03A0  3A00               	xorlw	0
  3188     03A1  1D03               	skipz
  3189     03A2  2BA4               	goto	u991
  3190     03A3  2BA5               	goto	u990
  3191     03A4                     u991:
  3192     03A4  2B9B               	goto	l1429
  3193     03A5                     u990:
  3194     03A5  2BE0               	goto	l141
  3195     03A6                     l1431:
  3196                           
  3197                           ;../BT4.X/lcd.c: 202:    lcd_gotoxy(0,1);
  3198     03A6  01F6               	clrf	lcd_gotoxy@row
  3199     03A7  0AF6               	incf	lcd_gotoxy@row,f
  3200     03A8  3000               	movlw	0
  3201     03A9  120A  118A  21CB  120A  118A  	fcall	_lcd_gotoxy
  3202                           
  3203                           ;../BT4.X/lcd.c: 203:    break;
  3204     03AE  2BE0               	goto	l141
  3205     03AF                     l1433:
  3206                           
  3207                           ;../BT4.X/lcd.c: 205:    lcd_put_byte(0,0x10);
  3208     03AF  3010               	movlw	16
  3209     03B0  00F3               	movwf	lcd_put_byte@b
  3210     03B1  3000               	movlw	0
  3211     03B2  120A  118A  2292  120A  118A  	fcall	_lcd_put_byte
  3212     03B7                     l1435:	
  3213                           ;../BT4.X/lcd.c: 206:    while(lcd_busy());
  3214                           
  3215     03B7  120A  118A  2262  120A  118A  	fcall	_lcd_busy
  3216     03BC  3A00               	xorlw	0
  3217     03BD  1D03               	skipz
  3218     03BE  2BC0               	goto	u1001
  3219     03BF  2BC1               	goto	u1000
  3220     03C0                     u1001:
  3221     03C0  2BB7               	goto	l1435
  3222     03C1                     u1000:
  3223     03C1  2BE0               	goto	l141
  3224     03C2                     l1437:
  3225                           
  3226                           ;../BT4.X/lcd.c: 210:     {;../BT4.X/lcd.c: 211:     lcd_put_byte(1,c);
  3227     03C2  0879               	movf	lcd_putc@c,w
  3228     03C3  00F3               	movwf	lcd_put_byte@b
  3229     03C4  3001               	movlw	1
  3230     03C5  120A  118A  2292  120A  118A  	fcall	_lcd_put_byte
  3231     03CA                     l1439:	
  3232                           ;../BT4.X/lcd.c: 212:     while(lcd_busy());
  3233                           
  3234     03CA  120A  118A  2262  120A  118A  	fcall	_lcd_busy
  3235     03CF  3A00               	xorlw	0
  3236     03D0  1D03               	skipz
  3237     03D1  2BD3               	goto	u1011
  3238     03D2  2BD4               	goto	u1010
  3239     03D3                     u1011:
  3240     03D3  2BCA               	goto	l1439
  3241     03D4                     u1010:
  3242     03D4  2BE0               	goto	l141
  3243     03D5                     l1441:
  3244     03D5  0879               	movf	lcd_putc@c,w
  3245                           
  3246                           ; Switch size 1, requested type "simple"
  3247                           ; Number of cases is 3, Range of values is 8 to 12
  3248                           ; switch strategies available:
  3249                           ; Name         Instructions Cycles
  3250                           ; simple_byte           10     6 (average)
  3251                           ; direct_byte           26    11 (fixed)
  3252                           ; jumptable            263     9 (fixed)
  3253                           ;	Chosen strategy is simple_byte
  3254     03D6  3A08               	xorlw	8	; case 8
  3255     03D7  1903               	skipnz
  3256     03D8  2BAF               	goto	l1433
  3257     03D9  3A02               	xorlw	2	; case 10
  3258     03DA  1903               	skipnz
  3259     03DB  2BA6               	goto	l1431
  3260     03DC  3A06               	xorlw	6	; case 12
  3261     03DD  1903               	skipnz
  3262     03DE  2B93               	goto	l1427
  3263     03DF  2BC2               	goto	l1437
  3264     03E0                     l141:
  3265     03E0  0008               	return
  3266     03E1                     __end_of_lcd_putc:
  3267                           
  3268                           	psect	text17
  3269     01CB                     __ptext17:	
  3270 ;; *************** function _lcd_gotoxy *****************
  3271 ;; Defined at:
  3272 ;;		line 167 in file "../BT4.X/lcd.c"
  3273 ;; Parameters:    Size  Location     Type
  3274 ;;  col             1    wreg     unsigned char 
  3275 ;;  row             1    6[COMMON] unsigned char 
  3276 ;; Auto vars:     Size  Location     Type
  3277 ;;  col             1    7[COMMON] unsigned char 
  3278 ;;  address         1    8[COMMON] unsigned char 
  3279 ;; Return value:  Size  Location     Type
  3280 ;;                  1    wreg      void 
  3281 ;; Registers used:
  3282 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3283 ;; Tracked objects:
  3284 ;;		On entry : 0/0
  3285 ;;		On exit  : 0/0
  3286 ;;		Unchanged: 0/0
  3287 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3288 ;;      Params:         1       0       0       0       0
  3289 ;;      Locals:         2       0       0       0       0
  3290 ;;      Temps:          0       0       0       0       0
  3291 ;;      Totals:         3       0       0       0       0
  3292 ;;Total ram usage:        3 bytes
  3293 ;; Hardware stack levels used: 1
  3294 ;; Hardware stack levels required when called: 2
  3295 ;; This function calls:
  3296 ;;		_lcd_busy
  3297 ;;		_lcd_put_byte
  3298 ;; This function is called by:
  3299 ;;		_main
  3300 ;;		_lcd_putc
  3301 ;; This function uses a non-reentrant model
  3302 ;;
  3303                           
  3304     01CB                     _lcd_gotoxy:	
  3305                           ;psect for function _lcd_gotoxy
  3306                           
  3307                           
  3308                           ;incstack = 0
  3309 ;; hardware stack exceeded
  3310                           ; Regs used in _lcd_gotoxy: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3311                           ;lcd_gotoxy@col stored from wreg
  3312     01CB  00F7               	movwf	lcd_gotoxy@col
  3313     01CC                     l1413:
  3314                           
  3315                           ;../BT4.X/lcd.c: 167: void lcd_gotoxy(unsigned char col, unsigned char row);../BT4.X/lcd
      +                          .c: 168: {;../BT4.X/lcd.c: 170:  unsigned char address;;../BT4.X/lcd.c: 173:  if(row!=0)
  3316     01CC  0876               	movf	lcd_gotoxy@row,w
  3317     01CD  1903               	btfsc	3,2
  3318     01CE  29D0               	goto	u971
  3319     01CF  29D1               	goto	u970
  3320     01D0                     u971:
  3321     01D0  29D4               	goto	l1417
  3322     01D1                     u970:
  3323     01D1                     l1415:
  3324                           
  3325                           ;../BT4.X/lcd.c: 174:   address=0x40;
  3326     01D1  3040               	movlw	64
  3327     01D2  00F8               	movwf	lcd_gotoxy@address
  3328     01D3  29D5               	goto	l1419
  3329     01D4                     l1417:
  3330                           
  3331                           ;../BT4.X/lcd.c: 176:   address=0;
  3332     01D4  01F8               	clrf	lcd_gotoxy@address
  3333     01D5                     l1419:
  3334                           
  3335                           ;../BT4.X/lcd.c: 178:  address += col;
  3336     01D5  0877               	movf	lcd_gotoxy@col,w
  3337     01D6  00FF               	movwf	btemp+1
  3338     01D7  087F               	movf	btemp+1,w
  3339     01D8  07F8               	addwf	lcd_gotoxy@address,f
  3340     01D9                     l1421:
  3341                           
  3342                           ;../BT4.X/lcd.c: 180:  lcd_put_byte(0,0x80|address);
  3343     01D9  0878               	movf	lcd_gotoxy@address,w
  3344     01DA  3880               	iorlw	128
  3345     01DB  00F3               	movwf	lcd_put_byte@b
  3346     01DC  3000               	movlw	0
  3347     01DD  120A  118A  2292  120A  118A  	fcall	_lcd_put_byte
  3348     01E2                     l1423:	
  3349                           ;../BT4.X/lcd.c: 181:  while(lcd_busy());
  3350                           
  3351     01E2  120A  118A  2262  120A  118A  	fcall	_lcd_busy
  3352     01E7  3A00               	xorlw	0
  3353     01E8  1D03               	skipz
  3354     01E9  29EB               	goto	u981
  3355     01EA  29EC               	goto	u980
  3356     01EB                     u981:
  3357     01EB  29E2               	goto	l1423
  3358     01EC                     u980:
  3359     01EC                     l123:
  3360     01EC  0008               	return
  3361     01ED                     __end_of_lcd_gotoxy:
  3362                           
  3363                           	psect	text18
  3364     05E6                     __ptext18:	
  3365 ;; *************** function _lcd_init *****************
  3366 ;; Defined at:
  3367 ;;		line 241 in file "../BT4.X/lcd.c"
  3368 ;; Parameters:    Size  Location     Type
  3369 ;;		None
  3370 ;; Auto vars:     Size  Location     Type
  3371 ;;  i               1    0        unsigned char 
  3372 ;; Return value:  Size  Location     Type
  3373 ;;                  1    wreg      void 
  3374 ;; Registers used:
  3375 ;;		wreg, status,2, status,0, pclath, cstack
  3376 ;; Tracked objects:
  3377 ;;		On entry : 0/0
  3378 ;;		On exit  : 0/0
  3379 ;;		Unchanged: 0/0
  3380 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3381 ;;      Params:         0       0       0       0       0
  3382 ;;      Locals:         0       0       0       0       0
  3383 ;;      Temps:          2       0       0       0       0
  3384 ;;      Totals:         2       0       0       0       0
  3385 ;;Total ram usage:        2 bytes
  3386 ;; Hardware stack levels used: 1
  3387 ;; Hardware stack levels required when called: 2
  3388 ;; This function calls:
  3389 ;;		_lcd_busy
  3390 ;;		_lcd_put_byte
  3391 ;;		_lcd_put_nibble
  3392 ;; This function is called by:
  3393 ;;		_main
  3394 ;; This function uses a non-reentrant model
  3395 ;;
  3396                           
  3397     05E6                     _lcd_init:	
  3398                           ;psect for function _lcd_init
  3399                           
  3400     05E6                     l1707:	
  3401                           ;incstack = 0
  3402                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  3403                           
  3404                           
  3405                           ;../BT4.X/lcd.c: 244: unsigned char i;;../BT4.X/lcd.c: 247:  TRISD3 = 0;
  3406     05E6  1683               	bsf	3,5	;RP0=1, select bank1
  3407     05E7  1303               	bcf	3,6	;RP1=0, select bank1
  3408     05E8  1188               	bcf	8,3	;volatile
  3409                           
  3410                           ;../BT4.X/lcd.c: 248:  TRISD1 = 0;
  3411     05E9  1088               	bcf	8,1	;volatile
  3412                           
  3413                           ;../BT4.X/lcd.c: 249:  TRISD2 = 0;
  3414     05EA  1108               	bcf	8,2	;volatile
  3415                           
  3416                           ;../BT4.X/lcd.c: 250:  TRISD4 = 0;
  3417     05EB  1208               	bcf	8,4	;volatile
  3418                           
  3419                           ;../BT4.X/lcd.c: 251:  TRISD5 = 0;
  3420     05EC  1288               	bcf	8,5	;volatile
  3421                           
  3422                           ;../BT4.X/lcd.c: 252:  TRISD6 = 0;
  3423     05ED  1308               	bcf	8,6	;volatile
  3424                           
  3425                           ;../BT4.X/lcd.c: 253:  TRISD7 = 0;
  3426     05EE  1388               	bcf	8,7	;volatile
  3427     05EF                     l1709:
  3428                           
  3429                           ;../BT4.X/lcd.c: 255:  _delay((unsigned long)((15)*(4000000/4000.0)));
  3430     05EF  3014               	movlw	20
  3431     05F0  00F7               	movwf	??_lcd_init+1
  3432     05F1  3079               	movlw	121
  3433     05F2  00F6               	movwf	??_lcd_init
  3434     05F3                     u1647:
  3435     05F3  0BF6               	decfsz	??_lcd_init,f
  3436     05F4  2DF3               	goto	u1647
  3437     05F5  0BF7               	decfsz	??_lcd_init+1,f
  3438     05F6  2DF3               	goto	u1647
  3439     05F7  2DF8               	nop2
  3440     05F8                     l1711:
  3441                           
  3442                           ;../BT4.X/lcd.c: 257:  RD1 = 0;
  3443     05F8  1283               	bcf	3,5	;RP0=0, select bank0
  3444     05F9  1303               	bcf	3,6	;RP1=0, select bank0
  3445     05FA  1088               	bcf	8,1	;volatile
  3446     05FB                     l1713:
  3447                           
  3448                           ;../BT4.X/lcd.c: 258:  RD2 = 0;
  3449     05FB  1108               	bcf	8,2	;volatile
  3450     05FC                     l1715:
  3451                           
  3452                           ;../BT4.X/lcd.c: 259:  RD3 = 0;
  3453     05FC  1188               	bcf	8,3	;volatile
  3454     05FD                     l1717:
  3455                           
  3456                           ;../BT4.X/lcd.c: 261:  lcd_put_nibble(3);
  3457     05FD  3003               	movlw	3
  3458     05FE  120A  118A  2305  120A  118A  	fcall	_lcd_put_nibble
  3459     0603                     l1719:
  3460                           
  3461                           ;../BT4.X/lcd.c: 262:  _delay((unsigned long)((10)*(4000000/4000.0)));
  3462     0603  300D               	movlw	13
  3463     0604  00F7               	movwf	??_lcd_init+1
  3464     0605  30FB               	movlw	251
  3465     0606  00F6               	movwf	??_lcd_init
  3466     0607                     u1657:
  3467     0607  0BF6               	decfsz	??_lcd_init,f
  3468     0608  2E07               	goto	u1657
  3469     0609  0BF7               	decfsz	??_lcd_init+1,f
  3470     060A  2E07               	goto	u1657
  3471     060B  2E0C               	nop2
  3472                           
  3473                           ;../BT4.X/lcd.c: 263:  lcd_put_nibble(3);
  3474     060C  3003               	movlw	3
  3475     060D  120A  118A  2305  120A  118A  	fcall	_lcd_put_nibble
  3476     0612                     l1721:
  3477                           
  3478                           ;../BT4.X/lcd.c: 264:  _delay((unsigned long)((10)*(4000000/4000.0)));
  3479     0612  300D               	movlw	13
  3480     0613  00F7               	movwf	??_lcd_init+1
  3481     0614  30FB               	movlw	251
  3482     0615  00F6               	movwf	??_lcd_init
  3483     0616                     u1667:
  3484     0616  0BF6               	decfsz	??_lcd_init,f
  3485     0617  2E16               	goto	u1667
  3486     0618  0BF7               	decfsz	??_lcd_init+1,f
  3487     0619  2E16               	goto	u1667
  3488     061A  2E1B               	nop2
  3489     061B                     l1723:
  3490                           
  3491                           ;../BT4.X/lcd.c: 265:  lcd_put_nibble(3);
  3492     061B  3003               	movlw	3
  3493     061C  120A  118A  2305  120A  118A  	fcall	_lcd_put_nibble
  3494                           
  3495                           ;../BT4.X/lcd.c: 266:  _delay((unsigned long)((10)*(4000000/4000.0)));
  3496     0621  300D               	movlw	13
  3497     0622  00F7               	movwf	??_lcd_init+1
  3498     0623  30FB               	movlw	251
  3499     0624  00F6               	movwf	??_lcd_init
  3500     0625                     u1677:
  3501     0625  0BF6               	decfsz	??_lcd_init,f
  3502     0626  2E25               	goto	u1677
  3503     0627  0BF7               	decfsz	??_lcd_init+1,f
  3504     0628  2E25               	goto	u1677
  3505     0629  2E2A               	nop2
  3506     062A                     l1725:
  3507                           
  3508                           ;../BT4.X/lcd.c: 268:  lcd_put_nibble(2);
  3509     062A  3002               	movlw	2
  3510     062B  120A  118A  2305  120A  118A  	fcall	_lcd_put_nibble
  3511     0630                     l1727:	
  3512                           ;../BT4.X/lcd.c: 269:  while(lcd_busy());
  3513                           
  3514     0630  120A  118A  2262  120A  118A  	fcall	_lcd_busy
  3515     0635  3A00               	xorlw	0
  3516     0636  1D03               	skipz
  3517     0637  2E39               	goto	u1531
  3518     0638  2E3A               	goto	u1530
  3519     0639                     u1531:
  3520     0639  2E30               	goto	l1727
  3521     063A                     u1530:
  3522     063A                     l1729:
  3523                           
  3524                           ;../BT4.X/lcd.c: 271:  lcd_put_byte(0,0b00101100 & 0b00111000);
  3525     063A  3028               	movlw	40
  3526     063B  00F3               	movwf	lcd_put_byte@b
  3527     063C  3000               	movlw	0
  3528     063D  120A  118A  2292  120A  118A  	fcall	_lcd_put_byte
  3529     0642                     l1731:	
  3530                           ;../BT4.X/lcd.c: 272:  while(lcd_busy());
  3531                           
  3532     0642  120A  118A  2262  120A  118A  	fcall	_lcd_busy
  3533     0647  3A00               	xorlw	0
  3534     0648  1D03               	skipz
  3535     0649  2E4B               	goto	u1541
  3536     064A  2E4C               	goto	u1540
  3537     064B                     u1541:
  3538     064B  2E42               	goto	l1731
  3539     064C                     u1540:
  3540     064C                     l1733:
  3541                           
  3542                           ;../BT4.X/lcd.c: 274:  lcd_put_byte(0,0b00001111 & 0b00001101 & 0b00001110);
  3543     064C  300C               	movlw	12
  3544     064D  00F3               	movwf	lcd_put_byte@b
  3545     064E  3000               	movlw	0
  3546     064F  120A  118A  2292  120A  118A  	fcall	_lcd_put_byte
  3547     0654                     l1735:	
  3548                           ;../BT4.X/lcd.c: 275:  while(lcd_busy());
  3549                           
  3550     0654  120A  118A  2262  120A  118A  	fcall	_lcd_busy
  3551     0659  3A00               	xorlw	0
  3552     065A  1D03               	skipz
  3553     065B  2E5D               	goto	u1551
  3554     065C  2E5E               	goto	u1550
  3555     065D                     u1551:
  3556     065D  2E54               	goto	l1735
  3557     065E                     u1550:
  3558     065E                     l1737:
  3559                           
  3560                           ;../BT4.X/lcd.c: 277:  lcd_put_byte(0,0x01);
  3561     065E  01F3               	clrf	lcd_put_byte@b
  3562     065F  0AF3               	incf	lcd_put_byte@b,f
  3563     0660  3000               	movlw	0
  3564     0661  120A  118A  2292  120A  118A  	fcall	_lcd_put_byte
  3565     0666                     l1739:	
  3566                           ;../BT4.X/lcd.c: 278:  while(lcd_busy());
  3567                           
  3568     0666  120A  118A  2262  120A  118A  	fcall	_lcd_busy
  3569     066B  3A00               	xorlw	0
  3570     066C  1D03               	skipz
  3571     066D  2E6F               	goto	u1561
  3572     066E  2E70               	goto	u1560
  3573     066F                     u1561:
  3574     066F  2E66               	goto	l1739
  3575     0670                     u1560:
  3576     0670                     l1741:
  3577                           
  3578                           ;../BT4.X/lcd.c: 280:  lcd_put_byte(0,0b00000110);
  3579     0670  3006               	movlw	6
  3580     0671  00F3               	movwf	lcd_put_byte@b
  3581     0672  3000               	movlw	0
  3582     0673  120A  118A  2292  120A  118A  	fcall	_lcd_put_byte
  3583     0678                     l1743:	
  3584                           ;../BT4.X/lcd.c: 281:  while(lcd_busy());
  3585                           
  3586     0678  120A  118A  2262  120A  118A  	fcall	_lcd_busy
  3587     067D  3A00               	xorlw	0
  3588     067E  1D03               	skipz
  3589     067F  2E81               	goto	u1571
  3590     0680  2E82               	goto	u1570
  3591     0681                     u1571:
  3592     0681  2E78               	goto	l1743
  3593     0682                     u1570:
  3594     0682                     l165:
  3595     0682  0008               	return
  3596     0683                     __end_of_lcd_init:
  3597                           
  3598                           	psect	text19
  3599     0292                     __ptext19:	
  3600 ;; *************** function _lcd_put_byte *****************
  3601 ;; Defined at:
  3602 ;;		line 134 in file "../BT4.X/lcd.c"
  3603 ;; Parameters:    Size  Location     Type
  3604 ;;  rs              1    wreg     unsigned char 
  3605 ;;  b               1    3[COMMON] unsigned char 
  3606 ;; Auto vars:     Size  Location     Type
  3607 ;;  rs              1    5[COMMON] unsigned char 
  3608 ;; Return value:  Size  Location     Type
  3609 ;;                  1    wreg      void 
  3610 ;; Registers used:
  3611 ;;		wreg, status,2, status,0, pclath, cstack
  3612 ;; Tracked objects:
  3613 ;;		On entry : 0/0
  3614 ;;		On exit  : 0/0
  3615 ;;		Unchanged: 0/0
  3616 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3617 ;;      Params:         1       0       0       0       0
  3618 ;;      Locals:         1       0       0       0       0
  3619 ;;      Temps:          1       0       0       0       0
  3620 ;;      Totals:         3       0       0       0       0
  3621 ;;Total ram usage:        3 bytes
  3622 ;; Hardware stack levels used: 1
  3623 ;; Hardware stack levels required when called: 1
  3624 ;; This function calls:
  3625 ;;		_lcd_put_nibble
  3626 ;; This function is called by:
  3627 ;;		_load_custom_characters
  3628 ;;		_lcd_gotoxy
  3629 ;;		_lcd_putc
  3630 ;;		_lcd_init
  3631 ;;		_lcd_ShiftLeft
  3632 ;;		_lcd_ShiftRight
  3633 ;; This function uses a non-reentrant model
  3634 ;;
  3635                           
  3636     0292                     _lcd_put_byte:	
  3637                           ;psect for function _lcd_put_byte
  3638                           
  3639                           
  3640                           ;incstack = 0
  3641                           ; Regs used in _lcd_put_byte: [wreg+status,2+status,0+pclath+cstack]
  3642                           ;lcd_put_byte@rs stored from wreg
  3643     0292  00F5               	movwf	lcd_put_byte@rs
  3644     0293                     l1375:
  3645                           
  3646                           ;../BT4.X/lcd.c: 134: void lcd_put_byte(unsigned char rs, unsigned char b);../BT4.X/lcd.
      +                          c: 135: {;../BT4.X/lcd.c: 139:  TRISD4 = 0;
  3647     0293  1683               	bsf	3,5	;RP0=1, select bank1
  3648     0294  1303               	bcf	3,6	;RP1=0, select bank1
  3649     0295  1208               	bcf	8,4	;volatile
  3650                           
  3651                           ;../BT4.X/lcd.c: 140:  TRISD5 = 0;
  3652     0296  1288               	bcf	8,5	;volatile
  3653                           
  3654                           ;../BT4.X/lcd.c: 141:  TRISD6 = 0;
  3655     0297  1308               	bcf	8,6	;volatile
  3656                           
  3657                           ;../BT4.X/lcd.c: 142:  TRISD7 = 0;
  3658     0298  1388               	bcf	8,7	;volatile
  3659     0299                     l1377:
  3660                           
  3661                           ;../BT4.X/lcd.c: 144:  if(rs)
  3662     0299  0875               	movf	lcd_put_byte@rs,w
  3663     029A  1903               	btfsc	3,2
  3664     029B  2A9D               	goto	u951
  3665     029C  2A9E               	goto	u950
  3666     029D                     u951:
  3667     029D  2AA2               	goto	l113
  3668     029E                     u950:
  3669     029E                     l1379:
  3670                           
  3671                           ;../BT4.X/lcd.c: 145:   RD1 = 1;
  3672     029E  1283               	bcf	3,5	;RP0=0, select bank0
  3673     029F  1303               	bcf	3,6	;RP1=0, select bank0
  3674     02A0  1488               	bsf	8,1	;volatile
  3675     02A1  2AA5               	goto	l1381
  3676     02A2                     l113:	
  3677                           ;../BT4.X/lcd.c: 146:  else
  3678                           
  3679                           
  3680                           ;../BT4.X/lcd.c: 147:   RD1 = 0;
  3681     02A2  1283               	bcf	3,5	;RP0=0, select bank0
  3682     02A3  1303               	bcf	3,6	;RP1=0, select bank0
  3683     02A4  1088               	bcf	8,1	;volatile
  3684     02A5                     l1381:
  3685                           
  3686                           ;../BT4.X/lcd.c: 148:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  3687     02A5  3006               	movlw	6
  3688     02A6  00F4               	movwf	??_lcd_put_byte
  3689     02A7                     u1687:
  3690     02A7  0BF4               	decfsz	??_lcd_put_byte,f
  3691     02A8  2AA7               	goto	u1687
  3692     02A9  0000               	nop
  3693     02AA                     l1383:
  3694                           
  3695                           ;../BT4.X/lcd.c: 150:  RD2 = 0;
  3696     02AA  1283               	bcf	3,5	;RP0=0, select bank0
  3697     02AB  1303               	bcf	3,6	;RP1=0, select bank0
  3698     02AC  1108               	bcf	8,2	;volatile
  3699                           
  3700                           ;../BT4.X/lcd.c: 151:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  3701     02AD  3006               	movlw	6
  3702     02AE  00F4               	movwf	??_lcd_put_byte
  3703     02AF                     u1697:
  3704     02AF  0BF4               	decfsz	??_lcd_put_byte,f
  3705     02B0  2AAF               	goto	u1697
  3706     02B1  0000               	nop
  3707     02B2                     l1385:
  3708                           
  3709                           ;../BT4.X/lcd.c: 153:  RD3 = 0;
  3710     02B2  1283               	bcf	3,5	;RP0=0, select bank0
  3711     02B3  1303               	bcf	3,6	;RP1=0, select bank0
  3712     02B4  1188               	bcf	8,3	;volatile
  3713     02B5                     l1387:
  3714                           
  3715                           ;../BT4.X/lcd.c: 155:  lcd_put_nibble(b >> 4);
  3716     02B5  0873               	movf	lcd_put_byte@b,w
  3717     02B6  00F4               	movwf	??_lcd_put_byte
  3718     02B7  3004               	movlw	4
  3719     02B8                     u965:
  3720     02B8  1003               	clrc
  3721     02B9  0CF4               	rrf	??_lcd_put_byte,f
  3722     02BA  3EFF               	addlw	-1
  3723     02BB  1D03               	skipz
  3724     02BC  2AB8               	goto	u965
  3725     02BD  0874               	movf	??_lcd_put_byte,w
  3726     02BE  120A  118A  2305  120A  118A  	fcall	_lcd_put_nibble
  3727     02C3                     l1389:
  3728                           
  3729                           ;../BT4.X/lcd.c: 157:  lcd_put_nibble(b & 0xf);
  3730     02C3  0873               	movf	lcd_put_byte@b,w
  3731     02C4  390F               	andlw	15
  3732     02C5  120A  118A  2305  120A  118A  	fcall	_lcd_put_nibble
  3733     02CA                     l115:
  3734     02CA  0008               	return
  3735     02CB                     __end_of_lcd_put_byte:
  3736                           
  3737                           	psect	text20
  3738     0305                     __ptext20:	
  3739 ;; *************** function _lcd_put_nibble *****************
  3740 ;; Defined at:
  3741 ;;		line 103 in file "../BT4.X/lcd.c"
  3742 ;; Parameters:    Size  Location     Type
  3743 ;;  b               1    wreg     unsigned char 
  3744 ;; Auto vars:     Size  Location     Type
  3745 ;;  b               1    1[COMMON] unsigned char 
  3746 ;;  temp            1    2[COMMON] struct _BYTE_VAL
  3747 ;; Return value:  Size  Location     Type
  3748 ;;                  1    wreg      void 
  3749 ;; Registers used:
  3750 ;;		wreg
  3751 ;; Tracked objects:
  3752 ;;		On entry : 0/0
  3753 ;;		On exit  : 0/0
  3754 ;;		Unchanged: 0/0
  3755 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3756 ;;      Params:         0       0       0       0       0
  3757 ;;      Locals:         2       0       0       0       0
  3758 ;;      Temps:          1       0       0       0       0
  3759 ;;      Totals:         3       0       0       0       0
  3760 ;;Total ram usage:        3 bytes
  3761 ;; Hardware stack levels used: 1
  3762 ;; This function calls:
  3763 ;;		Nothing
  3764 ;; This function is called by:
  3765 ;;		_lcd_put_byte
  3766 ;;		_lcd_init
  3767 ;; This function uses a non-reentrant model
  3768 ;;
  3769                           
  3770     0305                     _lcd_put_nibble:	
  3771                           ;psect for function _lcd_put_nibble
  3772                           
  3773                           
  3774                           ;incstack = 0
  3775                           ; Regs used in _lcd_put_nibble: [wreg]
  3776                           ;lcd_put_nibble@b stored from wreg
  3777     0305  00F1               	movwf	lcd_put_nibble@b
  3778     0306                     l1359:
  3779                           
  3780                           ;../BT4.X/lcd.c: 103: void lcd_put_nibble(unsigned char b);../BT4.X/lcd.c: 104: {;../BT4
      +                          .X/lcd.c: 106:  BYTE_VAL temp;;../BT4.X/lcd.c: 109:  TRISD4 = 0;
  3781     0306  1683               	bsf	3,5	;RP0=1, select bank1
  3782     0307  1303               	bcf	3,6	;RP1=0, select bank1
  3783     0308  1208               	bcf	8,4	;volatile
  3784                           
  3785                           ;../BT4.X/lcd.c: 110:  TRISD5 = 0;
  3786     0309  1288               	bcf	8,5	;volatile
  3787                           
  3788                           ;../BT4.X/lcd.c: 111:  TRISD6 = 0;
  3789     030A  1308               	bcf	8,6	;volatile
  3790                           
  3791                           ;../BT4.X/lcd.c: 112:  TRISD7 = 0;
  3792     030B  1388               	bcf	8,7	;volatile
  3793     030C                     l1361:
  3794                           
  3795                           ;../BT4.X/lcd.c: 114:  temp.Val = b;
  3796     030C  0871               	movf	lcd_put_nibble@b,w
  3797     030D  00F2               	movwf	lcd_put_nibble@temp
  3798     030E                     l1363:
  3799                           
  3800                           ;../BT4.X/lcd.c: 116:  RD4 = temp.bits.b0;
  3801     030E  1872               	btfsc	lcd_put_nibble@temp,0
  3802     030F  2B11               	goto	u871
  3803     0310  2B15               	goto	u870
  3804     0311                     u871:
  3805     0311  1283               	bcf	3,5	;RP0=0, select bank0
  3806     0312  1303               	bcf	3,6	;RP1=0, select bank0
  3807     0313  1608               	bsf	8,4	;volatile
  3808     0314  2B18               	goto	u884
  3809     0315                     u870:
  3810     0315  1283               	bcf	3,5	;RP0=0, select bank0
  3811     0316  1303               	bcf	3,6	;RP1=0, select bank0
  3812     0317  1208               	bcf	8,4	;volatile
  3813     0318                     u884:
  3814     0318                     l1365:
  3815                           
  3816                           ;../BT4.X/lcd.c: 117:  RD5 = temp.bits.b1;
  3817     0318  18F2               	btfsc	lcd_put_nibble@temp,1
  3818     0319  2B1B               	goto	u891
  3819     031A  2B1F               	goto	u890
  3820     031B                     u891:
  3821     031B  1283               	bcf	3,5	;RP0=0, select bank0
  3822     031C  1303               	bcf	3,6	;RP1=0, select bank0
  3823     031D  1688               	bsf	8,5	;volatile
  3824     031E  2B22               	goto	u904
  3825     031F                     u890:
  3826     031F  1283               	bcf	3,5	;RP0=0, select bank0
  3827     0320  1303               	bcf	3,6	;RP1=0, select bank0
  3828     0321  1288               	bcf	8,5	;volatile
  3829     0322                     u904:
  3830     0322                     l1367:
  3831                           
  3832                           ;../BT4.X/lcd.c: 118:  RD6 = temp.bits.b2;
  3833     0322  1972               	btfsc	lcd_put_nibble@temp,2
  3834     0323  2B25               	goto	u911
  3835     0324  2B29               	goto	u910
  3836     0325                     u911:
  3837     0325  1283               	bcf	3,5	;RP0=0, select bank0
  3838     0326  1303               	bcf	3,6	;RP1=0, select bank0
  3839     0327  1708               	bsf	8,6	;volatile
  3840     0328  2B2C               	goto	u924
  3841     0329                     u910:
  3842     0329  1283               	bcf	3,5	;RP0=0, select bank0
  3843     032A  1303               	bcf	3,6	;RP1=0, select bank0
  3844     032B  1308               	bcf	8,6	;volatile
  3845     032C                     u924:
  3846     032C                     l1369:
  3847                           
  3848                           ;../BT4.X/lcd.c: 119:  RD7 = temp.bits.b3;
  3849     032C  19F2               	btfsc	lcd_put_nibble@temp,3
  3850     032D  2B2F               	goto	u931
  3851     032E  2B33               	goto	u930
  3852     032F                     u931:
  3853     032F  1283               	bcf	3,5	;RP0=0, select bank0
  3854     0330  1303               	bcf	3,6	;RP1=0, select bank0
  3855     0331  1788               	bsf	8,7	;volatile
  3856     0332  2B36               	goto	u944
  3857     0333                     u930:
  3858     0333  1283               	bcf	3,5	;RP0=0, select bank0
  3859     0334  1303               	bcf	3,6	;RP1=0, select bank0
  3860     0335  1388               	bcf	8,7	;volatile
  3861     0336                     u944:
  3862                           
  3863                           ;../BT4.X/lcd.c: 121:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  3864     0336  3006               	movlw	6
  3865     0337  00F0               	movwf	??_lcd_put_nibble
  3866     0338                     u1707:
  3867     0338  0BF0               	decfsz	??_lcd_put_nibble,f
  3868     0339  2B38               	goto	u1707
  3869     033A  0000               	nop
  3870     033B                     l1371:
  3871                           
  3872                           ;../BT4.X/lcd.c: 122:  RD3 = 1;
  3873     033B  1283               	bcf	3,5	;RP0=0, select bank0
  3874     033C  1303               	bcf	3,6	;RP1=0, select bank0
  3875     033D  1588               	bsf	8,3	;volatile
  3876                           
  3877                           ;../BT4.X/lcd.c: 123:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  3878     033E  3006               	movlw	6
  3879     033F  00F0               	movwf	??_lcd_put_nibble
  3880     0340                     u1717:
  3881     0340  0BF0               	decfsz	??_lcd_put_nibble,f
  3882     0341  2B40               	goto	u1717
  3883     0342  0000               	nop
  3884     0343                     l1373:
  3885                           
  3886                           ;../BT4.X/lcd.c: 124:  RD3 = 0;
  3887     0343  1283               	bcf	3,5	;RP0=0, select bank0
  3888     0344  1303               	bcf	3,6	;RP1=0, select bank0
  3889     0345  1188               	bcf	8,3	;volatile
  3890     0346                     l110:
  3891     0346  0008               	return
  3892     0347                     __end_of_lcd_put_nibble:
  3893                           
  3894                           	psect	text21
  3895     0262                     __ptext21:	
  3896 ;; *************** function _lcd_busy *****************
  3897 ;; Defined at:
  3898 ;;		line 18 in file "../BT4.X/lcd.c"
  3899 ;; Parameters:    Size  Location     Type
  3900 ;;		None
  3901 ;; Auto vars:     Size  Location     Type
  3902 ;;  busy            1    1[COMMON] unsigned char 
  3903 ;; Return value:  Size  Location     Type
  3904 ;;                  1    wreg      unsigned char 
  3905 ;; Registers used:
  3906 ;;		wreg, status,2
  3907 ;; Tracked objects:
  3908 ;;		On entry : 0/0
  3909 ;;		On exit  : 0/0
  3910 ;;		Unchanged: 0/0
  3911 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3912 ;;      Params:         0       0       0       0       0
  3913 ;;      Locals:         1       0       0       0       0
  3914 ;;      Temps:          1       0       0       0       0
  3915 ;;      Totals:         2       0       0       0       0
  3916 ;;Total ram usage:        2 bytes
  3917 ;; Hardware stack levels used: 1
  3918 ;; This function calls:
  3919 ;;		Nothing
  3920 ;; This function is called by:
  3921 ;;		_load_custom_characters
  3922 ;;		_lcd_gotoxy
  3923 ;;		_lcd_putc
  3924 ;;		_lcd_init
  3925 ;; This function uses a non-reentrant model
  3926 ;;
  3927                           
  3928     0262                     _lcd_busy:	
  3929                           ;psect for function _lcd_busy
  3930                           
  3931     0262                     l1391:	
  3932                           ;incstack = 0
  3933                           ; Regs used in _lcd_busy: [wreg+status,2]
  3934                           
  3935                           
  3936                           ;../BT4.X/lcd.c: 21: unsigned char busy;;../BT4.X/lcd.c: 24:  TRISD4 = 1;
  3937     0262  1683               	bsf	3,5	;RP0=1, select bank1
  3938     0263  1303               	bcf	3,6	;RP1=0, select bank1
  3939     0264  1608               	bsf	8,4	;volatile
  3940                           
  3941                           ;../BT4.X/lcd.c: 25:  TRISD5 = 1;
  3942     0265  1688               	bsf	8,5	;volatile
  3943                           
  3944                           ;../BT4.X/lcd.c: 26:  TRISD6 = 1;
  3945     0266  1708               	bsf	8,6	;volatile
  3946                           
  3947                           ;../BT4.X/lcd.c: 27:  TRISD7 = 1;
  3948     0267  1788               	bsf	8,7	;volatile
  3949                           
  3950                           ;../BT4.X/lcd.c: 29:  RD2 = 1;
  3951     0268  1283               	bcf	3,5	;RP0=0, select bank0
  3952     0269  1303               	bcf	3,6	;RP1=0, select bank0
  3953     026A  1508               	bsf	8,2	;volatile
  3954                           
  3955                           ;../BT4.X/lcd.c: 30:  RD1 = 0;
  3956     026B  1088               	bcf	8,1	;volatile
  3957     026C                     l1393:
  3958                           
  3959                           ;../BT4.X/lcd.c: 31:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  3960     026C  3006               	movlw	6
  3961     026D  00F0               	movwf	??_lcd_busy
  3962     026E                     u1727:
  3963     026E  0BF0               	decfsz	??_lcd_busy,f
  3964     026F  2A6E               	goto	u1727
  3965     0270  0000               	nop
  3966     0271                     l1395:
  3967                           
  3968                           ;../BT4.X/lcd.c: 32:  RD3 = 1;
  3969     0271  1283               	bcf	3,5	;RP0=0, select bank0
  3970     0272  1303               	bcf	3,6	;RP1=0, select bank0
  3971     0273  1588               	bsf	8,3	;volatile
  3972                           
  3973                           ;../BT4.X/lcd.c: 33:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  3974     0274  3006               	movlw	6
  3975     0275  00F0               	movwf	??_lcd_busy
  3976     0276                     u1737:
  3977     0276  0BF0               	decfsz	??_lcd_busy,f
  3978     0277  2A76               	goto	u1737
  3979     0278  0000               	nop
  3980     0279                     l1397:
  3981                           
  3982                           ;../BT4.X/lcd.c: 35:  busy = RD7;
  3983     0279  3000               	movlw	0
  3984     027A  1283               	bcf	3,5	;RP0=0, select bank0
  3985     027B  1303               	bcf	3,6	;RP1=0, select bank0
  3986     027C  1B88               	btfsc	8,7	;volatile
  3987     027D  3001               	movlw	1
  3988     027E  00F1               	movwf	lcd_busy@busy
  3989     027F                     l1399:
  3990                           
  3991                           ;../BT4.X/lcd.c: 37:  RD3 = 0;
  3992     027F  1188               	bcf	8,3	;volatile
  3993     0280                     l1401:
  3994                           
  3995                           ;../BT4.X/lcd.c: 38:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  3996     0280  3006               	movlw	6
  3997     0281  00F0               	movwf	??_lcd_busy
  3998     0282                     u1747:
  3999     0282  0BF0               	decfsz	??_lcd_busy,f
  4000     0283  2A82               	goto	u1747
  4001     0284  0000               	nop
  4002     0285                     l1403:
  4003                           
  4004                           ;../BT4.X/lcd.c: 39:  RD3 = 1;
  4005     0285  1283               	bcf	3,5	;RP0=0, select bank0
  4006     0286  1303               	bcf	3,6	;RP1=0, select bank0
  4007     0287  1588               	bsf	8,3	;volatile
  4008     0288                     l1405:
  4009                           
  4010                           ;../BT4.X/lcd.c: 40:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  4011     0288  3006               	movlw	6
  4012     0289  00F0               	movwf	??_lcd_busy
  4013     028A                     u1757:
  4014     028A  0BF0               	decfsz	??_lcd_busy,f
  4015     028B  2A8A               	goto	u1757
  4016     028C  0000               	nop
  4017     028D                     l1407:
  4018                           
  4019                           ;../BT4.X/lcd.c: 41:  RD3 = 0;
  4020     028D  1283               	bcf	3,5	;RP0=0, select bank0
  4021     028E  1303               	bcf	3,6	;RP1=0, select bank0
  4022     028F  1188               	bcf	8,3	;volatile
  4023     0290                     l1409:
  4024                           
  4025                           ;../BT4.X/lcd.c: 43:  return busy;
  4026     0290  0871               	movf	lcd_busy@busy,w
  4027     0291                     l102:
  4028     0291  0008               	return
  4029     0292                     __end_of_lcd_busy:
  4030     007E                     btemp	set	126	;btemp
  4031     007E                     wtemp0	set	126
  4032                           
  4033                           	psect	config
  4034                           
  4035                           ;Config register CONFIG1 @ 0x2007
  4036                           ;	Oscillator Selection bits
  4037                           ;	FOSC = HS, HS oscillator: High-speed crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1
      +                          /CLKIN
  4038                           ;	Watchdog Timer Enable bit
  4039                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  4040                           ;	Power-up Timer Enable bit
  4041                           ;	PWRTE = OFF, PWRT disabled
  4042                           ;	RE3/MCLR pin function select bit
  4043                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  4044                           ;	Code Protection bit
  4045                           ;	CP = OFF, Program memory code protection is disabled
  4046                           ;	Data Code Protection bit
  4047                           ;	CPD = OFF, Data memory code protection is disabled
  4048                           ;	Brown Out Reset Selection bits
  4049                           ;	BOREN = OFF, BOR disabled
  4050                           ;	Internal External Switchover bit
  4051                           ;	IESO = ON, Internal/External Switchover mode is enabled
  4052                           ;	Fail-Safe Clock Monitor Enabled bit
  4053                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  4054                           ;	Low Voltage Programming Enable bit
  4055                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  4056                           ;	In-Circuit Debugger Mode bit
  4057                           ;	DEBUG = 0x1, unprogrammed default
  4058     2007                     	org	8199
  4059     2007  24D2               	dw	9426
  4060                           
  4061                           ;Config register CONFIG2 @ 0x2008
  4062                           ;	Brown-out Reset Selection bit
  4063                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  4064                           ;	Flash Program Memory Self Write Enable bits
  4065                           ;	WRT = OFF, Write protection off
  4066     2008                     	org	8200
  4067     2008  3FFF               	dw	16383

Data Sizes:
    Strings     8
    Constant    80
    Data        0
    BSS         37
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     68      73
    BANK1            80      0      32
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    f$.$buffer	PTR unsigned char  size(1) Largest target is 0

    f$.$source	PTR const unsigned char  size(1) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp$.$buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(1) Largest target is 0

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK1[32]), 

    lcd_puts@s	PTR const unsigned char  size(2) Largest target is 4
		 -> main@data(BANK0[4]), STR_1(CODE[3]), 

    load_custom_characters@custom_data	PTR const unsigned char  size(1) Largest target is 65
		 -> cgram_dat(CODE[65]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK1[32]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    read_prec_or_width@ap	PTR PTR void [1] size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(BANK0[1]), 

    S634$buffer	PTR unsigned char  size(1) Largest target is 0

    S634$source	PTR const unsigned char  size(1) Largest target is 0

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_2(CODE[5]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 4
		 -> main@data(BANK0[4]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 5
		 -> STR_2(CODE[5]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(BANK0[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 5
		 -> STR_2(CODE[5]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_2(CODE[5]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 


Critical Paths under _main in COMMON

    _vfpfcnvrt->_fputc
    _read_prec_or_width->___wmul
    _pad->_fputc
    _fputs->_fputc
    _fputc->_putch
    _putch->_lcd_putc
    _abs->___awmod
    _load_custom_characters->_lcd_put_byte
    _lcd_puts->_lcd_putc
    _lcd_putc->_lcd_gotoxy
    _lcd_gotoxy->_lcd_put_byte
    _lcd_init->_lcd_put_byte
    _lcd_put_byte->_lcd_put_nibble

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0   23480
                                             62 BANK0      6     6      0
                         _lcd_gotoxy
                           _lcd_init
                           _lcd_putc
                           _lcd_puts
             _load_custom_characters
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             19    16      3   13842
                                             45 BANK0     17    14      3
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             4     2      2   13532
                                             41 BANK0      4     2      2
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           12    10      2   13216
                                             31 BANK0     10     8      2
                               _dtoa
                              _fputc
                 _read_prec_or_width
 ---------------------------------------------------------------------------------
 (4) _read_prec_or_width                                   6     4      2     533
                                              6 COMMON     6     4      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     244
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                12    10      2    8755
                                             19 BANK0     12    10      2
                            ___awdiv
                            ___awmod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                  7     4      3    7216
                                             12 BANK0      7     4      3
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     6      1    3551
                                              5 BANK0      7     6      1
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                8     5      3    3345
                                             11 COMMON     3     0      3
                                              0 BANK0      5     5      0
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0    2663
                                             10 COMMON     1     1      0
                           _lcd_putc
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                              6 COMMON     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     448
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     452
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _load_custom_characters                               4     3      1    1333
                                              6 COMMON     4     3      1
                           _lcd_busy
                       _lcd_put_byte
 ---------------------------------------------------------------------------------
 (1) _lcd_puts                                             2     0      2    2838
                                             10 COMMON     2     0      2
                           _lcd_putc
 ---------------------------------------------------------------------------------
 (6) _lcd_putc                                             1     1      0    2641
                                              9 COMMON     1     1      0
                           _lcd_busy
                         _lcd_gotoxy
                       _lcd_put_byte
 ---------------------------------------------------------------------------------
 (7) _lcd_gotoxy                                           3     2      1    1485
                                              6 COMMON     3     2      1
                           _lcd_busy
                       _lcd_put_byte
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             3     3      0    1223
                                              6 COMMON     2     2      0
                           _lcd_busy
                       _lcd_put_byte
                     _lcd_put_nibble
 ---------------------------------------------------------------------------------
 (7) _lcd_put_byte                                         3     2      1    1089
                                              3 COMMON     3     2      1
                     _lcd_put_nibble
 ---------------------------------------------------------------------------------
 (8) _lcd_put_nibble                                       3     3      0     111
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (8) _lcd_busy                                             2     2      0      23
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _lcd_gotoxy
     _lcd_busy
     _lcd_put_byte
       _lcd_put_nibble
   _lcd_init
     _lcd_busy
     _lcd_put_byte
     _lcd_put_nibble
   _lcd_putc
     _lcd_busy
     _lcd_gotoxy
     _lcd_put_byte
   _lcd_puts
     _lcd_putc
   _load_custom_characters
     _lcd_busy
     _lcd_put_byte
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___awdiv
           ___awmod
           _abs
             ___awmod (ARG)
           _pad
             _fputc
               _putch
                 _lcd_putc
             _fputs
               _fputc
         _fputc
         _read_prec_or_width
           ___wmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      77       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     44      49       5       91.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0      20       7       40.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      77      12        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Thu Sep 19 08:37:26 2024

                                  pc 0002                                   l58 0390  
             __end_of_lcd_put_nibble 0347                         ___awdiv@sign 0075  
                                 fsr 0004                  ___wmul@multiplicand 0072  
                      ?_lcd_put_byte 0073                                  l102 0291  
                                l110 0346                                  l113 02A2  
                                l115 02CA                                  l123 01EC  
                                l141 03E0                                  l147 0237  
                                l165 0682                                  l431 0552  
                                l192 0171                                  l280 0211  
                                l444 0491                                  l278 01F9  
                                l811 018A                                  l804 01CA  
                                l741 01A9                                  l823 04EB  
                                l831 0261                                  l760 02D4  
                                l770 073B                                  l771 075A  
                                l764 0304                                  l782 07EB  
                                l790 0438                                  l775 0758  
                                l798 0723                                  _GIE 005F  
                                _RD1 0041                                  _RD2 0042  
                                _RD3 0043                                  _RD4 0044  
                                _RD5 0045                                  _RD6 0046  
                                _RD7 0047                                  u910 0329  
                                u911 0325                                  u904 0322  
                                u930 0333                                  u931 032F  
                                u924 032C                                  u870 0315  
                                u950 029E                                  u871 0311  
                                u951 029D                                  u944 0336  
                                u890 031F                                  u970 01D1  
                                u891 031B                                  u971 01D0  
                                u884 0318                                  u980 01EC  
                                u965 02B8                                  u981 01EB  
                                u990 03A5                                  u991 03A4  
                                _abs 017A                                  _pad 02CB  
                                fsr0 0004                                  indf 0000  
                       ___awmod@sign 0075                                 ?_abs 0076  
                               l1401 0280                                 l1403 0285  
                               l1405 0288                                 l1421 01D9  
                               l1413 01CC                                 l1501 0510  
                               l1407 028D                                 l1423 01E2  
                               l1415 01D1                                 l1431 03A6  
                               l1511 0536                                 l1503 0517  
                               l1409 0290                                 l1361 030C  
                               l1417 01D4                                 l1433 03AF  
                               l1441 03D5                                 l1425 0392  
                               l1521 054E                                 l1513 0537  
                               l1505 051B                                 l1601 075E  
                               l1371 033B                                 l1363 030E  
                               l1419 01D5                                 l1435 03B7  
                               l1427 0393                                 l1515 053E  
                               l1507 051F                                 l1531 0443  
                               l1443 016B                                 l1451 04A3  
                               l1611 0795                                 l1603 0762  
                               l1373 0343                                 l1365 0318  
                               l1381 02A5                                 l1437 03C2  
                               l1429 039B                                 l1701 0375  
                               l1509 0530                                 l1517 0544  
                               l1541 0457                                 l1533 0445  
                               l1525 0439                                 l1453 04B4  
                               l1445 0492                                 l1461 023E  
                               l1621 07D2                                 l1605 076A  
                               l1613 07A8                                 l1391 0262  
                               l1367 0322                                 l1359 0306  
                               l1383 02AA                                 l1375 0293  
                               l1711 05F8                                 l1439 03CA  
                               l1703 037F                                 l1519 0549  
                               l1551 0476                                 l1543 045E  
                               l1535 0449                                 l1527 043A  
                               l1455 04D2                                 l1447 0497  
                               l1463 024C                                 l1623 07D8  
                               l1615 07B6                                 l1607 0787  
                               l1471 01F3                                 l1631 03E4  
                               l1393 026C                                 l1369 032C  
                               l1385 02B2                                 l1377 0299  
                               l1721 0612                                 l1713 05FB  
                               l1705 0383                                 l1481 04EC  
                               l1553 047D                                 l1545 0462  
                               l1537 044E                                 l1529 043E  
                               l1449 049C                                 l1465 0254  
                               l1625 07DE                                 l1617 07BE  
                               l1609 078F                                 l1473 0200  
                               l1641 0434                                 l1633 03F3  
                               l1395 0271                                 l1387 02B5  
                               l1379 029E                                 l1731 0642  
                               l1723 061B                                 l1715 05FC  
                               l1707 05E6                                 l1491 04FC  
                               l1483 04ED                                 l1547 0466  
                               l1539 0454                                 l1555 0483  
                               l1459 023B                                 l1571 02EC  
                               l1563 02CE                                 l1619 07CB  
                               l1475 0207                                 l1467 01ED  
                               l1635 0407                                 l1651 06A2  
                               l1811 05AF                                 l1803 0589  
                               l1397 0279                                 l1389 02C3  
                               l1741 0670                                 l1733 064C  
                               l1725 062A                                 l1717 05FD  
                               l1709 05EF                                 l1493 0501  
                               l1485 04F1                                 l1557 0488  
                               l1549 0470                                 l1573 02FA  
                               l1565 02D2                                 l1477 020D  
                               l1469 01EF                                 l1637 041C  
                               l1629 03E2                                 l1661 06CD  
                               l1653 06A6                                 l1645 0686  
                               l1821 05D9                                 l1813 05B8  
                               l1805 0596                                 l1399 027F  
                               l1743 0678                                 l1735 0654  
                               l1727 0630                                 l1719 0603  
                               l1751 0227                                 l1495 0505  
                               l1487 04F6                                 l1559 048D  
                               l1575 017A                                 l1567 02D7  
                               l1591 073F                                 l1583 0727  
                               l1639 0423                                 l1663 06D9  
                               l1655 06B4                                 l1647 0695  
                               l1815 05C3                                 l1807 059E  
                               l1737 065E                                 l1729 063A  
                               l1745 0212                                 l1497 0507  
                               l1489 04F8                                 l1577 017E  
                               l1569 02E4                                 l1593 0744  
                               l1585 072E                                 l1673 0702  
                               l1665 06E5                                 l1657 06BA  
                               l1649 069B                                 l1761 01A0  
                               l1753 018E                                 l1817 05C5  
                               l1809 05A7                                 l1739 0666  
                               l1747 0213                                 l1499 050D  
                               l1579 017F                                 l1595 074A  
                               l1587 0732                                 l1667 06F2  
                               l1659 06C8                                 l1683 01AD  
                               l1755 0192                                 l1819 05D1  
                               l1771 0557                                 l1749 0221  
                               l1693 0348                                 l1597 074F  
                               l1589 0737                                 l1669 06F7  
                               l1677 070C                                 l1685 01B0  
                               l1757 0194                                 l1781 0566  
                               l1773 055E                                 l1695 0349  
                               l1599 0754                                 l1687 01BA  
                               l1759 0196                                 l1791 0571  
                               l1783 0569                                 l1775 055F  
                               l1697 035B                                 l1689 01C8  
                               l1793 0578                                 l1785 056A  
                               l1777 0560                                 l1769 0553  
                               l1699 0366                                 l1795 057E  
                               l1787 056B                                 l1779 0561  
                               l1797 0585                                 l1789 056C  
                               ?_pad 002C                                 STR_1 0068  
                               STR_2 0063                                 u1000 03C1  
                               u1001 03C0                                 u1010 03D4  
                               u1011 03D3                                 u1020 0497  
                               u1100 020D                                 u1021 0496  
                               u1101 020C                                 u1110 04F1  
                               u1030 049C                                 u1111 04F0  
                               u1031 049B                                 u1200 0549  
                               u1120 04FC                                 u1040 04B4  
                               u1201 0548                                 u1121 04FB  
                               u1041 04B3                                 u1130 050D  
                               u1210 043E                                 u1050 04D2  
                               u1131 050C                                 u1211 043D  
                               u1051 04D1                                 u1220 0449  
                               u1060 0261                                 u1300 02D2  
                               u1221 0448                                 u1061 0260  
                               u1301 02D1                                 u1150 051F  
                               u1230 0454                                 u1310 02FA  
                               u1070 01F3                                 u1151 051E  
                               u1231 0453                                 u1055 04CE  
                               u1311 02F9                                 u1071 01F2  
                               u1320 017E                                 u1400 07CB  
                               u1145 0511                                 u1321 017D  
                               u1401 07CA                                 u1170 0530  
                               u1250 0466                                 u1410 07D2  
                               u1330 072C                                 u1171 052F  
                               u1251 0465                                 u1315 02F6  
                               u1411 07D1                                 u1331 072A  
                               u1500 0365                                 u1260 0470  
                               u1340 072D                                 u1420 03F3  
                               u1501 0364                                 u1165 0520  
                               u1261 046F                                 u1245 0458  
                               u1405 07C7                                 u1085 01FA  
                               u1421 03F2                                 u1510 037F  
                               u1190 0544                                 u1350 0732  
                               u1430 0434                                 u1511 037E  
                               u1191 0543                                 u1175 052C  
                               u1351 0731                                 u1095 0201  
                               u1431 0433                                 u1520 0390  
                               u1280 0483                                 u1360 0744  
                               u1440 0695                                 u1600 05C3  
                               u1521 038F                                 u1185 0538  
                               u1281 0482                                 u1265 046C  
                               u1361 0743                                 u1441 0694  
                               u1601 05C2                                 u1530 063A  
                               u1290 0488                                 u1370 074F  
                               u1450 06B4                                 u1531 0639  
                               u1291 0487                                 u1275 0477  
                               u1371 074E                                 u1451 06B3  
                               u1540 064C                                 u1380 07B6  
                               u1460 06D9                                 u1541 064B  
                               u1381 07B5                                 u1461 06D8  
                               u1550 065E                                 u1390 07BE  
                               u1470 06E5                                 u1551 065D  
                               u1391 07BD                                 u1471 06E4  
                               u1560 0670                                 u1480 01C8  
                               u1561 066F                                 u1385 07B2  
                               u1481 01C7                                 u1570 0682  
                               u1707 0338                                 u1571 0681  
                               u1580 0237                                 u1717 0340  
                               u1581 0236                                 u1590 05A7  
                               u1727 026E                                 u1647 05F3  
                               u1495 034C                                 u1591 05A6  
                               u1737 0276                                 u1657 0607  
                               u1747 0282                                 u1667 0616  
                               u1757 028A                                 u1677 0625  
                               u1687 02A7                                 u1697 02AF  
                               _PEIE 005E                                 _TMR1 000E  
                               abs@a 0076                                 _dbuf 00A0  
                               _main 0553                                 _dtoa 0724  
                               _prec 0066                         lcd_busy@busy 0071  
                               pad@i 0030                                 pad@p 002D  
                               btemp 007E                                 start 0000  
                              ??_abs 0078                                ??_pad 002F  
                    ?_lcd_put_nibble 0070                       ??_lcd_put_byte 0074  
                              ?_main 0070                                ?_dtoa 0033  
                    __end_of___awdiv 0553                      __end_of___awmod 0492  
                              _ANSEL 0188                      ___awdiv@divisor 0070  
                    ___awdiv@counter 0074                         vfpfcnvrt@fmt 003F  
                              _flags 0068                  read_prec_or_width@c 0078  
                read_prec_or_width@n 0079                                _fputc 0492  
                              _fputs 0238                                pad@fp 0032  
                              _width 0064                                _putch 016A  
                              main@i 0062                                dtoa@d 0033  
                              dtoa@i 003D                                dtoa@p 003A  
                              dtoa@s 003C                                dtoa@w 0038  
                              pclath 000A                                status 0003  
                              wtemp0 007E                      __end_of_sprintf 01AA  
                    __initialization 07EC                         __end_of_main 05E6  
                       __end_of_dtoa 07EC                        lcd_gotoxy@col 0077  
                      lcd_gotoxy@row 0076                   lcd_put_nibble@temp 0072  
                             ??_main 007E                               ??_dtoa 007E  
         __end_of_read_prec_or_width 0439              ?_load_custom_characters 0076  
                             ?_fputc 007B                               ?_fputs 0025  
                   ___awdiv@dividend 0072                               ?_putch 0070  
                             _ANSELH 0189                               _T1SYNC 0082  
                             _TMR1IE 0460                               _TMR1IF 0060  
                             _TMR1CS 0081                               _TMR1ON 0080  
                             _TRISC0 0438                               _TRISD1 0441  
                             _TRISD2 0442                               _TRISD3 0443  
                             _TRISD4 0444                               _TRISD5 0445  
                             _TRISD6 0446                               _TRISD7 0447  
  load_custom_characters@custom_data 0078                         vfprintf@cfmt 004C  
                   __end_of_lcd_busy 0292                     __end_of_lcd_init 0683  
                   __end_of_lcd_putc 03E1                     __end_of_lcd_puts 0238  
                             ___wmul 01ED                            ??___awdiv 0074  
                          ??___awmod 0074              load_custom_characters@i 0079  
               read_prec_or_width@ap 0076                     ___awdiv@quotient 0076  
                    ___awmod@divisor 0070                      ___awmod@counter 0074  
                             pad@buf 002C                               dtoa@fp 0037  
                      lcd_put_byte@b 0073                               fputc@c 007B  
                             fputs@c 0028                               fputs@i 0029  
                             fputs@s 002B       __end_of_load_custom_characters 0391  
                             putch@c 007A                     __end_of_vfprintf 01CB  
                          ??_sprintf 0050              __end_of__initialization 07FC  
               __end_of_lcd_put_byte 02CB                       __pcstackCOMMON 0070  
                      __end_of_fputc 04EC                        __end_of_fputs 0262  
                      __end_of_putch 0172  load_custom_characters@start_address 0076  
                  lcd_gotoxy@address 0078                              ??_fputc 0020  
                            ??_fputs 0026                              ??_putch 007A  
                         __pbssBANK0 0064                           __pbssBANK1 00A0  
                   ??_lcd_put_nibble 0070                           __pmaintext 0553  
                            ?___wmul 0070                              _T1CKPS0 0084  
                            _T1CKPS1 0085                              _T1OSCEN 0083  
                         _lcd_gotoxy 01CB                            ?_lcd_busy 0070  
                          ?_lcd_init 0070                            ?_lcd_putc 0070  
                          ?_lcd_puts 007A                           __stringtab 0003  
                  __end_of_dat_line1 0022                    __end_of_cgram_dat 0063  
                            ___awdiv 04EC                              ___awmod 0439  
                          ?_vfprintf 0049                              __ptext1 018B  
                            __ptext2 01AA                              __ptext3 0683  
                            __ptext4 03E1                              __ptext5 01ED  
                            __ptext6 0724                              __ptext7 02CB  
                            __ptext8 0238                              __ptext9 0492  
              read_prec_or_width@fmt 007B                     ___awmod@dividend 0072  
                            _sprintf 018B                              clrloop0 0173  
                         ??_lcd_busy 0070                           ??_lcd_init 0076  
                         ??_lcd_putc 0079                           ??_lcd_puts 007C  
               end_of_initialization 07FC                       lcd_put_byte@rs 0075  
                            fputc@fp 007D                              fputs@fp 0025  
                 _read_prec_or_width 03E1                    __end_of_vfpfcnvrt 0724  
                ?_read_prec_or_width 0076                     vfpfcnvrt@convarg 0043  
                         ??_vfprintf 007E                         _lcd_put_byte 0292  
                        ?_lcd_gotoxy 0076                 ??_read_prec_or_width 0078  
                        vfpfcnvrt@ap 0040                          vfpfcnvrt@cp 0048  
                        vfpfcnvrt@fp 0047                       __end_of___wmul 0212  
                start_initialization 07EC                          __end_of_abs 018B  
                        __end_of_pad 0305                          vfprintf@fmt 0049  
                           ??___wmul 0074                            ___latbits 0002  
                      __pcstackBANK0 0020                            _dat_line1 0013  
                          _cgram_dat 0022                             ?___awdiv 0070  
                           ?___awmod 0070             ??_load_custom_characters 0077  
                          __pstrings 0003                             ?_sprintf 004D  
                     ___wmul@product 0074                            clear_ram0 0172  
                          _vfpfcnvrt 0683                          __stringbase 0012  
                  ___wmul@multiplier 0070                            lcd_putc@c 0079  
                          lcd_puts@s 007A                         ??_lcd_gotoxy 0077  
                         vfprintf@ap 004A                           vfprintf@fp 004B  
                 __end_of_lcd_gotoxy 01ED                           ?_vfpfcnvrt 003F  
                 __end_of__stringtab 0013                           sprintf@fmt 004D  
                           _dtoa$713 0035                             __ptext10 016A  
                           __ptext11 017A                             __ptext20 0305  
                           __ptext12 0439                             __ptext21 0262  
                           __ptext13 04EC                             __ptext14 0347  
                           __ptext15 0212                             __ptext16 0391  
                           __ptext17 01CB                             __ptext18 05E6  
                           __ptext19 0292                             _lcd_busy 0262  
                           _lcd_init 05E6                             _lcd_putc 0391  
                           _lcd_puts 0212                             _vfprintf 01AA  
                           main@data 005E                      lcd_put_nibble@b 0071  
             _load_custom_characters 0347                            sprintf@ap 0051  
                          stringcode 000D                          ??_vfpfcnvrt 0041  
                     _lcd_put_nibble 0305                             sprintf@f 0053  
                           sprintf@s 0052                             stringdir 000D  
                           stringtab 0003  
